{
	"id": "35bbf3528344416ca74be786f1a49835",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"sources": {
			"C/circulatingSupplyTypes.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/// @title CirculatingSupplyTokenExtended\n/// @notice An ERC20 token that tracks total supply, circulating supply (free tokens), and fully diluted supply.\n/// The owner can lock tokens to remove them from circulation (e.g., for team reserves or vesting), and the maximum supply is fixed.\ncontract CirculatingSupplyTokenExtended is ERC20, Ownable {\n    // The maximum number of tokens that can ever exist.\n    uint256 public immutable maxSupply;\n    \n    // Mapping to track locked token balances for each account.\n    mapping(address => uint256) public lockedBalances;\n    // Total tokens that are locked (non-circulating).\n    uint256 public lockedTotal;\n\n    event TokensLocked(address indexed account, uint256 amount);\n    event TokensUnlocked(address indexed account, uint256 amount);\n\n    /// @notice Constructor mints an initial supply and sets the maximum supply.\n    /// @param _initialSupply The number of tokens to mint initially.\n    /// @param _maxSupply The maximum token supply.\n    constructor(uint256 _initialSupply, uint256 _maxSupply)\n        ERC20(\"CirculatingSupplyTokenExtended\", \"CSTE\")\n        Ownable(msg.sender)\n    {\n        require(_initialSupply <= _maxSupply, \"Initial supply must be <= max supply\");\n        maxSupply = _maxSupply;\n        _mint(msg.sender, _initialSupply);\n    }\n\n    /// @notice Allows the owner to mint additional tokens if maxSupply is not exceeded.\n    /// @param to The address to receive minted tokens.\n    /// @param amount The amount of tokens to mint.\n    function mint(address to, uint256 amount) external onlyOwner {\n        require(totalSupply() + amount <= maxSupply, \"Exceeds max supply\");\n        _mint(to, amount);\n    }\n\n    /// @notice Locks tokens from an account, reducing circulating supply.\n    /// @param account The address whose tokens will be locked.\n    /// @param amount The number of tokens to lock.\n    function lockTokens(address account, uint256 amount) external onlyOwner {\n        require(balanceOf(account) >= amount, \"Insufficient balance to lock\");\n        lockedBalances[account] += amount;\n        lockedTotal += amount;\n        emit TokensLocked(account, amount);\n    }\n\n    /// @notice Unlocks tokens from an account, returning them to circulation.\n    /// @param account The address whose tokens will be unlocked.\n    /// @param amount The number of tokens to unlock.\n    function unlockTokens(address account, uint256 amount) external onlyOwner {\n        require(lockedBalances[account] >= amount, \"Insufficient locked balance\");\n        lockedBalances[account] -= amount;\n        lockedTotal -= amount;\n        emit TokensUnlocked(account, amount);\n    }\n\n    /// @notice Returns the circulating supply (i.e., total supply minus locked tokens).\n    /// @return The circulating supply.\n    function circulatingSupply() external view returns (uint256) {\n        return totalSupply() - lockedTotal;\n    }\n\n    /// @notice Returns the non-circulating supply (i.e., tokens that are locked).\n    /// @return The locked token amount.\n    function nonCirculatingSupply() external view returns (uint256) {\n        return lockedTotal;\n    }\n\n    /// @notice Returns the fully diluted supply (i.e., maximum token supply).\n    /// @return The fully diluted supply.\n    function fullyDilutedSupply() external view returns (uint256) {\n        return maxSupply;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"C/circulatingSupplyTypes.sol": {
				"CirculatingSupplyTokenExtended": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_initialSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_maxSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensLocked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensUnlocked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "circulatingSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fullyDilutedSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "lockTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "lockedBalances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lockedTotal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nonCirculatingSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "unlockTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"circulatingSupply()": {
								"returns": {
									"_0": "The circulating supply."
								}
							},
							"constructor": {
								"params": {
									"_initialSupply": "The number of tokens to mint initially.",
									"_maxSupply": "The maximum token supply."
								}
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"fullyDilutedSupply()": {
								"returns": {
									"_0": "The fully diluted supply."
								}
							},
							"lockTokens(address,uint256)": {
								"params": {
									"account": "The address whose tokens will be locked.",
									"amount": "The number of tokens to lock."
								}
							},
							"mint(address,uint256)": {
								"params": {
									"amount": "The amount of tokens to mint.",
									"to": "The address to receive minted tokens."
								}
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonCirculatingSupply()": {
								"returns": {
									"_0": "The locked token amount."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"unlockTokens(address,uint256)": {
								"params": {
									"account": "The address whose tokens will be unlocked.",
									"amount": "The number of tokens to unlock."
								}
							}
						},
						"title": "CirculatingSupplyTokenExtended",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"C/circulatingSupplyTypes.sol\":456:3514  contract CirculatingSupplyTokenExtended is ERC20, Ownable {... */\n  mstore(0x40, 0xa0)\n    /* \"C/circulatingSupplyTypes.sol\":1165:1478  constructor(uint256 _initialSupply, uint256 _maxSupply)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"C/circulatingSupplyTypes.sol\":1293:1303  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x1e\n  dup2\n  mstore\n  0x20\n  add\n  0x43697263756c6174696e67537570706c79546f6b656e457874656e6465640000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x4353544500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"C/circulatingSupplyTypes.sol\":1345:1355  _maxSupply */\n  dup1\n    /* \"C/circulatingSupplyTypes.sol\":1327:1341  _initialSupply */\n  dup3\n    /* \"C/circulatingSupplyTypes.sol\":1327:1355  _initialSupply <= _maxSupply */\n  gt\n  iszero\n    /* \"C/circulatingSupplyTypes.sol\":1319:1396  require(_initialSupply <= _maxSupply, \"Initial supply must be <= max supply\") */\n  tag_18\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_19\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_18:\n    /* \"C/circulatingSupplyTypes.sol\":1418:1428  _maxSupply */\n  dup1\n    /* \"C/circulatingSupplyTypes.sol\":1406:1428  maxSupply = _maxSupply */\n  0x80\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"C/circulatingSupplyTypes.sol\":1438:1471  _mint(msg.sender, _initialSupply) */\n  tag_21\n    /* \"C/circulatingSupplyTypes.sol\":1444:1454  msg.sender */\n  caller\n    /* \"C/circulatingSupplyTypes.sol\":1456:1470  _initialSupply */\n  dup4\n    /* \"C/circulatingSupplyTypes.sol\":1438:1443  _mint */\n  shl(0x20, tag_22)\n    /* \"C/circulatingSupplyTypes.sol\":1438:1471  _mint(msg.sender, _initialSupply) */\n  0x20\n  shr\n  jump\t// in\ntag_21:\n    /* \"C/circulatingSupplyTypes.sol\":1165:1478  constructor(uint256 _initialSupply, uint256 _maxSupply)... */\n  pop\n  pop\n    /* \"C/circulatingSupplyTypes.sol\":456:3514  contract CirculatingSupplyTokenExtended is ERC20, Ownable {... */\n  jump(tag_23)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\ntag_22:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_26\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_27\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_27:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_26:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  tag_28\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n  shl(0x20, tag_29)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_28:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_29:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_31\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_32\n  swap2\n  swap1\n  tag_33\n  jump\t// in\ntag_32:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  jump(tag_34)\ntag_31:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n  iszero\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_36\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_37\n  jump\t// in\ntag_36:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\ntag_35:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\ntag_34:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  tag_38\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  jump(tag_39)\ntag_38:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\ntag_39:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  mload(0x40)\n  tag_40\n  swap2\n  swap1\n  tag_41\n  jump\t// in\ntag_40:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_43:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_45:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_46:\n    /* \"#utility.yul\":490:514   */\n  tag_81\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_45\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_82\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  0x00\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_82:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_47:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_84\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_46\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:1201   */\ntag_3:\n    /* \"#utility.yul\":773:779   */\n  0x00\n    /* \"#utility.yul\":781:787   */\n  0x00\n    /* \"#utility.yul\":830:832   */\n  0x40\n    /* \"#utility.yul\":818:827   */\n  dup4\n    /* \"#utility.yul\":809:816   */\n  dup6\n    /* \"#utility.yul\":805:828   */\n  sub\n    /* \"#utility.yul\":801:833   */\n  slt\n    /* \"#utility.yul\":798:917   */\n  iszero\n  tag_86\n  jumpi\n    /* \"#utility.yul\":836:915   */\n  tag_87\n  tag_43\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":798:917   */\ntag_86:\n    /* \"#utility.yul\":956:957   */\n  0x00\n    /* \"#utility.yul\":981:1045   */\n  tag_88\n    /* \"#utility.yul\":1037:1044   */\n  dup6\n    /* \"#utility.yul\":1028:1034   */\n  dup3\n    /* \"#utility.yul\":1017:1026   */\n  dup7\n    /* \"#utility.yul\":1013:1035   */\n  add\n    /* \"#utility.yul\":981:1045   */\n  tag_47\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":971:1045   */\n  swap3\n  pop\n    /* \"#utility.yul\":927:1055   */\n  pop\n    /* \"#utility.yul\":1094:1096   */\n  0x20\n    /* \"#utility.yul\":1120:1184   */\n  tag_89\n    /* \"#utility.yul\":1176:1183   */\n  dup6\n    /* \"#utility.yul\":1167:1173   */\n  dup3\n    /* \"#utility.yul\":1156:1165   */\n  dup7\n    /* \"#utility.yul\":1152:1174   */\n  add\n    /* \"#utility.yul\":1120:1184   */\n  tag_47\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":1110:1184   */\n  swap2\n  pop\n    /* \"#utility.yul\":1065:1194   */\n  pop\n    /* \"#utility.yul\":694:1201   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1207:1306   */\ntag_48:\n    /* \"#utility.yul\":1259:1265   */\n  0x00\n    /* \"#utility.yul\":1293:1298   */\n  dup2\n    /* \"#utility.yul\":1287:1299   */\n  mload\n    /* \"#utility.yul\":1277:1299   */\n  swap1\n  pop\n    /* \"#utility.yul\":1207:1306   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1312:1492   */\ntag_49:\n    /* \"#utility.yul\":1360:1437   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1357:1358   */\n  0x00\n    /* \"#utility.yul\":1350:1438   */\n  mstore\n    /* \"#utility.yul\":1457:1461   */\n  0x41\n    /* \"#utility.yul\":1454:1455   */\n  0x04\n    /* \"#utility.yul\":1447:1462   */\n  mstore\n    /* \"#utility.yul\":1481:1485   */\n  0x24\n    /* \"#utility.yul\":1478:1479   */\n  0x00\n    /* \"#utility.yul\":1471:1486   */\n  revert\n    /* \"#utility.yul\":1498:1678   */\ntag_50:\n    /* \"#utility.yul\":1546:1623   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1543:1544   */\n  0x00\n    /* \"#utility.yul\":1536:1624   */\n  mstore\n    /* \"#utility.yul\":1643:1647   */\n  0x22\n    /* \"#utility.yul\":1640:1641   */\n  0x04\n    /* \"#utility.yul\":1633:1648   */\n  mstore\n    /* \"#utility.yul\":1667:1671   */\n  0x24\n    /* \"#utility.yul\":1664:1665   */\n  0x00\n    /* \"#utility.yul\":1657:1672   */\n  revert\n    /* \"#utility.yul\":1684:2004   */\ntag_51:\n    /* \"#utility.yul\":1728:1734   */\n  0x00\n    /* \"#utility.yul\":1765:1766   */\n  0x02\n    /* \"#utility.yul\":1759:1763   */\n  dup3\n    /* \"#utility.yul\":1755:1767   */\n  div\n    /* \"#utility.yul\":1745:1767   */\n  swap1\n  pop\n    /* \"#utility.yul\":1812:1813   */\n  0x01\n    /* \"#utility.yul\":1806:1810   */\n  dup3\n    /* \"#utility.yul\":1802:1814   */\n  and\n    /* \"#utility.yul\":1833:1851   */\n  dup1\n    /* \"#utility.yul\":1823:1904   */\n  tag_94\n  jumpi\n    /* \"#utility.yul\":1889:1893   */\n  0x7f\n    /* \"#utility.yul\":1881:1887   */\n  dup3\n    /* \"#utility.yul\":1877:1894   */\n  and\n    /* \"#utility.yul\":1867:1894   */\n  swap2\n  pop\n    /* \"#utility.yul\":1823:1904   */\ntag_94:\n    /* \"#utility.yul\":1951:1953   */\n  0x20\n    /* \"#utility.yul\":1943:1949   */\n  dup3\n    /* \"#utility.yul\":1940:1954   */\n  lt\n    /* \"#utility.yul\":1920:1938   */\n  dup2\n    /* \"#utility.yul\":1917:1955   */\n  sub\n    /* \"#utility.yul\":1914:1998   */\n  tag_95\n  jumpi\n    /* \"#utility.yul\":1970:1988   */\n  tag_96\n  tag_50\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":1914:1998   */\ntag_95:\n    /* \"#utility.yul\":1735:2004   */\n  pop\n    /* \"#utility.yul\":1684:2004   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2010:2151   */\ntag_52:\n    /* \"#utility.yul\":2059:2063   */\n  0x00\n    /* \"#utility.yul\":2082:2085   */\n  dup2\n    /* \"#utility.yul\":2074:2085   */\n  swap1\n  pop\n    /* \"#utility.yul\":2105:2108   */\n  dup2\n    /* \"#utility.yul\":2102:2103   */\n  0x00\n    /* \"#utility.yul\":2095:2109   */\n  mstore\n    /* \"#utility.yul\":2139:2143   */\n  0x20\n    /* \"#utility.yul\":2136:2137   */\n  0x00\n    /* \"#utility.yul\":2126:2144   */\n  keccak256\n    /* \"#utility.yul\":2118:2144   */\n  swap1\n  pop\n    /* \"#utility.yul\":2010:2151   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2157:2250   */\ntag_53:\n    /* \"#utility.yul\":2194:2200   */\n  0x00\n    /* \"#utility.yul\":2241:2243   */\n  0x20\n    /* \"#utility.yul\":2236:2238   */\n  0x1f\n    /* \"#utility.yul\":2229:2234   */\n  dup4\n    /* \"#utility.yul\":2225:2239   */\n  add\n    /* \"#utility.yul\":2221:2244   */\n  div\n    /* \"#utility.yul\":2211:2244   */\n  swap1\n  pop\n    /* \"#utility.yul\":2157:2250   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2256:2363   */\ntag_54:\n    /* \"#utility.yul\":2300:2308   */\n  0x00\n    /* \"#utility.yul\":2350:2355   */\n  dup3\n    /* \"#utility.yul\":2344:2348   */\n  dup3\n    /* \"#utility.yul\":2340:2356   */\n  shl\n    /* \"#utility.yul\":2319:2356   */\n  swap1\n  pop\n    /* \"#utility.yul\":2256:2363   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2369:2762   */\ntag_55:\n    /* \"#utility.yul\":2438:2444   */\n  0x00\n    /* \"#utility.yul\":2488:2489   */\n  0x08\n    /* \"#utility.yul\":2476:2486   */\n  dup4\n    /* \"#utility.yul\":2472:2490   */\n  mul\n    /* \"#utility.yul\":2511:2608   */\n  tag_101\n    /* \"#utility.yul\":2541:2607   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2530:2539   */\n  dup3\n    /* \"#utility.yul\":2511:2608   */\n  tag_54\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":2629:2668   */\n  tag_102\n    /* \"#utility.yul\":2659:2667   */\n  dup7\n    /* \"#utility.yul\":2648:2657   */\n  dup4\n    /* \"#utility.yul\":2629:2668   */\n  tag_54\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":2617:2668   */\n  swap6\n  pop\n    /* \"#utility.yul\":2701:2705   */\n  dup1\n    /* \"#utility.yul\":2697:2706   */\n  not\n    /* \"#utility.yul\":2690:2695   */\n  dup5\n    /* \"#utility.yul\":2686:2707   */\n  and\n    /* \"#utility.yul\":2677:2707   */\n  swap4\n  pop\n    /* \"#utility.yul\":2750:2754   */\n  dup1\n    /* \"#utility.yul\":2740:2748   */\n  dup7\n    /* \"#utility.yul\":2736:2755   */\n  and\n    /* \"#utility.yul\":2729:2734   */\n  dup5\n    /* \"#utility.yul\":2726:2756   */\n  or\n    /* \"#utility.yul\":2716:2756   */\n  swap3\n  pop\n    /* \"#utility.yul\":2445:2762   */\n  pop\n  pop\n    /* \"#utility.yul\":2369:2762   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2768:2828   */\ntag_56:\n    /* \"#utility.yul\":2796:2799   */\n  0x00\n    /* \"#utility.yul\":2817:2822   */\n  dup2\n    /* \"#utility.yul\":2810:2822   */\n  swap1\n  pop\n    /* \"#utility.yul\":2768:2828   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2834:2976   */\ntag_57:\n    /* \"#utility.yul\":2884:2893   */\n  0x00\n    /* \"#utility.yul\":2917:2970   */\n  tag_105\n    /* \"#utility.yul\":2935:2969   */\n  tag_106\n    /* \"#utility.yul\":2944:2968   */\n  tag_107\n    /* \"#utility.yul\":2962:2967   */\n  dup5\n    /* \"#utility.yul\":2944:2968   */\n  tag_45\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":2935:2969   */\n  tag_56\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":2917:2970   */\n  tag_45\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":2904:2970   */\n  swap1\n  pop\n    /* \"#utility.yul\":2834:2976   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2982:3057   */\ntag_58:\n    /* \"#utility.yul\":3025:3028   */\n  0x00\n    /* \"#utility.yul\":3046:3051   */\n  dup2\n    /* \"#utility.yul\":3039:3051   */\n  swap1\n  pop\n    /* \"#utility.yul\":2982:3057   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3063:3332   */\ntag_59:\n    /* \"#utility.yul\":3173:3212   */\n  tag_110\n    /* \"#utility.yul\":3204:3211   */\n  dup4\n    /* \"#utility.yul\":3173:3212   */\n  tag_57\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":3234:3325   */\n  tag_111\n    /* \"#utility.yul\":3283:3324   */\n  tag_112\n    /* \"#utility.yul\":3307:3323   */\n  dup3\n    /* \"#utility.yul\":3283:3324   */\n  tag_58\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":3275:3281   */\n  dup5\n    /* \"#utility.yul\":3268:3272   */\n  dup5\n    /* \"#utility.yul\":3262:3273   */\n  sload\n    /* \"#utility.yul\":3234:3325   */\n  tag_55\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":3228:3232   */\n  dup3\n    /* \"#utility.yul\":3221:3326   */\n  sstore\n    /* \"#utility.yul\":3139:3332   */\n  pop\n    /* \"#utility.yul\":3063:3332   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3338:3411   */\ntag_60:\n    /* \"#utility.yul\":3383:3386   */\n  0x00\n    /* \"#utility.yul\":3404:3405   */\n  0x00\n    /* \"#utility.yul\":3397:3405   */\n  swap1\n  pop\n    /* \"#utility.yul\":3338:3411   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3417:3606   */\ntag_61:\n    /* \"#utility.yul\":3494:3526   */\n  tag_115\n  tag_60\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":3535:3600   */\n  tag_116\n    /* \"#utility.yul\":3593:3599   */\n  dup2\n    /* \"#utility.yul\":3585:3591   */\n  dup5\n    /* \"#utility.yul\":3579:3583   */\n  dup5\n    /* \"#utility.yul\":3535:3600   */\n  tag_59\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":3470:3606   */\n  pop\n    /* \"#utility.yul\":3417:3606   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3612:3798   */\ntag_62:\n    /* \"#utility.yul\":3672:3792   */\ntag_118:\n    /* \"#utility.yul\":3689:3692   */\n  dup2\n    /* \"#utility.yul\":3682:3687   */\n  dup2\n    /* \"#utility.yul\":3679:3693   */\n  lt\n    /* \"#utility.yul\":3672:3792   */\n  iszero\n  tag_120\n  jumpi\n    /* \"#utility.yul\":3743:3782   */\n  tag_121\n    /* \"#utility.yul\":3780:3781   */\n  0x00\n    /* \"#utility.yul\":3773:3778   */\n  dup3\n    /* \"#utility.yul\":3743:3782   */\n  tag_61\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":3716:3717   */\n  0x01\n    /* \"#utility.yul\":3709:3714   */\n  dup2\n    /* \"#utility.yul\":3705:3718   */\n  add\n    /* \"#utility.yul\":3696:3718   */\n  swap1\n  pop\n    /* \"#utility.yul\":3672:3792   */\n  jump(tag_118)\ntag_120:\n    /* \"#utility.yul\":3612:3798   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3804:4347   */\ntag_63:\n    /* \"#utility.yul\":3905:3907   */\n  0x1f\n    /* \"#utility.yul\":3900:3903   */\n  dup3\n    /* \"#utility.yul\":3897:3908   */\n  gt\n    /* \"#utility.yul\":3894:4340   */\n  iszero\n  tag_123\n  jumpi\n    /* \"#utility.yul\":3939:3977   */\n  tag_124\n    /* \"#utility.yul\":3971:3976   */\n  dup2\n    /* \"#utility.yul\":3939:3977   */\n  tag_52\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":4023:4052   */\n  tag_125\n    /* \"#utility.yul\":4041:4051   */\n  dup5\n    /* \"#utility.yul\":4023:4052   */\n  tag_53\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":4013:4021   */\n  dup2\n    /* \"#utility.yul\":4009:4053   */\n  add\n    /* \"#utility.yul\":4206:4208   */\n  0x20\n    /* \"#utility.yul\":4194:4204   */\n  dup6\n    /* \"#utility.yul\":4191:4209   */\n  lt\n    /* \"#utility.yul\":4188:4237   */\n  iszero\n  tag_126\n  jumpi\n    /* \"#utility.yul\":4227:4235   */\n  dup2\n    /* \"#utility.yul\":4212:4235   */\n  swap1\n  pop\n    /* \"#utility.yul\":4188:4237   */\ntag_126:\n    /* \"#utility.yul\":4250:4330   */\n  tag_127\n    /* \"#utility.yul\":4306:4328   */\n  tag_128\n    /* \"#utility.yul\":4324:4327   */\n  dup6\n    /* \"#utility.yul\":4306:4328   */\n  tag_53\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":4296:4304   */\n  dup4\n    /* \"#utility.yul\":4292:4329   */\n  add\n    /* \"#utility.yul\":4279:4290   */\n  dup3\n    /* \"#utility.yul\":4250:4330   */\n  tag_62\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":3909:4340   */\n  pop\n  pop\n    /* \"#utility.yul\":3894:4340   */\ntag_123:\n    /* \"#utility.yul\":3804:4347   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4353:4470   */\ntag_64:\n    /* \"#utility.yul\":4407:4415   */\n  0x00\n    /* \"#utility.yul\":4457:4462   */\n  dup3\n    /* \"#utility.yul\":4451:4455   */\n  dup3\n    /* \"#utility.yul\":4447:4463   */\n  shr\n    /* \"#utility.yul\":4426:4463   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4470   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4476:4645   */\ntag_65:\n    /* \"#utility.yul\":4520:4526   */\n  0x00\n    /* \"#utility.yul\":4553:4604   */\n  tag_131\n    /* \"#utility.yul\":4601:4602   */\n  0x00\n    /* \"#utility.yul\":4597:4603   */\n  not\n    /* \"#utility.yul\":4589:4594   */\n  dup5\n    /* \"#utility.yul\":4586:4587   */\n  0x08\n    /* \"#utility.yul\":4582:4595   */\n  mul\n    /* \"#utility.yul\":4553:4604   */\n  tag_64\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":4549:4605   */\n  not\n    /* \"#utility.yul\":4634:4638   */\n  dup1\n    /* \"#utility.yul\":4628:4632   */\n  dup4\n    /* \"#utility.yul\":4624:4639   */\n  and\n    /* \"#utility.yul\":4614:4639   */\n  swap2\n  pop\n    /* \"#utility.yul\":4527:4645   */\n  pop\n    /* \"#utility.yul\":4476:4645   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4650:4945   */\ntag_66:\n    /* \"#utility.yul\":4726:4730   */\n  0x00\n    /* \"#utility.yul\":4872:4901   */\n  tag_133\n    /* \"#utility.yul\":4897:4900   */\n  dup4\n    /* \"#utility.yul\":4891:4895   */\n  dup4\n    /* \"#utility.yul\":4872:4901   */\n  tag_65\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":4864:4901   */\n  swap2\n  pop\n    /* \"#utility.yul\":4934:4937   */\n  dup3\n    /* \"#utility.yul\":4931:4932   */\n  0x02\n    /* \"#utility.yul\":4927:4938   */\n  mul\n    /* \"#utility.yul\":4921:4925   */\n  dup3\n    /* \"#utility.yul\":4918:4939   */\n  or\n    /* \"#utility.yul\":4910:4939   */\n  swap1\n  pop\n    /* \"#utility.yul\":4650:4945   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4950:6345   */\ntag_9:\n    /* \"#utility.yul\":5067:5104   */\n  tag_135\n    /* \"#utility.yul\":5100:5103   */\n  dup3\n    /* \"#utility.yul\":5067:5104   */\n  tag_48\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":5169:5187   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5161:5167   */\n  dup2\n    /* \"#utility.yul\":5158:5188   */\n  gt\n    /* \"#utility.yul\":5155:5211   */\n  iszero\n  tag_136\n  jumpi\n    /* \"#utility.yul\":5191:5209   */\n  tag_137\n  tag_49\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":5155:5211   */\ntag_136:\n    /* \"#utility.yul\":5235:5273   */\n  tag_138\n    /* \"#utility.yul\":5267:5271   */\n  dup3\n    /* \"#utility.yul\":5261:5272   */\n  sload\n    /* \"#utility.yul\":5235:5273   */\n  tag_51\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":5320:5387   */\n  tag_139\n    /* \"#utility.yul\":5380:5386   */\n  dup3\n    /* \"#utility.yul\":5372:5378   */\n  dup3\n    /* \"#utility.yul\":5366:5370   */\n  dup6\n    /* \"#utility.yul\":5320:5387   */\n  tag_63\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":5414:5415   */\n  0x00\n    /* \"#utility.yul\":5438:5442   */\n  0x20\n    /* \"#utility.yul\":5425:5442   */\n  swap1\n  pop\n    /* \"#utility.yul\":5470:5472   */\n  0x1f\n    /* \"#utility.yul\":5462:5468   */\n  dup4\n    /* \"#utility.yul\":5459:5473   */\n  gt\n    /* \"#utility.yul\":5487:5488   */\n  0x01\n    /* \"#utility.yul\":5482:6100   */\n  dup2\n  eq\n  tag_141\n  jumpi\n    /* \"#utility.yul\":6144:6145   */\n  0x00\n    /* \"#utility.yul\":6161:6167   */\n  dup5\n    /* \"#utility.yul\":6158:6235   */\n  iszero\n  tag_142\n  jumpi\n    /* \"#utility.yul\":6210:6219   */\n  dup3\n    /* \"#utility.yul\":6205:6208   */\n  dup8\n    /* \"#utility.yul\":6201:6220   */\n  add\n    /* \"#utility.yul\":6195:6221   */\n  mload\n    /* \"#utility.yul\":6186:6221   */\n  swap1\n  pop\n    /* \"#utility.yul\":6158:6235   */\ntag_142:\n    /* \"#utility.yul\":6261:6328   */\n  tag_143\n    /* \"#utility.yul\":6321:6327   */\n  dup6\n    /* \"#utility.yul\":6314:6319   */\n  dup3\n    /* \"#utility.yul\":6261:6328   */\n  tag_66\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":6255:6259   */\n  dup7\n    /* \"#utility.yul\":6248:6329   */\n  sstore\n    /* \"#utility.yul\":6117:6339   */\n  pop\n    /* \"#utility.yul\":5452:6339   */\n  jump(tag_140)\n    /* \"#utility.yul\":5482:6100   */\ntag_141:\n    /* \"#utility.yul\":5534:5538   */\n  0x1f\n    /* \"#utility.yul\":5530:5539   */\n  not\n    /* \"#utility.yul\":5522:5528   */\n  dup5\n    /* \"#utility.yul\":5518:5540   */\n  and\n    /* \"#utility.yul\":5568:5605   */\n  tag_144\n    /* \"#utility.yul\":5600:5604   */\n  dup7\n    /* \"#utility.yul\":5568:5605   */\n  tag_52\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":5627:5628   */\n  0x00\n    /* \"#utility.yul\":5641:5849   */\ntag_145:\n    /* \"#utility.yul\":5655:5662   */\n  dup3\n    /* \"#utility.yul\":5652:5653   */\n  dup2\n    /* \"#utility.yul\":5649:5663   */\n  lt\n    /* \"#utility.yul\":5641:5849   */\n  iszero\n  tag_147\n  jumpi\n    /* \"#utility.yul\":5734:5743   */\n  dup5\n    /* \"#utility.yul\":5729:5732   */\n  dup10\n    /* \"#utility.yul\":5725:5744   */\n  add\n    /* \"#utility.yul\":5719:5745   */\n  mload\n    /* \"#utility.yul\":5711:5717   */\n  dup3\n    /* \"#utility.yul\":5704:5746   */\n  sstore\n    /* \"#utility.yul\":5785:5786   */\n  0x01\n    /* \"#utility.yul\":5777:5783   */\n  dup3\n    /* \"#utility.yul\":5773:5787   */\n  add\n    /* \"#utility.yul\":5763:5787   */\n  swap2\n  pop\n    /* \"#utility.yul\":5832:5834   */\n  0x20\n    /* \"#utility.yul\":5821:5830   */\n  dup6\n    /* \"#utility.yul\":5817:5835   */\n  add\n    /* \"#utility.yul\":5804:5835   */\n  swap5\n  pop\n    /* \"#utility.yul\":5678:5682   */\n  0x20\n    /* \"#utility.yul\":5675:5676   */\n  dup2\n    /* \"#utility.yul\":5671:5683   */\n  add\n    /* \"#utility.yul\":5666:5683   */\n  swap1\n  pop\n    /* \"#utility.yul\":5641:5849   */\n  jump(tag_145)\ntag_147:\n    /* \"#utility.yul\":5877:5883   */\n  dup7\n    /* \"#utility.yul\":5868:5875   */\n  dup4\n    /* \"#utility.yul\":5865:5884   */\n  lt\n    /* \"#utility.yul\":5862:6041   */\n  iszero\n  tag_148\n  jumpi\n    /* \"#utility.yul\":5935:5944   */\n  dup5\n    /* \"#utility.yul\":5930:5933   */\n  dup10\n    /* \"#utility.yul\":5926:5945   */\n  add\n    /* \"#utility.yul\":5920:5946   */\n  mload\n    /* \"#utility.yul\":5978:6026   */\n  tag_149\n    /* \"#utility.yul\":6020:6024   */\n  0x1f\n    /* \"#utility.yul\":6012:6018   */\n  dup10\n    /* \"#utility.yul\":6008:6025   */\n  and\n    /* \"#utility.yul\":5997:6006   */\n  dup3\n    /* \"#utility.yul\":5978:6026   */\n  tag_65\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":5970:5976   */\n  dup4\n    /* \"#utility.yul\":5963:6027   */\n  sstore\n    /* \"#utility.yul\":5885:6041   */\n  pop\n    /* \"#utility.yul\":5862:6041   */\ntag_148:\n    /* \"#utility.yul\":6087:6088   */\n  0x01\n    /* \"#utility.yul\":6083:6084   */\n  0x02\n    /* \"#utility.yul\":6075:6081   */\n  dup9\n    /* \"#utility.yul\":6071:6085   */\n  mul\n    /* \"#utility.yul\":6067:6089   */\n  add\n    /* \"#utility.yul\":6061:6065   */\n  dup9\n    /* \"#utility.yul\":6054:6090   */\n  sstore\n    /* \"#utility.yul\":5489:6100   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5452:6339   */\ntag_140:\n  pop\n    /* \"#utility.yul\":5042:6345   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4950:6345   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6351:6477   */\ntag_67:\n    /* \"#utility.yul\":6388:6395   */\n  0x00\n    /* \"#utility.yul\":6428:6470   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":6421:6426   */\n  dup3\n    /* \"#utility.yul\":6417:6471   */\n  and\n    /* \"#utility.yul\":6406:6471   */\n  swap1\n  pop\n    /* \"#utility.yul\":6351:6477   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6483:6579   */\ntag_68:\n    /* \"#utility.yul\":6520:6527   */\n  0x00\n    /* \"#utility.yul\":6549:6573   */\n  tag_152\n    /* \"#utility.yul\":6567:6572   */\n  dup3\n    /* \"#utility.yul\":6549:6573   */\n  tag_67\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":6538:6573   */\n  swap1\n  pop\n    /* \"#utility.yul\":6483:6579   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6585:6703   */\ntag_69:\n    /* \"#utility.yul\":6672:6696   */\n  tag_154\n    /* \"#utility.yul\":6690:6695   */\n  dup2\n    /* \"#utility.yul\":6672:6696   */\n  tag_68\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":6667:6670   */\n  dup3\n    /* \"#utility.yul\":6660:6697   */\n  mstore\n    /* \"#utility.yul\":6585:6703   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6709:6931   */\ntag_14:\n    /* \"#utility.yul\":6802:6806   */\n  0x00\n    /* \"#utility.yul\":6840:6842   */\n  0x20\n    /* \"#utility.yul\":6829:6838   */\n  dup3\n    /* \"#utility.yul\":6825:6843   */\n  add\n    /* \"#utility.yul\":6817:6843   */\n  swap1\n  pop\n    /* \"#utility.yul\":6853:6924   */\n  tag_156\n    /* \"#utility.yul\":6921:6922   */\n  0x00\n    /* \"#utility.yul\":6910:6919   */\n  dup4\n    /* \"#utility.yul\":6906:6923   */\n  add\n    /* \"#utility.yul\":6897:6903   */\n  dup5\n    /* \"#utility.yul\":6853:6924   */\n  tag_69\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":6709:6931   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6937:7106   */\ntag_70:\n    /* \"#utility.yul\":7021:7032   */\n  0x00\n    /* \"#utility.yul\":7055:7061   */\n  dup3\n    /* \"#utility.yul\":7050:7053   */\n  dup3\n    /* \"#utility.yul\":7043:7062   */\n  mstore\n    /* \"#utility.yul\":7095:7099   */\n  0x20\n    /* \"#utility.yul\":7090:7093   */\n  dup3\n    /* \"#utility.yul\":7086:7100   */\n  add\n    /* \"#utility.yul\":7071:7100   */\n  swap1\n  pop\n    /* \"#utility.yul\":6937:7106   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7112:7335   */\ntag_71:\n    /* \"#utility.yul\":7252:7286   */\n  0x496e697469616c20737570706c79206d757374206265203c3d206d6178207375\n    /* \"#utility.yul\":7248:7249   */\n  0x00\n    /* \"#utility.yul\":7240:7246   */\n  dup3\n    /* \"#utility.yul\":7236:7250   */\n  add\n    /* \"#utility.yul\":7229:7287   */\n  mstore\n    /* \"#utility.yul\":7321:7327   */\n  0x70706c7900000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":7316:7318   */\n  0x20\n    /* \"#utility.yul\":7308:7314   */\n  dup3\n    /* \"#utility.yul\":7304:7319   */\n  add\n    /* \"#utility.yul\":7297:7328   */\n  mstore\n    /* \"#utility.yul\":7112:7335   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7341:7707   */\ntag_72:\n    /* \"#utility.yul\":7483:7486   */\n  0x00\n    /* \"#utility.yul\":7504:7571   */\n  tag_160\n    /* \"#utility.yul\":7568:7570   */\n  0x24\n    /* \"#utility.yul\":7563:7566   */\n  dup4\n    /* \"#utility.yul\":7504:7571   */\n  tag_70\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":7497:7571   */\n  swap2\n  pop\n    /* \"#utility.yul\":7580:7673   */\n  tag_161\n    /* \"#utility.yul\":7669:7672   */\n  dup3\n    /* \"#utility.yul\":7580:7673   */\n  tag_71\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":7698:7700   */\n  0x40\n    /* \"#utility.yul\":7693:7696   */\n  dup3\n    /* \"#utility.yul\":7689:7701   */\n  add\n    /* \"#utility.yul\":7682:7701   */\n  swap1\n  pop\n    /* \"#utility.yul\":7341:7707   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7713:8132   */\ntag_20:\n    /* \"#utility.yul\":7879:7883   */\n  0x00\n    /* \"#utility.yul\":7917:7919   */\n  0x20\n    /* \"#utility.yul\":7906:7915   */\n  dup3\n    /* \"#utility.yul\":7902:7920   */\n  add\n    /* \"#utility.yul\":7894:7920   */\n  swap1\n  pop\n    /* \"#utility.yul\":7966:7975   */\n  dup2\n    /* \"#utility.yul\":7960:7964   */\n  dup2\n    /* \"#utility.yul\":7956:7976   */\n  sub\n    /* \"#utility.yul\":7952:7953   */\n  0x00\n    /* \"#utility.yul\":7941:7950   */\n  dup4\n    /* \"#utility.yul\":7937:7954   */\n  add\n    /* \"#utility.yul\":7930:7977   */\n  mstore\n    /* \"#utility.yul\":7994:8125   */\n  tag_163\n    /* \"#utility.yul\":8120:8124   */\n  dup2\n    /* \"#utility.yul\":7994:8125   */\n  tag_72\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":7986:8125   */\n  swap1\n  pop\n    /* \"#utility.yul\":7713:8132   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8138:8318   */\ntag_73:\n    /* \"#utility.yul\":8186:8263   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":8183:8184   */\n  0x00\n    /* \"#utility.yul\":8176:8264   */\n  mstore\n    /* \"#utility.yul\":8283:8287   */\n  0x11\n    /* \"#utility.yul\":8280:8281   */\n  0x04\n    /* \"#utility.yul\":8273:8288   */\n  mstore\n    /* \"#utility.yul\":8307:8311   */\n  0x24\n    /* \"#utility.yul\":8304:8305   */\n  0x00\n    /* \"#utility.yul\":8297:8312   */\n  revert\n    /* \"#utility.yul\":8324:8515   */\ntag_33:\n    /* \"#utility.yul\":8364:8367   */\n  0x00\n    /* \"#utility.yul\":8383:8403   */\n  tag_166\n    /* \"#utility.yul\":8401:8402   */\n  dup3\n    /* \"#utility.yul\":8383:8403   */\n  tag_45\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":8378:8403   */\n  swap2\n  pop\n    /* \"#utility.yul\":8417:8437   */\n  tag_167\n    /* \"#utility.yul\":8435:8436   */\n  dup4\n    /* \"#utility.yul\":8417:8437   */\n  tag_45\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":8412:8437   */\n  swap3\n  pop\n    /* \"#utility.yul\":8460:8461   */\n  dup3\n    /* \"#utility.yul\":8457:8458   */\n  dup3\n    /* \"#utility.yul\":8453:8462   */\n  add\n    /* \"#utility.yul\":8446:8462   */\n  swap1\n  pop\n    /* \"#utility.yul\":8481:8484   */\n  dup1\n    /* \"#utility.yul\":8478:8479   */\n  dup3\n    /* \"#utility.yul\":8475:8485   */\n  gt\n    /* \"#utility.yul\":8472:8508   */\n  iszero\n  tag_168\n  jumpi\n    /* \"#utility.yul\":8488:8506   */\n  tag_169\n  tag_73\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":8472:8508   */\ntag_168:\n    /* \"#utility.yul\":8324:8515   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8521:8639   */\ntag_74:\n    /* \"#utility.yul\":8608:8632   */\n  tag_171\n    /* \"#utility.yul\":8626:8631   */\n  dup2\n    /* \"#utility.yul\":8608:8632   */\n  tag_45\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":8603:8606   */\n  dup3\n    /* \"#utility.yul\":8596:8633   */\n  mstore\n    /* \"#utility.yul\":8521:8639   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8645:9087   */\ntag_37:\n    /* \"#utility.yul\":8794:8798   */\n  0x00\n    /* \"#utility.yul\":8832:8834   */\n  0x60\n    /* \"#utility.yul\":8821:8830   */\n  dup3\n    /* \"#utility.yul\":8817:8835   */\n  add\n    /* \"#utility.yul\":8809:8835   */\n  swap1\n  pop\n    /* \"#utility.yul\":8845:8916   */\n  tag_173\n    /* \"#utility.yul\":8913:8914   */\n  0x00\n    /* \"#utility.yul\":8902:8911   */\n  dup4\n    /* \"#utility.yul\":8898:8915   */\n  add\n    /* \"#utility.yul\":8889:8895   */\n  dup7\n    /* \"#utility.yul\":8845:8916   */\n  tag_69\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":8926:8998   */\n  tag_174\n    /* \"#utility.yul\":8994:8996   */\n  0x20\n    /* \"#utility.yul\":8983:8992   */\n  dup4\n    /* \"#utility.yul\":8979:8997   */\n  add\n    /* \"#utility.yul\":8970:8976   */\n  dup6\n    /* \"#utility.yul\":8926:8998   */\n  tag_74\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":9008:9080   */\n  tag_175\n    /* \"#utility.yul\":9076:9078   */\n  0x40\n    /* \"#utility.yul\":9065:9074   */\n  dup4\n    /* \"#utility.yul\":9061:9079   */\n  add\n    /* \"#utility.yul\":9052:9058   */\n  dup5\n    /* \"#utility.yul\":9008:9080   */\n  tag_74\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":8645:9087   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9093:9315   */\ntag_41:\n    /* \"#utility.yul\":9186:9190   */\n  0x00\n    /* \"#utility.yul\":9224:9226   */\n  0x20\n    /* \"#utility.yul\":9213:9222   */\n  dup3\n    /* \"#utility.yul\":9209:9227   */\n  add\n    /* \"#utility.yul\":9201:9227   */\n  swap1\n  pop\n    /* \"#utility.yul\":9237:9308   */\n  tag_177\n    /* \"#utility.yul\":9305:9306   */\n  0x00\n    /* \"#utility.yul\":9294:9303   */\n  dup4\n    /* \"#utility.yul\":9290:9307   */\n  add\n    /* \"#utility.yul\":9281:9287   */\n  dup5\n    /* \"#utility.yul\":9237:9308   */\n  tag_74\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":9093:9315   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"C/circulatingSupplyTypes.sol\":456:3514  contract CirculatingSupplyTokenExtended is ERC20, Ownable {... */\ntag_23:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x4a06b8506ca29f0071472c073fef4bd34656e41207e20131380c952c1539f411\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"C/circulatingSupplyTypes.sol\":456:3514  contract CirculatingSupplyTokenExtended is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xb1c25586\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd5abeb01\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf145c73b\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x9358928b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x9d564d9a\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x252e65b2\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x252e65b2\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x52b8ab35\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x0483a7f6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"C/circulatingSupplyTypes.sol\":686:735  mapping(address => uint256) public lockedBalances */\n    tag_3:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"C/circulatingSupplyTypes.sol\":3417:3512  function fullyDilutedSupply() external view returns (uint256) {... */\n    tag_8:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_9:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"C/circulatingSupplyTypes.sol\":1681:1852  function mint(address to, uint256 amount) external onlyOwner {... */\n    tag_10:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      stop\n        /* \"C/circulatingSupplyTypes.sol\":3191:3290  function nonCirculatingSupply() external view returns (uint256) {... */\n    tag_11:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_14:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"C/circulatingSupplyTypes.sol\":2949:3061  function circulatingSupply() external view returns (uint256) {... */\n    tag_15:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_16:\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"C/circulatingSupplyTypes.sol\":2530:2814  function unlockTokens(address account, uint256 amount) external onlyOwner {... */\n    tag_17:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n    tag_80:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_18:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"C/circulatingSupplyTypes.sol\":2049:2325  function lockTokens(address account, uint256 amount) external onlyOwner {... */\n    tag_19:\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n    tag_87:\n      stop\n        /* \"C/circulatingSupplyTypes.sol\":577:611  uint256 public immutable maxSupply */\n    tag_20:\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_21:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      tag_96\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"C/circulatingSupplyTypes.sol\":796:822  uint256 public lockedTotal */\n    tag_22:\n      tag_98\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      tag_100\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_23:\n      tag_101\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_102:\n      tag_103\n      jump\t// in\n    tag_101:\n      stop\n        /* \"C/circulatingSupplyTypes.sol\":686:735  mapping(address => uint256) public lockedBalances */\n    tag_30:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_105\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_107\n      swap1\n      tag_106\n      jump\t// in\n    tag_107:\n      dup1\n      iszero\n      tag_108\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_109\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_108)\n    tag_109:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_110:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_110\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_108:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_114\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_115\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_118\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_119\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_120\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_121\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"C/circulatingSupplyTypes.sol\":3417:3512  function fullyDilutedSupply() external view returns (uint256) {... */\n    tag_52:\n        /* \"C/circulatingSupplyTypes.sol\":3470:3477  uint256 */\n      0x00\n        /* \"C/circulatingSupplyTypes.sol\":3496:3505  maxSupply */\n      immutable(\"0x4a06b8506ca29f0071472c073fef4bd34656e41207e20131380c952c1539f411\")\n        /* \"C/circulatingSupplyTypes.sol\":3489:3505  return maxSupply */\n      swap1\n      pop\n        /* \"C/circulatingSupplyTypes.sol\":3417:3512  function fullyDilutedSupply() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"C/circulatingSupplyTypes.sol\":1681:1852  function mint(address to, uint256 amount) external onlyOwner {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_126\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_126:\n        /* \"C/circulatingSupplyTypes.sol\":1786:1795  maxSupply */\n      immutable(\"0x4a06b8506ca29f0071472c073fef4bd34656e41207e20131380c952c1539f411\")\n        /* \"C/circulatingSupplyTypes.sol\":1776:1782  amount */\n      dup2\n        /* \"C/circulatingSupplyTypes.sol\":1760:1773  totalSupply() */\n      tag_129\n        /* \"C/circulatingSupplyTypes.sol\":1760:1771  totalSupply */\n      tag_44\n        /* \"C/circulatingSupplyTypes.sol\":1760:1773  totalSupply() */\n      jump\t// in\n    tag_129:\n        /* \"C/circulatingSupplyTypes.sol\":1760:1782  totalSupply() + amount */\n      tag_130\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n        /* \"C/circulatingSupplyTypes.sol\":1760:1795  totalSupply() + amount <= maxSupply */\n      gt\n      iszero\n        /* \"C/circulatingSupplyTypes.sol\":1752:1818  require(totalSupply() + amount <= maxSupply, \"Exceeds max supply\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"C/circulatingSupplyTypes.sol\":1828:1845  _mint(to, amount) */\n      tag_135\n        /* \"C/circulatingSupplyTypes.sol\":1834:1836  to */\n      dup3\n        /* \"C/circulatingSupplyTypes.sol\":1838:1844  amount */\n      dup3\n        /* \"C/circulatingSupplyTypes.sol\":1828:1833  _mint */\n      tag_136\n        /* \"C/circulatingSupplyTypes.sol\":1828:1845  _mint(to, amount) */\n      jump\t// in\n    tag_135:\n        /* \"C/circulatingSupplyTypes.sol\":1681:1852  function mint(address to, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"C/circulatingSupplyTypes.sol\":3191:3290  function nonCirculatingSupply() external view returns (uint256) {... */\n    tag_62:\n        /* \"C/circulatingSupplyTypes.sol\":3246:3253  uint256 */\n      0x00\n        /* \"C/circulatingSupplyTypes.sol\":3272:3283  lockedTotal */\n      sload(0x07)\n        /* \"C/circulatingSupplyTypes.sol\":3265:3283  return lockedTotal */\n      swap1\n      pop\n        /* \"C/circulatingSupplyTypes.sol\":3191:3290  function nonCirculatingSupply() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_140\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_143\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"C/circulatingSupplyTypes.sol\":2949:3061  function circulatingSupply() external view returns (uint256) {... */\n    tag_75:\n        /* \"C/circulatingSupplyTypes.sol\":3001:3008  uint256 */\n      0x00\n        /* \"C/circulatingSupplyTypes.sol\":3043:3054  lockedTotal */\n      sload(0x07)\n        /* \"C/circulatingSupplyTypes.sol\":3027:3040  totalSupply() */\n      tag_146\n        /* \"C/circulatingSupplyTypes.sol\":3027:3038  totalSupply */\n      tag_44\n        /* \"C/circulatingSupplyTypes.sol\":3027:3040  totalSupply() */\n      jump\t// in\n    tag_146:\n        /* \"C/circulatingSupplyTypes.sol\":3027:3054  totalSupply() - lockedTotal */\n      tag_147\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n        /* \"C/circulatingSupplyTypes.sol\":3020:3054  return totalSupply() - lockedTotal */\n      swap1\n      pop\n        /* \"C/circulatingSupplyTypes.sol\":2949:3061  function circulatingSupply() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_150\n      swap1\n      tag_106\n      jump\t// in\n    tag_150:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_151\n      swap1\n      tag_106\n      jump\t// in\n    tag_151:\n      dup1\n      iszero\n      tag_152\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_153\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_152)\n    tag_153:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_154:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_154\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_152:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"C/circulatingSupplyTypes.sol\":2530:2814  function unlockTokens(address account, uint256 amount) external onlyOwner {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_156\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_156:\n        /* \"C/circulatingSupplyTypes.sol\":2649:2655  amount */\n      dup1\n        /* \"C/circulatingSupplyTypes.sol\":2622:2636  lockedBalances */\n      0x06\n        /* \"C/circulatingSupplyTypes.sol\":2622:2645  lockedBalances[account] */\n      0x00\n        /* \"C/circulatingSupplyTypes.sol\":2637:2644  account */\n      dup5\n        /* \"C/circulatingSupplyTypes.sol\":2622:2645  lockedBalances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"C/circulatingSupplyTypes.sol\":2622:2655  lockedBalances[account] >= amount */\n      lt\n      iszero\n        /* \"C/circulatingSupplyTypes.sol\":2614:2687  require(lockedBalances[account] >= amount, \"Insufficient locked balance\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_158:\n        /* \"C/circulatingSupplyTypes.sol\":2724:2730  amount */\n      dup1\n        /* \"C/circulatingSupplyTypes.sol\":2697:2711  lockedBalances */\n      0x06\n        /* \"C/circulatingSupplyTypes.sol\":2697:2720  lockedBalances[account] */\n      0x00\n        /* \"C/circulatingSupplyTypes.sol\":2712:2719  account */\n      dup5\n        /* \"C/circulatingSupplyTypes.sol\":2697:2720  lockedBalances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"C/circulatingSupplyTypes.sol\":2697:2730  lockedBalances[account] -= amount */\n      dup3\n      dup3\n      sload\n      tag_161\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_161:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"C/circulatingSupplyTypes.sol\":2755:2761  amount */\n      dup1\n        /* \"C/circulatingSupplyTypes.sol\":2740:2751  lockedTotal */\n      0x07\n      0x00\n        /* \"C/circulatingSupplyTypes.sol\":2740:2761  lockedTotal -= amount */\n      dup3\n      dup3\n      sload\n      tag_162\n      swap2\n      swap1\n      tag_148\n      jump\t// in\n    tag_162:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"C/circulatingSupplyTypes.sol\":2791:2798  account */\n      dup2\n        /* \"C/circulatingSupplyTypes.sol\":2776:2807  TokensUnlocked(account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe7b379c6c1fa169e9079c25e9143b127637eef8ec8c9d5c06ddb4ab3e1195888\n        /* \"C/circulatingSupplyTypes.sol\":2800:2806  amount */\n      dup3\n        /* \"C/circulatingSupplyTypes.sol\":2776:2807  TokensUnlocked(account, amount) */\n      mload(0x40)\n      tag_163\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"C/circulatingSupplyTypes.sol\":2530:2814  function unlockTokens(address account, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"C/circulatingSupplyTypes.sol\":2049:2325  function lockTokens(address account, uint256 amount) external onlyOwner {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_168:\n        /* \"C/circulatingSupplyTypes.sol\":2161:2167  amount */\n      dup1\n        /* \"C/circulatingSupplyTypes.sol\":2139:2157  balanceOf(account) */\n      tag_170\n        /* \"C/circulatingSupplyTypes.sol\":2149:2156  account */\n      dup4\n        /* \"C/circulatingSupplyTypes.sol\":2139:2148  balanceOf */\n      tag_66\n        /* \"C/circulatingSupplyTypes.sol\":2139:2157  balanceOf(account) */\n      jump\t// in\n    tag_170:\n        /* \"C/circulatingSupplyTypes.sol\":2139:2167  balanceOf(account) >= amount */\n      lt\n      iszero\n        /* \"C/circulatingSupplyTypes.sol\":2131:2200  require(balanceOf(account) >= amount, \"Insufficient balance to lock\") */\n      tag_171\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap1\n      tag_173\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_171:\n        /* \"C/circulatingSupplyTypes.sol\":2237:2243  amount */\n      dup1\n        /* \"C/circulatingSupplyTypes.sol\":2210:2224  lockedBalances */\n      0x06\n        /* \"C/circulatingSupplyTypes.sol\":2210:2233  lockedBalances[account] */\n      0x00\n        /* \"C/circulatingSupplyTypes.sol\":2225:2232  account */\n      dup5\n        /* \"C/circulatingSupplyTypes.sol\":2210:2233  lockedBalances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"C/circulatingSupplyTypes.sol\":2210:2243  lockedBalances[account] += amount */\n      dup3\n      dup3\n      sload\n      tag_174\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_174:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"C/circulatingSupplyTypes.sol\":2268:2274  amount */\n      dup1\n        /* \"C/circulatingSupplyTypes.sol\":2253:2264  lockedTotal */\n      0x07\n      0x00\n        /* \"C/circulatingSupplyTypes.sol\":2253:2274  lockedTotal += amount */\n      dup3\n      dup3\n      sload\n      tag_175\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_175:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"C/circulatingSupplyTypes.sol\":2302:2309  account */\n      dup2\n        /* \"C/circulatingSupplyTypes.sol\":2289:2318  TokensLocked(account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xac87f20a77d28ee8bbb58ec87ea8fa968b3393efae1a368fd50b767c2847391c\n        /* \"C/circulatingSupplyTypes.sol\":2311:2317  amount */\n      dup3\n        /* \"C/circulatingSupplyTypes.sol\":2289:2318  TokensLocked(account, amount) */\n      mload(0x40)\n      tag_176\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"C/circulatingSupplyTypes.sol\":2049:2325  function lockTokens(address account, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"C/circulatingSupplyTypes.sol\":577:611  uint256 public immutable maxSupply */\n    tag_91:\n      immutable(\"0x4a06b8506ca29f0071472c073fef4bd34656e41207e20131380c952c1539f411\")\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"C/circulatingSupplyTypes.sol\":796:822  uint256 public lockedTotal */\n    tag_99:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_179\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_181\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_181:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_183\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_143\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_186\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_187\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10599:10616  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10616  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_190\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10655:10660  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10652  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10660  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n      iszero\n      tag_191\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10714:10721  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10723:10739  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10741:10746  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n    tag_191:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      tag_194\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10812:10817  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10819:10826  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10847:10852  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10852  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10854:10859  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10811  _approve */\n      tag_187\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10891  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_196\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_198\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_200\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_201\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_203\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_204\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_71\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_204:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_205\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_206\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_206:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_207\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_205:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n      tag_209\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_210\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      tag_211\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n      tag_201\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      jump\t// in\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_143:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_214\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_215\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_216\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_217\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_217:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_216:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_218\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_219\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_219:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_218:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_201:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_221\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_222\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_222:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_223)\n    tag_221:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_224\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_225\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_224:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_223:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_226\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_227)\n    tag_226:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_227:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_228\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_228:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_230:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_232:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_233:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_264\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_232\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_234:\n        /* \"#utility.yul\":641:665   */\n      tag_266\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_233\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_267\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_267:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_235:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_269\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_234\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_29:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_272\n      tag_230\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":917:1036   */\n    tag_271:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_273\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_235\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_236:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_237:\n        /* \"#utility.yul\":1346:1370   */\n      tag_276\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_236\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_32:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_278\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_237\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1710   */\n    tag_238:\n        /* \"#utility.yul\":1663:1669   */\n      0x00\n        /* \"#utility.yul\":1697:1702   */\n      dup2\n        /* \"#utility.yul\":1691:1703   */\n      mload\n        /* \"#utility.yul\":1681:1703   */\n      swap1\n      pop\n        /* \"#utility.yul\":1611:1710   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1716:1885   */\n    tag_239:\n        /* \"#utility.yul\":1800:1811   */\n      0x00\n        /* \"#utility.yul\":1834:1840   */\n      dup3\n        /* \"#utility.yul\":1829:1832   */\n      dup3\n        /* \"#utility.yul\":1822:1841   */\n      mstore\n        /* \"#utility.yul\":1874:1878   */\n      0x20\n        /* \"#utility.yul\":1869:1872   */\n      dup3\n        /* \"#utility.yul\":1865:1879   */\n      add\n        /* \"#utility.yul\":1850:1879   */\n      swap1\n      pop\n        /* \"#utility.yul\":1716:1885   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1891:2030   */\n    tag_240:\n        /* \"#utility.yul\":1980:1986   */\n      dup3\n        /* \"#utility.yul\":1975:1978   */\n      dup2\n        /* \"#utility.yul\":1970:1973   */\n      dup4\n        /* \"#utility.yul\":1964:1987   */\n      mcopy\n        /* \"#utility.yul\":2021:2022   */\n      0x00\n        /* \"#utility.yul\":2012:2018   */\n      dup4\n        /* \"#utility.yul\":2007:2010   */\n      dup4\n        /* \"#utility.yul\":2003:2019   */\n      add\n        /* \"#utility.yul\":1996:2023   */\n      mstore\n        /* \"#utility.yul\":1891:2030   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2036:2138   */\n    tag_241:\n        /* \"#utility.yul\":2077:2083   */\n      0x00\n        /* \"#utility.yul\":2128:2130   */\n      0x1f\n        /* \"#utility.yul\":2124:2131   */\n      not\n        /* \"#utility.yul\":2119:2121   */\n      0x1f\n        /* \"#utility.yul\":2112:2117   */\n      dup4\n        /* \"#utility.yul\":2108:2122   */\n      add\n        /* \"#utility.yul\":2104:2132   */\n      and\n        /* \"#utility.yul\":2094:2132   */\n      swap1\n      pop\n        /* \"#utility.yul\":2036:2138   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2144:2521   */\n    tag_242:\n        /* \"#utility.yul\":2232:2235   */\n      0x00\n        /* \"#utility.yul\":2260:2299   */\n      tag_284\n        /* \"#utility.yul\":2293:2298   */\n      dup3\n        /* \"#utility.yul\":2260:2299   */\n      tag_238\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":2315:2386   */\n      tag_285\n        /* \"#utility.yul\":2379:2385   */\n      dup2\n        /* \"#utility.yul\":2374:2377   */\n      dup6\n        /* \"#utility.yul\":2315:2386   */\n      tag_239\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":2308:2386   */\n      swap4\n      pop\n        /* \"#utility.yul\":2395:2460   */\n      tag_286\n        /* \"#utility.yul\":2453:2459   */\n      dup2\n        /* \"#utility.yul\":2448:2451   */\n      dup6\n        /* \"#utility.yul\":2441:2445   */\n      0x20\n        /* \"#utility.yul\":2434:2439   */\n      dup7\n        /* \"#utility.yul\":2430:2446   */\n      add\n        /* \"#utility.yul\":2395:2460   */\n      tag_240\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":2485:2514   */\n      tag_287\n        /* \"#utility.yul\":2507:2513   */\n      dup2\n        /* \"#utility.yul\":2485:2514   */\n      tag_241\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":2480:2483   */\n      dup5\n        /* \"#utility.yul\":2476:2515   */\n      add\n        /* \"#utility.yul\":2469:2515   */\n      swap2\n      pop\n        /* \"#utility.yul\":2236:2521   */\n      pop\n        /* \"#utility.yul\":2144:2521   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2527:2840   */\n    tag_36:\n        /* \"#utility.yul\":2640:2644   */\n      0x00\n        /* \"#utility.yul\":2678:2680   */\n      0x20\n        /* \"#utility.yul\":2667:2676   */\n      dup3\n        /* \"#utility.yul\":2663:2681   */\n      add\n        /* \"#utility.yul\":2655:2681   */\n      swap1\n      pop\n        /* \"#utility.yul\":2727:2736   */\n      dup2\n        /* \"#utility.yul\":2721:2725   */\n      dup2\n        /* \"#utility.yul\":2717:2737   */\n      sub\n        /* \"#utility.yul\":2713:2714   */\n      0x00\n        /* \"#utility.yul\":2702:2711   */\n      dup4\n        /* \"#utility.yul\":2698:2715   */\n      add\n        /* \"#utility.yul\":2691:2738   */\n      mstore\n        /* \"#utility.yul\":2755:2833   */\n      tag_289\n        /* \"#utility.yul\":2828:2832   */\n      dup2\n        /* \"#utility.yul\":2819:2825   */\n      dup5\n        /* \"#utility.yul\":2755:2833   */\n      tag_242\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":2747:2833   */\n      swap1\n      pop\n        /* \"#utility.yul\":2527:2840   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2846:2968   */\n    tag_243:\n        /* \"#utility.yul\":2919:2943   */\n      tag_291\n        /* \"#utility.yul\":2937:2942   */\n      dup2\n        /* \"#utility.yul\":2919:2943   */\n      tag_236\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":2912:2917   */\n      dup2\n        /* \"#utility.yul\":2909:2944   */\n      eq\n        /* \"#utility.yul\":2899:2962   */\n      tag_292\n      jumpi\n        /* \"#utility.yul\":2958:2959   */\n      0x00\n        /* \"#utility.yul\":2955:2956   */\n      0x00\n        /* \"#utility.yul\":2948:2960   */\n      revert\n        /* \"#utility.yul\":2899:2962   */\n    tag_292:\n        /* \"#utility.yul\":2846:2968   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2974:3113   */\n    tag_244:\n        /* \"#utility.yul\":3020:3025   */\n      0x00\n        /* \"#utility.yul\":3058:3064   */\n      dup2\n        /* \"#utility.yul\":3045:3065   */\n      calldataload\n        /* \"#utility.yul\":3036:3065   */\n      swap1\n      pop\n        /* \"#utility.yul\":3074:3107   */\n      tag_294\n        /* \"#utility.yul\":3101:3106   */\n      dup2\n        /* \"#utility.yul\":3074:3107   */\n      tag_243\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":2974:3113   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3119:3593   */\n    tag_39:\n        /* \"#utility.yul\":3187:3193   */\n      0x00\n        /* \"#utility.yul\":3195:3201   */\n      0x00\n        /* \"#utility.yul\":3244:3246   */\n      0x40\n        /* \"#utility.yul\":3232:3241   */\n      dup4\n        /* \"#utility.yul\":3223:3230   */\n      dup6\n        /* \"#utility.yul\":3219:3242   */\n      sub\n        /* \"#utility.yul\":3215:3247   */\n      slt\n        /* \"#utility.yul\":3212:3331   */\n      iszero\n      tag_296\n      jumpi\n        /* \"#utility.yul\":3250:3329   */\n      tag_297\n      tag_230\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":3212:3331   */\n    tag_296:\n        /* \"#utility.yul\":3370:3371   */\n      0x00\n        /* \"#utility.yul\":3395:3448   */\n      tag_298\n        /* \"#utility.yul\":3440:3447   */\n      dup6\n        /* \"#utility.yul\":3431:3437   */\n      dup3\n        /* \"#utility.yul\":3420:3429   */\n      dup7\n        /* \"#utility.yul\":3416:3438   */\n      add\n        /* \"#utility.yul\":3395:3448   */\n      tag_235\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":3385:3448   */\n      swap3\n      pop\n        /* \"#utility.yul\":3341:3458   */\n      pop\n        /* \"#utility.yul\":3497:3499   */\n      0x20\n        /* \"#utility.yul\":3523:3576   */\n      tag_299\n        /* \"#utility.yul\":3568:3575   */\n      dup6\n        /* \"#utility.yul\":3559:3565   */\n      dup3\n        /* \"#utility.yul\":3548:3557   */\n      dup7\n        /* \"#utility.yul\":3544:3566   */\n      add\n        /* \"#utility.yul\":3523:3576   */\n      tag_244\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":3513:3576   */\n      swap2\n      pop\n        /* \"#utility.yul\":3468:3586   */\n      pop\n        /* \"#utility.yul\":3119:3593   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3599:3689   */\n    tag_245:\n        /* \"#utility.yul\":3633:3640   */\n      0x00\n        /* \"#utility.yul\":3676:3681   */\n      dup2\n        /* \"#utility.yul\":3669:3682   */\n      iszero\n        /* \"#utility.yul\":3662:3683   */\n      iszero\n        /* \"#utility.yul\":3651:3683   */\n      swap1\n      pop\n        /* \"#utility.yul\":3599:3689   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3695:3804   */\n    tag_246:\n        /* \"#utility.yul\":3776:3797   */\n      tag_302\n        /* \"#utility.yul\":3791:3796   */\n      dup2\n        /* \"#utility.yul\":3776:3797   */\n      tag_245\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":3771:3774   */\n      dup3\n        /* \"#utility.yul\":3764:3798   */\n      mstore\n        /* \"#utility.yul\":3695:3804   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3810:4020   */\n    tag_42:\n        /* \"#utility.yul\":3897:3901   */\n      0x00\n        /* \"#utility.yul\":3935:3937   */\n      0x20\n        /* \"#utility.yul\":3924:3933   */\n      dup3\n        /* \"#utility.yul\":3920:3938   */\n      add\n        /* \"#utility.yul\":3912:3938   */\n      swap1\n      pop\n        /* \"#utility.yul\":3948:4013   */\n      tag_304\n        /* \"#utility.yul\":4010:4011   */\n      0x00\n        /* \"#utility.yul\":3999:4008   */\n      dup4\n        /* \"#utility.yul\":3995:4012   */\n      add\n        /* \"#utility.yul\":3986:3992   */\n      dup5\n        /* \"#utility.yul\":3948:4013   */\n      tag_246\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":3810:4020   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4026:4645   */\n    tag_48:\n        /* \"#utility.yul\":4103:4109   */\n      0x00\n        /* \"#utility.yul\":4111:4117   */\n      0x00\n        /* \"#utility.yul\":4119:4125   */\n      0x00\n        /* \"#utility.yul\":4168:4170   */\n      0x60\n        /* \"#utility.yul\":4156:4165   */\n      dup5\n        /* \"#utility.yul\":4147:4154   */\n      dup7\n        /* \"#utility.yul\":4143:4166   */\n      sub\n        /* \"#utility.yul\":4139:4171   */\n      slt\n        /* \"#utility.yul\":4136:4255   */\n      iszero\n      tag_306\n      jumpi\n        /* \"#utility.yul\":4174:4253   */\n      tag_307\n      tag_230\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":4136:4255   */\n    tag_306:\n        /* \"#utility.yul\":4294:4295   */\n      0x00\n        /* \"#utility.yul\":4319:4372   */\n      tag_308\n        /* \"#utility.yul\":4364:4371   */\n      dup7\n        /* \"#utility.yul\":4355:4361   */\n      dup3\n        /* \"#utility.yul\":4344:4353   */\n      dup8\n        /* \"#utility.yul\":4340:4362   */\n      add\n        /* \"#utility.yul\":4319:4372   */\n      tag_235\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":4309:4372   */\n      swap4\n      pop\n        /* \"#utility.yul\":4265:4382   */\n      pop\n        /* \"#utility.yul\":4421:4423   */\n      0x20\n        /* \"#utility.yul\":4447:4500   */\n      tag_309\n        /* \"#utility.yul\":4492:4499   */\n      dup7\n        /* \"#utility.yul\":4483:4489   */\n      dup3\n        /* \"#utility.yul\":4472:4481   */\n      dup8\n        /* \"#utility.yul\":4468:4490   */\n      add\n        /* \"#utility.yul\":4447:4500   */\n      tag_235\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":4437:4500   */\n      swap3\n      pop\n        /* \"#utility.yul\":4392:4510   */\n      pop\n        /* \"#utility.yul\":4549:4551   */\n      0x40\n        /* \"#utility.yul\":4575:4628   */\n      tag_310\n        /* \"#utility.yul\":4620:4627   */\n      dup7\n        /* \"#utility.yul\":4611:4617   */\n      dup3\n        /* \"#utility.yul\":4600:4609   */\n      dup8\n        /* \"#utility.yul\":4596:4618   */\n      add\n        /* \"#utility.yul\":4575:4628   */\n      tag_244\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":4565:4628   */\n      swap2\n      pop\n        /* \"#utility.yul\":4520:4638   */\n      pop\n        /* \"#utility.yul\":4026:4645   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4651:4737   */\n    tag_247:\n        /* \"#utility.yul\":4686:4693   */\n      0x00\n        /* \"#utility.yul\":4726:4730   */\n      0xff\n        /* \"#utility.yul\":4719:4724   */\n      dup3\n        /* \"#utility.yul\":4715:4731   */\n      and\n        /* \"#utility.yul\":4704:4731   */\n      swap1\n      pop\n        /* \"#utility.yul\":4651:4737   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4743:4855   */\n    tag_248:\n        /* \"#utility.yul\":4826:4848   */\n      tag_313\n        /* \"#utility.yul\":4842:4847   */\n      dup2\n        /* \"#utility.yul\":4826:4848   */\n      tag_247\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":4821:4824   */\n      dup3\n        /* \"#utility.yul\":4814:4849   */\n      mstore\n        /* \"#utility.yul\":4743:4855   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4861:5075   */\n    tag_57:\n        /* \"#utility.yul\":4950:4954   */\n      0x00\n        /* \"#utility.yul\":4988:4990   */\n      0x20\n        /* \"#utility.yul\":4977:4986   */\n      dup3\n        /* \"#utility.yul\":4973:4991   */\n      add\n        /* \"#utility.yul\":4965:4991   */\n      swap1\n      pop\n        /* \"#utility.yul\":5001:5068   */\n      tag_315\n        /* \"#utility.yul\":5065:5066   */\n      0x00\n        /* \"#utility.yul\":5054:5063   */\n      dup4\n        /* \"#utility.yul\":5050:5067   */\n      add\n        /* \"#utility.yul\":5041:5047   */\n      dup5\n        /* \"#utility.yul\":5001:5068   */\n      tag_248\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":4861:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5199   */\n    tag_249:\n        /* \"#utility.yul\":5168:5192   */\n      tag_317\n        /* \"#utility.yul\":5186:5191   */\n      dup2\n        /* \"#utility.yul\":5168:5192   */\n      tag_233\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":5163:5166   */\n      dup3\n        /* \"#utility.yul\":5156:5193   */\n      mstore\n        /* \"#utility.yul\":5081:5199   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5205:5427   */\n    tag_73:\n        /* \"#utility.yul\":5298:5302   */\n      0x00\n        /* \"#utility.yul\":5336:5338   */\n      0x20\n        /* \"#utility.yul\":5325:5334   */\n      dup3\n        /* \"#utility.yul\":5321:5339   */\n      add\n        /* \"#utility.yul\":5313:5339   */\n      swap1\n      pop\n        /* \"#utility.yul\":5349:5420   */\n      tag_319\n        /* \"#utility.yul\":5417:5418   */\n      0x00\n        /* \"#utility.yul\":5406:5415   */\n      dup4\n        /* \"#utility.yul\":5402:5419   */\n      add\n        /* \"#utility.yul\":5393:5399   */\n      dup5\n        /* \"#utility.yul\":5349:5420   */\n      tag_249\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":5205:5427   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5433:5907   */\n    tag_95:\n        /* \"#utility.yul\":5501:5507   */\n      0x00\n        /* \"#utility.yul\":5509:5515   */\n      0x00\n        /* \"#utility.yul\":5558:5560   */\n      0x40\n        /* \"#utility.yul\":5546:5555   */\n      dup4\n        /* \"#utility.yul\":5537:5544   */\n      dup6\n        /* \"#utility.yul\":5533:5556   */\n      sub\n        /* \"#utility.yul\":5529:5561   */\n      slt\n        /* \"#utility.yul\":5526:5645   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":5564:5643   */\n      tag_322\n      tag_230\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":5526:5645   */\n    tag_321:\n        /* \"#utility.yul\":5684:5685   */\n      0x00\n        /* \"#utility.yul\":5709:5762   */\n      tag_323\n        /* \"#utility.yul\":5754:5761   */\n      dup6\n        /* \"#utility.yul\":5745:5751   */\n      dup3\n        /* \"#utility.yul\":5734:5743   */\n      dup7\n        /* \"#utility.yul\":5730:5752   */\n      add\n        /* \"#utility.yul\":5709:5762   */\n      tag_235\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":5699:5762   */\n      swap3\n      pop\n        /* \"#utility.yul\":5655:5772   */\n      pop\n        /* \"#utility.yul\":5811:5813   */\n      0x20\n        /* \"#utility.yul\":5837:5890   */\n      tag_324\n        /* \"#utility.yul\":5882:5889   */\n      dup6\n        /* \"#utility.yul\":5873:5879   */\n      dup3\n        /* \"#utility.yul\":5862:5871   */\n      dup7\n        /* \"#utility.yul\":5858:5880   */\n      add\n        /* \"#utility.yul\":5837:5890   */\n      tag_235\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":5827:5890   */\n      swap2\n      pop\n        /* \"#utility.yul\":5782:5900   */\n      pop\n        /* \"#utility.yul\":5433:5907   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5913:6093   */\n    tag_250:\n        /* \"#utility.yul\":5961:6038   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5958:5959   */\n      0x00\n        /* \"#utility.yul\":5951:6039   */\n      mstore\n        /* \"#utility.yul\":6058:6062   */\n      0x22\n        /* \"#utility.yul\":6055:6056   */\n      0x04\n        /* \"#utility.yul\":6048:6063   */\n      mstore\n        /* \"#utility.yul\":6082:6086   */\n      0x24\n        /* \"#utility.yul\":6079:6080   */\n      0x00\n        /* \"#utility.yul\":6072:6087   */\n      revert\n        /* \"#utility.yul\":6099:6419   */\n    tag_106:\n        /* \"#utility.yul\":6143:6149   */\n      0x00\n        /* \"#utility.yul\":6180:6181   */\n      0x02\n        /* \"#utility.yul\":6174:6178   */\n      dup3\n        /* \"#utility.yul\":6170:6182   */\n      div\n        /* \"#utility.yul\":6160:6182   */\n      swap1\n      pop\n        /* \"#utility.yul\":6227:6228   */\n      0x01\n        /* \"#utility.yul\":6221:6225   */\n      dup3\n        /* \"#utility.yul\":6217:6229   */\n      and\n        /* \"#utility.yul\":6248:6266   */\n      dup1\n        /* \"#utility.yul\":6238:6319   */\n      tag_327\n      jumpi\n        /* \"#utility.yul\":6304:6308   */\n      0x7f\n        /* \"#utility.yul\":6296:6302   */\n      dup3\n        /* \"#utility.yul\":6292:6309   */\n      and\n        /* \"#utility.yul\":6282:6309   */\n      swap2\n      pop\n        /* \"#utility.yul\":6238:6319   */\n    tag_327:\n        /* \"#utility.yul\":6366:6368   */\n      0x20\n        /* \"#utility.yul\":6358:6364   */\n      dup3\n        /* \"#utility.yul\":6355:6369   */\n      lt\n        /* \"#utility.yul\":6335:6353   */\n      dup2\n        /* \"#utility.yul\":6332:6370   */\n      sub\n        /* \"#utility.yul\":6329:6413   */\n      tag_328\n      jumpi\n        /* \"#utility.yul\":6385:6403   */\n      tag_329\n      tag_250\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":6329:6413   */\n    tag_328:\n        /* \"#utility.yul\":6150:6419   */\n      pop\n        /* \"#utility.yul\":6099:6419   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6425:6605   */\n    tag_251:\n        /* \"#utility.yul\":6473:6550   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6470:6471   */\n      0x00\n        /* \"#utility.yul\":6463:6551   */\n      mstore\n        /* \"#utility.yul\":6570:6574   */\n      0x11\n        /* \"#utility.yul\":6567:6568   */\n      0x04\n        /* \"#utility.yul\":6560:6575   */\n      mstore\n        /* \"#utility.yul\":6594:6598   */\n      0x24\n        /* \"#utility.yul\":6591:6592   */\n      0x00\n        /* \"#utility.yul\":6584:6599   */\n      revert\n        /* \"#utility.yul\":6611:6802   */\n    tag_131:\n        /* \"#utility.yul\":6651:6654   */\n      0x00\n        /* \"#utility.yul\":6670:6690   */\n      tag_332\n        /* \"#utility.yul\":6688:6689   */\n      dup3\n        /* \"#utility.yul\":6670:6690   */\n      tag_236\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":6665:6690   */\n      swap2\n      pop\n        /* \"#utility.yul\":6704:6724   */\n      tag_333\n        /* \"#utility.yul\":6722:6723   */\n      dup4\n        /* \"#utility.yul\":6704:6724   */\n      tag_236\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":6699:6724   */\n      swap3\n      pop\n        /* \"#utility.yul\":6747:6748   */\n      dup3\n        /* \"#utility.yul\":6744:6745   */\n      dup3\n        /* \"#utility.yul\":6740:6749   */\n      add\n        /* \"#utility.yul\":6733:6749   */\n      swap1\n      pop\n        /* \"#utility.yul\":6768:6771   */\n      dup1\n        /* \"#utility.yul\":6765:6766   */\n      dup3\n        /* \"#utility.yul\":6762:6772   */\n      gt\n        /* \"#utility.yul\":6759:6795   */\n      iszero\n      tag_334\n      jumpi\n        /* \"#utility.yul\":6775:6793   */\n      tag_335\n      tag_251\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":6759:6795   */\n    tag_334:\n        /* \"#utility.yul\":6611:6802   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6808:6976   */\n    tag_252:\n        /* \"#utility.yul\":6948:6968   */\n      0x45786365656473206d617820737570706c790000000000000000000000000000\n        /* \"#utility.yul\":6944:6945   */\n      0x00\n        /* \"#utility.yul\":6936:6942   */\n      dup3\n        /* \"#utility.yul\":6932:6946   */\n      add\n        /* \"#utility.yul\":6925:6969   */\n      mstore\n        /* \"#utility.yul\":6808:6976   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6982:7348   */\n    tag_253:\n        /* \"#utility.yul\":7124:7127   */\n      0x00\n        /* \"#utility.yul\":7145:7212   */\n      tag_338\n        /* \"#utility.yul\":7209:7211   */\n      0x12\n        /* \"#utility.yul\":7204:7207   */\n      dup4\n        /* \"#utility.yul\":7145:7212   */\n      tag_239\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":7138:7212   */\n      swap2\n      pop\n        /* \"#utility.yul\":7221:7314   */\n      tag_339\n        /* \"#utility.yul\":7310:7313   */\n      dup3\n        /* \"#utility.yul\":7221:7314   */\n      tag_252\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":7339:7341   */\n      0x20\n        /* \"#utility.yul\":7334:7337   */\n      dup3\n        /* \"#utility.yul\":7330:7342   */\n      add\n        /* \"#utility.yul\":7323:7342   */\n      swap1\n      pop\n        /* \"#utility.yul\":6982:7348   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7354:7773   */\n    tag_134:\n        /* \"#utility.yul\":7520:7524   */\n      0x00\n        /* \"#utility.yul\":7558:7560   */\n      0x20\n        /* \"#utility.yul\":7547:7556   */\n      dup3\n        /* \"#utility.yul\":7543:7561   */\n      add\n        /* \"#utility.yul\":7535:7561   */\n      swap1\n      pop\n        /* \"#utility.yul\":7607:7616   */\n      dup2\n        /* \"#utility.yul\":7601:7605   */\n      dup2\n        /* \"#utility.yul\":7597:7617   */\n      sub\n        /* \"#utility.yul\":7593:7594   */\n      0x00\n        /* \"#utility.yul\":7582:7591   */\n      dup4\n        /* \"#utility.yul\":7578:7595   */\n      add\n        /* \"#utility.yul\":7571:7618   */\n      mstore\n        /* \"#utility.yul\":7635:7766   */\n      tag_341\n        /* \"#utility.yul\":7761:7765   */\n      dup2\n        /* \"#utility.yul\":7635:7766   */\n      tag_253\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":7627:7766   */\n      swap1\n      pop\n        /* \"#utility.yul\":7354:7773   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7779:7973   */\n    tag_148:\n        /* \"#utility.yul\":7819:7823   */\n      0x00\n        /* \"#utility.yul\":7839:7859   */\n      tag_343\n        /* \"#utility.yul\":7857:7858   */\n      dup3\n        /* \"#utility.yul\":7839:7859   */\n      tag_236\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":7834:7859   */\n      swap2\n      pop\n        /* \"#utility.yul\":7873:7893   */\n      tag_344\n        /* \"#utility.yul\":7891:7892   */\n      dup4\n        /* \"#utility.yul\":7873:7893   */\n      tag_236\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":7868:7893   */\n      swap3\n      pop\n        /* \"#utility.yul\":7917:7918   */\n      dup3\n        /* \"#utility.yul\":7914:7915   */\n      dup3\n        /* \"#utility.yul\":7910:7919   */\n      sub\n        /* \"#utility.yul\":7902:7919   */\n      swap1\n      pop\n        /* \"#utility.yul\":7941:7942   */\n      dup2\n        /* \"#utility.yul\":7935:7939   */\n      dup2\n        /* \"#utility.yul\":7932:7943   */\n      gt\n        /* \"#utility.yul\":7929:7966   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":7946:7964   */\n      tag_346\n      tag_251\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":7929:7966   */\n    tag_345:\n        /* \"#utility.yul\":7779:7973   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7979:8156   */\n    tag_254:\n        /* \"#utility.yul\":8119:8148   */\n      0x496e73756666696369656e74206c6f636b65642062616c616e63650000000000\n        /* \"#utility.yul\":8115:8116   */\n      0x00\n        /* \"#utility.yul\":8107:8113   */\n      dup3\n        /* \"#utility.yul\":8103:8117   */\n      add\n        /* \"#utility.yul\":8096:8149   */\n      mstore\n        /* \"#utility.yul\":7979:8156   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8162:8528   */\n    tag_255:\n        /* \"#utility.yul\":8304:8307   */\n      0x00\n        /* \"#utility.yul\":8325:8392   */\n      tag_349\n        /* \"#utility.yul\":8389:8391   */\n      0x1b\n        /* \"#utility.yul\":8384:8387   */\n      dup4\n        /* \"#utility.yul\":8325:8392   */\n      tag_239\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":8318:8392   */\n      swap2\n      pop\n        /* \"#utility.yul\":8401:8494   */\n      tag_350\n        /* \"#utility.yul\":8490:8493   */\n      dup3\n        /* \"#utility.yul\":8401:8494   */\n      tag_254\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":8519:8521   */\n      0x20\n        /* \"#utility.yul\":8514:8517   */\n      dup3\n        /* \"#utility.yul\":8510:8522   */\n      add\n        /* \"#utility.yul\":8503:8522   */\n      swap1\n      pop\n        /* \"#utility.yul\":8162:8528   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8534:8953   */\n    tag_160:\n        /* \"#utility.yul\":8700:8704   */\n      0x00\n        /* \"#utility.yul\":8738:8740   */\n      0x20\n        /* \"#utility.yul\":8727:8736   */\n      dup3\n        /* \"#utility.yul\":8723:8741   */\n      add\n        /* \"#utility.yul\":8715:8741   */\n      swap1\n      pop\n        /* \"#utility.yul\":8787:8796   */\n      dup2\n        /* \"#utility.yul\":8781:8785   */\n      dup2\n        /* \"#utility.yul\":8777:8797   */\n      sub\n        /* \"#utility.yul\":8773:8774   */\n      0x00\n        /* \"#utility.yul\":8762:8771   */\n      dup4\n        /* \"#utility.yul\":8758:8775   */\n      add\n        /* \"#utility.yul\":8751:8798   */\n      mstore\n        /* \"#utility.yul\":8815:8946   */\n      tag_352\n        /* \"#utility.yul\":8941:8945   */\n      dup2\n        /* \"#utility.yul\":8815:8946   */\n      tag_255\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":8807:8946   */\n      swap1\n      pop\n        /* \"#utility.yul\":8534:8953   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8959:9137   */\n    tag_256:\n        /* \"#utility.yul\":9099:9129   */\n      0x496e73756666696369656e742062616c616e636520746f206c6f636b00000000\n        /* \"#utility.yul\":9095:9096   */\n      0x00\n        /* \"#utility.yul\":9087:9093   */\n      dup3\n        /* \"#utility.yul\":9083:9097   */\n      add\n        /* \"#utility.yul\":9076:9130   */\n      mstore\n        /* \"#utility.yul\":8959:9137   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9143:9509   */\n    tag_257:\n        /* \"#utility.yul\":9285:9288   */\n      0x00\n        /* \"#utility.yul\":9306:9373   */\n      tag_355\n        /* \"#utility.yul\":9370:9372   */\n      0x1c\n        /* \"#utility.yul\":9365:9368   */\n      dup4\n        /* \"#utility.yul\":9306:9373   */\n      tag_239\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":9299:9373   */\n      swap2\n      pop\n        /* \"#utility.yul\":9382:9475   */\n      tag_356\n        /* \"#utility.yul\":9471:9474   */\n      dup3\n        /* \"#utility.yul\":9382:9475   */\n      tag_256\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":9500:9502   */\n      0x20\n        /* \"#utility.yul\":9495:9498   */\n      dup3\n        /* \"#utility.yul\":9491:9503   */\n      add\n        /* \"#utility.yul\":9484:9503   */\n      swap1\n      pop\n        /* \"#utility.yul\":9143:9509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9515:9934   */\n    tag_173:\n        /* \"#utility.yul\":9681:9685   */\n      0x00\n        /* \"#utility.yul\":9719:9721   */\n      0x20\n        /* \"#utility.yul\":9708:9717   */\n      dup3\n        /* \"#utility.yul\":9704:9722   */\n      add\n        /* \"#utility.yul\":9696:9722   */\n      swap1\n      pop\n        /* \"#utility.yul\":9768:9777   */\n      dup2\n        /* \"#utility.yul\":9762:9766   */\n      dup2\n        /* \"#utility.yul\":9758:9778   */\n      sub\n        /* \"#utility.yul\":9754:9755   */\n      0x00\n        /* \"#utility.yul\":9743:9752   */\n      dup4\n        /* \"#utility.yul\":9739:9756   */\n      add\n        /* \"#utility.yul\":9732:9779   */\n      mstore\n        /* \"#utility.yul\":9796:9927   */\n      tag_358\n        /* \"#utility.yul\":9922:9926   */\n      dup2\n        /* \"#utility.yul\":9796:9927   */\n      tag_257\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":9788:9927   */\n      swap1\n      pop\n        /* \"#utility.yul\":9515:9934   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9940:10382   */\n    tag_193:\n        /* \"#utility.yul\":10089:10093   */\n      0x00\n        /* \"#utility.yul\":10127:10129   */\n      0x60\n        /* \"#utility.yul\":10116:10125   */\n      dup3\n        /* \"#utility.yul\":10112:10130   */\n      add\n        /* \"#utility.yul\":10104:10130   */\n      swap1\n      pop\n        /* \"#utility.yul\":10140:10211   */\n      tag_360\n        /* \"#utility.yul\":10208:10209   */\n      0x00\n        /* \"#utility.yul\":10197:10206   */\n      dup4\n        /* \"#utility.yul\":10193:10210   */\n      add\n        /* \"#utility.yul\":10184:10190   */\n      dup7\n        /* \"#utility.yul\":10140:10211   */\n      tag_249\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":10221:10293   */\n      tag_361\n        /* \"#utility.yul\":10289:10291   */\n      0x20\n        /* \"#utility.yul\":10278:10287   */\n      dup4\n        /* \"#utility.yul\":10274:10292   */\n      add\n        /* \"#utility.yul\":10265:10271   */\n      dup6\n        /* \"#utility.yul\":10221:10293   */\n      tag_237\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":10303:10375   */\n      tag_362\n        /* \"#utility.yul\":10371:10373   */\n      0x40\n        /* \"#utility.yul\":10360:10369   */\n      dup4\n        /* \"#utility.yul\":10356:10374   */\n      add\n        /* \"#utility.yul\":10347:10353   */\n      dup5\n        /* \"#utility.yul\":10303:10375   */\n      tag_237\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":9940:10382   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220fce0a320d6db3eeaca8b32f95b60b0167a248f060a8f46ac97e9542ecb17078164736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_996": {
									"entryPoint": null,
									"id": 996,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 613,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 418,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 746,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256_fromMemory": {
									"entryPoint": 1338,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_4bcb321ac9090d8a353d42dcd4137791b7ae4ede1885cbffad86148322eb0287_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2353,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2513,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2234,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2528,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4bcb321ac9090d8a353d42dcd4137791b7ae4ede1885cbffad86148322eb0287__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2387,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1548,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1400,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2259,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1827,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2202,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2171,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1287,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1793,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1683,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1964,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1566,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1937,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1674,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1909,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2417,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1455,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1410,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1716,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1283,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 1581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1769,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_4bcb321ac9090d8a353d42dcd4137791b7ae4ede1885cbffad86148322eb0287": {
									"entryPoint": 2275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1593,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1725,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1296,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1762,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9318:7",
										"nodeType": "YulBlock",
										"src": "0:9318:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:32:7",
													"nodeType": "YulBlock",
													"src": "379:32:7",
													"statements": [
														{
															"nativeSrc": "389:16:7",
															"nodeType": "YulAssignment",
															"src": "389:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:7",
																"nodeType": "YulIdentifier",
																"src": "400:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:77:7"
											},
											{
												"body": {
													"nativeSrc": "460:79:7",
													"nodeType": "YulBlock",
													"src": "460:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:7",
																"nodeType": "YulBlock",
																"src": "517:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:7",
																					"nodeType": "YulLiteral",
																					"src": "526:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:7",
																					"nodeType": "YulLiteral",
																					"src": "529:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:7"
																			},
																			"nativeSrc": "519:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:7"
																		},
																		"nativeSrc": "519:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:7"
																				},
																				"nativeSrc": "490:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:7"
																		},
																		"nativeSrc": "480:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:7"
																},
																"nativeSrc": "473:43:7",
																"nodeType": "YulFunctionCall",
																"src": "473:43:7"
															},
															"nativeSrc": "470:63:7",
															"nodeType": "YulIf",
															"src": "470:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:7",
														"nodeType": "YulTypedName",
														"src": "453:5:7",
														"type": ""
													}
												],
												"src": "417:122:7"
											},
											{
												"body": {
													"nativeSrc": "608:80:7",
													"nodeType": "YulBlock",
													"src": "608:80:7",
													"statements": [
														{
															"nativeSrc": "618:22:7",
															"nodeType": "YulAssignment",
															"src": "618:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "633:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "627:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:7"
																},
																"nativeSrc": "627:13:7",
																"nodeType": "YulFunctionCall",
																"src": "627:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "618:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "676:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "649:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:7"
																},
																"nativeSrc": "649:33:7",
																"nodeType": "YulFunctionCall",
																"src": "649:33:7"
															},
															"nativeSrc": "649:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "649:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "545:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "586:6:7",
														"nodeType": "YulTypedName",
														"src": "586:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "594:3:7",
														"nodeType": "YulTypedName",
														"src": "594:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "602:5:7",
														"nodeType": "YulTypedName",
														"src": "602:5:7",
														"type": ""
													}
												],
												"src": "545:143:7"
											},
											{
												"body": {
													"nativeSrc": "788:413:7",
													"nodeType": "YulBlock",
													"src": "788:413:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "834:83:7",
																"nodeType": "YulBlock",
																"src": "834:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "836:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "836:77:7"
																			},
																			"nativeSrc": "836:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "836:79:7"
																		},
																		"nativeSrc": "836:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "836:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "809:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "809:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "818:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "818:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "805:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "805:3:7"
																		},
																		"nativeSrc": "805:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "805:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "830:2:7",
																		"nodeType": "YulLiteral",
																		"src": "830:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "801:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "801:3:7"
																},
																"nativeSrc": "801:32:7",
																"nodeType": "YulFunctionCall",
																"src": "801:32:7"
															},
															"nativeSrc": "798:119:7",
															"nodeType": "YulIf",
															"src": "798:119:7"
														},
														{
															"nativeSrc": "927:128:7",
															"nodeType": "YulBlock",
															"src": "927:128:7",
															"statements": [
																{
																	"nativeSrc": "942:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "942:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "956:1:7",
																		"nodeType": "YulLiteral",
																		"src": "956:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "946:6:7",
																			"nodeType": "YulTypedName",
																			"src": "946:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "971:74:7",
																	"nodeType": "YulAssignment",
																	"src": "971:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1017:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1017:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1028:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1028:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1013:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1013:3:7"
																				},
																				"nativeSrc": "1013:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1013:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1037:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1037:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "981:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "981:31:7"
																		},
																		"nativeSrc": "981:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "981:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "971:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "971:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1065:129:7",
															"nodeType": "YulBlock",
															"src": "1065:129:7",
															"statements": [
																{
																	"nativeSrc": "1080:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1080:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1094:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1094:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1084:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1084:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1110:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1110:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1156:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1156:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1167:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1167:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1152:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1152:3:7"
																				},
																				"nativeSrc": "1152:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1152:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1176:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1176:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1120:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1120:31:7"
																		},
																		"nativeSrc": "1120:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1120:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1110:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1110:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256_fromMemory",
												"nativeSrc": "694:507:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "750:9:7",
														"nodeType": "YulTypedName",
														"src": "750:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "761:7:7",
														"nodeType": "YulTypedName",
														"src": "761:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "773:6:7",
														"nodeType": "YulTypedName",
														"src": "773:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "781:6:7",
														"nodeType": "YulTypedName",
														"src": "781:6:7",
														"type": ""
													}
												],
												"src": "694:507:7"
											},
											{
												"body": {
													"nativeSrc": "1266:40:7",
													"nodeType": "YulBlock",
													"src": "1266:40:7",
													"statements": [
														{
															"nativeSrc": "1277:22:7",
															"nodeType": "YulAssignment",
															"src": "1277:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1293:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1293:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1287:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1287:5:7"
																},
																"nativeSrc": "1287:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1287:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1277:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1277:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1207:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1249:5:7",
														"nodeType": "YulTypedName",
														"src": "1249:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1259:6:7",
														"nodeType": "YulTypedName",
														"src": "1259:6:7",
														"type": ""
													}
												],
												"src": "1207:99:7"
											},
											{
												"body": {
													"nativeSrc": "1340:152:7",
													"nodeType": "YulBlock",
													"src": "1340:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1357:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1357:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1360:77:7",
																		"nodeType": "YulLiteral",
																		"src": "1360:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1350:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1350:6:7"
																},
																"nativeSrc": "1350:88:7",
																"nodeType": "YulFunctionCall",
																"src": "1350:88:7"
															},
															"nativeSrc": "1350:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "1350:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1454:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1454:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1457:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1457:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1447:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1447:6:7"
																},
																"nativeSrc": "1447:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1447:15:7"
															},
															"nativeSrc": "1447:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1447:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1478:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1478:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1481:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1481:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1471:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1471:6:7"
																},
																"nativeSrc": "1471:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1471:15:7"
															},
															"nativeSrc": "1471:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1471:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1312:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1312:180:7"
											},
											{
												"body": {
													"nativeSrc": "1526:152:7",
													"nodeType": "YulBlock",
													"src": "1526:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1543:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1543:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1546:77:7",
																		"nodeType": "YulLiteral",
																		"src": "1546:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1536:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1536:6:7"
																},
																"nativeSrc": "1536:88:7",
																"nodeType": "YulFunctionCall",
																"src": "1536:88:7"
															},
															"nativeSrc": "1536:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "1536:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1640:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1640:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1643:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1643:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1633:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1633:6:7"
																},
																"nativeSrc": "1633:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1633:15:7"
															},
															"nativeSrc": "1633:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1633:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1664:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1664:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1667:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1667:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1657:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1657:6:7"
																},
																"nativeSrc": "1657:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1657:15:7"
															},
															"nativeSrc": "1657:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1657:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1498:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1498:180:7"
											},
											{
												"body": {
													"nativeSrc": "1735:269:7",
													"nodeType": "YulBlock",
													"src": "1735:269:7",
													"statements": [
														{
															"nativeSrc": "1745:22:7",
															"nodeType": "YulAssignment",
															"src": "1745:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1759:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1759:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1765:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1765:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1755:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1755:3:7"
																},
																"nativeSrc": "1755:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1755:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1745:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1745:6:7"
																}
															]
														},
														{
															"nativeSrc": "1776:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1776:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1806:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1806:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1812:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1812:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1802:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1802:3:7"
																},
																"nativeSrc": "1802:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1802:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1780:18:7",
																	"nodeType": "YulTypedName",
																	"src": "1780:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1853:51:7",
																"nodeType": "YulBlock",
																"src": "1853:51:7",
																"statements": [
																	{
																		"nativeSrc": "1867:27:7",
																		"nodeType": "YulAssignment",
																		"src": "1867:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1881:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "1881:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1889:4:7",
																					"nodeType": "YulLiteral",
																					"src": "1889:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1877:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1877:3:7"
																			},
																			"nativeSrc": "1877:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1877:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1867:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1867:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1833:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "1833:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1826:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1826:6:7"
																},
																"nativeSrc": "1826:26:7",
																"nodeType": "YulFunctionCall",
																"src": "1826:26:7"
															},
															"nativeSrc": "1823:81:7",
															"nodeType": "YulIf",
															"src": "1823:81:7"
														},
														{
															"body": {
																"nativeSrc": "1956:42:7",
																"nodeType": "YulBlock",
																"src": "1956:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "1970:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "1970:16:7"
																			},
																			"nativeSrc": "1970:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1970:18:7"
																		},
																		"nativeSrc": "1970:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1970:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1920:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "1920:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1943:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1943:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1951:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1951:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1940:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1940:2:7"
																		},
																		"nativeSrc": "1940:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1940:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1917:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1917:2:7"
																},
																"nativeSrc": "1917:38:7",
																"nodeType": "YulFunctionCall",
																"src": "1917:38:7"
															},
															"nativeSrc": "1914:84:7",
															"nodeType": "YulIf",
															"src": "1914:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1684:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1719:4:7",
														"nodeType": "YulTypedName",
														"src": "1719:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1728:6:7",
														"nodeType": "YulTypedName",
														"src": "1728:6:7",
														"type": ""
													}
												],
												"src": "1684:320:7"
											},
											{
												"body": {
													"nativeSrc": "2064:87:7",
													"nodeType": "YulBlock",
													"src": "2064:87:7",
													"statements": [
														{
															"nativeSrc": "2074:11:7",
															"nodeType": "YulAssignment",
															"src": "2074:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "2082:3:7",
																"nodeType": "YulIdentifier",
																"src": "2082:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2074:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2074:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2102:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2102:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2105:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2105:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2095:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2095:6:7"
																},
																"nativeSrc": "2095:14:7",
																"nodeType": "YulFunctionCall",
																"src": "2095:14:7"
															},
															"nativeSrc": "2095:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "2095:14:7"
														},
														{
															"nativeSrc": "2118:26:7",
															"nodeType": "YulAssignment",
															"src": "2118:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2136:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2136:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2139:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2139:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2126:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "2126:9:7"
																},
																"nativeSrc": "2126:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2126:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2118:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2118:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2010:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2051:3:7",
														"nodeType": "YulTypedName",
														"src": "2051:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2059:4:7",
														"nodeType": "YulTypedName",
														"src": "2059:4:7",
														"type": ""
													}
												],
												"src": "2010:141:7"
											},
											{
												"body": {
													"nativeSrc": "2201:49:7",
													"nodeType": "YulBlock",
													"src": "2201:49:7",
													"statements": [
														{
															"nativeSrc": "2211:33:7",
															"nodeType": "YulAssignment",
															"src": "2211:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2229:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2229:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2236:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2236:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2225:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2225:3:7"
																		},
																		"nativeSrc": "2225:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2225:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2241:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2241:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2221:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2221:3:7"
																},
																"nativeSrc": "2221:23:7",
																"nodeType": "YulFunctionCall",
																"src": "2221:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2211:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2211:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2157:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2184:5:7",
														"nodeType": "YulTypedName",
														"src": "2184:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2194:6:7",
														"nodeType": "YulTypedName",
														"src": "2194:6:7",
														"type": ""
													}
												],
												"src": "2157:93:7"
											},
											{
												"body": {
													"nativeSrc": "2309:54:7",
													"nodeType": "YulBlock",
													"src": "2309:54:7",
													"statements": [
														{
															"nativeSrc": "2319:37:7",
															"nodeType": "YulAssignment",
															"src": "2319:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2344:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2344:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2350:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2350:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2340:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2340:3:7"
																},
																"nativeSrc": "2340:16:7",
																"nodeType": "YulFunctionCall",
																"src": "2340:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2319:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "2319:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2256:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2284:4:7",
														"nodeType": "YulTypedName",
														"src": "2284:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2290:5:7",
														"nodeType": "YulTypedName",
														"src": "2290:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2300:8:7",
														"nodeType": "YulTypedName",
														"src": "2300:8:7",
														"type": ""
													}
												],
												"src": "2256:107:7"
											},
											{
												"body": {
													"nativeSrc": "2445:317:7",
													"nodeType": "YulBlock",
													"src": "2445:317:7",
													"statements": [
														{
															"nativeSrc": "2455:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2455:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2476:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "2476:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2488:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2488:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2472:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2472:3:7"
																},
																"nativeSrc": "2472:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2472:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2459:9:7",
																	"nodeType": "YulTypedName",
																	"src": "2459:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2499:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2499:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2530:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2530:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2541:66:7",
																		"nodeType": "YulLiteral",
																		"src": "2541:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2511:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2511:18:7"
																},
																"nativeSrc": "2511:97:7",
																"nodeType": "YulFunctionCall",
																"src": "2511:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2503:4:7",
																	"nodeType": "YulTypedName",
																	"src": "2503:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2617:51:7",
															"nodeType": "YulAssignment",
															"src": "2617:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2648:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2648:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2659:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "2659:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2629:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2629:18:7"
																},
																"nativeSrc": "2629:39:7",
																"nodeType": "YulFunctionCall",
																"src": "2629:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2617:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "2617:8:7"
																}
															]
														},
														{
															"nativeSrc": "2677:30:7",
															"nodeType": "YulAssignment",
															"src": "2677:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2690:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2690:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2701:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "2701:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2697:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2697:3:7"
																		},
																		"nativeSrc": "2697:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2697:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2686:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2686:3:7"
																},
																"nativeSrc": "2686:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2686:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2677:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2677:5:7"
																}
															]
														},
														{
															"nativeSrc": "2716:40:7",
															"nodeType": "YulAssignment",
															"src": "2716:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2729:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2729:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2740:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "2740:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2750:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "2750:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2736:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2736:3:7"
																		},
																		"nativeSrc": "2736:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2736:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2726:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2726:2:7"
																},
																"nativeSrc": "2726:30:7",
																"nodeType": "YulFunctionCall",
																"src": "2726:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2716:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2716:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2369:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2406:5:7",
														"nodeType": "YulTypedName",
														"src": "2406:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2413:10:7",
														"nodeType": "YulTypedName",
														"src": "2413:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2425:8:7",
														"nodeType": "YulTypedName",
														"src": "2425:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2438:6:7",
														"nodeType": "YulTypedName",
														"src": "2438:6:7",
														"type": ""
													}
												],
												"src": "2369:393:7"
											},
											{
												"body": {
													"nativeSrc": "2800:28:7",
													"nodeType": "YulBlock",
													"src": "2800:28:7",
													"statements": [
														{
															"nativeSrc": "2810:12:7",
															"nodeType": "YulAssignment",
															"src": "2810:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "2817:5:7",
																"nodeType": "YulIdentifier",
																"src": "2817:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2810:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2810:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2768:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2786:5:7",
														"nodeType": "YulTypedName",
														"src": "2786:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2796:3:7",
														"nodeType": "YulTypedName",
														"src": "2796:3:7",
														"type": ""
													}
												],
												"src": "2768:60:7"
											},
											{
												"body": {
													"nativeSrc": "2894:82:7",
													"nodeType": "YulBlock",
													"src": "2894:82:7",
													"statements": [
														{
															"nativeSrc": "2904:66:7",
															"nodeType": "YulAssignment",
															"src": "2904:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2962:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2962:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2944:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2944:17:7"
																				},
																				"nativeSrc": "2944:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2944:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2935:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "2935:8:7"
																		},
																		"nativeSrc": "2935:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2935:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2917:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "2917:17:7"
																},
																"nativeSrc": "2917:53:7",
																"nodeType": "YulFunctionCall",
																"src": "2917:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2904:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "2904:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2834:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2874:5:7",
														"nodeType": "YulTypedName",
														"src": "2874:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2884:9:7",
														"nodeType": "YulTypedName",
														"src": "2884:9:7",
														"type": ""
													}
												],
												"src": "2834:142:7"
											},
											{
												"body": {
													"nativeSrc": "3029:28:7",
													"nodeType": "YulBlock",
													"src": "3029:28:7",
													"statements": [
														{
															"nativeSrc": "3039:12:7",
															"nodeType": "YulAssignment",
															"src": "3039:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "3046:5:7",
																"nodeType": "YulIdentifier",
																"src": "3046:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3039:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3039:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "2982:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3015:5:7",
														"nodeType": "YulTypedName",
														"src": "3015:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3025:3:7",
														"nodeType": "YulTypedName",
														"src": "3025:3:7",
														"type": ""
													}
												],
												"src": "2982:75:7"
											},
											{
												"body": {
													"nativeSrc": "3139:193:7",
													"nodeType": "YulBlock",
													"src": "3139:193:7",
													"statements": [
														{
															"nativeSrc": "3149:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3149:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3204:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "3204:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3173:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "3173:30:7"
																},
																"nativeSrc": "3173:39:7",
																"nodeType": "YulFunctionCall",
																"src": "3173:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3153:16:7",
																	"nodeType": "YulTypedName",
																	"src": "3153:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3228:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3228:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3268:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "3268:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3262:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "3262:5:7"
																				},
																				"nativeSrc": "3262:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3262:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3275:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3275:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3307:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "3307:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3283:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "3283:23:7"
																				},
																				"nativeSrc": "3283:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3283:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3234:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "3234:27:7"
																		},
																		"nativeSrc": "3234:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3234:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3221:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3221:6:7"
																},
																"nativeSrc": "3221:105:7",
																"nodeType": "YulFunctionCall",
																"src": "3221:105:7"
															},
															"nativeSrc": "3221:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "3221:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3063:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3116:4:7",
														"nodeType": "YulTypedName",
														"src": "3116:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3122:6:7",
														"nodeType": "YulTypedName",
														"src": "3122:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3130:7:7",
														"nodeType": "YulTypedName",
														"src": "3130:7:7",
														"type": ""
													}
												],
												"src": "3063:269:7"
											},
											{
												"body": {
													"nativeSrc": "3387:24:7",
													"nodeType": "YulBlock",
													"src": "3387:24:7",
													"statements": [
														{
															"nativeSrc": "3397:8:7",
															"nodeType": "YulAssignment",
															"src": "3397:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "3404:1:7",
																"nodeType": "YulLiteral",
																"src": "3404:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3397:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3397:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3338:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3383:3:7",
														"nodeType": "YulTypedName",
														"src": "3383:3:7",
														"type": ""
													}
												],
												"src": "3338:73:7"
											},
											{
												"body": {
													"nativeSrc": "3470:136:7",
													"nodeType": "YulBlock",
													"src": "3470:136:7",
													"statements": [
														{
															"nativeSrc": "3480:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3480:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3494:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "3494:30:7"
																},
																"nativeSrc": "3494:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3494:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3484:6:7",
																	"nodeType": "YulTypedName",
																	"src": "3484:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3579:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3579:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3585:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3585:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3593:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3593:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3535:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3535:43:7"
																},
																"nativeSrc": "3535:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3535:65:7"
															},
															"nativeSrc": "3535:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3535:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3417:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3456:4:7",
														"nodeType": "YulTypedName",
														"src": "3456:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3462:6:7",
														"nodeType": "YulTypedName",
														"src": "3462:6:7",
														"type": ""
													}
												],
												"src": "3417:189:7"
											},
											{
												"body": {
													"nativeSrc": "3662:136:7",
													"nodeType": "YulBlock",
													"src": "3662:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3729:63:7",
																"nodeType": "YulBlock",
																"src": "3729:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3773:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "3773:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3780:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3780:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3743:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "3743:29:7"
																			},
																			"nativeSrc": "3743:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3743:39:7"
																		},
																		"nativeSrc": "3743:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3743:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3682:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3682:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3689:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3689:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3679:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3679:2:7"
																},
																"nativeSrc": "3679:14:7",
																"nodeType": "YulFunctionCall",
																"src": "3679:14:7"
															},
															"nativeSrc": "3672:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3694:26:7",
																"nodeType": "YulBlock",
																"src": "3694:26:7",
																"statements": [
																	{
																		"nativeSrc": "3696:22:7",
																		"nodeType": "YulAssignment",
																		"src": "3696:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3709:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "3709:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3716:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3716:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3705:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3705:3:7"
																			},
																			"nativeSrc": "3705:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3705:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3696:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3696:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3676:2:7",
																"nodeType": "YulBlock",
																"src": "3676:2:7",
																"statements": []
															},
															"src": "3672:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3612:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3650:5:7",
														"nodeType": "YulTypedName",
														"src": "3650:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3657:3:7",
														"nodeType": "YulTypedName",
														"src": "3657:3:7",
														"type": ""
													}
												],
												"src": "3612:186:7"
											},
											{
												"body": {
													"nativeSrc": "3883:464:7",
													"nodeType": "YulBlock",
													"src": "3883:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3909:431:7",
																"nodeType": "YulBlock",
																"src": "3909:431:7",
																"statements": [
																	{
																		"nativeSrc": "3923:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3923:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "3971:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "3971:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "3939:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "3939:31:7"
																			},
																			"nativeSrc": "3939:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3939:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "3927:8:7",
																				"nodeType": "YulTypedName",
																				"src": "3927:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "3990:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3990:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4013:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "4013:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4041:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "4041:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4023:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "4023:17:7"
																					},
																					"nativeSrc": "4023:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4023:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4009:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4009:3:7"
																			},
																			"nativeSrc": "4009:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4009:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "3994:11:7",
																				"nodeType": "YulTypedName",
																				"src": "3994:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4210:27:7",
																			"nodeType": "YulBlock",
																			"src": "4210:27:7",
																			"statements": [
																				{
																					"nativeSrc": "4212:23:7",
																					"nodeType": "YulAssignment",
																					"src": "4212:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4227:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "4227:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4212:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "4212:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4194:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "4194:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4206:2:7",
																					"nodeType": "YulLiteral",
																					"src": "4206:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4191:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "4191:2:7"
																			},
																			"nativeSrc": "4191:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4191:18:7"
																		},
																		"nativeSrc": "4188:49:7",
																		"nodeType": "YulIf",
																		"src": "4188:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4279:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "4279:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4296:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "4296:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4324:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4324:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4306:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "4306:17:7"
																							},
																							"nativeSrc": "4306:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "4306:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4292:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4292:3:7"
																					},
																					"nativeSrc": "4292:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4292:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4250:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "4250:28:7"
																			},
																			"nativeSrc": "4250:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4250:80:7"
																		},
																		"nativeSrc": "4250:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4250:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3900:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3900:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3905:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3905:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3897:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3897:2:7"
																},
																"nativeSrc": "3897:11:7",
																"nodeType": "YulFunctionCall",
																"src": "3897:11:7"
															},
															"nativeSrc": "3894:446:7",
															"nodeType": "YulIf",
															"src": "3894:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "3804:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3859:5:7",
														"nodeType": "YulTypedName",
														"src": "3859:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3866:3:7",
														"nodeType": "YulTypedName",
														"src": "3866:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3871:10:7",
														"nodeType": "YulTypedName",
														"src": "3871:10:7",
														"type": ""
													}
												],
												"src": "3804:543:7"
											},
											{
												"body": {
													"nativeSrc": "4416:54:7",
													"nodeType": "YulBlock",
													"src": "4416:54:7",
													"statements": [
														{
															"nativeSrc": "4426:37:7",
															"nodeType": "YulAssignment",
															"src": "4426:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4451:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4451:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4457:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4457:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4447:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4447:3:7"
																},
																"nativeSrc": "4447:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4447:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4426:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "4426:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4353:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4391:4:7",
														"nodeType": "YulTypedName",
														"src": "4391:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4397:5:7",
														"nodeType": "YulTypedName",
														"src": "4397:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4407:8:7",
														"nodeType": "YulTypedName",
														"src": "4407:8:7",
														"type": ""
													}
												],
												"src": "4353:117:7"
											},
											{
												"body": {
													"nativeSrc": "4527:118:7",
													"nodeType": "YulBlock",
													"src": "4527:118:7",
													"statements": [
														{
															"nativeSrc": "4537:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4537:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4586:1:7",
																						"nodeType": "YulLiteral",
																						"src": "4586:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4589:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "4589:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4582:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4582:3:7"
																				},
																				"nativeSrc": "4582:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4582:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4601:1:7",
																						"nodeType": "YulLiteral",
																						"src": "4601:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4597:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4597:3:7"
																				},
																				"nativeSrc": "4597:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4597:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4553:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "4553:28:7"
																		},
																		"nativeSrc": "4553:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4553:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4549:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4549:3:7"
																},
																"nativeSrc": "4549:56:7",
																"nodeType": "YulFunctionCall",
																"src": "4549:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4541:4:7",
																	"nodeType": "YulTypedName",
																	"src": "4541:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4614:25:7",
															"nodeType": "YulAssignment",
															"src": "4614:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4628:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4628:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4634:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4634:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4624:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4624:3:7"
																},
																"nativeSrc": "4624:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4624:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4614:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4614:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4476:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4504:4:7",
														"nodeType": "YulTypedName",
														"src": "4504:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4510:5:7",
														"nodeType": "YulTypedName",
														"src": "4510:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4520:6:7",
														"nodeType": "YulTypedName",
														"src": "4520:6:7",
														"type": ""
													}
												],
												"src": "4476:169:7"
											},
											{
												"body": {
													"nativeSrc": "4731:214:7",
													"nodeType": "YulBlock",
													"src": "4731:214:7",
													"statements": [
														{
															"nativeSrc": "4864:37:7",
															"nodeType": "YulAssignment",
															"src": "4864:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4891:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4891:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4897:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4897:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "4872:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "4872:18:7"
																},
																"nativeSrc": "4872:29:7",
																"nodeType": "YulFunctionCall",
																"src": "4872:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4864:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4864:4:7"
																}
															]
														},
														{
															"nativeSrc": "4910:29:7",
															"nodeType": "YulAssignment",
															"src": "4910:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4921:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4921:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4931:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4931:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "4934:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4934:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "4927:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4927:3:7"
																		},
																		"nativeSrc": "4927:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4927:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4918:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4918:2:7"
																},
																"nativeSrc": "4918:21:7",
																"nodeType": "YulFunctionCall",
																"src": "4918:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "4910:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4910:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4650:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4712:4:7",
														"nodeType": "YulTypedName",
														"src": "4712:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4718:3:7",
														"nodeType": "YulTypedName",
														"src": "4718:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4726:4:7",
														"nodeType": "YulTypedName",
														"src": "4726:4:7",
														"type": ""
													}
												],
												"src": "4650:295:7"
											},
											{
												"body": {
													"nativeSrc": "5042:1303:7",
													"nodeType": "YulBlock",
													"src": "5042:1303:7",
													"statements": [
														{
															"nativeSrc": "5053:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5053:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5100:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5100:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5067:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "5067:32:7"
																},
																"nativeSrc": "5067:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5067:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5057:6:7",
																	"nodeType": "YulTypedName",
																	"src": "5057:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5189:22:7",
																"nodeType": "YulBlock",
																"src": "5189:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5191:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "5191:16:7"
																			},
																			"nativeSrc": "5191:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5191:18:7"
																		},
																		"nativeSrc": "5191:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5191:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5161:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5161:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5169:18:7",
																		"nodeType": "YulLiteral",
																		"src": "5169:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5158:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5158:2:7"
																},
																"nativeSrc": "5158:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5158:30:7"
															},
															"nativeSrc": "5155:56:7",
															"nodeType": "YulIf",
															"src": "5155:56:7"
														},
														{
															"nativeSrc": "5221:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5221:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5267:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5267:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5261:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "5261:5:7"
																		},
																		"nativeSrc": "5261:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5261:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5235:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "5235:25:7"
																},
																"nativeSrc": "5235:38:7",
																"nodeType": "YulFunctionCall",
																"src": "5235:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5225:6:7",
																	"nodeType": "YulTypedName",
																	"src": "5225:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5366:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5366:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5372:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5372:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5380:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5380:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5320:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "5320:45:7"
																},
																"nativeSrc": "5320:67:7",
																"nodeType": "YulFunctionCall",
																"src": "5320:67:7"
															},
															"nativeSrc": "5320:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "5320:67:7"
														},
														{
															"nativeSrc": "5397:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5397:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "5414:1:7",
																"nodeType": "YulLiteral",
																"src": "5414:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5401:9:7",
																	"nodeType": "YulTypedName",
																	"src": "5401:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5425:17:7",
															"nodeType": "YulAssignment",
															"src": "5425:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "5438:4:7",
																"nodeType": "YulLiteral",
																"src": "5438:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5425:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5425:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5489:611:7",
																		"nodeType": "YulBlock",
																		"src": "5489:611:7",
																		"statements": [
																			{
																				"nativeSrc": "5503:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5503:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5522:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "5522:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5534:4:7",
																									"nodeType": "YulLiteral",
																									"src": "5534:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5530:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "5530:3:7"
																							},
																							"nativeSrc": "5530:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "5530:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5518:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "5518:3:7"
																					},
																					"nativeSrc": "5518:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5518:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5507:7:7",
																						"nodeType": "YulTypedName",
																						"src": "5507:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5554:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5554:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5600:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "5600:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5568:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "5568:31:7"
																					},
																					"nativeSrc": "5568:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5568:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5558:6:7",
																						"nodeType": "YulTypedName",
																						"src": "5558:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5618:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5618:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5627:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5627:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5622:1:7",
																						"nodeType": "YulTypedName",
																						"src": "5622:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5686:163:7",
																					"nodeType": "YulBlock",
																					"src": "5686:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5711:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "5711:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5729:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "5729:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5734:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "5734:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5725:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "5725:3:7"
																												},
																												"nativeSrc": "5725:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "5725:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5719:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "5719:5:7"
																										},
																										"nativeSrc": "5719:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "5719:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5704:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "5704:6:7"
																								},
																								"nativeSrc": "5704:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5704:42:7"
																							},
																							"nativeSrc": "5704:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "5704:42:7"
																						},
																						{
																							"nativeSrc": "5763:24:7",
																							"nodeType": "YulAssignment",
																							"src": "5763:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5777:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "5777:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5785:1:7",
																										"nodeType": "YulLiteral",
																										"src": "5785:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5773:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "5773:3:7"
																								},
																								"nativeSrc": "5773:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5773:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5763:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "5763:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "5804:31:7",
																							"nodeType": "YulAssignment",
																							"src": "5804:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "5821:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "5821:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5832:2:7",
																										"nodeType": "YulLiteral",
																										"src": "5832:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5817:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "5817:3:7"
																								},
																								"nativeSrc": "5817:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5817:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "5804:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "5804:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5652:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "5652:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5655:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "5655:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5649:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "5649:2:7"
																					},
																					"nativeSrc": "5649:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5649:14:7"
																				},
																				"nativeSrc": "5641:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5664:21:7",
																					"nodeType": "YulBlock",
																					"src": "5664:21:7",
																					"statements": [
																						{
																							"nativeSrc": "5666:17:7",
																							"nodeType": "YulAssignment",
																							"src": "5666:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5675:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "5675:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5678:4:7",
																										"nodeType": "YulLiteral",
																										"src": "5678:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5671:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "5671:3:7"
																								},
																								"nativeSrc": "5671:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5671:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5666:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "5666:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5645:3:7",
																					"nodeType": "YulBlock",
																					"src": "5645:3:7",
																					"statements": []
																				},
																				"src": "5641:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "5885:156:7",
																					"nodeType": "YulBlock",
																					"src": "5885:156:7",
																					"statements": [
																						{
																							"nativeSrc": "5903:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "5903:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5930:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "5930:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5935:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "5935:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5926:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "5926:3:7"
																										},
																										"nativeSrc": "5926:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "5926:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5920:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "5920:5:7"
																								},
																								"nativeSrc": "5920:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5920:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "5907:9:7",
																									"nodeType": "YulTypedName",
																									"src": "5907:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5970:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "5970:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "5997:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "5997:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6012:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "6012:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6020:4:7",
																														"nodeType": "YulLiteral",
																														"src": "6020:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6008:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "6008:3:7"
																												},
																												"nativeSrc": "6008:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "6008:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "5978:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "5978:18:7"
																										},
																										"nativeSrc": "5978:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "5978:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5963:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "5963:6:7"
																								},
																								"nativeSrc": "5963:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5963:64:7"
																							},
																							"nativeSrc": "5963:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "5963:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5868:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "5868:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "5877:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "5877:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5865:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "5865:2:7"
																					},
																					"nativeSrc": "5865:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5865:19:7"
																				},
																				"nativeSrc": "5862:179:7",
																				"nodeType": "YulIf",
																				"src": "5862:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6061:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "6061:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6075:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "6075:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6083:1:7",
																											"nodeType": "YulLiteral",
																											"src": "6083:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6071:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "6071:3:7"
																									},
																									"nativeSrc": "6071:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "6071:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6087:1:7",
																									"nodeType": "YulLiteral",
																									"src": "6087:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6067:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "6067:3:7"
																							},
																							"nativeSrc": "6067:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "6067:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6054:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6054:6:7"
																					},
																					"nativeSrc": "6054:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6054:36:7"
																				},
																				"nativeSrc": "6054:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "6054:36:7"
																			}
																		]
																	},
																	"nativeSrc": "5482:618:7",
																	"nodeType": "YulCase",
																	"src": "5482:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5487:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5487:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6117:222:7",
																		"nodeType": "YulBlock",
																		"src": "6117:222:7",
																		"statements": [
																			{
																				"nativeSrc": "6131:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6131:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6144:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6144:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6135:5:7",
																						"nodeType": "YulTypedName",
																						"src": "6135:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6168:67:7",
																					"nodeType": "YulBlock",
																					"src": "6168:67:7",
																					"statements": [
																						{
																							"nativeSrc": "6186:35:7",
																							"nodeType": "YulAssignment",
																							"src": "6186:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6205:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "6205:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6210:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "6210:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6201:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "6201:3:7"
																										},
																										"nativeSrc": "6201:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "6201:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6195:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6195:5:7"
																								},
																								"nativeSrc": "6195:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6195:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6186:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6186:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6161:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "6161:6:7"
																				},
																				"nativeSrc": "6158:77:7",
																				"nodeType": "YulIf",
																				"src": "6158:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6255:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "6255:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6314:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6314:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6321:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "6321:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6261:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "6261:52:7"
																							},
																							"nativeSrc": "6261:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "6261:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6248:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6248:6:7"
																					},
																					"nativeSrc": "6248:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6248:81:7"
																				},
																				"nativeSrc": "6248:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "6248:81:7"
																			}
																		]
																	},
																	"nativeSrc": "6109:230:7",
																	"nodeType": "YulCase",
																	"src": "6109:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5462:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5462:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5470:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5470:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5459:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5459:2:7"
																},
																"nativeSrc": "5459:14:7",
																"nodeType": "YulFunctionCall",
																"src": "5459:14:7"
															},
															"nativeSrc": "5452:887:7",
															"nodeType": "YulSwitch",
															"src": "5452:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "4950:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5031:4:7",
														"nodeType": "YulTypedName",
														"src": "5031:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5037:3:7",
														"nodeType": "YulTypedName",
														"src": "5037:3:7",
														"type": ""
													}
												],
												"src": "4950:1395:7"
											},
											{
												"body": {
													"nativeSrc": "6396:81:7",
													"nodeType": "YulBlock",
													"src": "6396:81:7",
													"statements": [
														{
															"nativeSrc": "6406:65:7",
															"nodeType": "YulAssignment",
															"src": "6406:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6421:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6421:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6428:42:7",
																		"nodeType": "YulLiteral",
																		"src": "6428:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6417:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6417:3:7"
																},
																"nativeSrc": "6417:54:7",
																"nodeType": "YulFunctionCall",
																"src": "6417:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6406:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "6406:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "6351:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6378:5:7",
														"nodeType": "YulTypedName",
														"src": "6378:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6388:7:7",
														"nodeType": "YulTypedName",
														"src": "6388:7:7",
														"type": ""
													}
												],
												"src": "6351:126:7"
											},
											{
												"body": {
													"nativeSrc": "6528:51:7",
													"nodeType": "YulBlock",
													"src": "6528:51:7",
													"statements": [
														{
															"nativeSrc": "6538:35:7",
															"nodeType": "YulAssignment",
															"src": "6538:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6567:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6567:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "6549:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "6549:17:7"
																},
																"nativeSrc": "6549:24:7",
																"nodeType": "YulFunctionCall",
																"src": "6549:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6538:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "6538:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "6483:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6510:5:7",
														"nodeType": "YulTypedName",
														"src": "6510:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6520:7:7",
														"nodeType": "YulTypedName",
														"src": "6520:7:7",
														"type": ""
													}
												],
												"src": "6483:96:7"
											},
											{
												"body": {
													"nativeSrc": "6650:53:7",
													"nodeType": "YulBlock",
													"src": "6650:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6667:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6667:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6690:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6690:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6672:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "6672:17:7"
																		},
																		"nativeSrc": "6672:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6672:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6660:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6660:6:7"
																},
																"nativeSrc": "6660:37:7",
																"nodeType": "YulFunctionCall",
																"src": "6660:37:7"
															},
															"nativeSrc": "6660:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "6660:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6585:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6638:5:7",
														"nodeType": "YulTypedName",
														"src": "6638:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6645:3:7",
														"nodeType": "YulTypedName",
														"src": "6645:3:7",
														"type": ""
													}
												],
												"src": "6585:118:7"
											},
											{
												"body": {
													"nativeSrc": "6807:124:7",
													"nodeType": "YulBlock",
													"src": "6807:124:7",
													"statements": [
														{
															"nativeSrc": "6817:26:7",
															"nodeType": "YulAssignment",
															"src": "6817:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6829:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6829:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6840:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6840:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6825:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6825:3:7"
																},
																"nativeSrc": "6825:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6825:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6817:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6817:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6897:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6897:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6910:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6910:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6921:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6921:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6906:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6906:3:7"
																		},
																		"nativeSrc": "6906:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6906:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6853:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6853:43:7"
																},
																"nativeSrc": "6853:71:7",
																"nodeType": "YulFunctionCall",
																"src": "6853:71:7"
															},
															"nativeSrc": "6853:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "6853:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6709:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6779:9:7",
														"nodeType": "YulTypedName",
														"src": "6779:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6791:6:7",
														"nodeType": "YulTypedName",
														"src": "6791:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6802:4:7",
														"nodeType": "YulTypedName",
														"src": "6802:4:7",
														"type": ""
													}
												],
												"src": "6709:222:7"
											},
											{
												"body": {
													"nativeSrc": "7033:73:7",
													"nodeType": "YulBlock",
													"src": "7033:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7050:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7050:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7055:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7055:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7043:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7043:6:7"
																},
																"nativeSrc": "7043:19:7",
																"nodeType": "YulFunctionCall",
																"src": "7043:19:7"
															},
															"nativeSrc": "7043:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "7043:19:7"
														},
														{
															"nativeSrc": "7071:29:7",
															"nodeType": "YulAssignment",
															"src": "7071:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7090:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7090:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7095:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7095:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7086:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7086:3:7"
																},
																"nativeSrc": "7086:14:7",
																"nodeType": "YulFunctionCall",
																"src": "7086:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "7071:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "7071:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "6937:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7005:3:7",
														"nodeType": "YulTypedName",
														"src": "7005:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7010:6:7",
														"nodeType": "YulTypedName",
														"src": "7010:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "7021:11:7",
														"nodeType": "YulTypedName",
														"src": "7021:11:7",
														"type": ""
													}
												],
												"src": "6937:169:7"
											},
											{
												"body": {
													"nativeSrc": "7218:117:7",
													"nodeType": "YulBlock",
													"src": "7218:117:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7240:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7240:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7248:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7248:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7236:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7236:3:7"
																		},
																		"nativeSrc": "7236:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7236:14:7"
																	},
																	{
																		"hexValue": "496e697469616c20737570706c79206d757374206265203c3d206d6178207375",
																		"kind": "string",
																		"nativeSrc": "7252:34:7",
																		"nodeType": "YulLiteral",
																		"src": "7252:34:7",
																		"type": "",
																		"value": "Initial supply must be <= max su"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7229:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7229:6:7"
																},
																"nativeSrc": "7229:58:7",
																"nodeType": "YulFunctionCall",
																"src": "7229:58:7"
															},
															"nativeSrc": "7229:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "7229:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7308:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7308:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7316:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7316:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7304:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7304:3:7"
																		},
																		"nativeSrc": "7304:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7304:15:7"
																	},
																	{
																		"hexValue": "70706c79",
																		"kind": "string",
																		"nativeSrc": "7321:6:7",
																		"nodeType": "YulLiteral",
																		"src": "7321:6:7",
																		"type": "",
																		"value": "pply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7297:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7297:6:7"
																},
																"nativeSrc": "7297:31:7",
																"nodeType": "YulFunctionCall",
																"src": "7297:31:7"
															},
															"nativeSrc": "7297:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "7297:31:7"
														}
													]
												},
												"name": "store_literal_in_memory_4bcb321ac9090d8a353d42dcd4137791b7ae4ede1885cbffad86148322eb0287",
												"nativeSrc": "7112:223:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7210:6:7",
														"nodeType": "YulTypedName",
														"src": "7210:6:7",
														"type": ""
													}
												],
												"src": "7112:223:7"
											},
											{
												"body": {
													"nativeSrc": "7487:220:7",
													"nodeType": "YulBlock",
													"src": "7487:220:7",
													"statements": [
														{
															"nativeSrc": "7497:74:7",
															"nodeType": "YulAssignment",
															"src": "7497:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7563:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7563:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7568:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7568:2:7",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7504:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "7504:58:7"
																},
																"nativeSrc": "7504:67:7",
																"nodeType": "YulFunctionCall",
																"src": "7504:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7497:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7497:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7669:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7669:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4bcb321ac9090d8a353d42dcd4137791b7ae4ede1885cbffad86148322eb0287",
																	"nativeSrc": "7580:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "7580:88:7"
																},
																"nativeSrc": "7580:93:7",
																"nodeType": "YulFunctionCall",
																"src": "7580:93:7"
															},
															"nativeSrc": "7580:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "7580:93:7"
														},
														{
															"nativeSrc": "7682:19:7",
															"nodeType": "YulAssignment",
															"src": "7682:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7693:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7693:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7698:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7698:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7689:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7689:3:7"
																},
																"nativeSrc": "7689:12:7",
																"nodeType": "YulFunctionCall",
																"src": "7689:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7682:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7682:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4bcb321ac9090d8a353d42dcd4137791b7ae4ede1885cbffad86148322eb0287_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7341:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7475:3:7",
														"nodeType": "YulTypedName",
														"src": "7475:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7483:3:7",
														"nodeType": "YulTypedName",
														"src": "7483:3:7",
														"type": ""
													}
												],
												"src": "7341:366:7"
											},
											{
												"body": {
													"nativeSrc": "7884:248:7",
													"nodeType": "YulBlock",
													"src": "7884:248:7",
													"statements": [
														{
															"nativeSrc": "7894:26:7",
															"nodeType": "YulAssignment",
															"src": "7894:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7906:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7906:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7917:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7917:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7902:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7902:3:7"
																},
																"nativeSrc": "7902:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7902:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7894:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7894:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7941:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7941:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7952:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7952:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7937:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7937:3:7"
																		},
																		"nativeSrc": "7937:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7937:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7960:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "7960:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7966:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7966:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7956:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7956:3:7"
																		},
																		"nativeSrc": "7956:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7956:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7930:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7930:6:7"
																},
																"nativeSrc": "7930:47:7",
																"nodeType": "YulFunctionCall",
																"src": "7930:47:7"
															},
															"nativeSrc": "7930:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "7930:47:7"
														},
														{
															"nativeSrc": "7986:139:7",
															"nodeType": "YulAssignment",
															"src": "7986:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8120:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8120:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4bcb321ac9090d8a353d42dcd4137791b7ae4ede1885cbffad86148322eb0287_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7994:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "7994:124:7"
																},
																"nativeSrc": "7994:131:7",
																"nodeType": "YulFunctionCall",
																"src": "7994:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7986:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7986:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4bcb321ac9090d8a353d42dcd4137791b7ae4ede1885cbffad86148322eb0287__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7713:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7864:9:7",
														"nodeType": "YulTypedName",
														"src": "7864:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7879:4:7",
														"nodeType": "YulTypedName",
														"src": "7879:4:7",
														"type": ""
													}
												],
												"src": "7713:419:7"
											},
											{
												"body": {
													"nativeSrc": "8166:152:7",
													"nodeType": "YulBlock",
													"src": "8166:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8183:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8183:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8186:77:7",
																		"nodeType": "YulLiteral",
																		"src": "8186:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8176:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8176:6:7"
																},
																"nativeSrc": "8176:88:7",
																"nodeType": "YulFunctionCall",
																"src": "8176:88:7"
															},
															"nativeSrc": "8176:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "8176:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8280:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8280:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8283:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8283:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8273:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8273:6:7"
																},
																"nativeSrc": "8273:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8273:15:7"
															},
															"nativeSrc": "8273:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8273:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8304:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8304:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8307:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8307:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8297:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8297:6:7"
																},
																"nativeSrc": "8297:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8297:15:7"
															},
															"nativeSrc": "8297:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8297:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8138:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "8138:180:7"
											},
											{
												"body": {
													"nativeSrc": "8368:147:7",
													"nodeType": "YulBlock",
													"src": "8368:147:7",
													"statements": [
														{
															"nativeSrc": "8378:25:7",
															"nodeType": "YulAssignment",
															"src": "8378:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8401:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8401:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8383:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8383:17:7"
																},
																"nativeSrc": "8383:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8383:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8378:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8378:1:7"
																}
															]
														},
														{
															"nativeSrc": "8412:25:7",
															"nodeType": "YulAssignment",
															"src": "8412:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8435:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8435:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8417:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8417:17:7"
																},
																"nativeSrc": "8417:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8417:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8412:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8412:1:7"
																}
															]
														},
														{
															"nativeSrc": "8446:16:7",
															"nodeType": "YulAssignment",
															"src": "8446:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8457:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8457:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8460:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8460:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8453:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8453:3:7"
																},
																"nativeSrc": "8453:9:7",
																"nodeType": "YulFunctionCall",
																"src": "8453:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8446:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8446:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8486:22:7",
																"nodeType": "YulBlock",
																"src": "8486:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8488:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8488:16:7"
																			},
																			"nativeSrc": "8488:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8488:18:7"
																		},
																		"nativeSrc": "8488:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8488:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8478:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8478:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8481:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8481:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8475:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8475:2:7"
																},
																"nativeSrc": "8475:10:7",
																"nodeType": "YulFunctionCall",
																"src": "8475:10:7"
															},
															"nativeSrc": "8472:36:7",
															"nodeType": "YulIf",
															"src": "8472:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8324:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8355:1:7",
														"nodeType": "YulTypedName",
														"src": "8355:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8358:1:7",
														"nodeType": "YulTypedName",
														"src": "8358:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8364:3:7",
														"nodeType": "YulTypedName",
														"src": "8364:3:7",
														"type": ""
													}
												],
												"src": "8324:191:7"
											},
											{
												"body": {
													"nativeSrc": "8586:53:7",
													"nodeType": "YulBlock",
													"src": "8586:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8603:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8603:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8626:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8626:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "8608:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "8608:17:7"
																		},
																		"nativeSrc": "8608:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8608:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8596:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8596:6:7"
																},
																"nativeSrc": "8596:37:7",
																"nodeType": "YulFunctionCall",
																"src": "8596:37:7"
															},
															"nativeSrc": "8596:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "8596:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "8521:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8574:5:7",
														"nodeType": "YulTypedName",
														"src": "8574:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8581:3:7",
														"nodeType": "YulTypedName",
														"src": "8581:3:7",
														"type": ""
													}
												],
												"src": "8521:118:7"
											},
											{
												"body": {
													"nativeSrc": "8799:288:7",
													"nodeType": "YulBlock",
													"src": "8799:288:7",
													"statements": [
														{
															"nativeSrc": "8809:26:7",
															"nodeType": "YulAssignment",
															"src": "8809:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8821:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8821:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8832:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8832:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8817:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8817:3:7"
																},
																"nativeSrc": "8817:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8817:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8809:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8809:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8889:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8889:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8902:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8902:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8913:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8913:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8898:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8898:3:7"
																		},
																		"nativeSrc": "8898:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8898:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8845:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "8845:43:7"
																},
																"nativeSrc": "8845:71:7",
																"nodeType": "YulFunctionCall",
																"src": "8845:71:7"
															},
															"nativeSrc": "8845:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "8845:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8970:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8970:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8983:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8983:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8994:2:7",
																				"nodeType": "YulLiteral",
																				"src": "8994:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8979:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8979:3:7"
																		},
																		"nativeSrc": "8979:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8979:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8926:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "8926:43:7"
																},
																"nativeSrc": "8926:72:7",
																"nodeType": "YulFunctionCall",
																"src": "8926:72:7"
															},
															"nativeSrc": "8926:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "8926:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9052:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9052:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9065:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9065:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9076:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9076:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9061:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9061:3:7"
																		},
																		"nativeSrc": "9061:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9061:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9008:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9008:43:7"
																},
																"nativeSrc": "9008:72:7",
																"nodeType": "YulFunctionCall",
																"src": "9008:72:7"
															},
															"nativeSrc": "9008:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "9008:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "8645:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8755:9:7",
														"nodeType": "YulTypedName",
														"src": "8755:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8767:6:7",
														"nodeType": "YulTypedName",
														"src": "8767:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8775:6:7",
														"nodeType": "YulTypedName",
														"src": "8775:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8783:6:7",
														"nodeType": "YulTypedName",
														"src": "8783:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8794:4:7",
														"nodeType": "YulTypedName",
														"src": "8794:4:7",
														"type": ""
													}
												],
												"src": "8645:442:7"
											},
											{
												"body": {
													"nativeSrc": "9191:124:7",
													"nodeType": "YulBlock",
													"src": "9191:124:7",
													"statements": [
														{
															"nativeSrc": "9201:26:7",
															"nodeType": "YulAssignment",
															"src": "9201:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9213:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9213:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9224:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9224:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9209:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9209:3:7"
																},
																"nativeSrc": "9209:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9209:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9201:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9201:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9281:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9281:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9294:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9294:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9305:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9305:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9290:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9290:3:7"
																		},
																		"nativeSrc": "9290:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9290:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9237:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9237:43:7"
																},
																"nativeSrc": "9237:71:7",
																"nodeType": "YulFunctionCall",
																"src": "9237:71:7"
															},
															"nativeSrc": "9237:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "9237:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "9093:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9163:9:7",
														"nodeType": "YulTypedName",
														"src": "9163:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9175:6:7",
														"nodeType": "YulTypedName",
														"src": "9175:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9186:4:7",
														"nodeType": "YulTypedName",
														"src": "9186:4:7",
														"type": ""
													}
												],
												"src": "9093:222:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_4bcb321ac9090d8a353d42dcd4137791b7ae4ede1885cbffad86148322eb0287(memPtr) {\n\n        mstore(add(memPtr, 0), \"Initial supply must be <= max su\")\n\n        mstore(add(memPtr, 32), \"pply\")\n\n    }\n\n    function abi_encode_t_stringliteral_4bcb321ac9090d8a353d42dcd4137791b7ae4ede1885cbffad86148322eb0287_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_4bcb321ac9090d8a353d42dcd4137791b7ae4ede1885cbffad86148322eb0287(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4bcb321ac9090d8a353d42dcd4137791b7ae4ede1885cbffad86148322eb0287__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4bcb321ac9090d8a353d42dcd4137791b7ae4ede1885cbffad86148322eb0287_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561000f575f5ffd5b506040516121953803806121958339818101604052810190610031919061053a565b336040518060400160405280601e81526020017f43697263756c6174696e67537570706c79546f6b656e457874656e64656400008152506040518060400160405280600481526020017f435354450000000000000000000000000000000000000000000000000000000081525081600390816100ad91906107ac565b5080600490816100bd91906107ac565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610130575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161012791906108ba565b60405180910390fd5b61013f816101a260201b60201c565b5080821115610183576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017a90610953565b60405180910390fd5b806080818152505061019b338361026560201b60201c565b5050610a2e565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036102d5575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016102cc91906108ba565b60405180910390fd5b6102e65f83836102ea60201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361033a578060025f82825461032e919061099e565b92505081905550610408565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156103c3578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016103ba939291906109e0565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361044f578060025f8282540392505081905550610499565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516104f69190610a15565b60405180910390a3505050565b5f5ffd5b5f819050919050565b61051981610507565b8114610523575f5ffd5b50565b5f8151905061053481610510565b92915050565b5f5f604083850312156105505761054f610503565b5b5f61055d85828601610526565b925050602061056e85828601610526565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806105f357607f821691505b602082108103610606576106056105af565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026106687fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261062d565b610672868361062d565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6106ad6106a86106a384610507565b61068a565b610507565b9050919050565b5f819050919050565b6106c683610693565b6106da6106d2826106b4565b848454610639565b825550505050565b5f5f905090565b6106f16106e2565b6106fc8184846106bd565b505050565b5b8181101561071f576107145f826106e9565b600181019050610702565b5050565b601f821115610764576107358161060c565b61073e8461061e565b8101602085101561074d578190505b6107616107598561061e565b830182610701565b50505b505050565b5f82821c905092915050565b5f6107845f1984600802610769565b1980831691505092915050565b5f61079c8383610775565b9150826002028217905092915050565b6107b582610578565b67ffffffffffffffff8111156107ce576107cd610582565b5b6107d882546105dc565b6107e3828285610723565b5f60209050601f831160018114610814575f8415610802578287015190505b61080c8582610791565b865550610873565b601f1984166108228661060c565b5f5b8281101561084957848901518255600182019150602085019450602081019050610824565b868310156108665784890151610862601f891682610775565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6108a48261087b565b9050919050565b6108b48161089a565b82525050565b5f6020820190506108cd5f8301846108ab565b92915050565b5f82825260208201905092915050565b7f496e697469616c20737570706c79206d757374206265203c3d206d61782073755f8201527f70706c7900000000000000000000000000000000000000000000000000000000602082015250565b5f61093d6024836108d3565b9150610948826108e3565b604082019050919050565b5f6020820190508181035f83015261096a81610931565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6109a882610507565b91506109b383610507565b92508282019050808211156109cb576109ca610971565b5b92915050565b6109da81610507565b82525050565b5f6060820190506109f35f8301866108ab565b610a0060208301856109d1565b610a0d60408301846109d1565b949350505050565b5f602082019050610a285f8301846109d1565b92915050565b608051611741610a545f395f818161050001528181610536015261096401526117415ff3fe608060405234801561000f575f5ffd5b5060043610610135575f3560e01c8063715018a6116100b6578063a9059cbb1161007a578063a9059cbb1461032b578063b1c255861461035b578063d5abeb0114610377578063dd62ed3e14610395578063f145c73b146103c5578063f2fde38b146103e357610135565b8063715018a6146102ab5780638da5cb5b146102b55780639358928b146102d357806395d89b41146102f15780639d564d9a1461030f57610135565b8063252e65b2116100fd578063252e65b214610205578063313ce5671461022357806340c10f191461024157806352b8ab351461025d57806370a082311461027b57610135565b80630483a7f61461013957806306fdde0314610169578063095ea7b31461018757806318160ddd146101b757806323b872dd146101d5575b5f5ffd5b610153600480360381019061014e919061123d565b6103ff565b6040516101609190611280565b60405180910390f35b610171610414565b60405161017e9190611309565b60405180910390f35b6101a1600480360381019061019c9190611353565b6104a4565b6040516101ae91906113ab565b60405180910390f35b6101bf6104c6565b6040516101cc9190611280565b60405180910390f35b6101ef60048036038101906101ea91906113c4565b6104cf565b6040516101fc91906113ab565b60405180910390f35b61020d6104fd565b60405161021a9190611280565b60405180910390f35b61022b610524565b604051610238919061142f565b60405180910390f35b61025b60048036038101906102569190611353565b61052c565b005b6102656105b7565b6040516102729190611280565b60405180910390f35b6102956004803603810190610290919061123d565b6105c0565b6040516102a29190611280565b60405180910390f35b6102b3610605565b005b6102bd610618565b6040516102ca9190611457565b60405180910390f35b6102db610640565b6040516102e89190611280565b60405180910390f35b6102f961065b565b6040516103069190611309565b60405180910390f35b61032960048036038101906103249190611353565b6106eb565b005b61034560048036038101906103409190611353565b610830565b60405161035291906113ab565b60405180910390f35b61037560048036038101906103709190611353565b610852565b005b61037f610962565b60405161038c9190611280565b60405180910390f35b6103af60048036038101906103aa9190611470565b610986565b6040516103bc9190611280565b60405180910390f35b6103cd610a08565b6040516103da9190611280565b60405180910390f35b6103fd60048036038101906103f8919061123d565b610a0e565b005b6006602052805f5260405f205f915090505481565b606060038054610423906114db565b80601f016020809104026020016040519081016040528092919081815260200182805461044f906114db565b801561049a5780601f106104715761010080835404028352916020019161049a565b820191905f5260205f20905b81548152906001019060200180831161047d57829003601f168201915b5050505050905090565b5f5f6104ae610a92565b90506104bb818585610a99565b600191505092915050565b5f600254905090565b5f5f6104d9610a92565b90506104e6858285610aab565b6104f1858585610b3e565b60019150509392505050565b5f7f0000000000000000000000000000000000000000000000000000000000000000905090565b5f6012905090565b610534610c2e565b7f00000000000000000000000000000000000000000000000000000000000000008161055e6104c6565b6105689190611538565b11156105a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a0906115b5565b60405180910390fd5b6105b38282610cb5565b5050565b5f600754905090565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61060d610c2e565b6106165f610d34565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f60075461064c6104c6565b61065691906115d3565b905090565b60606004805461066a906114db565b80601f0160208091040260200160405190810160405280929190818152602001828054610696906114db565b80156106e15780601f106106b8576101008083540402835291602001916106e1565b820191905f5260205f20905b8154815290600101906020018083116106c457829003601f168201915b5050505050905090565b6106f3610c2e565b8060065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541015610773576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076a90611650565b60405180910390fd5b8060065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546107bf91906115d3565b925050819055508060075f8282546107d791906115d3565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167fe7b379c6c1fa169e9079c25e9143b127637eef8ec8c9d5c06ddb4ab3e1195888826040516108249190611280565b60405180910390a25050565b5f5f61083a610a92565b9050610847818585610b3e565b600191505092915050565b61085a610c2e565b80610864836105c0565b10156108a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089c906116b8565b60405180910390fd5b8060065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546108f19190611538565b925050819055508060075f8282546109099190611538565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167fac87f20a77d28ee8bbb58ec87ea8fa968b3393efae1a368fd50b767c2847391c826040516109569190611280565b60405180910390a25050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b60075481565b610a16610c2e565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a86575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610a7d9190611457565b60405180910390fd5b610a8f81610d34565b50565b5f33905090565b610aa68383836001610df7565b505050565b5f610ab68484610986565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610b385781811015610b29578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610b20939291906116d6565b60405180910390fd5b610b3784848484035f610df7565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610bae575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610ba59190611457565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c1e575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610c159190611457565b60405180910390fd5b610c29838383610fc6565b505050565b610c36610a92565b73ffffffffffffffffffffffffffffffffffffffff16610c54610618565b73ffffffffffffffffffffffffffffffffffffffff1614610cb357610c77610a92565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610caa9190611457565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d25575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610d1c9190611457565b60405180910390fd5b610d305f8383610fc6565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610e67575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610e5e9190611457565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ed7575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610ece9190611457565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610fc0578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610fb79190611280565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611016578060025f82825461100a9190611538565b925050819055506110e4565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561109f578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611096939291906116d6565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361112b578060025f8282540392505081905550611175565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516111d29190611280565b60405180910390a3505050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61120c826111e3565b9050919050565b61121c81611202565b8114611226575f5ffd5b50565b5f8135905061123781611213565b92915050565b5f60208284031215611252576112516111df565b5b5f61125f84828501611229565b91505092915050565b5f819050919050565b61127a81611268565b82525050565b5f6020820190506112935f830184611271565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6112db82611299565b6112e581856112a3565b93506112f58185602086016112b3565b6112fe816112c1565b840191505092915050565b5f6020820190508181035f83015261132181846112d1565b905092915050565b61133281611268565b811461133c575f5ffd5b50565b5f8135905061134d81611329565b92915050565b5f5f60408385031215611369576113686111df565b5b5f61137685828601611229565b92505060206113878582860161133f565b9150509250929050565b5f8115159050919050565b6113a581611391565b82525050565b5f6020820190506113be5f83018461139c565b92915050565b5f5f5f606084860312156113db576113da6111df565b5b5f6113e886828701611229565b93505060206113f986828701611229565b925050604061140a8682870161133f565b9150509250925092565b5f60ff82169050919050565b61142981611414565b82525050565b5f6020820190506114425f830184611420565b92915050565b61145181611202565b82525050565b5f60208201905061146a5f830184611448565b92915050565b5f5f60408385031215611486576114856111df565b5b5f61149385828601611229565b92505060206114a485828601611229565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806114f257607f821691505b602082108103611505576115046114ae565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61154282611268565b915061154d83611268565b92508282019050808211156115655761156461150b565b5b92915050565b7f45786365656473206d617820737570706c7900000000000000000000000000005f82015250565b5f61159f6012836112a3565b91506115aa8261156b565b602082019050919050565b5f6020820190508181035f8301526115cc81611593565b9050919050565b5f6115dd82611268565b91506115e883611268565b9250828203905081811115611600576115ff61150b565b5b92915050565b7f496e73756666696369656e74206c6f636b65642062616c616e636500000000005f82015250565b5f61163a601b836112a3565b915061164582611606565b602082019050919050565b5f6020820190508181035f8301526116678161162e565b9050919050565b7f496e73756666696369656e742062616c616e636520746f206c6f636b000000005f82015250565b5f6116a2601c836112a3565b91506116ad8261166e565b602082019050919050565b5f6020820190508181035f8301526116cf81611696565b9050919050565b5f6060820190506116e95f830186611448565b6116f66020830185611271565b6117036040830184611271565b94935050505056fea2646970667358221220fce0a320d6db3eeaca8b32f95b60b0167a248f060a8f46ac97e9542ecb17078164736f6c634300081d0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2195 CODESIZE SUB DUP1 PUSH2 0x2195 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x53A JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43697263756C6174696E67537570706C79546F6B656E457874656E6465640000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4353544500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x7AC JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x7AC JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x130 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127 SWAP2 SWAP1 PUSH2 0x8BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13F DUP2 PUSH2 0x1A2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP1 DUP3 GT ISZERO PUSH2 0x183 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17A SWAP1 PUSH2 0x953 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x80 DUP2 DUP2 MSTORE POP POP PUSH2 0x19B CALLER DUP4 PUSH2 0x265 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0xA2E JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2D5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x8BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2E6 PUSH0 DUP4 DUP4 PUSH2 0x2EA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x33A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x32E SWAP2 SWAP1 PUSH2 0x99E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x408 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x3C3 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x9E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x44F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x499 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x4F6 SWAP2 SWAP1 PUSH2 0xA15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x519 DUP2 PUSH2 0x507 JUMP JUMPDEST DUP2 EQ PUSH2 0x523 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x534 DUP2 PUSH2 0x510 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x550 JUMPI PUSH2 0x54F PUSH2 0x503 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x55D DUP6 DUP3 DUP7 ADD PUSH2 0x526 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x56E DUP6 DUP3 DUP7 ADD PUSH2 0x526 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x5F3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x606 JUMPI PUSH2 0x605 PUSH2 0x5AF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x668 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x62D JUMP JUMPDEST PUSH2 0x672 DUP7 DUP4 PUSH2 0x62D JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6AD PUSH2 0x6A8 PUSH2 0x6A3 DUP5 PUSH2 0x507 JUMP JUMPDEST PUSH2 0x68A JUMP JUMPDEST PUSH2 0x507 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6C6 DUP4 PUSH2 0x693 JUMP JUMPDEST PUSH2 0x6DA PUSH2 0x6D2 DUP3 PUSH2 0x6B4 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x639 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6F1 PUSH2 0x6E2 JUMP JUMPDEST PUSH2 0x6FC DUP2 DUP5 DUP5 PUSH2 0x6BD JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x71F JUMPI PUSH2 0x714 PUSH0 DUP3 PUSH2 0x6E9 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x702 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x764 JUMPI PUSH2 0x735 DUP2 PUSH2 0x60C JUMP JUMPDEST PUSH2 0x73E DUP5 PUSH2 0x61E JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x74D JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x761 PUSH2 0x759 DUP6 PUSH2 0x61E JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x701 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x784 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x769 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x79C DUP4 DUP4 PUSH2 0x775 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7B5 DUP3 PUSH2 0x578 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7CE JUMPI PUSH2 0x7CD PUSH2 0x582 JUMP JUMPDEST JUMPDEST PUSH2 0x7D8 DUP3 SLOAD PUSH2 0x5DC JUMP JUMPDEST PUSH2 0x7E3 DUP3 DUP3 DUP6 PUSH2 0x723 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x814 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x802 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x80C DUP6 DUP3 PUSH2 0x791 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x873 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x822 DUP7 PUSH2 0x60C JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x849 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x824 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x866 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x862 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x775 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8A4 DUP3 PUSH2 0x87B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8B4 DUP2 PUSH2 0x89A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8CD PUSH0 DUP4 ADD DUP5 PUSH2 0x8AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E697469616C20737570706C79206D757374206265203C3D206D6178207375 PUSH0 DUP3 ADD MSTORE PUSH32 0x70706C7900000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x93D PUSH1 0x24 DUP4 PUSH2 0x8D3 JUMP JUMPDEST SWAP2 POP PUSH2 0x948 DUP3 PUSH2 0x8E3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x96A DUP2 PUSH2 0x931 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x9A8 DUP3 PUSH2 0x507 JUMP JUMPDEST SWAP2 POP PUSH2 0x9B3 DUP4 PUSH2 0x507 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x9CB JUMPI PUSH2 0x9CA PUSH2 0x971 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9DA DUP2 PUSH2 0x507 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x9F3 PUSH0 DUP4 ADD DUP7 PUSH2 0x8AB JUMP JUMPDEST PUSH2 0xA00 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x9D1 JUMP JUMPDEST PUSH2 0xA0D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x9D1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA28 PUSH0 DUP4 ADD DUP5 PUSH2 0x9D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1741 PUSH2 0xA54 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x500 ADD MSTORE DUP2 DUP2 PUSH2 0x536 ADD MSTORE PUSH2 0x964 ADD MSTORE PUSH2 0x1741 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x135 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0xB1C25586 EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x377 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0xF145C73B EQ PUSH2 0x3C5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3E3 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x9358928B EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0x9D564D9A EQ PUSH2 0x30F JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x252E65B2 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x252E65B2 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x52B8AB35 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x27B JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x483A7F6 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D5 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x153 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x123D JUMP JUMPDEST PUSH2 0x3FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH2 0x414 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x1309 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x1353 JUMP JUMPDEST PUSH2 0x4A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x13AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH2 0x4C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x13C4 JUMP JUMPDEST PUSH2 0x4CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x13AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20D PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22B PUSH2 0x524 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x238 SWAP2 SWAP1 PUSH2 0x142F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x1353 JUMP JUMPDEST PUSH2 0x52C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x265 PUSH2 0x5B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x295 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x123D JUMP JUMPDEST PUSH2 0x5C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B3 PUSH2 0x605 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BD PUSH2 0x618 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x1457 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DB PUSH2 0x640 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F9 PUSH2 0x65B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x1309 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x329 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x1353 JUMP JUMPDEST PUSH2 0x6EB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x345 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x340 SWAP2 SWAP1 PUSH2 0x1353 JUMP JUMPDEST PUSH2 0x830 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x13AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x375 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x1353 JUMP JUMPDEST PUSH2 0x852 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37F PUSH2 0x962 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0x1470 JUMP JUMPDEST PUSH2 0x986 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CD PUSH2 0xA08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DA SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F8 SWAP2 SWAP1 PUSH2 0x123D JUMP JUMPDEST PUSH2 0xA0E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x423 SWAP1 PUSH2 0x14DB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x44F SWAP1 PUSH2 0x14DB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x49A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x471 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x49A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x47D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x4AE PUSH2 0xA92 JUMP JUMPDEST SWAP1 POP PUSH2 0x4BB DUP2 DUP6 DUP6 PUSH2 0xA99 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x4D9 PUSH2 0xA92 JUMP JUMPDEST SWAP1 POP PUSH2 0x4E6 DUP6 DUP3 DUP6 PUSH2 0xAAB JUMP JUMPDEST PUSH2 0x4F1 DUP6 DUP6 DUP6 PUSH2 0xB3E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x534 PUSH2 0xC2E JUMP JUMPDEST PUSH32 0x0 DUP2 PUSH2 0x55E PUSH2 0x4C6 JUMP JUMPDEST PUSH2 0x568 SWAP2 SWAP1 PUSH2 0x1538 JUMP JUMPDEST GT ISZERO PUSH2 0x5A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A0 SWAP1 PUSH2 0x15B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5B3 DUP3 DUP3 PUSH2 0xCB5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x60D PUSH2 0xC2E JUMP JUMPDEST PUSH2 0x616 PUSH0 PUSH2 0xD34 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x7 SLOAD PUSH2 0x64C PUSH2 0x4C6 JUMP JUMPDEST PUSH2 0x656 SWAP2 SWAP1 PUSH2 0x15D3 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x66A SWAP1 PUSH2 0x14DB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x696 SWAP1 PUSH2 0x14DB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6E1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6B8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6E1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6C4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6F3 PUSH2 0xC2E JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x773 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76A SWAP1 PUSH2 0x1650 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7BF SWAP2 SWAP1 PUSH2 0x15D3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7D7 SWAP2 SWAP1 PUSH2 0x15D3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE7B379C6C1FA169E9079C25E9143B127637EEF8EC8C9D5C06DDB4AB3E1195888 DUP3 PUSH1 0x40 MLOAD PUSH2 0x824 SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x83A PUSH2 0xA92 JUMP JUMPDEST SWAP1 POP PUSH2 0x847 DUP2 DUP6 DUP6 PUSH2 0xB3E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x85A PUSH2 0xC2E JUMP JUMPDEST DUP1 PUSH2 0x864 DUP4 PUSH2 0x5C0 JUMP JUMPDEST LT ISZERO PUSH2 0x8A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89C SWAP1 PUSH2 0x16B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8F1 SWAP2 SWAP1 PUSH2 0x1538 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x909 SWAP2 SWAP1 PUSH2 0x1538 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xAC87F20A77D28EE8BBB58EC87EA8FA968B3393EFAE1A368FD50B767C2847391C DUP3 PUSH1 0x40 MLOAD PUSH2 0x956 SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xA16 PUSH2 0xC2E JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA86 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA7D SWAP2 SWAP1 PUSH2 0x1457 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA8F DUP2 PUSH2 0xD34 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xAA6 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xDF7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xAB6 DUP5 DUP5 PUSH2 0x986 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xB38 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xB29 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB20 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB37 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xDF7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBAE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA5 SWAP2 SWAP1 PUSH2 0x1457 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC1E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC15 SWAP2 SWAP1 PUSH2 0x1457 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC29 DUP4 DUP4 DUP4 PUSH2 0xFC6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xC36 PUSH2 0xA92 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC54 PUSH2 0x618 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCB3 JUMPI PUSH2 0xC77 PUSH2 0xA92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCAA SWAP2 SWAP1 PUSH2 0x1457 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD25 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD1C SWAP2 SWAP1 PUSH2 0x1457 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD30 PUSH0 DUP4 DUP4 PUSH2 0xFC6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE67 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE5E SWAP2 SWAP1 PUSH2 0x1457 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xED7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xECE SWAP2 SWAP1 PUSH2 0x1457 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xFC0 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xFB7 SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1016 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x100A SWAP2 SWAP1 PUSH2 0x1538 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x10E4 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x109F JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1096 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x112B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1175 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x11D2 SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x120C DUP3 PUSH2 0x11E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x121C DUP2 PUSH2 0x1202 JUMP JUMPDEST DUP2 EQ PUSH2 0x1226 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1237 DUP2 PUSH2 0x1213 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1252 JUMPI PUSH2 0x1251 PUSH2 0x11DF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x125F DUP5 DUP3 DUP6 ADD PUSH2 0x1229 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x127A DUP2 PUSH2 0x1268 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1293 PUSH0 DUP4 ADD DUP5 PUSH2 0x1271 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12DB DUP3 PUSH2 0x1299 JUMP JUMPDEST PUSH2 0x12E5 DUP2 DUP6 PUSH2 0x12A3 JUMP JUMPDEST SWAP4 POP PUSH2 0x12F5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x12B3 JUMP JUMPDEST PUSH2 0x12FE DUP2 PUSH2 0x12C1 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1321 DUP2 DUP5 PUSH2 0x12D1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1332 DUP2 PUSH2 0x1268 JUMP JUMPDEST DUP2 EQ PUSH2 0x133C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x134D DUP2 PUSH2 0x1329 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1369 JUMPI PUSH2 0x1368 PUSH2 0x11DF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1376 DUP6 DUP3 DUP7 ADD PUSH2 0x1229 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1387 DUP6 DUP3 DUP7 ADD PUSH2 0x133F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13A5 DUP2 PUSH2 0x1391 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13BE PUSH0 DUP4 ADD DUP5 PUSH2 0x139C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13DB JUMPI PUSH2 0x13DA PUSH2 0x11DF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13E8 DUP7 DUP3 DUP8 ADD PUSH2 0x1229 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x13F9 DUP7 DUP3 DUP8 ADD PUSH2 0x1229 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x140A DUP7 DUP3 DUP8 ADD PUSH2 0x133F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1429 DUP2 PUSH2 0x1414 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1442 PUSH0 DUP4 ADD DUP5 PUSH2 0x1420 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1451 DUP2 PUSH2 0x1202 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x146A PUSH0 DUP4 ADD DUP5 PUSH2 0x1448 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1486 JUMPI PUSH2 0x1485 PUSH2 0x11DF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1493 DUP6 DUP3 DUP7 ADD PUSH2 0x1229 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14A4 DUP6 DUP3 DUP7 ADD PUSH2 0x1229 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x14F2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1505 JUMPI PUSH2 0x1504 PUSH2 0x14AE JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1542 DUP3 PUSH2 0x1268 JUMP JUMPDEST SWAP2 POP PUSH2 0x154D DUP4 PUSH2 0x1268 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1565 JUMPI PUSH2 0x1564 PUSH2 0x150B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45786365656473206D617820737570706C790000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x159F PUSH1 0x12 DUP4 PUSH2 0x12A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x15AA DUP3 PUSH2 0x156B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x15CC DUP2 PUSH2 0x1593 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15DD DUP3 PUSH2 0x1268 JUMP JUMPDEST SWAP2 POP PUSH2 0x15E8 DUP4 PUSH2 0x1268 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1600 JUMPI PUSH2 0x15FF PUSH2 0x150B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206C6F636B65642062616C616E63650000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x163A PUSH1 0x1B DUP4 PUSH2 0x12A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1645 DUP3 PUSH2 0x1606 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1667 DUP2 PUSH2 0x162E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E636520746F206C6F636B00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x16A2 PUSH1 0x1C DUP4 PUSH2 0x12A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x16AD DUP3 PUSH2 0x166E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16CF DUP2 PUSH2 0x1696 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x16E9 PUSH0 DUP4 ADD DUP7 PUSH2 0x1448 JUMP JUMPDEST PUSH2 0x16F6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1271 JUMP JUMPDEST PUSH2 0x1703 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1271 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC RJUMP 0xA320 0xD6 0xDB RETURNDATACOPY 0xEA 0xCA DUP12 ORIGIN EXTDELEGATECALL JUMPDEST PUSH1 0xB0 AND PUSH27 0x248F060A8F46AC97E9542ECB17078164736F6C634300081D003300 ",
							"sourceMap": "456:3058:6:-:0;;;1165:313;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1293:10;1601:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1345:10:6::2;1327:14;:28;;1319:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;1418:10;1406:22;;;;::::0;::::2;1438:33;1444:10;1456:14;1438:5;;;:33;;:::i;:::-;1165:313:::0;;456:3058;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7458:208:2:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;88:117:7:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:507::-;773:6;781;830:2;818:9;809:7;805:23;801:32;798:119;;;836:79;;:::i;:::-;798:119;956:1;981:64;1037:7;1028:6;1017:9;1013:22;981:64;:::i;:::-;971:74;;927:128;1094:2;1120:64;1176:7;1167:6;1156:9;1152:22;1120:64;:::i;:::-;1110:74;;1065:129;694:507;;;;;:::o;1207:99::-;1259:6;1293:5;1287:12;1277:22;;1207:99;;;:::o;1312:180::-;1360:77;1357:1;1350:88;1457:4;1454:1;1447:15;1481:4;1478:1;1471:15;1498:180;1546:77;1543:1;1536:88;1643:4;1640:1;1633:15;1667:4;1664:1;1657:15;1684:320;1728:6;1765:1;1759:4;1755:12;1745:22;;1812:1;1806:4;1802:12;1833:18;1823:81;;1889:4;1881:6;1877:17;1867:27;;1823:81;1951:2;1943:6;1940:14;1920:18;1917:38;1914:84;;1970:18;;:::i;:::-;1914:84;1735:269;1684:320;;;:::o;2010:141::-;2059:4;2082:3;2074:11;;2105:3;2102:1;2095:14;2139:4;2136:1;2126:18;2118:26;;2010:141;;;:::o;2157:93::-;2194:6;2241:2;2236;2229:5;2225:14;2221:23;2211:33;;2157:93;;;:::o;2256:107::-;2300:8;2350:5;2344:4;2340:16;2319:37;;2256:107;;;;:::o;2369:393::-;2438:6;2488:1;2476:10;2472:18;2511:97;2541:66;2530:9;2511:97;:::i;:::-;2629:39;2659:8;2648:9;2629:39;:::i;:::-;2617:51;;2701:4;2697:9;2690:5;2686:21;2677:30;;2750:4;2740:8;2736:19;2729:5;2726:30;2716:40;;2445:317;;2369:393;;;;;:::o;2768:60::-;2796:3;2817:5;2810:12;;2768:60;;;:::o;2834:142::-;2884:9;2917:53;2935:34;2944:24;2962:5;2944:24;:::i;:::-;2935:34;:::i;:::-;2917:53;:::i;:::-;2904:66;;2834:142;;;:::o;2982:75::-;3025:3;3046:5;3039:12;;2982:75;;;:::o;3063:269::-;3173:39;3204:7;3173:39;:::i;:::-;3234:91;3283:41;3307:16;3283:41;:::i;:::-;3275:6;3268:4;3262:11;3234:91;:::i;:::-;3228:4;3221:105;3139:193;3063:269;;;:::o;3338:73::-;3383:3;3404:1;3397:8;;3338:73;:::o;3417:189::-;3494:32;;:::i;:::-;3535:65;3593:6;3585;3579:4;3535:65;:::i;:::-;3470:136;3417:189;;:::o;3612:186::-;3672:120;3689:3;3682:5;3679:14;3672:120;;;3743:39;3780:1;3773:5;3743:39;:::i;:::-;3716:1;3709:5;3705:13;3696:22;;3672:120;;;3612:186;;:::o;3804:543::-;3905:2;3900:3;3897:11;3894:446;;;3939:38;3971:5;3939:38;:::i;:::-;4023:29;4041:10;4023:29;:::i;:::-;4013:8;4009:44;4206:2;4194:10;4191:18;4188:49;;;4227:8;4212:23;;4188:49;4250:80;4306:22;4324:3;4306:22;:::i;:::-;4296:8;4292:37;4279:11;4250:80;:::i;:::-;3909:431;;3894:446;3804:543;;;:::o;4353:117::-;4407:8;4457:5;4451:4;4447:16;4426:37;;4353:117;;;;:::o;4476:169::-;4520:6;4553:51;4601:1;4597:6;4589:5;4586:1;4582:13;4553:51;:::i;:::-;4549:56;4634:4;4628;4624:15;4614:25;;4527:118;4476:169;;;;:::o;4650:295::-;4726:4;4872:29;4897:3;4891:4;4872:29;:::i;:::-;4864:37;;4934:3;4931:1;4927:11;4921:4;4918:21;4910:29;;4650:295;;;;:::o;4950:1395::-;5067:37;5100:3;5067:37;:::i;:::-;5169:18;5161:6;5158:30;5155:56;;;5191:18;;:::i;:::-;5155:56;5235:38;5267:4;5261:11;5235:38;:::i;:::-;5320:67;5380:6;5372;5366:4;5320:67;:::i;:::-;5414:1;5438:4;5425:17;;5470:2;5462:6;5459:14;5487:1;5482:618;;;;6144:1;6161:6;6158:77;;;6210:9;6205:3;6201:19;6195:26;6186:35;;6158:77;6261:67;6321:6;6314:5;6261:67;:::i;:::-;6255:4;6248:81;6117:222;5452:887;;5482:618;5534:4;5530:9;5522:6;5518:22;5568:37;5600:4;5568:37;:::i;:::-;5627:1;5641:208;5655:7;5652:1;5649:14;5641:208;;;5734:9;5729:3;5725:19;5719:26;5711:6;5704:42;5785:1;5777:6;5773:14;5763:24;;5832:2;5821:9;5817:18;5804:31;;5678:4;5675:1;5671:12;5666:17;;5641:208;;;5877:6;5868:7;5865:19;5862:179;;;5935:9;5930:3;5926:19;5920:26;5978:48;6020:4;6012:6;6008:17;5997:9;5978:48;:::i;:::-;5970:6;5963:64;5885:156;5862:179;6087:1;6083;6075:6;6071:14;6067:22;6061:4;6054:36;5489:611;;;5452:887;;5042:1303;;;4950:1395;;:::o;6351:126::-;6388:7;6428:42;6421:5;6417:54;6406:65;;6351:126;;;:::o;6483:96::-;6520:7;6549:24;6567:5;6549:24;:::i;:::-;6538:35;;6483:96;;;:::o;6585:118::-;6672:24;6690:5;6672:24;:::i;:::-;6667:3;6660:37;6585:118;;:::o;6709:222::-;6802:4;6840:2;6829:9;6825:18;6817:26;;6853:71;6921:1;6910:9;6906:17;6897:6;6853:71;:::i;:::-;6709:222;;;;:::o;6937:169::-;7021:11;7055:6;7050:3;7043:19;7095:4;7090:3;7086:14;7071:29;;6937:169;;;;:::o;7112:223::-;7252:34;7248:1;7240:6;7236:14;7229:58;7321:6;7316:2;7308:6;7304:15;7297:31;7112:223;:::o;7341:366::-;7483:3;7504:67;7568:2;7563:3;7504:67;:::i;:::-;7497:74;;7580:93;7669:3;7580:93;:::i;:::-;7698:2;7693:3;7689:12;7682:19;;7341:366;;;:::o;7713:419::-;7879:4;7917:2;7906:9;7902:18;7894:26;;7966:9;7960:4;7956:20;7952:1;7941:9;7937:17;7930:47;7994:131;8120:4;7994:131;:::i;:::-;7986:139;;7713:419;;;:::o;8138:180::-;8186:77;8183:1;8176:88;8283:4;8280:1;8273:15;8307:4;8304:1;8297:15;8324:191;8364:3;8383:20;8401:1;8383:20;:::i;:::-;8378:25;;8417:20;8435:1;8417:20;:::i;:::-;8412:25;;8460:1;8457;8453:9;8446:16;;8481:3;8478:1;8475:10;8472:36;;;8488:18;;:::i;:::-;8472:36;8324:191;;;;:::o;8521:118::-;8608:24;8626:5;8608:24;:::i;:::-;8603:3;8596:37;8521:118;;:::o;8645:442::-;8794:4;8832:2;8821:9;8817:18;8809:26;;8845:71;8913:1;8902:9;8898:17;8889:6;8845:71;:::i;:::-;8926:72;8994:2;8983:9;8979:18;8970:6;8926:72;:::i;:::-;9008;9076:2;9065:9;9061:18;9052:6;9008:72;:::i;:::-;8645:442;;;;;;:::o;9093:222::-;9186:4;9224:2;9213:9;9209:18;9201:26;;9237:71;9305:1;9294:9;9290:17;9281:6;9237:71;:::i;:::-;9093:222;;;;:::o;456:3058:6:-;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 2713,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 3575,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3118,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 3253,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 2706,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 2731,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3380,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 2878,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 4038,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 2438,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1188,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 1472,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@circulatingSupply_1104": {
									"entryPoint": 1600,
									"id": 1104,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decimals_363": {
									"entryPoint": 1316,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@fullyDilutedSupply_1122": {
									"entryPoint": 1277,
									"id": 1122,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@lockTokens_1057": {
									"entryPoint": 2130,
									"id": 1057,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@lockedBalances_948": {
									"entryPoint": 1023,
									"id": 948,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lockedTotal_950": {
									"entryPoint": 2568,
									"id": 950,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maxSupply_944": {
									"entryPoint": 2402,
									"id": 944,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_1022": {
									"entryPoint": 1324,
									"id": 1022,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 1044,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@nonCirculatingSupply_1113": {
									"entryPoint": 1463,
									"id": 1113,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1560,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1541,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 1627,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": 1222,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 1231,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 2574,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 2096,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unlockTokens_1092": {
									"entryPoint": 1771,
									"id": 1092,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 4649,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4927,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5232,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5060,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5020,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4817,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_15d37d1f13ebbf9c2d9f328f9874f34b0342cb2aea3b55aa26d22474d040a371_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5782,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7bf3d26c1ba6f0571d27961105ce86b9b37cc8bfda0b7e586ec6b3133845d121_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5678,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5523,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4721,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5152,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5846,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5035,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4873,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_15d37d1f13ebbf9c2d9f328f9874f34b0342cb2aea3b55aa26d22474d040a371__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5816,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7bf3d26c1ba6f0571d27961105ce86b9b37cc8bfda0b7e586ec6b3133845d121__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5712,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5557,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4736,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5167,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4771,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5432,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5587,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4610,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5009,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4579,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4712,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5140,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4787,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5339,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5387,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5294,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4575,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4801,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_15d37d1f13ebbf9c2d9f328f9874f34b0342cb2aea3b55aa26d22474d040a371": {
									"entryPoint": 5742,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7bf3d26c1ba6f0571d27961105ce86b9b37cc8bfda0b7e586ec6b3133845d121": {
									"entryPoint": 5638,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611": {
									"entryPoint": 5483,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4627,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4905,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10385:7",
										"nodeType": "YulBlock",
										"src": "0:10385:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:81:7",
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nativeSrc": "389:65:7",
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:7",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nativeSrc": "400:54:7",
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nativeSrc": "511:51:7",
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nativeSrc": "521:35:7",
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nativeSrc": "532:24:7",
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:7",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:7",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nativeSrc": "611:79:7",
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:7",
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:7",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:7",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nativeSrc": "670:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nativeSrc": "670:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nativeSrc": "641:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nativeSrc": "631:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nativeSrc": "624:43:7",
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nativeSrc": "621:63:7",
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:7",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nativeSrc": "748:87:7",
													"nodeType": "YulBlock",
													"src": "748:87:7",
													"statements": [
														{
															"nativeSrc": "758:29:7",
															"nodeType": "YulAssignment",
															"src": "758:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:7"
																},
																"nativeSrc": "767:20:7",
																"nodeType": "YulFunctionCall",
																"src": "767:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:7"
																},
																"nativeSrc": "796:33:7",
																"nodeType": "YulFunctionCall",
																"src": "796:33:7"
															},
															"nativeSrc": "796:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:7",
														"nodeType": "YulTypedName",
														"src": "726:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:7",
														"nodeType": "YulTypedName",
														"src": "734:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:7",
														"nodeType": "YulTypedName",
														"src": "742:5:7",
														"type": ""
													}
												],
												"src": "696:139:7"
											},
											{
												"body": {
													"nativeSrc": "907:263:7",
													"nodeType": "YulBlock",
													"src": "907:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:7",
																"nodeType": "YulBlock",
																"src": "953:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:7"
																			},
																			"nativeSrc": "955:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:7"
																		},
																		"nativeSrc": "955:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:7"
																		},
																		"nativeSrc": "924:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:7",
																		"nodeType": "YulLiteral",
																		"src": "949:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:7"
																},
																"nativeSrc": "920:32:7",
																"nodeType": "YulFunctionCall",
																"src": "920:32:7"
															},
															"nativeSrc": "917:119:7",
															"nodeType": "YulIf",
															"src": "917:119:7"
														},
														{
															"nativeSrc": "1046:117:7",
															"nodeType": "YulBlock",
															"src": "1046:117:7",
															"statements": [
																{
																	"nativeSrc": "1061:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:7",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:7"
																				},
																				"nativeSrc": "1121:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:7"
																		},
																		"nativeSrc": "1100:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:7",
														"nodeType": "YulTypedName",
														"src": "877:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:7",
														"nodeType": "YulTypedName",
														"src": "888:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:7",
														"nodeType": "YulTypedName",
														"src": "900:6:7",
														"type": ""
													}
												],
												"src": "841:329:7"
											},
											{
												"body": {
													"nativeSrc": "1221:32:7",
													"nodeType": "YulBlock",
													"src": "1221:32:7",
													"statements": [
														{
															"nativeSrc": "1231:16:7",
															"nodeType": "YulAssignment",
															"src": "1231:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "1242:5:7",
																"nodeType": "YulIdentifier",
																"src": "1242:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1231:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1176:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1203:5:7",
														"nodeType": "YulTypedName",
														"src": "1203:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1213:7:7",
														"nodeType": "YulTypedName",
														"src": "1213:7:7",
														"type": ""
													}
												],
												"src": "1176:77:7"
											},
											{
												"body": {
													"nativeSrc": "1324:53:7",
													"nodeType": "YulBlock",
													"src": "1324:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1346:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:7"
																		},
																		"nativeSrc": "1346:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:7"
																},
																"nativeSrc": "1334:37:7",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:7"
															},
															"nativeSrc": "1334:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1259:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:7",
														"nodeType": "YulTypedName",
														"src": "1312:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:7",
														"nodeType": "YulTypedName",
														"src": "1319:3:7",
														"type": ""
													}
												],
												"src": "1259:118:7"
											},
											{
												"body": {
													"nativeSrc": "1481:124:7",
													"nodeType": "YulBlock",
													"src": "1481:124:7",
													"statements": [
														{
															"nativeSrc": "1491:26:7",
															"nodeType": "YulAssignment",
															"src": "1491:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1503:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1514:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1499:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:7"
																},
																"nativeSrc": "1499:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1499:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1491:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1571:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1584:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1595:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1580:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:7"
																		},
																		"nativeSrc": "1580:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1527:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:7"
																},
																"nativeSrc": "1527:71:7",
																"nodeType": "YulFunctionCall",
																"src": "1527:71:7"
															},
															"nativeSrc": "1527:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1383:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1453:9:7",
														"nodeType": "YulTypedName",
														"src": "1453:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1465:6:7",
														"nodeType": "YulTypedName",
														"src": "1465:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1476:4:7",
														"nodeType": "YulTypedName",
														"src": "1476:4:7",
														"type": ""
													}
												],
												"src": "1383:222:7"
											},
											{
												"body": {
													"nativeSrc": "1670:40:7",
													"nodeType": "YulBlock",
													"src": "1670:40:7",
													"statements": [
														{
															"nativeSrc": "1681:22:7",
															"nodeType": "YulAssignment",
															"src": "1681:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1697:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1697:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1691:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1691:5:7"
																},
																"nativeSrc": "1691:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1691:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1681:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1681:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1611:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1653:5:7",
														"nodeType": "YulTypedName",
														"src": "1653:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1663:6:7",
														"nodeType": "YulTypedName",
														"src": "1663:6:7",
														"type": ""
													}
												],
												"src": "1611:99:7"
											},
											{
												"body": {
													"nativeSrc": "1812:73:7",
													"nodeType": "YulBlock",
													"src": "1812:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1829:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1829:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1834:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1834:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1822:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1822:6:7"
																},
																"nativeSrc": "1822:19:7",
																"nodeType": "YulFunctionCall",
																"src": "1822:19:7"
															},
															"nativeSrc": "1822:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "1822:19:7"
														},
														{
															"nativeSrc": "1850:29:7",
															"nodeType": "YulAssignment",
															"src": "1850:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1869:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1869:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1874:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1874:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1865:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1865:3:7"
																},
																"nativeSrc": "1865:14:7",
																"nodeType": "YulFunctionCall",
																"src": "1865:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1850:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "1850:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1716:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1784:3:7",
														"nodeType": "YulTypedName",
														"src": "1784:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1789:6:7",
														"nodeType": "YulTypedName",
														"src": "1789:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1800:11:7",
														"nodeType": "YulTypedName",
														"src": "1800:11:7",
														"type": ""
													}
												],
												"src": "1716:169:7"
											},
											{
												"body": {
													"nativeSrc": "1953:77:7",
													"nodeType": "YulBlock",
													"src": "1953:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1970:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1970:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1975:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1975:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1980:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1980:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1964:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1964:5:7"
																},
																"nativeSrc": "1964:23:7",
																"nodeType": "YulFunctionCall",
																"src": "1964:23:7"
															},
															"nativeSrc": "1964:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "1964:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2007:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2007:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2012:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2003:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2003:3:7"
																		},
																		"nativeSrc": "2003:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2003:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2021:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2021:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1996:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1996:6:7"
																},
																"nativeSrc": "1996:27:7",
																"nodeType": "YulFunctionCall",
																"src": "1996:27:7"
															},
															"nativeSrc": "1996:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "1996:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1891:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1935:3:7",
														"nodeType": "YulTypedName",
														"src": "1935:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1940:3:7",
														"nodeType": "YulTypedName",
														"src": "1940:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1945:6:7",
														"nodeType": "YulTypedName",
														"src": "1945:6:7",
														"type": ""
													}
												],
												"src": "1891:139:7"
											},
											{
												"body": {
													"nativeSrc": "2084:54:7",
													"nodeType": "YulBlock",
													"src": "2084:54:7",
													"statements": [
														{
															"nativeSrc": "2094:38:7",
															"nodeType": "YulAssignment",
															"src": "2094:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2112:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2112:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2119:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2119:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2108:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2108:3:7"
																		},
																		"nativeSrc": "2108:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2108:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2128:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2128:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2124:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2124:3:7"
																		},
																		"nativeSrc": "2124:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2124:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2104:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2104:3:7"
																},
																"nativeSrc": "2104:28:7",
																"nodeType": "YulFunctionCall",
																"src": "2104:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2094:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2094:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2036:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2067:5:7",
														"nodeType": "YulTypedName",
														"src": "2067:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2077:6:7",
														"nodeType": "YulTypedName",
														"src": "2077:6:7",
														"type": ""
													}
												],
												"src": "2036:102:7"
											},
											{
												"body": {
													"nativeSrc": "2236:285:7",
													"nodeType": "YulBlock",
													"src": "2236:285:7",
													"statements": [
														{
															"nativeSrc": "2246:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2246:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2293:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2293:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2260:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "2260:32:7"
																},
																"nativeSrc": "2260:39:7",
																"nodeType": "YulFunctionCall",
																"src": "2260:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2250:6:7",
																	"nodeType": "YulTypedName",
																	"src": "2250:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2308:78:7",
															"nodeType": "YulAssignment",
															"src": "2308:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2374:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2374:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2379:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2379:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2315:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "2315:58:7"
																},
																"nativeSrc": "2315:71:7",
																"nodeType": "YulFunctionCall",
																"src": "2315:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2308:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2308:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2434:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2434:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2441:4:7",
																				"nodeType": "YulLiteral",
																				"src": "2441:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2430:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2430:3:7"
																		},
																		"nativeSrc": "2430:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2430:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2448:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2448:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2453:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2453:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2395:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "2395:34:7"
																},
																"nativeSrc": "2395:65:7",
																"nodeType": "YulFunctionCall",
																"src": "2395:65:7"
															},
															"nativeSrc": "2395:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "2395:65:7"
														},
														{
															"nativeSrc": "2469:46:7",
															"nodeType": "YulAssignment",
															"src": "2469:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2480:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2480:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2507:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2507:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2485:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "2485:21:7"
																		},
																		"nativeSrc": "2485:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2485:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2476:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2476:3:7"
																},
																"nativeSrc": "2476:39:7",
																"nodeType": "YulFunctionCall",
																"src": "2476:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2469:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2469:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2144:377:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2217:5:7",
														"nodeType": "YulTypedName",
														"src": "2217:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2224:3:7",
														"nodeType": "YulTypedName",
														"src": "2224:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2232:3:7",
														"nodeType": "YulTypedName",
														"src": "2232:3:7",
														"type": ""
													}
												],
												"src": "2144:377:7"
											},
											{
												"body": {
													"nativeSrc": "2645:195:7",
													"nodeType": "YulBlock",
													"src": "2645:195:7",
													"statements": [
														{
															"nativeSrc": "2655:26:7",
															"nodeType": "YulAssignment",
															"src": "2655:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2667:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2667:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2678:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2678:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2663:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2663:3:7"
																},
																"nativeSrc": "2663:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2663:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2655:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2655:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2702:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2702:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2713:1:7",
																				"nodeType": "YulLiteral",
																				"src": "2713:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2698:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2698:3:7"
																		},
																		"nativeSrc": "2698:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2698:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2721:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "2721:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2727:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2727:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2717:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2717:3:7"
																		},
																		"nativeSrc": "2717:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2717:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2691:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2691:6:7"
																},
																"nativeSrc": "2691:47:7",
																"nodeType": "YulFunctionCall",
																"src": "2691:47:7"
															},
															"nativeSrc": "2691:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "2691:47:7"
														},
														{
															"nativeSrc": "2747:86:7",
															"nodeType": "YulAssignment",
															"src": "2747:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2819:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2819:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2828:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2828:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2755:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "2755:63:7"
																},
																"nativeSrc": "2755:78:7",
																"nodeType": "YulFunctionCall",
																"src": "2755:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2747:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2747:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2527:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2617:9:7",
														"nodeType": "YulTypedName",
														"src": "2617:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2629:6:7",
														"nodeType": "YulTypedName",
														"src": "2629:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2640:4:7",
														"nodeType": "YulTypedName",
														"src": "2640:4:7",
														"type": ""
													}
												],
												"src": "2527:313:7"
											},
											{
												"body": {
													"nativeSrc": "2889:79:7",
													"nodeType": "YulBlock",
													"src": "2889:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2946:16:7",
																"nodeType": "YulBlock",
																"src": "2946:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2955:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2955:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2958:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2958:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2948:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2948:6:7"
																			},
																			"nativeSrc": "2948:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2948:12:7"
																		},
																		"nativeSrc": "2948:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2948:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2912:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2912:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2937:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2937:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2919:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2919:17:7"
																				},
																				"nativeSrc": "2919:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2919:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2909:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2909:2:7"
																		},
																		"nativeSrc": "2909:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2909:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2902:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2902:6:7"
																},
																"nativeSrc": "2902:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2902:43:7"
															},
															"nativeSrc": "2899:63:7",
															"nodeType": "YulIf",
															"src": "2899:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2846:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2882:5:7",
														"nodeType": "YulTypedName",
														"src": "2882:5:7",
														"type": ""
													}
												],
												"src": "2846:122:7"
											},
											{
												"body": {
													"nativeSrc": "3026:87:7",
													"nodeType": "YulBlock",
													"src": "3026:87:7",
													"statements": [
														{
															"nativeSrc": "3036:29:7",
															"nodeType": "YulAssignment",
															"src": "3036:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3058:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3058:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3045:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "3045:12:7"
																},
																"nativeSrc": "3045:20:7",
																"nodeType": "YulFunctionCall",
																"src": "3045:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3036:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3036:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3101:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3101:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3074:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "3074:26:7"
																},
																"nativeSrc": "3074:33:7",
																"nodeType": "YulFunctionCall",
																"src": "3074:33:7"
															},
															"nativeSrc": "3074:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "3074:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2974:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3004:6:7",
														"nodeType": "YulTypedName",
														"src": "3004:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3012:3:7",
														"nodeType": "YulTypedName",
														"src": "3012:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3020:5:7",
														"nodeType": "YulTypedName",
														"src": "3020:5:7",
														"type": ""
													}
												],
												"src": "2974:139:7"
											},
											{
												"body": {
													"nativeSrc": "3202:391:7",
													"nodeType": "YulBlock",
													"src": "3202:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3248:83:7",
																"nodeType": "YulBlock",
																"src": "3248:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3250:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3250:77:7"
																			},
																			"nativeSrc": "3250:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3250:79:7"
																		},
																		"nativeSrc": "3250:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3250:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3223:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3223:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3232:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3232:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3219:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3219:3:7"
																		},
																		"nativeSrc": "3219:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3219:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3244:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3244:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3215:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3215:3:7"
																},
																"nativeSrc": "3215:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3215:32:7"
															},
															"nativeSrc": "3212:119:7",
															"nodeType": "YulIf",
															"src": "3212:119:7"
														},
														{
															"nativeSrc": "3341:117:7",
															"nodeType": "YulBlock",
															"src": "3341:117:7",
															"statements": [
																{
																	"nativeSrc": "3356:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3356:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3370:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3370:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3360:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3360:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3385:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3385:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3420:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3420:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3431:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3431:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3416:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3416:3:7"
																				},
																				"nativeSrc": "3416:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3416:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3440:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3440:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3395:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3395:20:7"
																		},
																		"nativeSrc": "3395:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3395:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3385:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3385:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3468:118:7",
															"nodeType": "YulBlock",
															"src": "3468:118:7",
															"statements": [
																{
																	"nativeSrc": "3483:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3483:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3497:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3497:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3487:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3487:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3513:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3513:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3548:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3548:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3559:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3559:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3544:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3544:3:7"
																				},
																				"nativeSrc": "3544:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3544:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3568:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3568:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3523:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3523:20:7"
																		},
																		"nativeSrc": "3523:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3523:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3513:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3513:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3119:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3164:9:7",
														"nodeType": "YulTypedName",
														"src": "3164:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3175:7:7",
														"nodeType": "YulTypedName",
														"src": "3175:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3187:6:7",
														"nodeType": "YulTypedName",
														"src": "3187:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3195:6:7",
														"nodeType": "YulTypedName",
														"src": "3195:6:7",
														"type": ""
													}
												],
												"src": "3119:474:7"
											},
											{
												"body": {
													"nativeSrc": "3641:48:7",
													"nodeType": "YulBlock",
													"src": "3641:48:7",
													"statements": [
														{
															"nativeSrc": "3651:32:7",
															"nodeType": "YulAssignment",
															"src": "3651:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3676:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3676:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3669:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3669:6:7"
																		},
																		"nativeSrc": "3669:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3669:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3662:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3662:6:7"
																},
																"nativeSrc": "3662:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3662:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3651:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3651:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3599:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3623:5:7",
														"nodeType": "YulTypedName",
														"src": "3623:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3633:7:7",
														"nodeType": "YulTypedName",
														"src": "3633:7:7",
														"type": ""
													}
												],
												"src": "3599:90:7"
											},
											{
												"body": {
													"nativeSrc": "3754:50:7",
													"nodeType": "YulBlock",
													"src": "3754:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3771:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3771:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3791:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3791:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3776:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "3776:14:7"
																		},
																		"nativeSrc": "3776:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3776:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3764:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3764:6:7"
																},
																"nativeSrc": "3764:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3764:34:7"
															},
															"nativeSrc": "3764:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3764:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3695:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3742:5:7",
														"nodeType": "YulTypedName",
														"src": "3742:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3749:3:7",
														"nodeType": "YulTypedName",
														"src": "3749:3:7",
														"type": ""
													}
												],
												"src": "3695:109:7"
											},
											{
												"body": {
													"nativeSrc": "3902:118:7",
													"nodeType": "YulBlock",
													"src": "3902:118:7",
													"statements": [
														{
															"nativeSrc": "3912:26:7",
															"nodeType": "YulAssignment",
															"src": "3912:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3924:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3924:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3935:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3935:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3920:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3920:3:7"
																},
																"nativeSrc": "3920:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3920:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3912:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3912:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3986:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3986:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3999:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3999:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4010:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4010:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3995:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3995:3:7"
																		},
																		"nativeSrc": "3995:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3995:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3948:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "3948:37:7"
																},
																"nativeSrc": "3948:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3948:65:7"
															},
															"nativeSrc": "3948:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3948:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3810:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3874:9:7",
														"nodeType": "YulTypedName",
														"src": "3874:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3886:6:7",
														"nodeType": "YulTypedName",
														"src": "3886:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3897:4:7",
														"nodeType": "YulTypedName",
														"src": "3897:4:7",
														"type": ""
													}
												],
												"src": "3810:210:7"
											},
											{
												"body": {
													"nativeSrc": "4126:519:7",
													"nodeType": "YulBlock",
													"src": "4126:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4172:83:7",
																"nodeType": "YulBlock",
																"src": "4172:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4174:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4174:77:7"
																			},
																			"nativeSrc": "4174:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4174:79:7"
																		},
																		"nativeSrc": "4174:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4174:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4147:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4147:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4156:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4156:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4143:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4143:3:7"
																		},
																		"nativeSrc": "4143:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4143:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4168:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4168:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4139:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4139:3:7"
																},
																"nativeSrc": "4139:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4139:32:7"
															},
															"nativeSrc": "4136:119:7",
															"nodeType": "YulIf",
															"src": "4136:119:7"
														},
														{
															"nativeSrc": "4265:117:7",
															"nodeType": "YulBlock",
															"src": "4265:117:7",
															"statements": [
																{
																	"nativeSrc": "4280:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4280:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4294:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4294:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4284:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4284:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4309:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4309:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4344:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4344:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4355:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4355:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4340:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4340:3:7"
																				},
																				"nativeSrc": "4340:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4340:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4364:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4364:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4319:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4319:20:7"
																		},
																		"nativeSrc": "4319:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4319:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4309:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4309:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4392:118:7",
															"nodeType": "YulBlock",
															"src": "4392:118:7",
															"statements": [
																{
																	"nativeSrc": "4407:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4407:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4421:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4421:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4411:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4411:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4437:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4437:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4472:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4472:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4483:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4483:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4468:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4468:3:7"
																				},
																				"nativeSrc": "4468:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4468:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4492:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4492:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4447:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4447:20:7"
																		},
																		"nativeSrc": "4447:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4447:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4437:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4437:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4520:118:7",
															"nodeType": "YulBlock",
															"src": "4520:118:7",
															"statements": [
																{
																	"nativeSrc": "4535:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4535:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4549:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4549:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4539:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4539:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4565:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4565:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4600:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4600:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4611:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4611:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4596:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4596:3:7"
																				},
																				"nativeSrc": "4596:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4596:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4620:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4620:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4575:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4575:20:7"
																		},
																		"nativeSrc": "4575:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4575:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4565:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4565:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4026:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4080:9:7",
														"nodeType": "YulTypedName",
														"src": "4080:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4091:7:7",
														"nodeType": "YulTypedName",
														"src": "4091:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4103:6:7",
														"nodeType": "YulTypedName",
														"src": "4103:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4111:6:7",
														"nodeType": "YulTypedName",
														"src": "4111:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4119:6:7",
														"nodeType": "YulTypedName",
														"src": "4119:6:7",
														"type": ""
													}
												],
												"src": "4026:619:7"
											},
											{
												"body": {
													"nativeSrc": "4694:43:7",
													"nodeType": "YulBlock",
													"src": "4694:43:7",
													"statements": [
														{
															"nativeSrc": "4704:27:7",
															"nodeType": "YulAssignment",
															"src": "4704:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4719:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4719:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4726:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4726:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4715:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4715:3:7"
																},
																"nativeSrc": "4715:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4715:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4704:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4704:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4651:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4676:5:7",
														"nodeType": "YulTypedName",
														"src": "4676:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4686:7:7",
														"nodeType": "YulTypedName",
														"src": "4686:7:7",
														"type": ""
													}
												],
												"src": "4651:86:7"
											},
											{
												"body": {
													"nativeSrc": "4804:51:7",
													"nodeType": "YulBlock",
													"src": "4804:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4821:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4821:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4842:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4842:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4826:15:7",
																			"nodeType": "YulIdentifier",
																			"src": "4826:15:7"
																		},
																		"nativeSrc": "4826:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4826:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4814:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4814:6:7"
																},
																"nativeSrc": "4814:35:7",
																"nodeType": "YulFunctionCall",
																"src": "4814:35:7"
															},
															"nativeSrc": "4814:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "4814:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4743:112:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4792:5:7",
														"nodeType": "YulTypedName",
														"src": "4792:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4799:3:7",
														"nodeType": "YulTypedName",
														"src": "4799:3:7",
														"type": ""
													}
												],
												"src": "4743:112:7"
											},
											{
												"body": {
													"nativeSrc": "4955:120:7",
													"nodeType": "YulBlock",
													"src": "4955:120:7",
													"statements": [
														{
															"nativeSrc": "4965:26:7",
															"nodeType": "YulAssignment",
															"src": "4965:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4977:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4977:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4988:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4988:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4973:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4973:3:7"
																},
																"nativeSrc": "4973:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4973:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4965:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4965:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5041:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5041:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5054:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5054:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5065:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5065:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5050:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5050:3:7"
																		},
																		"nativeSrc": "5050:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5050:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5001:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "5001:39:7"
																},
																"nativeSrc": "5001:67:7",
																"nodeType": "YulFunctionCall",
																"src": "5001:67:7"
															},
															"nativeSrc": "5001:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "5001:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4861:214:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4927:9:7",
														"nodeType": "YulTypedName",
														"src": "4927:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4939:6:7",
														"nodeType": "YulTypedName",
														"src": "4939:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4950:4:7",
														"nodeType": "YulTypedName",
														"src": "4950:4:7",
														"type": ""
													}
												],
												"src": "4861:214:7"
											},
											{
												"body": {
													"nativeSrc": "5146:53:7",
													"nodeType": "YulBlock",
													"src": "5146:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5163:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5163:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5186:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5186:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5168:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "5168:17:7"
																		},
																		"nativeSrc": "5168:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5168:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5156:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5156:6:7"
																},
																"nativeSrc": "5156:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5156:37:7"
															},
															"nativeSrc": "5156:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "5156:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5081:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5134:5:7",
														"nodeType": "YulTypedName",
														"src": "5134:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5141:3:7",
														"nodeType": "YulTypedName",
														"src": "5141:3:7",
														"type": ""
													}
												],
												"src": "5081:118:7"
											},
											{
												"body": {
													"nativeSrc": "5303:124:7",
													"nodeType": "YulBlock",
													"src": "5303:124:7",
													"statements": [
														{
															"nativeSrc": "5313:26:7",
															"nodeType": "YulAssignment",
															"src": "5313:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5325:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5325:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5336:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5336:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5321:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5321:3:7"
																},
																"nativeSrc": "5321:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5321:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5313:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5313:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5393:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5393:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5406:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5406:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5417:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5417:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5402:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5402:3:7"
																		},
																		"nativeSrc": "5402:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5402:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5349:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5349:43:7"
																},
																"nativeSrc": "5349:71:7",
																"nodeType": "YulFunctionCall",
																"src": "5349:71:7"
															},
															"nativeSrc": "5349:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "5349:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5205:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5275:9:7",
														"nodeType": "YulTypedName",
														"src": "5275:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5287:6:7",
														"nodeType": "YulTypedName",
														"src": "5287:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5298:4:7",
														"nodeType": "YulTypedName",
														"src": "5298:4:7",
														"type": ""
													}
												],
												"src": "5205:222:7"
											},
											{
												"body": {
													"nativeSrc": "5516:391:7",
													"nodeType": "YulBlock",
													"src": "5516:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5562:83:7",
																"nodeType": "YulBlock",
																"src": "5562:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5564:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5564:77:7"
																			},
																			"nativeSrc": "5564:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5564:79:7"
																		},
																		"nativeSrc": "5564:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5564:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5537:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5537:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5546:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5546:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5533:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5533:3:7"
																		},
																		"nativeSrc": "5533:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5533:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5558:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5558:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5529:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5529:3:7"
																},
																"nativeSrc": "5529:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5529:32:7"
															},
															"nativeSrc": "5526:119:7",
															"nodeType": "YulIf",
															"src": "5526:119:7"
														},
														{
															"nativeSrc": "5655:117:7",
															"nodeType": "YulBlock",
															"src": "5655:117:7",
															"statements": [
																{
																	"nativeSrc": "5670:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5670:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5684:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5684:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5674:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5674:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5699:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5699:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5734:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5734:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5745:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5745:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5730:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5730:3:7"
																				},
																				"nativeSrc": "5730:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5730:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5754:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5754:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5709:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5709:20:7"
																		},
																		"nativeSrc": "5709:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5709:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5699:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5699:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5782:118:7",
															"nodeType": "YulBlock",
															"src": "5782:118:7",
															"statements": [
																{
																	"nativeSrc": "5797:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5797:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5811:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5811:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5801:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5801:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5827:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5827:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5862:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5862:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5873:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5873:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5858:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5858:3:7"
																				},
																				"nativeSrc": "5858:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5858:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5882:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5882:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5837:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5837:20:7"
																		},
																		"nativeSrc": "5837:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5837:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5827:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5827:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5433:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5478:9:7",
														"nodeType": "YulTypedName",
														"src": "5478:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5489:7:7",
														"nodeType": "YulTypedName",
														"src": "5489:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5501:6:7",
														"nodeType": "YulTypedName",
														"src": "5501:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5509:6:7",
														"nodeType": "YulTypedName",
														"src": "5509:6:7",
														"type": ""
													}
												],
												"src": "5433:474:7"
											},
											{
												"body": {
													"nativeSrc": "5941:152:7",
													"nodeType": "YulBlock",
													"src": "5941:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5958:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5958:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5961:77:7",
																		"nodeType": "YulLiteral",
																		"src": "5961:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5951:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5951:6:7"
																},
																"nativeSrc": "5951:88:7",
																"nodeType": "YulFunctionCall",
																"src": "5951:88:7"
															},
															"nativeSrc": "5951:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "5951:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6055:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6055:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6058:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6058:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6048:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6048:6:7"
																},
																"nativeSrc": "6048:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6048:15:7"
															},
															"nativeSrc": "6048:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6048:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6079:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6079:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6082:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6082:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6072:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6072:6:7"
																},
																"nativeSrc": "6072:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6072:15:7"
															},
															"nativeSrc": "6072:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6072:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "5913:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "5913:180:7"
											},
											{
												"body": {
													"nativeSrc": "6150:269:7",
													"nodeType": "YulBlock",
													"src": "6150:269:7",
													"statements": [
														{
															"nativeSrc": "6160:22:7",
															"nodeType": "YulAssignment",
															"src": "6160:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6174:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6174:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6180:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6180:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6170:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6170:3:7"
																},
																"nativeSrc": "6170:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6170:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6160:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6160:6:7"
																}
															]
														},
														{
															"nativeSrc": "6191:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6191:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6221:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6221:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6227:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6227:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6217:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6217:3:7"
																},
																"nativeSrc": "6217:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6217:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6195:18:7",
																	"nodeType": "YulTypedName",
																	"src": "6195:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6268:51:7",
																"nodeType": "YulBlock",
																"src": "6268:51:7",
																"statements": [
																	{
																		"nativeSrc": "6282:27:7",
																		"nodeType": "YulAssignment",
																		"src": "6282:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6296:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "6296:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6304:4:7",
																					"nodeType": "YulLiteral",
																					"src": "6304:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6292:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6292:3:7"
																			},
																			"nativeSrc": "6292:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6292:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6282:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6282:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6248:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "6248:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6241:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6241:6:7"
																},
																"nativeSrc": "6241:26:7",
																"nodeType": "YulFunctionCall",
																"src": "6241:26:7"
															},
															"nativeSrc": "6238:81:7",
															"nodeType": "YulIf",
															"src": "6238:81:7"
														},
														{
															"body": {
																"nativeSrc": "6371:42:7",
																"nodeType": "YulBlock",
																"src": "6371:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6385:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "6385:16:7"
																			},
																			"nativeSrc": "6385:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6385:18:7"
																		},
																		"nativeSrc": "6385:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6385:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6335:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "6335:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6358:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6358:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6366:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6366:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6355:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "6355:2:7"
																		},
																		"nativeSrc": "6355:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6355:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6332:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6332:2:7"
																},
																"nativeSrc": "6332:38:7",
																"nodeType": "YulFunctionCall",
																"src": "6332:38:7"
															},
															"nativeSrc": "6329:84:7",
															"nodeType": "YulIf",
															"src": "6329:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6099:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6134:4:7",
														"nodeType": "YulTypedName",
														"src": "6134:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6143:6:7",
														"nodeType": "YulTypedName",
														"src": "6143:6:7",
														"type": ""
													}
												],
												"src": "6099:320:7"
											},
											{
												"body": {
													"nativeSrc": "6453:152:7",
													"nodeType": "YulBlock",
													"src": "6453:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6470:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6470:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6473:77:7",
																		"nodeType": "YulLiteral",
																		"src": "6473:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6463:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6463:6:7"
																},
																"nativeSrc": "6463:88:7",
																"nodeType": "YulFunctionCall",
																"src": "6463:88:7"
															},
															"nativeSrc": "6463:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "6463:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6567:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6567:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6570:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6570:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6560:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6560:6:7"
																},
																"nativeSrc": "6560:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6560:15:7"
															},
															"nativeSrc": "6560:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6560:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6591:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6591:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6594:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6594:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6584:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6584:6:7"
																},
																"nativeSrc": "6584:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6584:15:7"
															},
															"nativeSrc": "6584:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6584:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6425:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "6425:180:7"
											},
											{
												"body": {
													"nativeSrc": "6655:147:7",
													"nodeType": "YulBlock",
													"src": "6655:147:7",
													"statements": [
														{
															"nativeSrc": "6665:25:7",
															"nodeType": "YulAssignment",
															"src": "6665:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6688:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6688:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6670:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "6670:17:7"
																},
																"nativeSrc": "6670:20:7",
																"nodeType": "YulFunctionCall",
																"src": "6670:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6665:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "6665:1:7"
																}
															]
														},
														{
															"nativeSrc": "6699:25:7",
															"nodeType": "YulAssignment",
															"src": "6699:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6722:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6722:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6704:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "6704:17:7"
																},
																"nativeSrc": "6704:20:7",
																"nodeType": "YulFunctionCall",
																"src": "6704:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6699:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "6699:1:7"
																}
															]
														},
														{
															"nativeSrc": "6733:16:7",
															"nodeType": "YulAssignment",
															"src": "6733:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6744:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6744:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6747:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6747:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6740:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6740:3:7"
																},
																"nativeSrc": "6740:9:7",
																"nodeType": "YulFunctionCall",
																"src": "6740:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "6733:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6733:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6773:22:7",
																"nodeType": "YulBlock",
																"src": "6773:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6775:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "6775:16:7"
																			},
																			"nativeSrc": "6775:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6775:18:7"
																		},
																		"nativeSrc": "6775:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6775:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6765:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6765:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6768:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6768:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6762:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6762:2:7"
																},
																"nativeSrc": "6762:10:7",
																"nodeType": "YulFunctionCall",
																"src": "6762:10:7"
															},
															"nativeSrc": "6759:36:7",
															"nodeType": "YulIf",
															"src": "6759:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6611:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6642:1:7",
														"nodeType": "YulTypedName",
														"src": "6642:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6645:1:7",
														"nodeType": "YulTypedName",
														"src": "6645:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "6651:3:7",
														"nodeType": "YulTypedName",
														"src": "6651:3:7",
														"type": ""
													}
												],
												"src": "6611:191:7"
											},
											{
												"body": {
													"nativeSrc": "6914:62:7",
													"nodeType": "YulBlock",
													"src": "6914:62:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6936:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6936:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6944:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6944:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6932:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6932:3:7"
																		},
																		"nativeSrc": "6932:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6932:14:7"
																	},
																	{
																		"hexValue": "45786365656473206d617820737570706c79",
																		"kind": "string",
																		"nativeSrc": "6948:20:7",
																		"nodeType": "YulLiteral",
																		"src": "6948:20:7",
																		"type": "",
																		"value": "Exceeds max supply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6925:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6925:6:7"
																},
																"nativeSrc": "6925:44:7",
																"nodeType": "YulFunctionCall",
																"src": "6925:44:7"
															},
															"nativeSrc": "6925:44:7",
															"nodeType": "YulExpressionStatement",
															"src": "6925:44:7"
														}
													]
												},
												"name": "store_literal_in_memory_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611",
												"nativeSrc": "6808:168:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6906:6:7",
														"nodeType": "YulTypedName",
														"src": "6906:6:7",
														"type": ""
													}
												],
												"src": "6808:168:7"
											},
											{
												"body": {
													"nativeSrc": "7128:220:7",
													"nodeType": "YulBlock",
													"src": "7128:220:7",
													"statements": [
														{
															"nativeSrc": "7138:74:7",
															"nodeType": "YulAssignment",
															"src": "7138:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7204:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7204:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7209:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7209:2:7",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7145:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "7145:58:7"
																},
																"nativeSrc": "7145:67:7",
																"nodeType": "YulFunctionCall",
																"src": "7145:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7138:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7138:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7310:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7310:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611",
																	"nativeSrc": "7221:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "7221:88:7"
																},
																"nativeSrc": "7221:93:7",
																"nodeType": "YulFunctionCall",
																"src": "7221:93:7"
															},
															"nativeSrc": "7221:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "7221:93:7"
														},
														{
															"nativeSrc": "7323:19:7",
															"nodeType": "YulAssignment",
															"src": "7323:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7334:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7334:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7339:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7339:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7330:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7330:3:7"
																},
																"nativeSrc": "7330:12:7",
																"nodeType": "YulFunctionCall",
																"src": "7330:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7323:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7323:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6982:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7116:3:7",
														"nodeType": "YulTypedName",
														"src": "7116:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7124:3:7",
														"nodeType": "YulTypedName",
														"src": "7124:3:7",
														"type": ""
													}
												],
												"src": "6982:366:7"
											},
											{
												"body": {
													"nativeSrc": "7525:248:7",
													"nodeType": "YulBlock",
													"src": "7525:248:7",
													"statements": [
														{
															"nativeSrc": "7535:26:7",
															"nodeType": "YulAssignment",
															"src": "7535:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7547:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7547:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7558:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7558:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7543:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7543:3:7"
																},
																"nativeSrc": "7543:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7543:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7535:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7535:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7582:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7582:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7593:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7593:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7578:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7578:3:7"
																		},
																		"nativeSrc": "7578:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7578:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7601:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "7601:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7607:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7607:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7597:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7597:3:7"
																		},
																		"nativeSrc": "7597:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7597:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7571:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7571:6:7"
																},
																"nativeSrc": "7571:47:7",
																"nodeType": "YulFunctionCall",
																"src": "7571:47:7"
															},
															"nativeSrc": "7571:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "7571:47:7"
														},
														{
															"nativeSrc": "7627:139:7",
															"nodeType": "YulAssignment",
															"src": "7627:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7761:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7761:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7635:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "7635:124:7"
																},
																"nativeSrc": "7635:131:7",
																"nodeType": "YulFunctionCall",
																"src": "7635:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7627:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7627:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7354:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7505:9:7",
														"nodeType": "YulTypedName",
														"src": "7505:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7520:4:7",
														"nodeType": "YulTypedName",
														"src": "7520:4:7",
														"type": ""
													}
												],
												"src": "7354:419:7"
											},
											{
												"body": {
													"nativeSrc": "7824:149:7",
													"nodeType": "YulBlock",
													"src": "7824:149:7",
													"statements": [
														{
															"nativeSrc": "7834:25:7",
															"nodeType": "YulAssignment",
															"src": "7834:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7857:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7857:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7839:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7839:17:7"
																},
																"nativeSrc": "7839:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7839:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7834:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7834:1:7"
																}
															]
														},
														{
															"nativeSrc": "7868:25:7",
															"nodeType": "YulAssignment",
															"src": "7868:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7891:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7891:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7873:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7873:17:7"
																},
																"nativeSrc": "7873:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7873:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7868:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7868:1:7"
																}
															]
														},
														{
															"nativeSrc": "7902:17:7",
															"nodeType": "YulAssignment",
															"src": "7902:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7914:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7914:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7917:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7917:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "7910:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7910:3:7"
																},
																"nativeSrc": "7910:9:7",
																"nodeType": "YulFunctionCall",
																"src": "7910:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "7902:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7902:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7944:22:7",
																"nodeType": "YulBlock",
																"src": "7944:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7946:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7946:16:7"
																			},
																			"nativeSrc": "7946:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7946:18:7"
																		},
																		"nativeSrc": "7946:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7946:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "7935:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7935:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "7941:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7941:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7932:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7932:2:7"
																},
																"nativeSrc": "7932:11:7",
																"nodeType": "YulFunctionCall",
																"src": "7932:11:7"
															},
															"nativeSrc": "7929:37:7",
															"nodeType": "YulIf",
															"src": "7929:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "7779:194:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7810:1:7",
														"nodeType": "YulTypedName",
														"src": "7810:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7813:1:7",
														"nodeType": "YulTypedName",
														"src": "7813:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "7819:4:7",
														"nodeType": "YulTypedName",
														"src": "7819:4:7",
														"type": ""
													}
												],
												"src": "7779:194:7"
											},
											{
												"body": {
													"nativeSrc": "8085:71:7",
													"nodeType": "YulBlock",
													"src": "8085:71:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8107:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8107:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8115:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8115:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8103:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8103:3:7"
																		},
																		"nativeSrc": "8103:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8103:14:7"
																	},
																	{
																		"hexValue": "496e73756666696369656e74206c6f636b65642062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "8119:29:7",
																		"nodeType": "YulLiteral",
																		"src": "8119:29:7",
																		"type": "",
																		"value": "Insufficient locked balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8096:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8096:6:7"
																},
																"nativeSrc": "8096:53:7",
																"nodeType": "YulFunctionCall",
																"src": "8096:53:7"
															},
															"nativeSrc": "8096:53:7",
															"nodeType": "YulExpressionStatement",
															"src": "8096:53:7"
														}
													]
												},
												"name": "store_literal_in_memory_7bf3d26c1ba6f0571d27961105ce86b9b37cc8bfda0b7e586ec6b3133845d121",
												"nativeSrc": "7979:177:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8077:6:7",
														"nodeType": "YulTypedName",
														"src": "8077:6:7",
														"type": ""
													}
												],
												"src": "7979:177:7"
											},
											{
												"body": {
													"nativeSrc": "8308:220:7",
													"nodeType": "YulBlock",
													"src": "8308:220:7",
													"statements": [
														{
															"nativeSrc": "8318:74:7",
															"nodeType": "YulAssignment",
															"src": "8318:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8384:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8384:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8389:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8389:2:7",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8325:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "8325:58:7"
																},
																"nativeSrc": "8325:67:7",
																"nodeType": "YulFunctionCall",
																"src": "8325:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8318:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8318:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8490:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8490:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7bf3d26c1ba6f0571d27961105ce86b9b37cc8bfda0b7e586ec6b3133845d121",
																	"nativeSrc": "8401:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "8401:88:7"
																},
																"nativeSrc": "8401:93:7",
																"nodeType": "YulFunctionCall",
																"src": "8401:93:7"
															},
															"nativeSrc": "8401:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "8401:93:7"
														},
														{
															"nativeSrc": "8503:19:7",
															"nodeType": "YulAssignment",
															"src": "8503:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8514:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8514:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8519:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8519:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8510:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8510:3:7"
																},
																"nativeSrc": "8510:12:7",
																"nodeType": "YulFunctionCall",
																"src": "8510:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8503:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8503:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7bf3d26c1ba6f0571d27961105ce86b9b37cc8bfda0b7e586ec6b3133845d121_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8162:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8296:3:7",
														"nodeType": "YulTypedName",
														"src": "8296:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8304:3:7",
														"nodeType": "YulTypedName",
														"src": "8304:3:7",
														"type": ""
													}
												],
												"src": "8162:366:7"
											},
											{
												"body": {
													"nativeSrc": "8705:248:7",
													"nodeType": "YulBlock",
													"src": "8705:248:7",
													"statements": [
														{
															"nativeSrc": "8715:26:7",
															"nodeType": "YulAssignment",
															"src": "8715:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8727:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8727:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8738:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8738:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8723:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8723:3:7"
																},
																"nativeSrc": "8723:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8723:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8715:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8715:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8762:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8762:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8773:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8773:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8758:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8758:3:7"
																		},
																		"nativeSrc": "8758:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8758:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8781:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8781:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8787:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8787:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8777:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8777:3:7"
																		},
																		"nativeSrc": "8777:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8777:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8751:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8751:6:7"
																},
																"nativeSrc": "8751:47:7",
																"nodeType": "YulFunctionCall",
																"src": "8751:47:7"
															},
															"nativeSrc": "8751:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "8751:47:7"
														},
														{
															"nativeSrc": "8807:139:7",
															"nodeType": "YulAssignment",
															"src": "8807:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8941:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8941:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7bf3d26c1ba6f0571d27961105ce86b9b37cc8bfda0b7e586ec6b3133845d121_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8815:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "8815:124:7"
																},
																"nativeSrc": "8815:131:7",
																"nodeType": "YulFunctionCall",
																"src": "8815:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8807:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8807:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7bf3d26c1ba6f0571d27961105ce86b9b37cc8bfda0b7e586ec6b3133845d121__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8534:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8685:9:7",
														"nodeType": "YulTypedName",
														"src": "8685:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8700:4:7",
														"nodeType": "YulTypedName",
														"src": "8700:4:7",
														"type": ""
													}
												],
												"src": "8534:419:7"
											},
											{
												"body": {
													"nativeSrc": "9065:72:7",
													"nodeType": "YulBlock",
													"src": "9065:72:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9087:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9087:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9095:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9095:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9083:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9083:3:7"
																		},
																		"nativeSrc": "9083:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9083:14:7"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e636520746f206c6f636b",
																		"kind": "string",
																		"nativeSrc": "9099:30:7",
																		"nodeType": "YulLiteral",
																		"src": "9099:30:7",
																		"type": "",
																		"value": "Insufficient balance to lock"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9076:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9076:6:7"
																},
																"nativeSrc": "9076:54:7",
																"nodeType": "YulFunctionCall",
																"src": "9076:54:7"
															},
															"nativeSrc": "9076:54:7",
															"nodeType": "YulExpressionStatement",
															"src": "9076:54:7"
														}
													]
												},
												"name": "store_literal_in_memory_15d37d1f13ebbf9c2d9f328f9874f34b0342cb2aea3b55aa26d22474d040a371",
												"nativeSrc": "8959:178:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9057:6:7",
														"nodeType": "YulTypedName",
														"src": "9057:6:7",
														"type": ""
													}
												],
												"src": "8959:178:7"
											},
											{
												"body": {
													"nativeSrc": "9289:220:7",
													"nodeType": "YulBlock",
													"src": "9289:220:7",
													"statements": [
														{
															"nativeSrc": "9299:74:7",
															"nodeType": "YulAssignment",
															"src": "9299:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9365:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9365:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9370:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9370:2:7",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9306:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "9306:58:7"
																},
																"nativeSrc": "9306:67:7",
																"nodeType": "YulFunctionCall",
																"src": "9306:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9299:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9299:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9471:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9471:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_15d37d1f13ebbf9c2d9f328f9874f34b0342cb2aea3b55aa26d22474d040a371",
																	"nativeSrc": "9382:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "9382:88:7"
																},
																"nativeSrc": "9382:93:7",
																"nodeType": "YulFunctionCall",
																"src": "9382:93:7"
															},
															"nativeSrc": "9382:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "9382:93:7"
														},
														{
															"nativeSrc": "9484:19:7",
															"nodeType": "YulAssignment",
															"src": "9484:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9495:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9495:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9500:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9500:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9491:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9491:3:7"
																},
																"nativeSrc": "9491:12:7",
																"nodeType": "YulFunctionCall",
																"src": "9491:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9484:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9484:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_15d37d1f13ebbf9c2d9f328f9874f34b0342cb2aea3b55aa26d22474d040a371_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9143:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9277:3:7",
														"nodeType": "YulTypedName",
														"src": "9277:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9285:3:7",
														"nodeType": "YulTypedName",
														"src": "9285:3:7",
														"type": ""
													}
												],
												"src": "9143:366:7"
											},
											{
												"body": {
													"nativeSrc": "9686:248:7",
													"nodeType": "YulBlock",
													"src": "9686:248:7",
													"statements": [
														{
															"nativeSrc": "9696:26:7",
															"nodeType": "YulAssignment",
															"src": "9696:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9708:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9708:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9719:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9719:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9704:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9704:3:7"
																},
																"nativeSrc": "9704:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9704:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9696:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9696:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9743:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9743:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9754:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9754:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9739:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9739:3:7"
																		},
																		"nativeSrc": "9739:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9739:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9762:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9762:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9768:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9768:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9758:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9758:3:7"
																		},
																		"nativeSrc": "9758:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9758:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9732:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9732:6:7"
																},
																"nativeSrc": "9732:47:7",
																"nodeType": "YulFunctionCall",
																"src": "9732:47:7"
															},
															"nativeSrc": "9732:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "9732:47:7"
														},
														{
															"nativeSrc": "9788:139:7",
															"nodeType": "YulAssignment",
															"src": "9788:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9922:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9922:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_15d37d1f13ebbf9c2d9f328f9874f34b0342cb2aea3b55aa26d22474d040a371_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9796:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "9796:124:7"
																},
																"nativeSrc": "9796:131:7",
																"nodeType": "YulFunctionCall",
																"src": "9796:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9788:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9788:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_15d37d1f13ebbf9c2d9f328f9874f34b0342cb2aea3b55aa26d22474d040a371__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9515:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9666:9:7",
														"nodeType": "YulTypedName",
														"src": "9666:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9681:4:7",
														"nodeType": "YulTypedName",
														"src": "9681:4:7",
														"type": ""
													}
												],
												"src": "9515:419:7"
											},
											{
												"body": {
													"nativeSrc": "10094:288:7",
													"nodeType": "YulBlock",
													"src": "10094:288:7",
													"statements": [
														{
															"nativeSrc": "10104:26:7",
															"nodeType": "YulAssignment",
															"src": "10104:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10116:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10116:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10127:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10127:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10112:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10112:3:7"
																},
																"nativeSrc": "10112:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10112:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10104:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10104:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10184:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10184:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10197:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10197:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10208:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10208:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10193:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10193:3:7"
																		},
																		"nativeSrc": "10193:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10193:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10140:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10140:43:7"
																},
																"nativeSrc": "10140:71:7",
																"nodeType": "YulFunctionCall",
																"src": "10140:71:7"
															},
															"nativeSrc": "10140:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "10140:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10265:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10265:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10278:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10278:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10289:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10289:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10274:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10274:3:7"
																		},
																		"nativeSrc": "10274:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10274:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10221:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10221:43:7"
																},
																"nativeSrc": "10221:72:7",
																"nodeType": "YulFunctionCall",
																"src": "10221:72:7"
															},
															"nativeSrc": "10221:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "10221:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10347:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10347:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10360:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10360:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10371:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10371:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10356:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10356:3:7"
																		},
																		"nativeSrc": "10356:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10356:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10303:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10303:43:7"
																},
																"nativeSrc": "10303:72:7",
																"nodeType": "YulFunctionCall",
																"src": "10303:72:7"
															},
															"nativeSrc": "10303:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "10303:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9940:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10050:9:7",
														"nodeType": "YulTypedName",
														"src": "10050:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10062:6:7",
														"nodeType": "YulTypedName",
														"src": "10062:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10070:6:7",
														"nodeType": "YulTypedName",
														"src": "10070:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10078:6:7",
														"nodeType": "YulTypedName",
														"src": "10078:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10089:4:7",
														"nodeType": "YulTypedName",
														"src": "10089:4:7",
														"type": ""
													}
												],
												"src": "9940:442:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611(memPtr) {\n\n        mstore(add(memPtr, 0), \"Exceeds max supply\")\n\n    }\n\n    function abi_encode_t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_7bf3d26c1ba6f0571d27961105ce86b9b37cc8bfda0b7e586ec6b3133845d121(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient locked balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_7bf3d26c1ba6f0571d27961105ce86b9b37cc8bfda0b7e586ec6b3133845d121_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_7bf3d26c1ba6f0571d27961105ce86b9b37cc8bfda0b7e586ec6b3133845d121(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7bf3d26c1ba6f0571d27961105ce86b9b37cc8bfda0b7e586ec6b3133845d121__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7bf3d26c1ba6f0571d27961105ce86b9b37cc8bfda0b7e586ec6b3133845d121_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_15d37d1f13ebbf9c2d9f328f9874f34b0342cb2aea3b55aa26d22474d040a371(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance to lock\")\n\n    }\n\n    function abi_encode_t_stringliteral_15d37d1f13ebbf9c2d9f328f9874f34b0342cb2aea3b55aa26d22474d040a371_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_15d37d1f13ebbf9c2d9f328f9874f34b0342cb2aea3b55aa26d22474d040a371(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_15d37d1f13ebbf9c2d9f328f9874f34b0342cb2aea3b55aa26d22474d040a371__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_15d37d1f13ebbf9c2d9f328f9874f34b0342cb2aea3b55aa26d22474d040a371_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"944": [
									{
										"length": 32,
										"start": 1280
									},
									{
										"length": 32,
										"start": 1334
									},
									{
										"length": 32,
										"start": 2404
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610135575f3560e01c8063715018a6116100b6578063a9059cbb1161007a578063a9059cbb1461032b578063b1c255861461035b578063d5abeb0114610377578063dd62ed3e14610395578063f145c73b146103c5578063f2fde38b146103e357610135565b8063715018a6146102ab5780638da5cb5b146102b55780639358928b146102d357806395d89b41146102f15780639d564d9a1461030f57610135565b8063252e65b2116100fd578063252e65b214610205578063313ce5671461022357806340c10f191461024157806352b8ab351461025d57806370a082311461027b57610135565b80630483a7f61461013957806306fdde0314610169578063095ea7b31461018757806318160ddd146101b757806323b872dd146101d5575b5f5ffd5b610153600480360381019061014e919061123d565b6103ff565b6040516101609190611280565b60405180910390f35b610171610414565b60405161017e9190611309565b60405180910390f35b6101a1600480360381019061019c9190611353565b6104a4565b6040516101ae91906113ab565b60405180910390f35b6101bf6104c6565b6040516101cc9190611280565b60405180910390f35b6101ef60048036038101906101ea91906113c4565b6104cf565b6040516101fc91906113ab565b60405180910390f35b61020d6104fd565b60405161021a9190611280565b60405180910390f35b61022b610524565b604051610238919061142f565b60405180910390f35b61025b60048036038101906102569190611353565b61052c565b005b6102656105b7565b6040516102729190611280565b60405180910390f35b6102956004803603810190610290919061123d565b6105c0565b6040516102a29190611280565b60405180910390f35b6102b3610605565b005b6102bd610618565b6040516102ca9190611457565b60405180910390f35b6102db610640565b6040516102e89190611280565b60405180910390f35b6102f961065b565b6040516103069190611309565b60405180910390f35b61032960048036038101906103249190611353565b6106eb565b005b61034560048036038101906103409190611353565b610830565b60405161035291906113ab565b60405180910390f35b61037560048036038101906103709190611353565b610852565b005b61037f610962565b60405161038c9190611280565b60405180910390f35b6103af60048036038101906103aa9190611470565b610986565b6040516103bc9190611280565b60405180910390f35b6103cd610a08565b6040516103da9190611280565b60405180910390f35b6103fd60048036038101906103f8919061123d565b610a0e565b005b6006602052805f5260405f205f915090505481565b606060038054610423906114db565b80601f016020809104026020016040519081016040528092919081815260200182805461044f906114db565b801561049a5780601f106104715761010080835404028352916020019161049a565b820191905f5260205f20905b81548152906001019060200180831161047d57829003601f168201915b5050505050905090565b5f5f6104ae610a92565b90506104bb818585610a99565b600191505092915050565b5f600254905090565b5f5f6104d9610a92565b90506104e6858285610aab565b6104f1858585610b3e565b60019150509392505050565b5f7f0000000000000000000000000000000000000000000000000000000000000000905090565b5f6012905090565b610534610c2e565b7f00000000000000000000000000000000000000000000000000000000000000008161055e6104c6565b6105689190611538565b11156105a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a0906115b5565b60405180910390fd5b6105b38282610cb5565b5050565b5f600754905090565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61060d610c2e565b6106165f610d34565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f60075461064c6104c6565b61065691906115d3565b905090565b60606004805461066a906114db565b80601f0160208091040260200160405190810160405280929190818152602001828054610696906114db565b80156106e15780601f106106b8576101008083540402835291602001916106e1565b820191905f5260205f20905b8154815290600101906020018083116106c457829003601f168201915b5050505050905090565b6106f3610c2e565b8060065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541015610773576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076a90611650565b60405180910390fd5b8060065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546107bf91906115d3565b925050819055508060075f8282546107d791906115d3565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167fe7b379c6c1fa169e9079c25e9143b127637eef8ec8c9d5c06ddb4ab3e1195888826040516108249190611280565b60405180910390a25050565b5f5f61083a610a92565b9050610847818585610b3e565b600191505092915050565b61085a610c2e565b80610864836105c0565b10156108a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089c906116b8565b60405180910390fd5b8060065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546108f19190611538565b925050819055508060075f8282546109099190611538565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167fac87f20a77d28ee8bbb58ec87ea8fa968b3393efae1a368fd50b767c2847391c826040516109569190611280565b60405180910390a25050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b60075481565b610a16610c2e565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a86575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610a7d9190611457565b60405180910390fd5b610a8f81610d34565b50565b5f33905090565b610aa68383836001610df7565b505050565b5f610ab68484610986565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610b385781811015610b29578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610b20939291906116d6565b60405180910390fd5b610b3784848484035f610df7565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610bae575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610ba59190611457565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c1e575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610c159190611457565b60405180910390fd5b610c29838383610fc6565b505050565b610c36610a92565b73ffffffffffffffffffffffffffffffffffffffff16610c54610618565b73ffffffffffffffffffffffffffffffffffffffff1614610cb357610c77610a92565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610caa9190611457565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d25575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610d1c9190611457565b60405180910390fd5b610d305f8383610fc6565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610e67575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610e5e9190611457565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ed7575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610ece9190611457565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610fc0578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610fb79190611280565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611016578060025f82825461100a9190611538565b925050819055506110e4565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561109f578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611096939291906116d6565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361112b578060025f8282540392505081905550611175565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516111d29190611280565b60405180910390a3505050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61120c826111e3565b9050919050565b61121c81611202565b8114611226575f5ffd5b50565b5f8135905061123781611213565b92915050565b5f60208284031215611252576112516111df565b5b5f61125f84828501611229565b91505092915050565b5f819050919050565b61127a81611268565b82525050565b5f6020820190506112935f830184611271565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6112db82611299565b6112e581856112a3565b93506112f58185602086016112b3565b6112fe816112c1565b840191505092915050565b5f6020820190508181035f83015261132181846112d1565b905092915050565b61133281611268565b811461133c575f5ffd5b50565b5f8135905061134d81611329565b92915050565b5f5f60408385031215611369576113686111df565b5b5f61137685828601611229565b92505060206113878582860161133f565b9150509250929050565b5f8115159050919050565b6113a581611391565b82525050565b5f6020820190506113be5f83018461139c565b92915050565b5f5f5f606084860312156113db576113da6111df565b5b5f6113e886828701611229565b93505060206113f986828701611229565b925050604061140a8682870161133f565b9150509250925092565b5f60ff82169050919050565b61142981611414565b82525050565b5f6020820190506114425f830184611420565b92915050565b61145181611202565b82525050565b5f60208201905061146a5f830184611448565b92915050565b5f5f60408385031215611486576114856111df565b5b5f61149385828601611229565b92505060206114a485828601611229565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806114f257607f821691505b602082108103611505576115046114ae565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61154282611268565b915061154d83611268565b92508282019050808211156115655761156461150b565b5b92915050565b7f45786365656473206d617820737570706c7900000000000000000000000000005f82015250565b5f61159f6012836112a3565b91506115aa8261156b565b602082019050919050565b5f6020820190508181035f8301526115cc81611593565b9050919050565b5f6115dd82611268565b91506115e883611268565b9250828203905081811115611600576115ff61150b565b5b92915050565b7f496e73756666696369656e74206c6f636b65642062616c616e636500000000005f82015250565b5f61163a601b836112a3565b915061164582611606565b602082019050919050565b5f6020820190508181035f8301526116678161162e565b9050919050565b7f496e73756666696369656e742062616c616e636520746f206c6f636b000000005f82015250565b5f6116a2601c836112a3565b91506116ad8261166e565b602082019050919050565b5f6020820190508181035f8301526116cf81611696565b9050919050565b5f6060820190506116e95f830186611448565b6116f66020830185611271565b6117036040830184611271565b94935050505056fea2646970667358221220fce0a320d6db3eeaca8b32f95b60b0167a248f060a8f46ac97e9542ecb17078164736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x135 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0xB1C25586 EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x377 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0xF145C73B EQ PUSH2 0x3C5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3E3 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x9358928B EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0x9D564D9A EQ PUSH2 0x30F JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x252E65B2 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x252E65B2 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x52B8AB35 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x27B JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x483A7F6 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D5 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x153 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x123D JUMP JUMPDEST PUSH2 0x3FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH2 0x414 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x1309 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x1353 JUMP JUMPDEST PUSH2 0x4A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x13AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH2 0x4C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x13C4 JUMP JUMPDEST PUSH2 0x4CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x13AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20D PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22B PUSH2 0x524 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x238 SWAP2 SWAP1 PUSH2 0x142F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x1353 JUMP JUMPDEST PUSH2 0x52C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x265 PUSH2 0x5B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x295 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x123D JUMP JUMPDEST PUSH2 0x5C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B3 PUSH2 0x605 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BD PUSH2 0x618 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x1457 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DB PUSH2 0x640 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F9 PUSH2 0x65B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x1309 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x329 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x1353 JUMP JUMPDEST PUSH2 0x6EB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x345 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x340 SWAP2 SWAP1 PUSH2 0x1353 JUMP JUMPDEST PUSH2 0x830 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x13AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x375 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x1353 JUMP JUMPDEST PUSH2 0x852 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37F PUSH2 0x962 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0x1470 JUMP JUMPDEST PUSH2 0x986 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CD PUSH2 0xA08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DA SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F8 SWAP2 SWAP1 PUSH2 0x123D JUMP JUMPDEST PUSH2 0xA0E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x423 SWAP1 PUSH2 0x14DB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x44F SWAP1 PUSH2 0x14DB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x49A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x471 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x49A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x47D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x4AE PUSH2 0xA92 JUMP JUMPDEST SWAP1 POP PUSH2 0x4BB DUP2 DUP6 DUP6 PUSH2 0xA99 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x4D9 PUSH2 0xA92 JUMP JUMPDEST SWAP1 POP PUSH2 0x4E6 DUP6 DUP3 DUP6 PUSH2 0xAAB JUMP JUMPDEST PUSH2 0x4F1 DUP6 DUP6 DUP6 PUSH2 0xB3E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x534 PUSH2 0xC2E JUMP JUMPDEST PUSH32 0x0 DUP2 PUSH2 0x55E PUSH2 0x4C6 JUMP JUMPDEST PUSH2 0x568 SWAP2 SWAP1 PUSH2 0x1538 JUMP JUMPDEST GT ISZERO PUSH2 0x5A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A0 SWAP1 PUSH2 0x15B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5B3 DUP3 DUP3 PUSH2 0xCB5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x60D PUSH2 0xC2E JUMP JUMPDEST PUSH2 0x616 PUSH0 PUSH2 0xD34 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x7 SLOAD PUSH2 0x64C PUSH2 0x4C6 JUMP JUMPDEST PUSH2 0x656 SWAP2 SWAP1 PUSH2 0x15D3 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x66A SWAP1 PUSH2 0x14DB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x696 SWAP1 PUSH2 0x14DB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6E1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6B8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6E1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6C4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6F3 PUSH2 0xC2E JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x773 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76A SWAP1 PUSH2 0x1650 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7BF SWAP2 SWAP1 PUSH2 0x15D3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7D7 SWAP2 SWAP1 PUSH2 0x15D3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE7B379C6C1FA169E9079C25E9143B127637EEF8EC8C9D5C06DDB4AB3E1195888 DUP3 PUSH1 0x40 MLOAD PUSH2 0x824 SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x83A PUSH2 0xA92 JUMP JUMPDEST SWAP1 POP PUSH2 0x847 DUP2 DUP6 DUP6 PUSH2 0xB3E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x85A PUSH2 0xC2E JUMP JUMPDEST DUP1 PUSH2 0x864 DUP4 PUSH2 0x5C0 JUMP JUMPDEST LT ISZERO PUSH2 0x8A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89C SWAP1 PUSH2 0x16B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8F1 SWAP2 SWAP1 PUSH2 0x1538 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x909 SWAP2 SWAP1 PUSH2 0x1538 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xAC87F20A77D28EE8BBB58EC87EA8FA968B3393EFAE1A368FD50B767C2847391C DUP3 PUSH1 0x40 MLOAD PUSH2 0x956 SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xA16 PUSH2 0xC2E JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA86 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA7D SWAP2 SWAP1 PUSH2 0x1457 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA8F DUP2 PUSH2 0xD34 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xAA6 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xDF7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xAB6 DUP5 DUP5 PUSH2 0x986 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xB38 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xB29 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB20 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB37 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xDF7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBAE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA5 SWAP2 SWAP1 PUSH2 0x1457 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC1E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC15 SWAP2 SWAP1 PUSH2 0x1457 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC29 DUP4 DUP4 DUP4 PUSH2 0xFC6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xC36 PUSH2 0xA92 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC54 PUSH2 0x618 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCB3 JUMPI PUSH2 0xC77 PUSH2 0xA92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCAA SWAP2 SWAP1 PUSH2 0x1457 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD25 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD1C SWAP2 SWAP1 PUSH2 0x1457 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD30 PUSH0 DUP4 DUP4 PUSH2 0xFC6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE67 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE5E SWAP2 SWAP1 PUSH2 0x1457 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xED7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xECE SWAP2 SWAP1 PUSH2 0x1457 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xFC0 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xFB7 SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1016 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x100A SWAP2 SWAP1 PUSH2 0x1538 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x10E4 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x109F JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1096 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x112B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1175 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x11D2 SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x120C DUP3 PUSH2 0x11E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x121C DUP2 PUSH2 0x1202 JUMP JUMPDEST DUP2 EQ PUSH2 0x1226 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1237 DUP2 PUSH2 0x1213 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1252 JUMPI PUSH2 0x1251 PUSH2 0x11DF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x125F DUP5 DUP3 DUP6 ADD PUSH2 0x1229 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x127A DUP2 PUSH2 0x1268 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1293 PUSH0 DUP4 ADD DUP5 PUSH2 0x1271 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12DB DUP3 PUSH2 0x1299 JUMP JUMPDEST PUSH2 0x12E5 DUP2 DUP6 PUSH2 0x12A3 JUMP JUMPDEST SWAP4 POP PUSH2 0x12F5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x12B3 JUMP JUMPDEST PUSH2 0x12FE DUP2 PUSH2 0x12C1 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1321 DUP2 DUP5 PUSH2 0x12D1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1332 DUP2 PUSH2 0x1268 JUMP JUMPDEST DUP2 EQ PUSH2 0x133C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x134D DUP2 PUSH2 0x1329 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1369 JUMPI PUSH2 0x1368 PUSH2 0x11DF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1376 DUP6 DUP3 DUP7 ADD PUSH2 0x1229 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1387 DUP6 DUP3 DUP7 ADD PUSH2 0x133F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13A5 DUP2 PUSH2 0x1391 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13BE PUSH0 DUP4 ADD DUP5 PUSH2 0x139C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13DB JUMPI PUSH2 0x13DA PUSH2 0x11DF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13E8 DUP7 DUP3 DUP8 ADD PUSH2 0x1229 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x13F9 DUP7 DUP3 DUP8 ADD PUSH2 0x1229 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x140A DUP7 DUP3 DUP8 ADD PUSH2 0x133F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1429 DUP2 PUSH2 0x1414 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1442 PUSH0 DUP4 ADD DUP5 PUSH2 0x1420 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1451 DUP2 PUSH2 0x1202 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x146A PUSH0 DUP4 ADD DUP5 PUSH2 0x1448 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1486 JUMPI PUSH2 0x1485 PUSH2 0x11DF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1493 DUP6 DUP3 DUP7 ADD PUSH2 0x1229 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14A4 DUP6 DUP3 DUP7 ADD PUSH2 0x1229 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x14F2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1505 JUMPI PUSH2 0x1504 PUSH2 0x14AE JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1542 DUP3 PUSH2 0x1268 JUMP JUMPDEST SWAP2 POP PUSH2 0x154D DUP4 PUSH2 0x1268 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1565 JUMPI PUSH2 0x1564 PUSH2 0x150B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45786365656473206D617820737570706C790000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x159F PUSH1 0x12 DUP4 PUSH2 0x12A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x15AA DUP3 PUSH2 0x156B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x15CC DUP2 PUSH2 0x1593 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15DD DUP3 PUSH2 0x1268 JUMP JUMPDEST SWAP2 POP PUSH2 0x15E8 DUP4 PUSH2 0x1268 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1600 JUMPI PUSH2 0x15FF PUSH2 0x150B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74206C6F636B65642062616C616E63650000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x163A PUSH1 0x1B DUP4 PUSH2 0x12A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1645 DUP3 PUSH2 0x1606 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1667 DUP2 PUSH2 0x162E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E636520746F206C6F636B00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x16A2 PUSH1 0x1C DUP4 PUSH2 0x12A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x16AD DUP3 PUSH2 0x166E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16CF DUP2 PUSH2 0x1696 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x16E9 PUSH0 DUP4 ADD DUP7 PUSH2 0x1448 JUMP JUMPDEST PUSH2 0x16F6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1271 JUMP JUMPDEST PUSH2 0x1703 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1271 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC RJUMP 0xA320 0xD6 0xDB RETURNDATACOPY 0xEA 0xCA DUP12 ORIGIN EXTDELEGATECALL JUMPDEST PUSH1 0xB0 AND PUSH27 0x248F060A8F46AC97E9542ECB17078164736F6C634300081D003300 ",
							"sourceMap": "456:3058:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;686:49;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1779:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3417:95:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1681:171:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3191:99;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3004:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2949:112:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2530:284:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3315:178:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2049:276:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;577:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;796:26:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;686:49:6;;;;;;;;;;;;;;;;;:::o;1779:89:2:-;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2849:97::-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;3417:95:6:-;3470:7;3496:9;3489:16;;3417:95;:::o;2707:82:2:-;2756:5;2780:2;2773:9;;2707:82;:::o;1681:171:6:-;1531:13:0;:11;:13::i;:::-;1786:9:6::1;1776:6;1760:13;:11;:13::i;:::-;:22;;;;:::i;:::-;:35;;1752:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;1828:17;1834:2;1838:6;1828:5;:17::i;:::-;1681:171:::0;;:::o;3191:99::-;3246:7;3272:11;;3265:18;;3191:99;:::o;3004:116:2:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2949:112:6:-;3001:7;3043:11;;3027:13;:11;:13::i;:::-;:27;;;;:::i;:::-;3020:34;;2949:112;:::o;1981:93:2:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;2530:284:6:-;1531:13:0;:11;:13::i;:::-;2649:6:6::1;2622:14;:23;2637:7;2622:23;;;;;;;;;;;;;;;;:33;;2614:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2724:6;2697:14;:23;2712:7;2697:23;;;;;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;;;;;2755:6;2740:11;;:21;;;;;;;:::i;:::-;;;;;;;;2791:7;2776:31;;;2800:6;2776:31;;;;;;:::i;:::-;;;;;;;;2530:284:::0;;:::o;3315:178:2:-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;2049:276:6:-;1531:13:0;:11;:13::i;:::-;2161:6:6::1;2139:18;2149:7;2139:9;:18::i;:::-;:28;;2131:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2237:6;2210:14;:23;2225:7;2210:23;;;;;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;;;;;2268:6;2253:11;;:21;;;;;;;:::i;:::-;;;;;;;;2302:7;2289:29;;;2311:6;2289:29;;;;;;:::i;:::-;;;;;;;;2049:276:::0;;:::o;577:34::-;;;:::o;3551:140:2:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;796:26:6:-;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8726:128:2:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:476::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10599:17;10580:16;:36;10576:309;;;10655:5;10636:16;:24;10632:130;;;10714:7;10723:16;10741:5;10687:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10632:130;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10576:309;10504:387;10415:476;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;7458:208:2:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9701:432:2:-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;88:117:7:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:99::-;1663:6;1697:5;1691:12;1681:22;;1611:99;;;:::o;1716:169::-;1800:11;1834:6;1829:3;1822:19;1874:4;1869:3;1865:14;1850:29;;1716:169;;;;:::o;1891:139::-;1980:6;1975:3;1970;1964:23;2021:1;2012:6;2007:3;2003:16;1996:27;1891:139;;;:::o;2036:102::-;2077:6;2128:2;2124:7;2119:2;2112:5;2108:14;2104:28;2094:38;;2036:102;;;:::o;2144:377::-;2232:3;2260:39;2293:5;2260:39;:::i;:::-;2315:71;2379:6;2374:3;2315:71;:::i;:::-;2308:78;;2395:65;2453:6;2448:3;2441:4;2434:5;2430:16;2395:65;:::i;:::-;2485:29;2507:6;2485:29;:::i;:::-;2480:3;2476:39;2469:46;;2236:285;2144:377;;;;:::o;2527:313::-;2640:4;2678:2;2667:9;2663:18;2655:26;;2727:9;2721:4;2717:20;2713:1;2702:9;2698:17;2691:47;2755:78;2828:4;2819:6;2755:78;:::i;:::-;2747:86;;2527:313;;;;:::o;2846:122::-;2919:24;2937:5;2919:24;:::i;:::-;2912:5;2909:35;2899:63;;2958:1;2955;2948:12;2899:63;2846:122;:::o;2974:139::-;3020:5;3058:6;3045:20;3036:29;;3074:33;3101:5;3074:33;:::i;:::-;2974:139;;;;:::o;3119:474::-;3187:6;3195;3244:2;3232:9;3223:7;3219:23;3215:32;3212:119;;;3250:79;;:::i;:::-;3212:119;3370:1;3395:53;3440:7;3431:6;3420:9;3416:22;3395:53;:::i;:::-;3385:63;;3341:117;3497:2;3523:53;3568:7;3559:6;3548:9;3544:22;3523:53;:::i;:::-;3513:63;;3468:118;3119:474;;;;;:::o;3599:90::-;3633:7;3676:5;3669:13;3662:21;3651:32;;3599:90;;;:::o;3695:109::-;3776:21;3791:5;3776:21;:::i;:::-;3771:3;3764:34;3695:109;;:::o;3810:210::-;3897:4;3935:2;3924:9;3920:18;3912:26;;3948:65;4010:1;3999:9;3995:17;3986:6;3948:65;:::i;:::-;3810:210;;;;:::o;4026:619::-;4103:6;4111;4119;4168:2;4156:9;4147:7;4143:23;4139:32;4136:119;;;4174:79;;:::i;:::-;4136:119;4294:1;4319:53;4364:7;4355:6;4344:9;4340:22;4319:53;:::i;:::-;4309:63;;4265:117;4421:2;4447:53;4492:7;4483:6;4472:9;4468:22;4447:53;:::i;:::-;4437:63;;4392:118;4549:2;4575:53;4620:7;4611:6;4600:9;4596:22;4575:53;:::i;:::-;4565:63;;4520:118;4026:619;;;;;:::o;4651:86::-;4686:7;4726:4;4719:5;4715:16;4704:27;;4651:86;;;:::o;4743:112::-;4826:22;4842:5;4826:22;:::i;:::-;4821:3;4814:35;4743:112;;:::o;4861:214::-;4950:4;4988:2;4977:9;4973:18;4965:26;;5001:67;5065:1;5054:9;5050:17;5041:6;5001:67;:::i;:::-;4861:214;;;;:::o;5081:118::-;5168:24;5186:5;5168:24;:::i;:::-;5163:3;5156:37;5081:118;;:::o;5205:222::-;5298:4;5336:2;5325:9;5321:18;5313:26;;5349:71;5417:1;5406:9;5402:17;5393:6;5349:71;:::i;:::-;5205:222;;;;:::o;5433:474::-;5501:6;5509;5558:2;5546:9;5537:7;5533:23;5529:32;5526:119;;;5564:79;;:::i;:::-;5526:119;5684:1;5709:53;5754:7;5745:6;5734:9;5730:22;5709:53;:::i;:::-;5699:63;;5655:117;5811:2;5837:53;5882:7;5873:6;5862:9;5858:22;5837:53;:::i;:::-;5827:63;;5782:118;5433:474;;;;;:::o;5913:180::-;5961:77;5958:1;5951:88;6058:4;6055:1;6048:15;6082:4;6079:1;6072:15;6099:320;6143:6;6180:1;6174:4;6170:12;6160:22;;6227:1;6221:4;6217:12;6248:18;6238:81;;6304:4;6296:6;6292:17;6282:27;;6238:81;6366:2;6358:6;6355:14;6335:18;6332:38;6329:84;;6385:18;;:::i;:::-;6329:84;6150:269;6099:320;;;:::o;6425:180::-;6473:77;6470:1;6463:88;6570:4;6567:1;6560:15;6594:4;6591:1;6584:15;6611:191;6651:3;6670:20;6688:1;6670:20;:::i;:::-;6665:25;;6704:20;6722:1;6704:20;:::i;:::-;6699:25;;6747:1;6744;6740:9;6733:16;;6768:3;6765:1;6762:10;6759:36;;;6775:18;;:::i;:::-;6759:36;6611:191;;;;:::o;6808:168::-;6948:20;6944:1;6936:6;6932:14;6925:44;6808:168;:::o;6982:366::-;7124:3;7145:67;7209:2;7204:3;7145:67;:::i;:::-;7138:74;;7221:93;7310:3;7221:93;:::i;:::-;7339:2;7334:3;7330:12;7323:19;;6982:366;;;:::o;7354:419::-;7520:4;7558:2;7547:9;7543:18;7535:26;;7607:9;7601:4;7597:20;7593:1;7582:9;7578:17;7571:47;7635:131;7761:4;7635:131;:::i;:::-;7627:139;;7354:419;;;:::o;7779:194::-;7819:4;7839:20;7857:1;7839:20;:::i;:::-;7834:25;;7873:20;7891:1;7873:20;:::i;:::-;7868:25;;7917:1;7914;7910:9;7902:17;;7941:1;7935:4;7932:11;7929:37;;;7946:18;;:::i;:::-;7929:37;7779:194;;;;:::o;7979:177::-;8119:29;8115:1;8107:6;8103:14;8096:53;7979:177;:::o;8162:366::-;8304:3;8325:67;8389:2;8384:3;8325:67;:::i;:::-;8318:74;;8401:93;8490:3;8401:93;:::i;:::-;8519:2;8514:3;8510:12;8503:19;;8162:366;;;:::o;8534:419::-;8700:4;8738:2;8727:9;8723:18;8715:26;;8787:9;8781:4;8777:20;8773:1;8762:9;8758:17;8751:47;8815:131;8941:4;8815:131;:::i;:::-;8807:139;;8534:419;;;:::o;8959:178::-;9099:30;9095:1;9087:6;9083:14;9076:54;8959:178;:::o;9143:366::-;9285:3;9306:67;9370:2;9365:3;9306:67;:::i;:::-;9299:74;;9382:93;9471:3;9382:93;:::i;:::-;9500:2;9495:3;9491:12;9484:19;;9143:366;;;:::o;9515:419::-;9681:4;9719:2;9708:9;9704:18;9696:26;;9768:9;9762:4;9758:20;9754:1;9743:9;9739:17;9732:47;9796:131;9922:4;9796:131;:::i;:::-;9788:139;;9515:419;;;:::o;9940:442::-;10089:4;10127:2;10116:9;10112:18;10104:26;;10140:71;10208:1;10197:9;10193:17;10184:6;10140:71;:::i;:::-;10221:72;10289:2;10278:9;10274:18;10265:6;10221:72;:::i;:::-;10303;10371:2;10360:9;10356:18;10347:6;10303:72;:::i;:::-;9940:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1190600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2939",
								"circulatingSupply()": "infinite",
								"decimals()": "383",
								"fullyDilutedSupply()": "infinite",
								"lockTokens(address,uint256)": "infinite",
								"lockedBalances(address)": "2826",
								"lockedTotal()": "2535",
								"maxSupply()": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"nonCirculatingSupply()": "2521",
								"owner()": "2560",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2522",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"unlockTokens(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 456,
									"end": 3514,
									"name": "PUSH",
									"source": 6,
									"value": "A0"
								},
								{
									"begin": 456,
									"end": 3514,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 456,
									"end": 3514,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1165,
									"end": 1478,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1165,
									"end": 1478,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1165,
									"end": 1478,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1165,
									"end": 1478,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1165,
									"end": 1478,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1165,
									"end": 1478,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1165,
									"end": 1478,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1165,
									"end": 1478,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1165,
									"end": 1478,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1165,
									"end": 1478,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1165,
									"end": 1478,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1165,
									"end": 1478,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1165,
									"end": 1478,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1165,
									"end": 1478,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1165,
									"end": 1478,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 1165,
									"end": 1478,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1165,
									"end": 1478,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1165,
									"end": 1478,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1165,
									"end": 1478,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1165,
									"end": 1478,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1165,
									"end": 1478,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1165,
									"end": 1478,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1165,
									"end": 1478,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1165,
									"end": 1478,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1165,
									"end": 1478,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1165,
									"end": 1478,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1165,
									"end": 1478,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1165,
									"end": 1478,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1165,
									"end": 1478,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1165,
									"end": 1478,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1165,
									"end": 1478,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1165,
									"end": 1478,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1165,
									"end": 1478,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1165,
									"end": 1478,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1165,
									"end": 1478,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1293,
									"end": 1303,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "1E"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "43697263756C6174696E67537570706C79546F6B656E457874656E6465640000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "4353544500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1345,
									"end": 1355,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1327,
									"end": 1341,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1327,
									"end": 1355,
									"modifierDepth": 2,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1327,
									"end": 1355,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1319,
									"end": 1396,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1319,
									"end": 1396,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1319,
									"end": 1396,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1319,
									"end": 1396,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1319,
									"end": 1396,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1319,
									"end": 1396,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1319,
									"end": 1396,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1319,
									"end": 1396,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1319,
									"end": 1396,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1319,
									"end": 1396,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1319,
									"end": 1396,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1319,
									"end": 1396,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1319,
									"end": 1396,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1319,
									"end": 1396,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1319,
									"end": 1396,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1319,
									"end": 1396,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1319,
									"end": 1396,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1319,
									"end": 1396,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1319,
									"end": 1396,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1319,
									"end": 1396,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1319,
									"end": 1396,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1319,
									"end": 1396,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1319,
									"end": 1396,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1319,
									"end": 1396,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1418,
									"end": 1428,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 1428,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 1406,
									"end": 1428,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 1428,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 1428,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 1428,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 1428,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1438,
									"end": 1471,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1444,
									"end": 1454,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1456,
									"end": 1470,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1438,
									"end": 1443,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1438,
									"end": 1443,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1438,
									"end": 1443,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1438,
									"end": 1471,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1438,
									"end": 1471,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1438,
									"end": 1471,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1438,
									"end": 1471,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1438,
									"end": 1471,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1165,
									"end": 1478,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1165,
									"end": 1478,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 456,
									"end": 3514,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 456,
									"end": 3514,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7547,
									"end": 7548,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7601,
									"end": 7602,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 7572,
									"end": 7604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7644,
									"end": 7651,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7653,
									"end": 7658,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6113,
									"end": 6114,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6101,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6249,
									"end": 6254,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 6233,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6304,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6316,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6317,
									"end": 6321,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6354,
									"end": 6359,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6340,
									"end": 6351,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6411,
									"end": 6415,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6417,
									"end": 6428,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6430,
									"end": 6435,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 6386,
									"end": 6436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6608,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6600,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6581,
									"end": 6585,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 6633,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6661,
									"end": 6662,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6649,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6826,
									"end": 6831,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7038,
									"end": 7043,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7030,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7031,
									"end": 7033,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7098,
									"end": 7100,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 7083,
									"end": 7108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "tag",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 773,
									"end": 779,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 781,
									"end": 787,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 830,
									"end": 832,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 818,
									"end": 827,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 809,
									"end": 816,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 805,
									"end": 828,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 801,
									"end": 833,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 798,
									"end": 917,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 798,
									"end": 917,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 798,
									"end": 917,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 836,
									"end": 915,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 836,
									"end": 915,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 836,
									"end": 915,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 836,
									"end": 915,
									"name": "tag",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 836,
									"end": 915,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 798,
									"end": 917,
									"name": "tag",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 798,
									"end": 917,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 956,
									"end": 957,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 981,
									"end": 1045,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 1037,
									"end": 1044,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1028,
									"end": 1034,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1017,
									"end": 1026,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1013,
									"end": 1035,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 981,
									"end": 1045,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 981,
									"end": 1045,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 981,
									"end": 1045,
									"name": "tag",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 981,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 971,
									"end": 1045,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 971,
									"end": 1045,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 927,
									"end": 1055,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1094,
									"end": 1096,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1120,
									"end": 1184,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 1176,
									"end": 1183,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1167,
									"end": 1173,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1156,
									"end": 1165,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1152,
									"end": 1174,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1120,
									"end": 1184,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1120,
									"end": 1184,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1120,
									"end": 1184,
									"name": "tag",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 1120,
									"end": 1184,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1110,
									"end": 1184,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1110,
									"end": 1184,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1065,
									"end": 1194,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 694,
									"end": 1201,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 694,
									"end": 1201,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1207,
									"end": 1306,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 1207,
									"end": 1306,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1259,
									"end": 1265,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1293,
									"end": 1298,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1287,
									"end": 1299,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1277,
									"end": 1299,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1277,
									"end": 1299,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1207,
									"end": 1306,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1207,
									"end": 1306,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1207,
									"end": 1306,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1207,
									"end": 1306,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1312,
									"end": 1492,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1312,
									"end": 1492,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1360,
									"end": 1437,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1357,
									"end": 1358,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1350,
									"end": 1438,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1457,
									"end": 1461,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1454,
									"end": 1455,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1447,
									"end": 1462,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1481,
									"end": 1485,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1478,
									"end": 1479,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1471,
									"end": 1486,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1498,
									"end": 1678,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 1498,
									"end": 1678,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1546,
									"end": 1623,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1543,
									"end": 1544,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1536,
									"end": 1624,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1643,
									"end": 1647,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1640,
									"end": 1641,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1633,
									"end": 1648,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1667,
									"end": 1671,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1664,
									"end": 1665,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1657,
									"end": 1672,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1684,
									"end": 2004,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 1684,
									"end": 2004,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1728,
									"end": 1734,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1765,
									"end": 1766,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1759,
									"end": 1763,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1755,
									"end": 1767,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 1745,
									"end": 1767,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1745,
									"end": 1767,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1812,
									"end": 1813,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1806,
									"end": 1810,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1802,
									"end": 1814,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1833,
									"end": 1851,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1823,
									"end": 1904,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 1823,
									"end": 1904,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1889,
									"end": 1893,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 1881,
									"end": 1887,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1877,
									"end": 1894,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1867,
									"end": 1894,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1867,
									"end": 1894,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1823,
									"end": 1904,
									"name": "tag",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 1823,
									"end": 1904,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1951,
									"end": 1953,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1943,
									"end": 1949,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1940,
									"end": 1954,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1920,
									"end": 1938,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1917,
									"end": 1955,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1914,
									"end": 1998,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 1914,
									"end": 1998,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1970,
									"end": 1988,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 1970,
									"end": 1988,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 1970,
									"end": 1988,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1970,
									"end": 1988,
									"name": "tag",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 1970,
									"end": 1988,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1914,
									"end": 1998,
									"name": "tag",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 1914,
									"end": 1998,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1735,
									"end": 2004,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1684,
									"end": 2004,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1684,
									"end": 2004,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1684,
									"end": 2004,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1684,
									"end": 2004,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2010,
									"end": 2151,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 2010,
									"end": 2151,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2059,
									"end": 2063,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2082,
									"end": 2085,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2074,
									"end": 2085,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2074,
									"end": 2085,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2105,
									"end": 2108,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2102,
									"end": 2103,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2095,
									"end": 2109,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2139,
									"end": 2143,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2136,
									"end": 2137,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2126,
									"end": 2144,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 2118,
									"end": 2144,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2118,
									"end": 2144,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2010,
									"end": 2151,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2010,
									"end": 2151,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2010,
									"end": 2151,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2010,
									"end": 2151,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2157,
									"end": 2250,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 2157,
									"end": 2250,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2194,
									"end": 2200,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2241,
									"end": 2243,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2236,
									"end": 2238,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2229,
									"end": 2234,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2225,
									"end": 2239,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2221,
									"end": 2244,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 2211,
									"end": 2244,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2211,
									"end": 2244,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2157,
									"end": 2250,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2157,
									"end": 2250,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2157,
									"end": 2250,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2157,
									"end": 2250,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2256,
									"end": 2363,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 2256,
									"end": 2363,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2308,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2350,
									"end": 2355,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2344,
									"end": 2348,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2340,
									"end": 2356,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2319,
									"end": 2356,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2319,
									"end": 2356,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2256,
									"end": 2363,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2256,
									"end": 2363,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2256,
									"end": 2363,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2256,
									"end": 2363,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2256,
									"end": 2363,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2369,
									"end": 2762,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 2369,
									"end": 2762,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2438,
									"end": 2444,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2488,
									"end": 2489,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 2476,
									"end": 2486,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2472,
									"end": 2490,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2511,
									"end": 2608,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 2541,
									"end": 2607,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2530,
									"end": 2539,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2511,
									"end": 2608,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 2511,
									"end": 2608,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2511,
									"end": 2608,
									"name": "tag",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 2511,
									"end": 2608,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2629,
									"end": 2668,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 2659,
									"end": 2667,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2648,
									"end": 2657,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2629,
									"end": 2668,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 2629,
									"end": 2668,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2629,
									"end": 2668,
									"name": "tag",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 2629,
									"end": 2668,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2617,
									"end": 2668,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 2617,
									"end": 2668,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2701,
									"end": 2705,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2697,
									"end": 2706,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2690,
									"end": 2695,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2686,
									"end": 2707,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2677,
									"end": 2707,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 2677,
									"end": 2707,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2750,
									"end": 2754,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2740,
									"end": 2748,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2736,
									"end": 2755,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2729,
									"end": 2734,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2726,
									"end": 2756,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2716,
									"end": 2756,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2716,
									"end": 2756,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2445,
									"end": 2762,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2445,
									"end": 2762,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2369,
									"end": 2762,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 2369,
									"end": 2762,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2369,
									"end": 2762,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2369,
									"end": 2762,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2369,
									"end": 2762,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2369,
									"end": 2762,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2768,
									"end": 2828,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 2768,
									"end": 2828,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2796,
									"end": 2799,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2817,
									"end": 2822,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2810,
									"end": 2822,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2810,
									"end": 2822,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2768,
									"end": 2828,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2768,
									"end": 2828,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2768,
									"end": 2828,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2768,
									"end": 2828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2834,
									"end": 2976,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 2834,
									"end": 2976,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2884,
									"end": 2893,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2917,
									"end": 2970,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 2935,
									"end": 2969,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 2944,
									"end": 2968,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 2962,
									"end": 2967,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2944,
									"end": 2968,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 2944,
									"end": 2968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2944,
									"end": 2968,
									"name": "tag",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 2944,
									"end": 2968,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2935,
									"end": 2969,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 2935,
									"end": 2969,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2935,
									"end": 2969,
									"name": "tag",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 2935,
									"end": 2969,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2917,
									"end": 2970,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 2917,
									"end": 2970,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2917,
									"end": 2970,
									"name": "tag",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 2917,
									"end": 2970,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2904,
									"end": 2970,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2904,
									"end": 2970,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2834,
									"end": 2976,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2834,
									"end": 2976,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2834,
									"end": 2976,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2834,
									"end": 2976,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2982,
									"end": 3057,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 2982,
									"end": 3057,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3025,
									"end": 3028,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3046,
									"end": 3051,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3039,
									"end": 3051,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3039,
									"end": 3051,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2982,
									"end": 3057,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2982,
									"end": 3057,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2982,
									"end": 3057,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2982,
									"end": 3057,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3063,
									"end": 3332,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 3063,
									"end": 3332,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3173,
									"end": 3212,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 3204,
									"end": 3211,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3173,
									"end": 3212,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 3173,
									"end": 3212,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3173,
									"end": 3212,
									"name": "tag",
									"source": 7,
									"value": "110"
								},
								{
									"begin": 3173,
									"end": 3212,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3234,
									"end": 3325,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 3283,
									"end": 3324,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 3307,
									"end": 3323,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3283,
									"end": 3324,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 3283,
									"end": 3324,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3283,
									"end": 3324,
									"name": "tag",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 3283,
									"end": 3324,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3275,
									"end": 3281,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3268,
									"end": 3272,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3262,
									"end": 3273,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 3234,
									"end": 3325,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 3234,
									"end": 3325,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3234,
									"end": 3325,
									"name": "tag",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 3234,
									"end": 3325,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3228,
									"end": 3232,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3221,
									"end": 3326,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3139,
									"end": 3332,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3063,
									"end": 3332,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3063,
									"end": 3332,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3063,
									"end": 3332,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3063,
									"end": 3332,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3338,
									"end": 3411,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 3338,
									"end": 3411,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3383,
									"end": 3386,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3404,
									"end": 3405,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3397,
									"end": 3405,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3397,
									"end": 3405,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3338,
									"end": 3411,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3338,
									"end": 3411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3417,
									"end": 3606,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 3417,
									"end": 3606,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3494,
									"end": 3526,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 3494,
									"end": 3526,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 3494,
									"end": 3526,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3494,
									"end": 3526,
									"name": "tag",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 3494,
									"end": 3526,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3535,
									"end": 3600,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 3593,
									"end": 3599,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3585,
									"end": 3591,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3579,
									"end": 3583,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3535,
									"end": 3600,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 3535,
									"end": 3600,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3535,
									"end": 3600,
									"name": "tag",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 3535,
									"end": 3600,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3470,
									"end": 3606,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3417,
									"end": 3606,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3417,
									"end": 3606,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3417,
									"end": 3606,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3612,
									"end": 3798,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 3612,
									"end": 3798,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3672,
									"end": 3792,
									"name": "tag",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 3672,
									"end": 3792,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3689,
									"end": 3692,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3682,
									"end": 3687,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3679,
									"end": 3693,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3672,
									"end": 3792,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3672,
									"end": 3792,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 3672,
									"end": 3792,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3743,
									"end": 3782,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 3780,
									"end": 3781,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3773,
									"end": 3778,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3743,
									"end": 3782,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 3743,
									"end": 3782,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3743,
									"end": 3782,
									"name": "tag",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 3743,
									"end": 3782,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3716,
									"end": 3717,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3709,
									"end": 3714,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3705,
									"end": 3718,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3696,
									"end": 3718,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3696,
									"end": 3718,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3672,
									"end": 3792,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 3672,
									"end": 3792,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3672,
									"end": 3792,
									"name": "tag",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 3672,
									"end": 3792,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3612,
									"end": 3798,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3612,
									"end": 3798,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3612,
									"end": 3798,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3804,
									"end": 4347,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 3804,
									"end": 4347,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3905,
									"end": 3907,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 3900,
									"end": 3903,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3897,
									"end": 3908,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 4340,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 4340,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 3894,
									"end": 4340,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3939,
									"end": 3977,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 3971,
									"end": 3976,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3939,
									"end": 3977,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 3939,
									"end": 3977,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3939,
									"end": 3977,
									"name": "tag",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 3939,
									"end": 3977,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4023,
									"end": 4052,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 4041,
									"end": 4051,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4023,
									"end": 4052,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 4023,
									"end": 4052,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4023,
									"end": 4052,
									"name": "tag",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 4023,
									"end": 4052,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4013,
									"end": 4021,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4009,
									"end": 4053,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4206,
									"end": 4208,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4194,
									"end": 4204,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4191,
									"end": 4209,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4188,
									"end": 4237,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4188,
									"end": 4237,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 4188,
									"end": 4237,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4227,
									"end": 4235,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4212,
									"end": 4235,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4212,
									"end": 4235,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4188,
									"end": 4237,
									"name": "tag",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 4188,
									"end": 4237,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4250,
									"end": 4330,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 4306,
									"end": 4328,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 4324,
									"end": 4327,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4306,
									"end": 4328,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 4306,
									"end": 4328,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4306,
									"end": 4328,
									"name": "tag",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 4306,
									"end": 4328,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4296,
									"end": 4304,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4292,
									"end": 4329,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4279,
									"end": 4290,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4250,
									"end": 4330,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 4250,
									"end": 4330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4250,
									"end": 4330,
									"name": "tag",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 4250,
									"end": 4330,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3909,
									"end": 4340,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3909,
									"end": 4340,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 4340,
									"name": "tag",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 3894,
									"end": 4340,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3804,
									"end": 4347,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3804,
									"end": 4347,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3804,
									"end": 4347,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3804,
									"end": 4347,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4353,
									"end": 4470,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 4353,
									"end": 4470,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4407,
									"end": 4415,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4457,
									"end": 4462,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4451,
									"end": 4455,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4447,
									"end": 4463,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 4426,
									"end": 4463,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4426,
									"end": 4463,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4353,
									"end": 4470,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4353,
									"end": 4470,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4353,
									"end": 4470,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4353,
									"end": 4470,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4353,
									"end": 4470,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4476,
									"end": 4645,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 4476,
									"end": 4645,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4520,
									"end": 4526,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4553,
									"end": 4604,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 4601,
									"end": 4602,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4597,
									"end": 4603,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 4589,
									"end": 4594,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4586,
									"end": 4587,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 4582,
									"end": 4595,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 4553,
									"end": 4604,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 4553,
									"end": 4604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4553,
									"end": 4604,
									"name": "tag",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 4553,
									"end": 4604,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4549,
									"end": 4605,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 4634,
									"end": 4638,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4628,
									"end": 4632,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4624,
									"end": 4639,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4614,
									"end": 4639,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4614,
									"end": 4639,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4527,
									"end": 4645,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4476,
									"end": 4645,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4476,
									"end": 4645,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4476,
									"end": 4645,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4476,
									"end": 4645,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4476,
									"end": 4645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4650,
									"end": 4945,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 4650,
									"end": 4945,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4726,
									"end": 4730,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4872,
									"end": 4901,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 4897,
									"end": 4900,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4891,
									"end": 4895,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4872,
									"end": 4901,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 4872,
									"end": 4901,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4872,
									"end": 4901,
									"name": "tag",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 4872,
									"end": 4901,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4864,
									"end": 4901,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4864,
									"end": 4901,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4934,
									"end": 4937,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4931,
									"end": 4932,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 4927,
									"end": 4938,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 4921,
									"end": 4925,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4918,
									"end": 4939,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 4910,
									"end": 4939,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4910,
									"end": 4939,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4650,
									"end": 4945,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4650,
									"end": 4945,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4650,
									"end": 4945,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4650,
									"end": 4945,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4650,
									"end": 4945,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4950,
									"end": 6345,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 4950,
									"end": 6345,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5067,
									"end": 5104,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 5100,
									"end": 5103,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5067,
									"end": 5104,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 5067,
									"end": 5104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5067,
									"end": 5104,
									"name": "tag",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 5067,
									"end": 5104,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5169,
									"end": 5187,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5161,
									"end": 5167,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5158,
									"end": 5188,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 5155,
									"end": 5211,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5155,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 5155,
									"end": 5211,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5191,
									"end": 5209,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 5191,
									"end": 5209,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 5191,
									"end": 5209,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5191,
									"end": 5209,
									"name": "tag",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 5191,
									"end": 5209,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5155,
									"end": 5211,
									"name": "tag",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 5155,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5235,
									"end": 5273,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 5267,
									"end": 5271,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5261,
									"end": 5272,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 5235,
									"end": 5273,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 5235,
									"end": 5273,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5235,
									"end": 5273,
									"name": "tag",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 5235,
									"end": 5273,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5320,
									"end": 5387,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 5380,
									"end": 5386,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5372,
									"end": 5378,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5366,
									"end": 5370,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5320,
									"end": 5387,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 5320,
									"end": 5387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5320,
									"end": 5387,
									"name": "tag",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 5320,
									"end": 5387,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5414,
									"end": 5415,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5438,
									"end": 5442,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5425,
									"end": 5442,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5425,
									"end": 5442,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5470,
									"end": 5472,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5462,
									"end": 5468,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5459,
									"end": 5473,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 5487,
									"end": 5488,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 5482,
									"end": 6100,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5482,
									"end": 6100,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 5482,
									"end": 6100,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 5482,
									"end": 6100,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6144,
									"end": 6145,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6161,
									"end": 6167,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6158,
									"end": 6235,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6158,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 6158,
									"end": 6235,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6210,
									"end": 6219,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6205,
									"end": 6208,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 6201,
									"end": 6220,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6195,
									"end": 6221,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 6186,
									"end": 6221,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6186,
									"end": 6221,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6158,
									"end": 6235,
									"name": "tag",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 6158,
									"end": 6235,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6261,
									"end": 6328,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 6321,
									"end": 6327,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 6314,
									"end": 6319,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6261,
									"end": 6328,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 6261,
									"end": 6328,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6261,
									"end": 6328,
									"name": "tag",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 6261,
									"end": 6328,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6255,
									"end": 6259,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 6248,
									"end": 6329,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6117,
									"end": 6339,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5452,
									"end": 6339,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 5452,
									"end": 6339,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5482,
									"end": 6100,
									"name": "tag",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 5482,
									"end": 6100,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5534,
									"end": 5538,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5530,
									"end": 5539,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 5522,
									"end": 5528,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5518,
									"end": 5540,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5568,
									"end": 5605,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 5600,
									"end": 5604,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5568,
									"end": 5605,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 5568,
									"end": 5605,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5568,
									"end": 5605,
									"name": "tag",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 5568,
									"end": 5605,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5627,
									"end": 5628,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5641,
									"end": 5849,
									"name": "tag",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 5641,
									"end": 5849,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5655,
									"end": 5662,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5652,
									"end": 5653,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5649,
									"end": 5663,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 5641,
									"end": 5849,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5641,
									"end": 5849,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 5641,
									"end": 5849,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5734,
									"end": 5743,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5729,
									"end": 5732,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 5725,
									"end": 5744,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5719,
									"end": 5745,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 5711,
									"end": 5717,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5704,
									"end": 5746,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5785,
									"end": 5786,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 5777,
									"end": 5783,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5773,
									"end": 5787,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5763,
									"end": 5787,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5763,
									"end": 5787,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5832,
									"end": 5834,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5821,
									"end": 5830,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5817,
									"end": 5835,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5804,
									"end": 5835,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 5804,
									"end": 5835,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5678,
									"end": 5682,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5675,
									"end": 5676,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5671,
									"end": 5683,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5666,
									"end": 5683,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5666,
									"end": 5683,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5641,
									"end": 5849,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 5641,
									"end": 5849,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5641,
									"end": 5849,
									"name": "tag",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 5641,
									"end": 5849,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5877,
									"end": 5883,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5868,
									"end": 5875,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5865,
									"end": 5884,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 5862,
									"end": 6041,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5862,
									"end": 6041,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 5862,
									"end": 6041,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5935,
									"end": 5944,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5930,
									"end": 5933,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 5926,
									"end": 5945,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5920,
									"end": 5946,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 5978,
									"end": 6026,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 6020,
									"end": 6024,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 6012,
									"end": 6018,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 6008,
									"end": 6025,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5997,
									"end": 6006,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5978,
									"end": 6026,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 5978,
									"end": 6026,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5978,
									"end": 6026,
									"name": "tag",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 5978,
									"end": 6026,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5970,
									"end": 5976,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5963,
									"end": 6027,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5885,
									"end": 6041,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5862,
									"end": 6041,
									"name": "tag",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 5862,
									"end": 6041,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6087,
									"end": 6088,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6083,
									"end": 6084,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 6075,
									"end": 6081,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 6071,
									"end": 6085,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 6067,
									"end": 6089,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6061,
									"end": 6065,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 6054,
									"end": 6090,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5489,
									"end": 6100,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5489,
									"end": 6100,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5489,
									"end": 6100,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5452,
									"end": 6339,
									"name": "tag",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 5452,
									"end": 6339,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5452,
									"end": 6339,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5042,
									"end": 6345,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5042,
									"end": 6345,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5042,
									"end": 6345,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4950,
									"end": 6345,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4950,
									"end": 6345,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4950,
									"end": 6345,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6351,
									"end": 6477,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 6351,
									"end": 6477,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6388,
									"end": 6395,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6428,
									"end": 6470,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6421,
									"end": 6426,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6417,
									"end": 6471,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6406,
									"end": 6471,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6406,
									"end": 6471,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6351,
									"end": 6477,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6351,
									"end": 6477,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6351,
									"end": 6477,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6351,
									"end": 6477,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6483,
									"end": 6579,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 6483,
									"end": 6579,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6520,
									"end": 6527,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6549,
									"end": 6573,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 6567,
									"end": 6572,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6549,
									"end": 6573,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 6549,
									"end": 6573,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6549,
									"end": 6573,
									"name": "tag",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 6549,
									"end": 6573,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6538,
									"end": 6573,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6538,
									"end": 6573,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6483,
									"end": 6579,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6483,
									"end": 6579,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6483,
									"end": 6579,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6483,
									"end": 6579,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6585,
									"end": 6703,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 6585,
									"end": 6703,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6672,
									"end": 6696,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 6690,
									"end": 6695,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6672,
									"end": 6696,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 6672,
									"end": 6696,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6672,
									"end": 6696,
									"name": "tag",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 6672,
									"end": 6696,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6667,
									"end": 6670,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6660,
									"end": 6697,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6585,
									"end": 6703,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6585,
									"end": 6703,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6585,
									"end": 6703,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6709,
									"end": 6931,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 6709,
									"end": 6931,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6802,
									"end": 6806,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6840,
									"end": 6842,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6829,
									"end": 6838,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6825,
									"end": 6843,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6817,
									"end": 6843,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6817,
									"end": 6843,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6853,
									"end": 6924,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "156"
								},
								{
									"begin": 6921,
									"end": 6922,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 6919,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6906,
									"end": 6923,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6897,
									"end": 6903,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6853,
									"end": 6924,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 6853,
									"end": 6924,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6853,
									"end": 6924,
									"name": "tag",
									"source": 7,
									"value": "156"
								},
								{
									"begin": 6853,
									"end": 6924,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6709,
									"end": 6931,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 6709,
									"end": 6931,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6709,
									"end": 6931,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6709,
									"end": 6931,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6709,
									"end": 6931,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6937,
									"end": 7106,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 6937,
									"end": 7106,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7021,
									"end": 7032,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7055,
									"end": 7061,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7050,
									"end": 7053,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7043,
									"end": 7062,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7095,
									"end": 7099,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7090,
									"end": 7093,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7086,
									"end": 7100,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7071,
									"end": 7100,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7071,
									"end": 7100,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6937,
									"end": 7106,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 6937,
									"end": 7106,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6937,
									"end": 7106,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6937,
									"end": 7106,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6937,
									"end": 7106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7112,
									"end": 7335,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 7112,
									"end": 7335,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7252,
									"end": 7286,
									"name": "PUSH",
									"source": 7,
									"value": "496E697469616C20737570706C79206D757374206265203C3D206D6178207375"
								},
								{
									"begin": 7248,
									"end": 7249,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7240,
									"end": 7246,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7236,
									"end": 7250,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7229,
									"end": 7287,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7321,
									"end": 7327,
									"name": "PUSH",
									"source": 7,
									"value": "70706C7900000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7316,
									"end": 7318,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7308,
									"end": 7314,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7304,
									"end": 7319,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7297,
									"end": 7328,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7112,
									"end": 7335,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7112,
									"end": 7335,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7341,
									"end": 7707,
									"name": "tag",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 7341,
									"end": 7707,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7483,
									"end": 7486,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7504,
									"end": 7571,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "160"
								},
								{
									"begin": 7568,
									"end": 7570,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 7563,
									"end": 7566,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7504,
									"end": 7571,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 7504,
									"end": 7571,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7504,
									"end": 7571,
									"name": "tag",
									"source": 7,
									"value": "160"
								},
								{
									"begin": 7504,
									"end": 7571,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7497,
									"end": 7571,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7497,
									"end": 7571,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7580,
									"end": 7673,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "161"
								},
								{
									"begin": 7669,
									"end": 7672,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7580,
									"end": 7673,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 7580,
									"end": 7673,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7580,
									"end": 7673,
									"name": "tag",
									"source": 7,
									"value": "161"
								},
								{
									"begin": 7580,
									"end": 7673,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7698,
									"end": 7700,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 7693,
									"end": 7696,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7689,
									"end": 7701,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7682,
									"end": 7701,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7682,
									"end": 7701,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7341,
									"end": 7707,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7341,
									"end": 7707,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7341,
									"end": 7707,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7341,
									"end": 7707,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7713,
									"end": 8132,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7713,
									"end": 8132,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7879,
									"end": 7883,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7917,
									"end": 7919,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7906,
									"end": 7915,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7902,
									"end": 7920,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7894,
									"end": 7920,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7894,
									"end": 7920,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7966,
									"end": 7975,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7960,
									"end": 7964,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7956,
									"end": 7976,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 7952,
									"end": 7953,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7941,
									"end": 7950,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7937,
									"end": 7954,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7930,
									"end": 7977,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7994,
									"end": 8125,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "163"
								},
								{
									"begin": 8120,
									"end": 8124,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7994,
									"end": 8125,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 7994,
									"end": 8125,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7994,
									"end": 8125,
									"name": "tag",
									"source": 7,
									"value": "163"
								},
								{
									"begin": 7994,
									"end": 8125,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7986,
									"end": 8125,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7986,
									"end": 8125,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7713,
									"end": 8132,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7713,
									"end": 8132,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7713,
									"end": 8132,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7713,
									"end": 8132,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8138,
									"end": 8318,
									"name": "tag",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 8138,
									"end": 8318,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8186,
									"end": 8263,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8183,
									"end": 8184,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8176,
									"end": 8264,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 8283,
									"end": 8287,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 8280,
									"end": 8281,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 8273,
									"end": 8288,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 8307,
									"end": 8311,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 8304,
									"end": 8305,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8297,
									"end": 8312,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 8324,
									"end": 8515,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 8324,
									"end": 8515,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8364,
									"end": 8367,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8383,
									"end": 8403,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "166"
								},
								{
									"begin": 8401,
									"end": 8402,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8383,
									"end": 8403,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 8383,
									"end": 8403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8383,
									"end": 8403,
									"name": "tag",
									"source": 7,
									"value": "166"
								},
								{
									"begin": 8383,
									"end": 8403,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8378,
									"end": 8403,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8378,
									"end": 8403,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8417,
									"end": 8437,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "167"
								},
								{
									"begin": 8435,
									"end": 8436,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8417,
									"end": 8437,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 8417,
									"end": 8437,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8417,
									"end": 8437,
									"name": "tag",
									"source": 7,
									"value": "167"
								},
								{
									"begin": 8417,
									"end": 8437,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8412,
									"end": 8437,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 8412,
									"end": 8437,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8460,
									"end": 8461,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8457,
									"end": 8458,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8453,
									"end": 8462,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8446,
									"end": 8462,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8446,
									"end": 8462,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8481,
									"end": 8484,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 8478,
									"end": 8479,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8475,
									"end": 8485,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8472,
									"end": 8508,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8472,
									"end": 8508,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "168"
								},
								{
									"begin": 8472,
									"end": 8508,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8488,
									"end": 8506,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "169"
								},
								{
									"begin": 8488,
									"end": 8506,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 8488,
									"end": 8506,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8488,
									"end": 8506,
									"name": "tag",
									"source": 7,
									"value": "169"
								},
								{
									"begin": 8488,
									"end": 8506,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8472,
									"end": 8508,
									"name": "tag",
									"source": 7,
									"value": "168"
								},
								{
									"begin": 8472,
									"end": 8508,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8324,
									"end": 8515,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 8324,
									"end": 8515,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8324,
									"end": 8515,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8324,
									"end": 8515,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8324,
									"end": 8515,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8521,
									"end": 8639,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 8521,
									"end": 8639,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8608,
									"end": 8632,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 8626,
									"end": 8631,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8608,
									"end": 8632,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 8608,
									"end": 8632,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8608,
									"end": 8632,
									"name": "tag",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 8608,
									"end": 8632,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8603,
									"end": 8606,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8596,
									"end": 8633,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 8521,
									"end": 8639,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8521,
									"end": 8639,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8521,
									"end": 8639,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8645,
									"end": 9087,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 8645,
									"end": 9087,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8794,
									"end": 8798,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8832,
									"end": 8834,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 8821,
									"end": 8830,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8817,
									"end": 8835,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8809,
									"end": 8835,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8809,
									"end": 8835,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8845,
									"end": 8916,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 8913,
									"end": 8914,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8902,
									"end": 8911,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8898,
									"end": 8915,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8889,
									"end": 8895,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 8845,
									"end": 8916,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 8845,
									"end": 8916,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8845,
									"end": 8916,
									"name": "tag",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 8845,
									"end": 8916,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8926,
									"end": 8998,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "174"
								},
								{
									"begin": 8994,
									"end": 8996,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8983,
									"end": 8992,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8979,
									"end": 8997,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8970,
									"end": 8976,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 8926,
									"end": 8998,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 8926,
									"end": 8998,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8926,
									"end": 8998,
									"name": "tag",
									"source": 7,
									"value": "174"
								},
								{
									"begin": 8926,
									"end": 8998,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9008,
									"end": 9080,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "175"
								},
								{
									"begin": 9076,
									"end": 9078,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 9065,
									"end": 9074,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9061,
									"end": 9079,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9052,
									"end": 9058,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9008,
									"end": 9080,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 9008,
									"end": 9080,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9008,
									"end": 9080,
									"name": "tag",
									"source": 7,
									"value": "175"
								},
								{
									"begin": 9008,
									"end": 9080,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8645,
									"end": 9087,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 8645,
									"end": 9087,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 8645,
									"end": 9087,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8645,
									"end": 9087,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8645,
									"end": 9087,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8645,
									"end": 9087,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8645,
									"end": 9087,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9093,
									"end": 9315,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 9093,
									"end": 9315,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9186,
									"end": 9190,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9224,
									"end": 9226,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9213,
									"end": 9222,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9209,
									"end": 9227,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9201,
									"end": 9227,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9201,
									"end": 9227,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9237,
									"end": 9308,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "177"
								},
								{
									"begin": 9305,
									"end": 9306,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9294,
									"end": 9303,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9290,
									"end": 9307,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9281,
									"end": 9287,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9237,
									"end": 9308,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 9237,
									"end": 9308,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9237,
									"end": 9308,
									"name": "tag",
									"source": 7,
									"value": "177"
								},
								{
									"begin": 9237,
									"end": 9308,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9093,
									"end": 9315,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9093,
									"end": 9315,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9093,
									"end": 9315,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9093,
									"end": 9315,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9093,
									"end": 9315,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 456,
									"end": 3514,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 456,
									"end": 3514,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 456,
									"end": 3514,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 456,
									"end": 3514,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 456,
									"end": 3514,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 456,
									"end": 3514,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 456,
									"end": 3514,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 456,
									"end": 3514,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 456,
									"end": 3514,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 456,
									"end": 3514,
									"name": "ASSIGNIMMUTABLE",
									"source": 6,
									"value": "944"
								},
								{
									"begin": 456,
									"end": 3514,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 456,
									"end": 3514,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 456,
									"end": 3514,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fce0a320d6db3eeaca8b32f95b60b0167a248f060a8f46ac97e9542ecb17078164736f6c634300081d0033",
									".code": [
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH",
											"source": 6,
											"value": "B1C25586"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH",
											"source": 6,
											"value": "D5ABEB01"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH",
											"source": 6,
											"value": "F145C73B"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH",
											"source": 6,
											"value": "9358928B"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH",
											"source": 6,
											"value": "9D564D9A"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH",
											"source": 6,
											"value": "252E65B2"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH",
											"source": 6,
											"value": "252E65B2"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH",
											"source": 6,
											"value": "40C10F19"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH",
											"source": 6,
											"value": "52B8AB35"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH",
											"source": 6,
											"value": "483A7F6"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 456,
											"end": 3514,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 686,
											"end": 735,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 686,
											"end": 735,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 686,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 686,
											"end": 735,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 686,
											"end": 735,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 686,
											"end": 735,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 686,
											"end": 735,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 686,
											"end": 735,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 686,
											"end": 735,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 686,
											"end": 735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 686,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 686,
											"end": 735,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 686,
											"end": 735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 686,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 686,
											"end": 735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 686,
											"end": 735,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 686,
											"end": 735,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 686,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 686,
											"end": 735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 686,
											"end": 735,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 686,
											"end": 735,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 686,
											"end": 735,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 686,
											"end": 735,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 686,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 686,
											"end": 735,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 686,
											"end": 735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 686,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 686,
											"end": 735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 686,
											"end": 735,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 686,
											"end": 735,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 686,
											"end": 735,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 686,
											"end": 735,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 686,
											"end": 735,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 686,
											"end": 735,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 686,
											"end": 735,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 686,
											"end": 735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 686,
											"end": 735,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3417,
											"end": 3512,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3417,
											"end": 3512,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3417,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 3417,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 3417,
											"end": 3512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3417,
											"end": 3512,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 3417,
											"end": 3512,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3417,
											"end": 3512,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3417,
											"end": 3512,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3417,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 3417,
											"end": 3512,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3417,
											"end": 3512,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3417,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 3417,
											"end": 3512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3417,
											"end": 3512,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 3417,
											"end": 3512,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3417,
											"end": 3512,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3417,
											"end": 3512,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3417,
											"end": 3512,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3417,
											"end": 3512,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3417,
											"end": 3512,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3417,
											"end": 3512,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3417,
											"end": 3512,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1681,
											"end": 1852,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1681,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1681,
											"end": 1852,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1681,
											"end": 1852,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1852,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1852,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1852,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1852,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1852,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1681,
											"end": 1852,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1852,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 1681,
											"end": 1852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1852,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1681,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1681,
											"end": 1852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1852,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1681,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1852,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3290,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 3191,
											"end": 3290,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3290,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 3191,
											"end": 3290,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 3191,
											"end": 3290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3290,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 3191,
											"end": 3290,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3290,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3191,
											"end": 3290,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3290,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 3191,
											"end": 3290,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3290,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3290,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 3191,
											"end": 3290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3290,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 3191,
											"end": 3290,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3290,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3191,
											"end": 3290,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3290,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3290,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3290,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3290,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3290,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2949,
											"end": 3061,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 2949,
											"end": 3061,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2949,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 2949,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2949,
											"end": 3061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2949,
											"end": 3061,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 2949,
											"end": 3061,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2949,
											"end": 3061,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2949,
											"end": 3061,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2949,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2949,
											"end": 3061,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2949,
											"end": 3061,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2949,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 2949,
											"end": 3061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2949,
											"end": 3061,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2949,
											"end": 3061,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2949,
											"end": 3061,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2949,
											"end": 3061,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2949,
											"end": 3061,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2949,
											"end": 3061,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2949,
											"end": 3061,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2949,
											"end": 3061,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2949,
											"end": 3061,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2530,
											"end": 2814,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 2530,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2530,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2530,
											"end": 2814,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2530,
											"end": 2814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2530,
											"end": 2814,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2530,
											"end": 2814,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2530,
											"end": 2814,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2530,
											"end": 2814,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2530,
											"end": 2814,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2530,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 2530,
											"end": 2814,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2530,
											"end": 2814,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2530,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 2530,
											"end": 2814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2530,
											"end": 2814,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 2530,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2530,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 2530,
											"end": 2814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2530,
											"end": 2814,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2530,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2530,
											"end": 2814,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2049,
											"end": 2325,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 2049,
											"end": 2325,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2049,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 2049,
											"end": 2325,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2049,
											"end": 2325,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2049,
											"end": 2325,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2049,
											"end": 2325,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2049,
											"end": 2325,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2049,
											"end": 2325,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2049,
											"end": 2325,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2049,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 2049,
											"end": 2325,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2049,
											"end": 2325,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2049,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 2049,
											"end": 2325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2049,
											"end": 2325,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 2049,
											"end": 2325,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2049,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 2049,
											"end": 2325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2049,
											"end": 2325,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 2049,
											"end": 2325,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2049,
											"end": 2325,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 577,
											"end": 611,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 577,
											"end": 611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 577,
											"end": 611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 577,
											"end": 611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 577,
											"end": 611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 577,
											"end": 611,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 577,
											"end": 611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 577,
											"end": 611,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 577,
											"end": 611,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 577,
											"end": 611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 577,
											"end": 611,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 577,
											"end": 611,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 577,
											"end": 611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 577,
											"end": 611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 577,
											"end": 611,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 577,
											"end": 611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 577,
											"end": 611,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 577,
											"end": 611,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 577,
											"end": 611,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 577,
											"end": 611,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 577,
											"end": 611,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 577,
											"end": 611,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 577,
											"end": 611,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 796,
											"end": 822,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 796,
											"end": 822,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 796,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 796,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 796,
											"end": 822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 822,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 796,
											"end": 822,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 796,
											"end": 822,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 796,
											"end": 822,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 796,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 796,
											"end": 822,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 796,
											"end": 822,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 796,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 796,
											"end": 822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 822,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 796,
											"end": 822,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 796,
											"end": 822,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 796,
											"end": 822,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 796,
											"end": 822,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 796,
											"end": 822,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 796,
											"end": 822,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 796,
											"end": 822,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 796,
											"end": 822,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 686,
											"end": 735,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 686,
											"end": 735,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 686,
											"end": 735,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 686,
											"end": 735,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 686,
											"end": 735,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 686,
											"end": 735,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 686,
											"end": 735,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 686,
											"end": 735,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 686,
											"end": 735,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 686,
											"end": 735,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 686,
											"end": 735,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 686,
											"end": 735,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 686,
											"end": 735,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 686,
											"end": 735,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 686,
											"end": 735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 686,
											"end": 735,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 686,
											"end": 735,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 686,
											"end": 735,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 686,
											"end": 735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3417,
											"end": 3512,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 3417,
											"end": 3512,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3470,
											"end": 3477,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3496,
											"end": 3505,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "944"
										},
										{
											"begin": 3489,
											"end": 3505,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3489,
											"end": 3505,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3417,
											"end": 3512,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3417,
											"end": 3512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1681,
											"end": 1852,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1681,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1786,
											"end": 1795,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "944"
										},
										{
											"begin": 1776,
											"end": 1782,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 1760,
											"end": 1771,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1760,
											"end": 1773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1773,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 1760,
											"end": 1773,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1782,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 1760,
											"end": 1782,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1782,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1782,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 1760,
											"end": 1782,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1782,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 1760,
											"end": 1782,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1795,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1795,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1752,
											"end": 1818,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 1752,
											"end": 1818,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1752,
											"end": 1818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1752,
											"end": 1818,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1752,
											"end": 1818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1752,
											"end": 1818,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1752,
											"end": 1818,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1752,
											"end": 1818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1752,
											"end": 1818,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1752,
											"end": 1818,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 1752,
											"end": 1818,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1752,
											"end": 1818,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 1752,
											"end": 1818,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1752,
											"end": 1818,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 1752,
											"end": 1818,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1752,
											"end": 1818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1752,
											"end": 1818,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1752,
											"end": 1818,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1752,
											"end": 1818,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1752,
											"end": 1818,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1752,
											"end": 1818,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1752,
											"end": 1818,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1752,
											"end": 1818,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 1752,
											"end": 1818,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1828,
											"end": 1845,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 1834,
											"end": 1836,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1838,
											"end": 1844,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1828,
											"end": 1833,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 1828,
											"end": 1845,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1828,
											"end": 1845,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 1828,
											"end": 1845,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1852,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1852,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3290,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 3191,
											"end": 3290,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3246,
											"end": 3253,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3272,
											"end": 3283,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3272,
											"end": 3283,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3265,
											"end": 3283,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3290,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2949,
											"end": 3061,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2949,
											"end": 3061,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3001,
											"end": 3008,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3043,
											"end": 3054,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3043,
											"end": 3054,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3027,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 3027,
											"end": 3038,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3027,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3027,
											"end": 3040,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 3027,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3027,
											"end": 3054,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 3027,
											"end": 3054,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3027,
											"end": 3054,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3027,
											"end": 3054,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 3027,
											"end": 3054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3027,
											"end": 3054,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 3027,
											"end": 3054,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3054,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3054,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2949,
											"end": 3061,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2949,
											"end": 3061,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2530,
											"end": 2814,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 2530,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2655,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2622,
											"end": 2636,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2622,
											"end": 2645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2637,
											"end": 2644,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2622,
											"end": 2645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2622,
											"end": 2645,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2622,
											"end": 2645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2622,
											"end": 2645,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2622,
											"end": 2645,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2622,
											"end": 2645,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2622,
											"end": 2645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2622,
											"end": 2645,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2622,
											"end": 2645,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2622,
											"end": 2645,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2622,
											"end": 2645,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2622,
											"end": 2645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2622,
											"end": 2645,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2622,
											"end": 2645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2622,
											"end": 2645,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2622,
											"end": 2645,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2622,
											"end": 2655,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2622,
											"end": 2655,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2687,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 2614,
											"end": 2687,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2614,
											"end": 2687,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2614,
											"end": 2687,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2687,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2614,
											"end": 2687,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2687,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 2614,
											"end": 2687,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2687,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 2614,
											"end": 2687,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2687,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 2614,
											"end": 2687,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2614,
											"end": 2687,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2687,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2687,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2687,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2687,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2687,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2687,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 2614,
											"end": 2687,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2724,
											"end": 2730,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2711,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2697,
											"end": 2720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2712,
											"end": 2719,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2697,
											"end": 2720,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2697,
											"end": 2720,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2720,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2697,
											"end": 2720,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2720,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2720,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2720,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2697,
											"end": 2720,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2697,
											"end": 2720,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2697,
											"end": 2730,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2730,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2730,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2730,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2697,
											"end": 2730,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2730,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2730,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 2697,
											"end": 2730,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2730,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2697,
											"end": 2730,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2730,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2730,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2730,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2730,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2730,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2730,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2697,
											"end": 2730,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2755,
											"end": 2761,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2740,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2740,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2740,
											"end": 2761,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2740,
											"end": 2761,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2740,
											"end": 2761,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2740,
											"end": 2761,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 2740,
											"end": 2761,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2740,
											"end": 2761,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2740,
											"end": 2761,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 2740,
											"end": 2761,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2740,
											"end": 2761,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 2740,
											"end": 2761,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2740,
											"end": 2761,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2740,
											"end": 2761,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2740,
											"end": 2761,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2740,
											"end": 2761,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2740,
											"end": 2761,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2740,
											"end": 2761,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2740,
											"end": 2761,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2791,
											"end": 2798,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2776,
											"end": 2807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2776,
											"end": 2807,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2776,
											"end": 2807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "E7B379C6C1FA169E9079C25E9143B127637EEF8EC8C9D5C06DDB4AB3E1195888"
										},
										{
											"begin": 2800,
											"end": 2806,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2776,
											"end": 2807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2776,
											"end": 2807,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2776,
											"end": 2807,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2776,
											"end": 2807,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2776,
											"end": 2807,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2776,
											"end": 2807,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 2776,
											"end": 2807,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2776,
											"end": 2807,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2776,
											"end": 2807,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2776,
											"end": 2807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2776,
											"end": 2807,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2776,
											"end": 2807,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2776,
											"end": 2807,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2776,
											"end": 2807,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2776,
											"end": 2807,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2776,
											"end": 2807,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 2530,
											"end": 2814,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2530,
											"end": 2814,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2530,
											"end": 2814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2049,
											"end": 2325,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 2049,
											"end": 2325,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2167,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2139,
											"end": 2157,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 2149,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2139,
											"end": 2148,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2139,
											"end": 2157,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2139,
											"end": 2157,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 2139,
											"end": 2157,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2139,
											"end": 2167,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2139,
											"end": 2167,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2200,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 2131,
											"end": 2200,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2131,
											"end": 2200,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2131,
											"end": 2200,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2200,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2131,
											"end": 2200,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2200,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 2131,
											"end": 2200,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2200,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 2131,
											"end": 2200,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2200,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 2131,
											"end": 2200,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2131,
											"end": 2200,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2200,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2200,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2200,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2200,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2200,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2200,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 2131,
											"end": 2200,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2243,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2210,
											"end": 2224,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2210,
											"end": 2233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2225,
											"end": 2232,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2210,
											"end": 2233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2210,
											"end": 2233,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2210,
											"end": 2233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2210,
											"end": 2233,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2210,
											"end": 2233,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2210,
											"end": 2233,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2210,
											"end": 2233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2210,
											"end": 2233,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2210,
											"end": 2233,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2210,
											"end": 2233,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2210,
											"end": 2233,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2210,
											"end": 2233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2210,
											"end": 2233,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2210,
											"end": 2233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2210,
											"end": 2233,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2210,
											"end": 2233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2210,
											"end": 2243,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2210,
											"end": 2243,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2210,
											"end": 2243,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2210,
											"end": 2243,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 2210,
											"end": 2243,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2210,
											"end": 2243,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2210,
											"end": 2243,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 2210,
											"end": 2243,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2210,
											"end": 2243,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 2210,
											"end": 2243,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2210,
											"end": 2243,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2210,
											"end": 2243,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2210,
											"end": 2243,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2210,
											"end": 2243,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2210,
											"end": 2243,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2210,
											"end": 2243,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2210,
											"end": 2243,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2268,
											"end": 2274,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2253,
											"end": 2264,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2253,
											"end": 2264,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2253,
											"end": 2274,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2253,
											"end": 2274,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2253,
											"end": 2274,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2253,
											"end": 2274,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 2253,
											"end": 2274,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2253,
											"end": 2274,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2253,
											"end": 2274,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 2253,
											"end": 2274,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2253,
											"end": 2274,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 2253,
											"end": 2274,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2253,
											"end": 2274,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2253,
											"end": 2274,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2253,
											"end": 2274,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2253,
											"end": 2274,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2253,
											"end": 2274,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2253,
											"end": 2274,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2253,
											"end": 2274,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2302,
											"end": 2309,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2318,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2289,
											"end": 2318,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2318,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "AC87F20A77D28EE8BBB58EC87EA8FA968B3393EFAE1A368FD50B767C2847391C"
										},
										{
											"begin": 2311,
											"end": 2317,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2318,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2289,
											"end": 2318,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2318,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 2289,
											"end": 2318,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2318,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2318,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 2289,
											"end": 2318,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2318,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 2289,
											"end": 2318,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2318,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2289,
											"end": 2318,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2318,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2318,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2318,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2318,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2318,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 2049,
											"end": 2325,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2049,
											"end": 2325,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2049,
											"end": 2325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 577,
											"end": 611,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 577,
											"end": 611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 577,
											"end": 611,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "944"
										},
										{
											"begin": 577,
											"end": 611,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 577,
											"end": 611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 796,
											"end": 822,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 796,
											"end": 822,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 796,
											"end": 822,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 796,
											"end": 822,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 796,
											"end": 822,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 796,
											"end": 822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10599,
											"end": 10616,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10655,
											"end": 10660,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10652,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10660,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10721,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10723,
											"end": 10739,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10741,
											"end": 10746,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 10687,
											"end": 10747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 10812,
											"end": 10817,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10819,
											"end": 10826,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10847,
											"end": 10852,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10852,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10854,
											"end": 10859,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10803,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 10803,
											"end": 10860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10504,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7547,
											"end": 7548,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 7572,
											"end": 7604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 7624,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1710,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 1611,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1663,
											"end": 1669,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1697,
											"end": 1702,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1691,
											"end": 1703,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1681,
											"end": 1703,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1681,
											"end": 1703,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1710,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1710,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1710,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1716,
											"end": 1885,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 1716,
											"end": 1885,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1834,
											"end": 1840,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1832,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1841,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1874,
											"end": 1878,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1869,
											"end": 1872,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1865,
											"end": 1879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1850,
											"end": 1879,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1850,
											"end": 1879,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1716,
											"end": 1885,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1716,
											"end": 1885,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1716,
											"end": 1885,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1716,
											"end": 1885,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1716,
											"end": 1885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1891,
											"end": 2030,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 1891,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1980,
											"end": 1986,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1975,
											"end": 1978,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1970,
											"end": 1973,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1964,
											"end": 1987,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 2021,
											"end": 2022,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2018,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2010,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2003,
											"end": 2019,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1996,
											"end": 2023,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1891,
											"end": 2030,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1891,
											"end": 2030,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1891,
											"end": 2030,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1891,
											"end": 2030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2036,
											"end": 2138,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 2036,
											"end": 2138,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2077,
											"end": 2083,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2128,
											"end": 2130,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2124,
											"end": 2131,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2119,
											"end": 2121,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2112,
											"end": 2117,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2122,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2104,
											"end": 2132,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2094,
											"end": 2132,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2094,
											"end": 2132,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2036,
											"end": 2138,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2036,
											"end": 2138,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2036,
											"end": 2138,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2036,
											"end": 2138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2144,
											"end": 2521,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 2144,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2235,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2260,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 2293,
											"end": 2298,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2260,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 2260,
											"end": 2299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2260,
											"end": 2299,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 2260,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2315,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 2379,
											"end": 2385,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2374,
											"end": 2377,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2315,
											"end": 2386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 2315,
											"end": 2386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2315,
											"end": 2386,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 2315,
											"end": 2386,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2386,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2386,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2395,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 2453,
											"end": 2459,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2448,
											"end": 2451,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2441,
											"end": 2445,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2434,
											"end": 2439,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2430,
											"end": 2446,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2395,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 2395,
											"end": 2460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2395,
											"end": 2460,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 2395,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2485,
											"end": 2514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 2507,
											"end": 2513,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2485,
											"end": 2514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 2485,
											"end": 2514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2485,
											"end": 2514,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 2485,
											"end": 2514,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2480,
											"end": 2483,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2476,
											"end": 2515,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2469,
											"end": 2515,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2469,
											"end": 2515,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2521,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2144,
											"end": 2521,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2144,
											"end": 2521,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2144,
											"end": 2521,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2144,
											"end": 2521,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2144,
											"end": 2521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2527,
											"end": 2840,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 2527,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2640,
											"end": 2644,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2678,
											"end": 2680,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2667,
											"end": 2676,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2663,
											"end": 2681,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2655,
											"end": 2681,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2655,
											"end": 2681,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 2736,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2721,
											"end": 2725,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2717,
											"end": 2737,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2713,
											"end": 2714,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2702,
											"end": 2711,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2715,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2691,
											"end": 2738,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 2828,
											"end": 2832,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2819,
											"end": 2825,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 2755,
											"end": 2833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2833,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 2755,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2833,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2747,
											"end": 2833,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2527,
											"end": 2840,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2527,
											"end": 2840,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2527,
											"end": 2840,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2527,
											"end": 2840,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2527,
											"end": 2840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2846,
											"end": 2968,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 2846,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2919,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 2937,
											"end": 2942,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2919,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 2919,
											"end": 2943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2919,
											"end": 2943,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 2919,
											"end": 2943,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 2917,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2909,
											"end": 2944,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2899,
											"end": 2962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 2899,
											"end": 2962,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2958,
											"end": 2959,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2955,
											"end": 2956,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2948,
											"end": 2960,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2899,
											"end": 2962,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 2899,
											"end": 2962,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2846,
											"end": 2968,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2846,
											"end": 2968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 3113,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 2974,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3020,
											"end": 3025,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3064,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3045,
											"end": 3065,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3036,
											"end": 3065,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3036,
											"end": 3065,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3074,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 3101,
											"end": 3106,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3074,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 3074,
											"end": 3107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3074,
											"end": 3107,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 3074,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 3113,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 3113,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 3113,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 3113,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2974,
											"end": 3113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3119,
											"end": 3593,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 3119,
											"end": 3593,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3187,
											"end": 3193,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3195,
											"end": 3201,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3244,
											"end": 3246,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3232,
											"end": 3241,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3223,
											"end": 3230,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3219,
											"end": 3242,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3215,
											"end": 3247,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3212,
											"end": 3331,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3212,
											"end": 3331,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 3212,
											"end": 3331,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 3250,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 3250,
											"end": 3329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3250,
											"end": 3329,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 3250,
											"end": 3329,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3212,
											"end": 3331,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 3212,
											"end": 3331,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3370,
											"end": 3371,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3395,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 3440,
											"end": 3447,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3431,
											"end": 3437,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3420,
											"end": 3429,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3416,
											"end": 3438,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3395,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 3395,
											"end": 3448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3395,
											"end": 3448,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 3395,
											"end": 3448,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3448,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3385,
											"end": 3448,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3341,
											"end": 3458,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3499,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 3568,
											"end": 3575,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3559,
											"end": 3565,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3548,
											"end": 3557,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3544,
											"end": 3566,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 3523,
											"end": 3576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3576,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3576,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3468,
											"end": 3586,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3119,
											"end": 3593,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3119,
											"end": 3593,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3119,
											"end": 3593,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3119,
											"end": 3593,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3119,
											"end": 3593,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3119,
											"end": 3593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3599,
											"end": 3689,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 3599,
											"end": 3689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3633,
											"end": 3640,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3681,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3669,
											"end": 3682,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3662,
											"end": 3683,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3651,
											"end": 3683,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3651,
											"end": 3683,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3599,
											"end": 3689,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3599,
											"end": 3689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3599,
											"end": 3689,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3599,
											"end": 3689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3695,
											"end": 3804,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 3695,
											"end": 3804,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3776,
											"end": 3797,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 3791,
											"end": 3796,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3776,
											"end": 3797,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 3776,
											"end": 3797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3776,
											"end": 3797,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 3776,
											"end": 3797,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3771,
											"end": 3774,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3798,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3695,
											"end": 3804,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3695,
											"end": 3804,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3695,
											"end": 3804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3897,
											"end": 3901,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3935,
											"end": 3937,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3924,
											"end": 3933,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3920,
											"end": 3938,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3912,
											"end": 3938,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3912,
											"end": 3938,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3948,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 4010,
											"end": 4011,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3999,
											"end": 4008,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3995,
											"end": 4012,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3986,
											"end": 3992,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3948,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 3948,
											"end": 4013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3948,
											"end": 4013,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 3948,
											"end": 4013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3810,
											"end": 4020,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3810,
											"end": 4020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4103,
											"end": 4109,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4111,
											"end": 4117,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4119,
											"end": 4125,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4168,
											"end": 4170,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4156,
											"end": 4165,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4147,
											"end": 4154,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4143,
											"end": 4166,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4139,
											"end": 4171,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 4174,
											"end": 4253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4294,
											"end": 4295,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 4364,
											"end": 4371,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4361,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4344,
											"end": 4353,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4340,
											"end": 4362,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 4319,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4309,
											"end": 4372,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4309,
											"end": 4372,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4265,
											"end": 4382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4421,
											"end": 4423,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 4492,
											"end": 4499,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4483,
											"end": 4489,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4472,
											"end": 4481,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4468,
											"end": 4490,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 4447,
											"end": 4500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4500,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4500,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4392,
											"end": 4510,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4549,
											"end": 4551,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 4620,
											"end": 4627,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4611,
											"end": 4617,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4609,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4596,
											"end": 4618,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 4575,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4520,
											"end": 4638,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4686,
											"end": 4693,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4730,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4719,
											"end": 4724,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4715,
											"end": 4731,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 4731,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 4731,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 4737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 4842,
											"end": 4847,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 4826,
											"end": 4848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4821,
											"end": 4824,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4814,
											"end": 4849,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4743,
											"end": 4855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4950,
											"end": 4954,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4988,
											"end": 4990,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4977,
											"end": 4986,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4973,
											"end": 4991,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 4991,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4965,
											"end": 4991,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 5065,
											"end": 5066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5054,
											"end": 5063,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5050,
											"end": 5067,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 5001,
											"end": 5068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4861,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 5186,
											"end": 5191,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 5168,
											"end": 5192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5163,
											"end": 5166,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5156,
											"end": 5193,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5302,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5336,
											"end": 5338,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5325,
											"end": 5334,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5321,
											"end": 5339,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5313,
											"end": 5339,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5313,
											"end": 5339,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 5417,
											"end": 5418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5406,
											"end": 5415,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5402,
											"end": 5419,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5399,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 5349,
											"end": 5420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5501,
											"end": 5507,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5509,
											"end": 5515,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5558,
											"end": 5560,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5546,
											"end": 5555,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5537,
											"end": 5544,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5533,
											"end": 5556,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5529,
											"end": 5561,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 5564,
											"end": 5643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5684,
											"end": 5685,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 5754,
											"end": 5761,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5745,
											"end": 5751,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5734,
											"end": 5743,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5730,
											"end": 5752,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 5709,
											"end": 5762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5699,
											"end": 5762,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5699,
											"end": 5762,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5655,
											"end": 5772,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5811,
											"end": 5813,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 5882,
											"end": 5889,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5873,
											"end": 5879,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5862,
											"end": 5871,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5858,
											"end": 5880,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 5837,
											"end": 5890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5827,
											"end": 5890,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5827,
											"end": 5890,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5782,
											"end": 5900,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5913,
											"end": 6093,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 5913,
											"end": 6093,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5961,
											"end": 6038,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5958,
											"end": 5959,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5951,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6058,
											"end": 6062,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 6055,
											"end": 6056,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6048,
											"end": 6063,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6082,
											"end": 6086,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6079,
											"end": 6080,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6072,
											"end": 6087,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6143,
											"end": 6149,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6180,
											"end": 6181,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6174,
											"end": 6178,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6170,
											"end": 6182,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6160,
											"end": 6182,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6160,
											"end": 6182,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6227,
											"end": 6228,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6221,
											"end": 6225,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6217,
											"end": 6229,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6248,
											"end": 6266,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6304,
											"end": 6308,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 6296,
											"end": 6302,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6292,
											"end": 6309,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "tag",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6366,
											"end": 6368,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6358,
											"end": 6364,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6369,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6335,
											"end": 6353,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6332,
											"end": 6370,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 6385,
											"end": 6403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6150,
											"end": 6419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6605,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 6425,
											"end": 6605,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6473,
											"end": 6550,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6470,
											"end": 6471,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6463,
											"end": 6551,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6570,
											"end": 6574,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 6567,
											"end": 6568,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6560,
											"end": 6575,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6594,
											"end": 6598,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6591,
											"end": 6592,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6584,
											"end": 6599,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6611,
											"end": 6802,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 6611,
											"end": 6802,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6651,
											"end": 6654,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6670,
											"end": 6690,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 6688,
											"end": 6689,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6670,
											"end": 6690,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 6670,
											"end": 6690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6670,
											"end": 6690,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 6670,
											"end": 6690,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6665,
											"end": 6690,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6665,
											"end": 6690,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6704,
											"end": 6724,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 6722,
											"end": 6723,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6704,
											"end": 6724,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 6704,
											"end": 6724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6704,
											"end": 6724,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 6704,
											"end": 6724,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6699,
											"end": 6724,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6699,
											"end": 6724,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6747,
											"end": 6748,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6744,
											"end": 6745,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6740,
											"end": 6749,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6733,
											"end": 6749,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6733,
											"end": 6749,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6768,
											"end": 6771,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6765,
											"end": 6766,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6762,
											"end": 6772,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6759,
											"end": 6795,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6759,
											"end": 6795,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 6759,
											"end": 6795,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6775,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 6775,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 6775,
											"end": 6793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6775,
											"end": 6793,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 6775,
											"end": 6793,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6759,
											"end": 6795,
											"name": "tag",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 6759,
											"end": 6795,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6611,
											"end": 6802,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6611,
											"end": 6802,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6611,
											"end": 6802,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6611,
											"end": 6802,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6611,
											"end": 6802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6808,
											"end": 6976,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 6808,
											"end": 6976,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6948,
											"end": 6968,
											"name": "PUSH",
											"source": 7,
											"value": "45786365656473206D617820737570706C790000000000000000000000000000"
										},
										{
											"begin": 6944,
											"end": 6945,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6936,
											"end": 6942,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6932,
											"end": 6946,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6925,
											"end": 6969,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6808,
											"end": 6976,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6808,
											"end": 6976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6982,
											"end": 7348,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 6982,
											"end": 7348,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7124,
											"end": 7127,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7145,
											"end": 7212,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 7209,
											"end": 7211,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 7204,
											"end": 7207,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7145,
											"end": 7212,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 7145,
											"end": 7212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7145,
											"end": 7212,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 7145,
											"end": 7212,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7138,
											"end": 7212,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7138,
											"end": 7212,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7221,
											"end": 7314,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 7310,
											"end": 7313,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7221,
											"end": 7314,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 7221,
											"end": 7314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7221,
											"end": 7314,
											"name": "tag",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 7221,
											"end": 7314,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7339,
											"end": 7341,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7334,
											"end": 7337,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7330,
											"end": 7342,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7323,
											"end": 7342,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7323,
											"end": 7342,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6982,
											"end": 7348,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6982,
											"end": 7348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6982,
											"end": 7348,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6982,
											"end": 7348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7354,
											"end": 7773,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 7354,
											"end": 7773,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7520,
											"end": 7524,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7558,
											"end": 7560,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7547,
											"end": 7556,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7543,
											"end": 7561,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7535,
											"end": 7561,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7535,
											"end": 7561,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7607,
											"end": 7616,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7601,
											"end": 7605,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7597,
											"end": 7617,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7593,
											"end": 7594,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7582,
											"end": 7591,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7578,
											"end": 7595,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7571,
											"end": 7618,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7635,
											"end": 7766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 7761,
											"end": 7765,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7635,
											"end": 7766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 7635,
											"end": 7766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7635,
											"end": 7766,
											"name": "tag",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 7635,
											"end": 7766,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7627,
											"end": 7766,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7627,
											"end": 7766,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7354,
											"end": 7773,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7354,
											"end": 7773,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7354,
											"end": 7773,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7354,
											"end": 7773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7779,
											"end": 7973,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 7779,
											"end": 7973,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7819,
											"end": 7823,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7839,
											"end": 7859,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 7857,
											"end": 7858,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7839,
											"end": 7859,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 7839,
											"end": 7859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7839,
											"end": 7859,
											"name": "tag",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 7839,
											"end": 7859,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7834,
											"end": 7859,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7834,
											"end": 7859,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7873,
											"end": 7893,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 7891,
											"end": 7892,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7873,
											"end": 7893,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 7873,
											"end": 7893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7873,
											"end": 7893,
											"name": "tag",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 7873,
											"end": 7893,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 7893,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7868,
											"end": 7893,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7917,
											"end": 7918,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7914,
											"end": 7915,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7910,
											"end": 7919,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7902,
											"end": 7919,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7902,
											"end": 7919,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7941,
											"end": 7942,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7935,
											"end": 7939,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7932,
											"end": 7943,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7929,
											"end": 7966,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7929,
											"end": 7966,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 7929,
											"end": 7966,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7946,
											"end": 7964,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 7946,
											"end": 7964,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 7946,
											"end": 7964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7946,
											"end": 7964,
											"name": "tag",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 7946,
											"end": 7964,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7929,
											"end": 7966,
											"name": "tag",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 7929,
											"end": 7966,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7779,
											"end": 7973,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7779,
											"end": 7973,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7779,
											"end": 7973,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7779,
											"end": 7973,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7779,
											"end": 7973,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7979,
											"end": 8156,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 7979,
											"end": 8156,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8119,
											"end": 8148,
											"name": "PUSH",
											"source": 7,
											"value": "496E73756666696369656E74206C6F636B65642062616C616E63650000000000"
										},
										{
											"begin": 8115,
											"end": 8116,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8107,
											"end": 8113,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8103,
											"end": 8117,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8096,
											"end": 8149,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7979,
											"end": 8156,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7979,
											"end": 8156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8162,
											"end": 8528,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 8162,
											"end": 8528,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8304,
											"end": 8307,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8325,
											"end": 8392,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 8389,
											"end": 8391,
											"name": "PUSH",
											"source": 7,
											"value": "1B"
										},
										{
											"begin": 8384,
											"end": 8387,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8392,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 8325,
											"end": 8392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8392,
											"name": "tag",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 8325,
											"end": 8392,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8318,
											"end": 8392,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8318,
											"end": 8392,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8401,
											"end": 8494,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 8490,
											"end": 8493,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8401,
											"end": 8494,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 8401,
											"end": 8494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8401,
											"end": 8494,
											"name": "tag",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 8401,
											"end": 8494,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8519,
											"end": 8521,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8514,
											"end": 8517,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8510,
											"end": 8522,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8503,
											"end": 8522,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8503,
											"end": 8522,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8162,
											"end": 8528,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8162,
											"end": 8528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8162,
											"end": 8528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8162,
											"end": 8528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8534,
											"end": 8953,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 8534,
											"end": 8953,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8700,
											"end": 8704,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8738,
											"end": 8740,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8727,
											"end": 8736,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8723,
											"end": 8741,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8715,
											"end": 8741,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8715,
											"end": 8741,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8787,
											"end": 8796,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8781,
											"end": 8785,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8777,
											"end": 8797,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8773,
											"end": 8774,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8762,
											"end": 8771,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8758,
											"end": 8775,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8751,
											"end": 8798,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8815,
											"end": 8946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 8941,
											"end": 8945,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8815,
											"end": 8946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 8815,
											"end": 8946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8815,
											"end": 8946,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 8815,
											"end": 8946,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8807,
											"end": 8946,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8807,
											"end": 8946,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8534,
											"end": 8953,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8534,
											"end": 8953,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8534,
											"end": 8953,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8534,
											"end": 8953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8959,
											"end": 9137,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 8959,
											"end": 9137,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9099,
											"end": 9129,
											"name": "PUSH",
											"source": 7,
											"value": "496E73756666696369656E742062616C616E636520746F206C6F636B00000000"
										},
										{
											"begin": 9095,
											"end": 9096,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9087,
											"end": 9093,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9083,
											"end": 9097,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9076,
											"end": 9130,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8959,
											"end": 9137,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8959,
											"end": 9137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9143,
											"end": 9509,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 9143,
											"end": 9509,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9285,
											"end": 9288,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9306,
											"end": 9373,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 9370,
											"end": 9372,
											"name": "PUSH",
											"source": 7,
											"value": "1C"
										},
										{
											"begin": 9365,
											"end": 9368,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9306,
											"end": 9373,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 9306,
											"end": 9373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9306,
											"end": 9373,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 9306,
											"end": 9373,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9299,
											"end": 9373,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9299,
											"end": 9373,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9382,
											"end": 9475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 9471,
											"end": 9474,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9382,
											"end": 9475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 9382,
											"end": 9475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9382,
											"end": 9475,
											"name": "tag",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 9382,
											"end": 9475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9500,
											"end": 9502,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9495,
											"end": 9498,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9491,
											"end": 9503,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9484,
											"end": 9503,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9484,
											"end": 9503,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9143,
											"end": 9509,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9143,
											"end": 9509,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9143,
											"end": 9509,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9143,
											"end": 9509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9515,
											"end": 9934,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 9515,
											"end": 9934,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9681,
											"end": 9685,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9719,
											"end": 9721,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9708,
											"end": 9717,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9704,
											"end": 9722,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9696,
											"end": 9722,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9696,
											"end": 9722,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9768,
											"end": 9777,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9762,
											"end": 9766,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9758,
											"end": 9778,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9754,
											"end": 9755,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9743,
											"end": 9752,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9739,
											"end": 9756,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9732,
											"end": 9779,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9796,
											"end": 9927,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 9922,
											"end": 9926,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9796,
											"end": 9927,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 9796,
											"end": 9927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9796,
											"end": 9927,
											"name": "tag",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 9796,
											"end": 9927,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9788,
											"end": 9927,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9788,
											"end": 9927,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9515,
											"end": 9934,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9515,
											"end": 9934,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9515,
											"end": 9934,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9515,
											"end": 9934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9940,
											"end": 10382,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 9940,
											"end": 10382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10089,
											"end": 10093,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10127,
											"end": 10129,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 10116,
											"end": 10125,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10112,
											"end": 10130,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10104,
											"end": 10130,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10104,
											"end": 10130,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10140,
											"end": 10211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 10208,
											"end": 10209,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10197,
											"end": 10206,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10193,
											"end": 10210,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10184,
											"end": 10190,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10140,
											"end": 10211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 10140,
											"end": 10211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10140,
											"end": 10211,
											"name": "tag",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 10140,
											"end": 10211,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10221,
											"end": 10293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 10289,
											"end": 10291,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10278,
											"end": 10287,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10274,
											"end": 10292,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10265,
											"end": 10271,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10221,
											"end": 10293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 10221,
											"end": 10293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10221,
											"end": 10293,
											"name": "tag",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 10221,
											"end": 10293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10303,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 10371,
											"end": 10373,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10360,
											"end": 10369,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10356,
											"end": 10374,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10347,
											"end": 10353,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10303,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 10303,
											"end": 10375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10303,
											"end": 10375,
											"name": "tag",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 10303,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9940,
											"end": 10382,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 9940,
											"end": 10382,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 9940,
											"end": 10382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9940,
											"end": 10382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9940,
											"end": 10382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9940,
											"end": 10382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9940,
											"end": 10382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"C/circulatingSupplyTypes.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"circulatingSupply()": "9358928b",
							"decimals()": "313ce567",
							"fullyDilutedSupply()": "252e65b2",
							"lockTokens(address,uint256)": "b1c25586",
							"lockedBalances(address)": "0483a7f6",
							"lockedTotal()": "f145c73b",
							"maxSupply()": "d5abeb01",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"nonCirculatingSupply()": "52b8ab35",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unlockTokens(address,uint256)": "9d564d9a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"circulatingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fullyDilutedSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"lockTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lockedBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockedTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonCirculatingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unlockTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"circulatingSupply()\":{\"returns\":{\"_0\":\"The circulating supply.\"}},\"constructor\":{\"params\":{\"_initialSupply\":\"The number of tokens to mint initially.\",\"_maxSupply\":\"The maximum token supply.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"fullyDilutedSupply()\":{\"returns\":{\"_0\":\"The fully diluted supply.\"}},\"lockTokens(address,uint256)\":{\"params\":{\"account\":\"The address whose tokens will be locked.\",\"amount\":\"The number of tokens to lock.\"}},\"mint(address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to mint.\",\"to\":\"The address to receive minted tokens.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonCirculatingSupply()\":{\"returns\":{\"_0\":\"The locked token amount.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unlockTokens(address,uint256)\":{\"params\":{\"account\":\"The address whose tokens will be unlocked.\",\"amount\":\"The number of tokens to unlock.\"}}},\"title\":\"CirculatingSupplyTokenExtended\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"circulatingSupply()\":{\"notice\":\"Returns the circulating supply (i.e., total supply minus locked tokens).\"},\"constructor\":{\"notice\":\"Constructor mints an initial supply and sets the maximum supply.\"},\"fullyDilutedSupply()\":{\"notice\":\"Returns the fully diluted supply (i.e., maximum token supply).\"},\"lockTokens(address,uint256)\":{\"notice\":\"Locks tokens from an account, reducing circulating supply.\"},\"mint(address,uint256)\":{\"notice\":\"Allows the owner to mint additional tokens if maxSupply is not exceeded.\"},\"nonCirculatingSupply()\":{\"notice\":\"Returns the non-circulating supply (i.e., tokens that are locked).\"},\"unlockTokens(address,uint256)\":{\"notice\":\"Unlocks tokens from an account, returning them to circulation.\"}},\"notice\":\"An ERC20 token that tracks total supply, circulating supply (free tokens), and fully diluted supply. The owner can lock tokens to remove them from circulation (e.g., for team reserves or vesting), and the maximum supply is fixed.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"C/circulatingSupplyTypes.sol\":\"CirculatingSupplyTokenExtended\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"C/circulatingSupplyTypes.sol\":{\"keccak256\":\"0xb0f804299179cc1974a82e33c3b0c80253d80ee7c18ed58b735359c8ff3524ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f031f56525b3c4ff34d39258386bc33f0fb5482b7e2fcbb1c499bc624217c2c\",\"dweb:/ipfs/QmPRjGGLTxWGH7gjq9ogvAVmK615ZmzMnXKoYcZQT7cYi5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "C/circulatingSupplyTypes.sol:CirculatingSupplyTokenExtended",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "C/circulatingSupplyTypes.sol:CirculatingSupplyTokenExtended",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "C/circulatingSupplyTypes.sol:CirculatingSupplyTokenExtended",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "C/circulatingSupplyTypes.sol:CirculatingSupplyTokenExtended",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "C/circulatingSupplyTypes.sol:CirculatingSupplyTokenExtended",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "C/circulatingSupplyTypes.sol:CirculatingSupplyTokenExtended",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 948,
								"contract": "C/circulatingSupplyTypes.sol:CirculatingSupplyTokenExtended",
								"label": "lockedBalances",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 950,
								"contract": "C/circulatingSupplyTypes.sol:CirculatingSupplyTokenExtended",
								"label": "lockedTotal",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"circulatingSupply()": {
								"notice": "Returns the circulating supply (i.e., total supply minus locked tokens)."
							},
							"constructor": {
								"notice": "Constructor mints an initial supply and sets the maximum supply."
							},
							"fullyDilutedSupply()": {
								"notice": "Returns the fully diluted supply (i.e., maximum token supply)."
							},
							"lockTokens(address,uint256)": {
								"notice": "Locks tokens from an account, reducing circulating supply."
							},
							"mint(address,uint256)": {
								"notice": "Allows the owner to mint additional tokens if maxSupply is not exceeded."
							},
							"nonCirculatingSupply()": {
								"notice": "Returns the non-circulating supply (i.e., tokens that are locked)."
							},
							"unlockTokens(address,uint256)": {
								"notice": "Unlocks tokens from an account, returning them to circulation."
							}
						},
						"notice": "An ERC20 token that tracks total supply, circulating supply (free tokens), and fully diluted supply. The owner can lock tokens to remove them from circulation (e.g., for team reserves or vesting), and the maximum supply is fixed.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1657:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1667:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1675:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1690:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1700:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1613:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1634:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:2"
									},
									"scope": 799,
									"src": "1601:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1839:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1856:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1849:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1824:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:2"
									},
									"scope": 799,
									"src": "1779:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2043:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2053:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2028:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:2"
									},
									"scope": 799,
									"src": "1981:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2763:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2773:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2756:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:2"
									},
									"scope": 799,
									"src": "2707:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2910:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2927:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2920:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2901:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:2"
									},
									"scope": 799,
									"src": "2849:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3078:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3095:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3105:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3088:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:2"
									},
									"scope": 799,
									"src": "3004:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3390:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3400:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3416:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3448:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3455:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3459:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3438:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3475:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3333:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3345:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3384:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:2"
									},
									"scope": 799,
									"src": "3315:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3640:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3657:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3669:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3676:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3650:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3570:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3585:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3631:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:2"
									},
									"scope": 799,
									"src": "3551:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4077:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4087:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4103:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4134:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4141:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4150:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4125:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4166:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4015:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4071:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:2"
									},
									"scope": 799,
									"src": "3998:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4869:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4879:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4897:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4935:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4941:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4950:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4919:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4976:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4982:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4986:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4966:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5002:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4798:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4812:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4824:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4863:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:2"
									},
									"scope": 799,
									"src": "4776:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5462:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5476:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5472:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5496:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5517:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5510:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5571:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5567:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5589:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5610:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5603:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5670:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5676:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5680:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5662:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5412:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5426:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5438:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:2"
									},
									"scope": 799,
									"src": "5393:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6083:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6097:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6271:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6285:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6307:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6317:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6340:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6354:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6336:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6361:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6411:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6417:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6430:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6386:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6571:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6581:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6589:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6603:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6093:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6117:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6233:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6249:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6647:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6862:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7021:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7031:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7038:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6643:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6665:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6810:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6826:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7092:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7098:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7102:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7083:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7078:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6025:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6039:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6051:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:2"
									},
									"scope": 799,
									"src": "6008:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7514:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7528:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7524:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7551:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7572:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7565:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7644:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7653:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7624:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7473:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7490:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:2"
									},
									"scope": 799,
									"src": "7458:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8040:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8054:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8050:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8077:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8098:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8091:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8156:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8177:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8148:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7999:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8016:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:2"
									},
									"scope": 799,
									"src": "7984:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8800:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8819:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8826:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8835:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8810:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8744:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8759:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8776:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:2"
									},
									"scope": 799,
									"src": "8726:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9799:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9813:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9809:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9834:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9855:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9848:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9911:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9907:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9934:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9955:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9948:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10006:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10018:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10025:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10036:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10055:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10051:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10066:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10094:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10101:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10110:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10085:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10080:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9719:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9734:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9751:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9766:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:2"
									},
									"scope": 799,
									"src": "9701:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10504:387:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10514:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10551:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10541:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10580:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10576:309:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10618:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10636:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10655:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10632:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10662:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10714:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10723:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10741:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10687:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10812:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10819:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10828:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10847:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10803:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10440:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10455:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10472:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:2"
									},
									"scope": 799,
									"src": "10415:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9787:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10789:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"C/circulatingSupplyTypes.sol": {
				"ast": {
					"absolutePath": "C/circulatingSupplyTypes.sol",
					"exportedSymbols": {
						"CirculatingSupplyTokenExtended": [
							1123
						],
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"Ownable": [
							147
						]
					},
					"id": 1124,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1124,
							"sourceUnit": 800,
							"src": "58:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1124,
							"sourceUnit": 148,
							"src": "114:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 939,
										"name": "ERC20",
										"nameLocations": [
											"499:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "499:5:6"
									},
									"id": 940,
									"nodeType": "InheritanceSpecifier",
									"src": "499:5:6"
								},
								{
									"baseName": {
										"id": 941,
										"name": "Ownable",
										"nameLocations": [
											"506:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "506:7:6"
									},
									"id": 942,
									"nodeType": "InheritanceSpecifier",
									"src": "506:7:6"
								}
							],
							"canonicalName": "CirculatingSupplyTokenExtended",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 938,
								"nodeType": "StructuredDocumentation",
								"src": "168:288:6",
								"text": "@title CirculatingSupplyTokenExtended\n @notice An ERC20 token that tracks total supply, circulating supply (free tokens), and fully diluted supply.\n The owner can lock tokens to remove them from circulation (e.g., for team reserves or vesting), and the maximum supply is fixed."
							},
							"fullyImplemented": true,
							"id": 1123,
							"linearizedBaseContracts": [
								1123,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "CirculatingSupplyTokenExtended",
							"nameLocation": "465:30:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "d5abeb01",
									"id": 944,
									"mutability": "immutable",
									"name": "maxSupply",
									"nameLocation": "602:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1123,
									"src": "577:34:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 943,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "577:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0483a7f6",
									"id": 948,
									"mutability": "mutable",
									"name": "lockedBalances",
									"nameLocation": "721:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 1123,
									"src": "686:49:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 947,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 945,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "694:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "686:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 946,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "705:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f145c73b",
									"id": 950,
									"mutability": "mutable",
									"name": "lockedTotal",
									"nameLocation": "811:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1123,
									"src": "796:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 949,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "796:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "ac87f20a77d28ee8bbb58ec87ea8fa968b3393efae1a368fd50b767c2847391c",
									"id": 956,
									"name": "TokensLocked",
									"nameLocation": "835:12:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "864:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "848:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "848:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "881:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "873:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "873:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "847:41:6"
									},
									"src": "829:60:6"
								},
								{
									"anonymous": false,
									"eventSelector": "e7b379c6c1fa169e9079c25e9143b127637eef8ec8c9d5c06ddb4ab3e1195888",
									"id": 962,
									"name": "TokensUnlocked",
									"nameLocation": "900:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "931:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "915:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "948:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "940:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "914:41:6"
									},
									"src": "894:62:6"
								},
								{
									"body": {
										"id": 995,
										"nodeType": "Block",
										"src": "1309:169:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 979,
																"name": "_initialSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 965,
																"src": "1327:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 980,
																"name": "_maxSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 967,
																"src": "1345:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1327:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c20737570706c79206d757374206265203c3d206d617820737570706c79",
															"id": 982,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1357:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4bcb321ac9090d8a353d42dcd4137791b7ae4ede1885cbffad86148322eb0287",
																"typeString": "literal_string \"Initial supply must be <= max supply\""
															},
															"value": "Initial supply must be <= max supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4bcb321ac9090d8a353d42dcd4137791b7ae4ede1885cbffad86148322eb0287",
																"typeString": "literal_string \"Initial supply must be <= max supply\""
															}
														],
														"id": 978,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1319:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1319:77:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 984,
												"nodeType": "ExpressionStatement",
												"src": "1319:77:6"
											},
											{
												"expression": {
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 985,
														"name": "maxSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "1406:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 986,
														"name": "_maxSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "1418:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1406:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 988,
												"nodeType": "ExpressionStatement",
												"src": "1406:22:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 990,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1444:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1448:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1444:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 992,
															"name": "_initialSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "1456:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 989,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1438:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1438:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 994,
												"nodeType": "ExpressionStatement",
												"src": "1438:33:6"
											}
										]
									},
									"documentation": {
										"id": 963,
										"nodeType": "StructuredDocumentation",
										"src": "962:198:6",
										"text": "@notice Constructor mints an initial supply and sets the maximum supply.\n @param _initialSupply The number of tokens to mint initially.\n @param _maxSupply The maximum token supply."
									},
									"id": 996,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "43697263756c6174696e67537570706c79546f6b656e457874656e646564",
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1235:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c51d9cc708f099e5161625745a0e54ffdcd5210afebfcbb7ce53b15e10d0028b",
														"typeString": "literal_string \"CirculatingSupplyTokenExtended\""
													},
													"value": "CirculatingSupplyTokenExtended"
												},
												{
													"hexValue": "43535445",
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1269:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_af764729392d4a8a28dd0d612de2f2337d90063392132303681c457c4bb51be0",
														"typeString": "literal_string \"CSTE\""
													},
													"value": "CSTE"
												}
											],
											"id": 972,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 969,
												"name": "ERC20",
												"nameLocations": [
													"1229:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "1229:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1229:47:6"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 974,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1293:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1297:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1293:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 976,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 973,
												"name": "Ownable",
												"nameLocations": [
													"1285:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1285:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1285:19:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "_initialSupply",
												"nameLocation": "1185:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "1177:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1177:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "_maxSupply",
												"nameLocation": "1209:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "1201:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1201:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1176:44:6"
									},
									"returnParameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1309:0:6"
									},
									"scope": 1123,
									"src": "1165:313:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1021,
										"nodeType": "Block",
										"src": "1742:110:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1010,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1007,
																		"name": "totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 372,
																		"src": "1760:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 1008,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1760:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1009,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1001,
																	"src": "1776:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1760:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1011,
																"name": "maxSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 944,
																"src": "1786:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1760:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45786365656473206d617820737570706c79",
															"id": 1013,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1797:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611",
																"typeString": "literal_string \"Exceeds max supply\""
															},
															"value": "Exceeds max supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611",
																"typeString": "literal_string \"Exceeds max supply\""
															}
														],
														"id": 1006,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1752:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1752:66:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1015,
												"nodeType": "ExpressionStatement",
												"src": "1752:66:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1017,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 999,
															"src": "1834:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1018,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1001,
															"src": "1838:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1016,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1828:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1020,
												"nodeType": "ExpressionStatement",
												"src": "1828:17:6"
											}
										]
									},
									"documentation": {
										"id": 997,
										"nodeType": "StructuredDocumentation",
										"src": "1484:192:6",
										"text": "@notice Allows the owner to mint additional tokens if maxSupply is not exceeded.\n @param to The address to receive minted tokens.\n @param amount The amount of tokens to mint."
									},
									"functionSelector": "40c10f19",
									"id": 1022,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1004,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1003,
												"name": "onlyOwner",
												"nameLocations": [
													"1732:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1732:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1732:9:6"
										}
									],
									"name": "mint",
									"nameLocation": "1690:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1703:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "1695:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1715:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "1707:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1707:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1694:28:6"
									},
									"returnParameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1742:0:6"
									},
									"scope": 1123,
									"src": "1681:171:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1056,
										"nodeType": "Block",
										"src": "2121:204:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1034,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1025,
																		"src": "2149:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1033,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "2139:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2139:18:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1036,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1027,
																"src": "2161:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2139:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e636520746f206c6f636b",
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2169:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_15d37d1f13ebbf9c2d9f328f9874f34b0342cb2aea3b55aa26d22474d040a371",
																"typeString": "literal_string \"Insufficient balance to lock\""
															},
															"value": "Insufficient balance to lock"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_15d37d1f13ebbf9c2d9f328f9874f34b0342cb2aea3b55aa26d22474d040a371",
																"typeString": "literal_string \"Insufficient balance to lock\""
															}
														],
														"id": 1032,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2131:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2131:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1040,
												"nodeType": "ExpressionStatement",
												"src": "2131:69:6"
											},
											{
												"expression": {
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1041,
															"name": "lockedBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "2210:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1043,
														"indexExpression": {
															"id": 1042,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1025,
															"src": "2225:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2210:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1044,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1027,
														"src": "2237:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2210:33:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1046,
												"nodeType": "ExpressionStatement",
												"src": "2210:33:6"
											},
											{
												"expression": {
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1047,
														"name": "lockedTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "2253:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1048,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1027,
														"src": "2268:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2253:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1050,
												"nodeType": "ExpressionStatement",
												"src": "2253:21:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1052,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1025,
															"src": "2302:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1053,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1027,
															"src": "2311:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1051,
														"name": "TokensLocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "2289:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2289:29:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1055,
												"nodeType": "EmitStatement",
												"src": "2284:34:6"
											}
										]
									},
									"documentation": {
										"id": 1023,
										"nodeType": "StructuredDocumentation",
										"src": "1858:186:6",
										"text": "@notice Locks tokens from an account, reducing circulating supply.\n @param account The address whose tokens will be locked.\n @param amount The number of tokens to lock."
									},
									"functionSelector": "b1c25586",
									"id": 1057,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1030,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1029,
												"name": "onlyOwner",
												"nameLocations": [
													"2111:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2111:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2111:9:6"
										}
									],
									"name": "lockTokens",
									"nameLocation": "2058:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2077:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "2069:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1024,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2094:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "2086:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2086:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:33:6"
									},
									"returnParameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2121:0:6"
									},
									"scope": 1123,
									"src": "2049:276:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1091,
										"nodeType": "Block",
										"src": "2604:210:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1068,
																	"name": "lockedBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 948,
																	"src": "2622:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1070,
																"indexExpression": {
																	"id": 1069,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1060,
																	"src": "2637:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2622:23:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1071,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1062,
																"src": "2649:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2622:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74206c6f636b65642062616c616e6365",
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2657:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7bf3d26c1ba6f0571d27961105ce86b9b37cc8bfda0b7e586ec6b3133845d121",
																"typeString": "literal_string \"Insufficient locked balance\""
															},
															"value": "Insufficient locked balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7bf3d26c1ba6f0571d27961105ce86b9b37cc8bfda0b7e586ec6b3133845d121",
																"typeString": "literal_string \"Insufficient locked balance\""
															}
														],
														"id": 1067,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2614:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2614:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1075,
												"nodeType": "ExpressionStatement",
												"src": "2614:73:6"
											},
											{
												"expression": {
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1076,
															"name": "lockedBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "2697:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1078,
														"indexExpression": {
															"id": 1077,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "2712:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2697:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1079,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1062,
														"src": "2724:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2697:33:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1081,
												"nodeType": "ExpressionStatement",
												"src": "2697:33:6"
											},
											{
												"expression": {
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1082,
														"name": "lockedTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "2740:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1083,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1062,
														"src": "2755:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2740:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1085,
												"nodeType": "ExpressionStatement",
												"src": "2740:21:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1087,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "2791:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1088,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1062,
															"src": "2800:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1086,
														"name": "TokensUnlocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "2776:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2776:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1090,
												"nodeType": "EmitStatement",
												"src": "2771:36:6"
											}
										]
									},
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "2331:194:6",
										"text": "@notice Unlocks tokens from an account, returning them to circulation.\n @param account The address whose tokens will be unlocked.\n @param amount The number of tokens to unlock."
									},
									"functionSelector": "9d564d9a",
									"id": 1092,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1065,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1064,
												"name": "onlyOwner",
												"nameLocations": [
													"2594:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2594:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2594:9:6"
										}
									],
									"name": "unlockTokens",
									"nameLocation": "2539:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2560:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "2552:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2552:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2577:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "2569:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2569:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2551:33:6"
									},
									"returnParameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2604:0:6"
									},
									"scope": 1123,
									"src": "2530:284:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1103,
										"nodeType": "Block",
										"src": "3010:51:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1098,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "3027:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1099,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3027:13:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1100,
														"name": "lockedTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "3043:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3027:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1097,
												"id": 1102,
												"nodeType": "Return",
												"src": "3020:34:6"
											}
										]
									},
									"documentation": {
										"id": 1093,
										"nodeType": "StructuredDocumentation",
										"src": "2820:124:6",
										"text": "@notice Returns the circulating supply (i.e., total supply minus locked tokens).\n @return The circulating supply."
									},
									"functionSelector": "9358928b",
									"id": 1104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "circulatingSupply",
									"nameLocation": "2958:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:2:6"
									},
									"returnParameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "3001:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1095,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3001:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3000:9:6"
									},
									"scope": 1123,
									"src": "2949:112:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1112,
										"nodeType": "Block",
										"src": "3255:35:6",
										"statements": [
											{
												"expression": {
													"id": 1110,
													"name": "lockedTotal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 950,
													"src": "3272:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1109,
												"id": 1111,
												"nodeType": "Return",
												"src": "3265:18:6"
											}
										]
									},
									"documentation": {
										"id": 1105,
										"nodeType": "StructuredDocumentation",
										"src": "3067:119:6",
										"text": "@notice Returns the non-circulating supply (i.e., tokens that are locked).\n @return The locked token amount."
									},
									"functionSelector": "52b8ab35",
									"id": 1113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nonCirculatingSupply",
									"nameLocation": "3200:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3220:2:6"
									},
									"returnParameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "3246:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3245:9:6"
									},
									"scope": 1123,
									"src": "3191:99:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1121,
										"nodeType": "Block",
										"src": "3479:33:6",
										"statements": [
											{
												"expression": {
													"id": 1119,
													"name": "maxSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 944,
													"src": "3496:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1118,
												"id": 1120,
												"nodeType": "Return",
												"src": "3489:16:6"
											}
										]
									},
									"documentation": {
										"id": 1114,
										"nodeType": "StructuredDocumentation",
										"src": "3296:116:6",
										"text": "@notice Returns the fully diluted supply (i.e., maximum token supply).\n @return The fully diluted supply."
									},
									"functionSelector": "252e65b2",
									"id": 1122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fullyDilutedSupply",
									"nameLocation": "3426:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3444:2:6"
									},
									"returnParameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "3470:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3470:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3469:9:6"
									},
									"scope": 1123,
									"src": "3417:95:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1124,
							"src": "456:3058:6",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820,
								956,
								962
							]
						}
					],
					"src": "32:3483:6"
				},
				"id": 6
			}
		}
	}
}