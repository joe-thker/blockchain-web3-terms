{
	"id": "31d3d0656a3f702ccc34cc62d1a9d494",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"sources": {
			"C/commingling .sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\"; \nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\"; \nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\n/// @notice Vault contract holds a single user’s collateral to avoid commingling with others.\n/// The vault is deployed for each user and is owned by the main stable coin contract.\ncontract Vault is Ownable {\n    using SafeERC20 for IERC20;\n    \n    IERC20 public immutable collateralToken;\n    \n    /// @notice The constructor sets the collateral token and assigns ownership.\n    /// @param _collateralToken The address of the collateral ERC20 token.\n    /// @param owner_ The owner of the vault (set to the main contract).\n    constructor(address _collateralToken, address owner_) Ownable(owner_) {\n        require(_collateralToken != address(0), \"Invalid token address\");\n        collateralToken = IERC20(_collateralToken);\n    }\n    \n    /// @notice Withdraws a specified amount of collateral to a given address.\n    /// Can only be called by the vault owner (the main contract).\n    function withdraw(address to, uint256 amount) external onlyOwner {\n        collateralToken.safeTransfer(to, amount);\n    }\n    \n    /// @notice Returns the vault’s current collateral balance.\n    function balance() external view returns (uint256) {\n        return collateralToken.balanceOf(address(this));\n    }\n}\n\n/// @notice CollateralizedStableCoin is an ERC20 token representing the stable coin.\n/// Users deposit a collateral ERC20 token into their own vault (preventing commingling),\n/// then mint stable coins up to a safe collateralization ratio. They can later burn stable coins\n/// (repay debt) and withdraw collateral provided their position remains safe.\ncontract CollateralizedStableCoin is ERC20, Ownable, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n    \n    // The collateral token used to back the stable coin.\n    IERC20 public immutable collateralToken;\n    \n    // Mapping to track each user’s collateral amount (as recorded by the main contract).\n    mapping(address => uint256) public collateralBalance;\n    // Mapping to track each user’s debt (stable coin minted).\n    mapping(address => uint256) public debtBalance;\n    // Mapping from user address to their personal vault.\n    mapping(address => Vault) public vaults;\n    \n    // Required collateralization ratio in basis points.\n    // For example, 15000 means the user’s collateral must be at least 150% of their debt.\n    uint256 public collateralizationRatio;\n    \n    // --- Events ---\n    event CollateralDeposited(address indexed user, uint256 amount);\n    event CollateralWithdrawn(address indexed user, uint256 amount);\n    event StableCoinMinted(address indexed user, uint256 amount);\n    event StableCoinBurned(address indexed user, uint256 amount);\n    \n    /// @notice Constructor sets the collateral token, initial collateralization ratio, and stable coin details.\n    /// @param _collateralToken Address of the collateral ERC20 token.\n    /// @param _collateralizationRatio Required collateralization ratio in basis points (>= 10000 = 100%).\n    /// @param name Name of the stable coin.\n    /// @param symbol Symbol of the stable coin.\n    constructor(\n        address _collateralToken,\n        uint256 _collateralizationRatio, \n        string memory name, \n        string memory symbol\n    )\n        ERC20(name, symbol)\n        Ownable(msg.sender)\n    {\n        require(_collateralToken != address(0), \"Invalid collateral token address\");\n        require(_collateralizationRatio >= 10000, \"Collateralization ratio must be at least 100%\");\n        collateralToken = IERC20(_collateralToken);\n        collateralizationRatio = _collateralizationRatio;\n    }\n    \n    /// @notice Internal helper to retrieve (or create) the vault for a user.\n    function _getVault(address user) internal returns (Vault) {\n        if (address(vaults[user]) == address(0)) {\n            Vault newVault = new Vault(address(collateralToken), address(this));\n            vaults[user] = newVault;\n        }\n        return vaults[user];\n    }\n    \n    /// @notice Deposit collateral into your personal vault.\n    /// The deposited amount is tracked and stored in a vault specific to you.\n    function depositCollateral(uint256 amount) external nonReentrant {\n        require(amount > 0, \"Amount must be > 0\");\n        Vault vault = _getVault(msg.sender);\n        // Transfer collateral directly from user to their vault.\n        collateralToken.safeTransferFrom(msg.sender, address(vault), amount);\n        collateralBalance[msg.sender] += amount;\n        emit CollateralDeposited(msg.sender, amount);\n    }\n    \n    /// @notice Withdraw collateral from your vault.\n    /// Allowed only if the remaining collateral keeps your position safely collateralized.\n    function withdrawCollateral(uint256 amount) external nonReentrant {\n        require(amount > 0, \"Amount must be > 0\");\n        require(collateralBalance[msg.sender] >= amount, \"Insufficient collateral balance\");\n        \n        uint256 newCollateral = collateralBalance[msg.sender] - amount;\n        require(_isCollateralSufficient(msg.sender, newCollateral, debtBalance[msg.sender]), \"Withdrawal would breach collateralization ratio\");\n        \n        collateralBalance[msg.sender] = newCollateral;\n        Vault vault = vaults[msg.sender];\n        require(address(vault) != address(0), \"No vault exists for user\");\n        vault.withdraw(msg.sender, amount);\n        emit CollateralWithdrawn(msg.sender, amount);\n    }\n    \n    /// @notice Mint stable coins against your deposited collateral.\n    /// Your debt increases, and new stable coins are minted to your account.\n    function mintStableCoin(uint256 amount) external nonReentrant {\n        require(amount > 0, \"Amount must be > 0\");\n        uint256 newDebt = debtBalance[msg.sender] + amount;\n        require(_isCollateralSufficient(msg.sender, collateralBalance[msg.sender], newDebt), \"Insufficient collateral to mint that amount\");\n        \n        debtBalance[msg.sender] = newDebt;\n        _mint(msg.sender, amount);\n        emit StableCoinMinted(msg.sender, amount);\n    }\n    \n    /// @notice Burn stable coins to repay debt.\n    function burnStableCoin(uint256 amount) external nonReentrant {\n        require(amount > 0, \"Amount must be > 0\");\n        require(debtBalance[msg.sender] >= amount, \"Amount exceeds debt\");\n        \n        debtBalance[msg.sender] -= amount;\n        _burn(msg.sender, amount);\n        emit StableCoinBurned(msg.sender, amount);\n    }\n    \n    /// @notice Internal helper to verify that collateral and debt satisfy the collateralization ratio.\n    /// Assumes a 1:1 price between collateral and stable coin.\n    function _isCollateralSufficient(address user, uint256 collateralAmt, uint256 debtAmt) internal view returns (bool) {\n        if (debtAmt == 0) {\n            return true;\n        }\n        return (collateralAmt * 10000) >= (debtAmt * collateralizationRatio);\n    }\n    \n    /// @notice Returns the current collateralization ratio for a user (in basis points).\n    /// If the user has no debt, returns the maximum uint256.\n    function getUserCollateralizationRatio(address user) external view returns (uint256) {\n        uint256 debt = debtBalance[user];\n        if (debt == 0) {\n            return type(uint256).max;\n        }\n        return (collateralBalance[user] * 10000) / debt;\n    }\n    \n    /// @notice Owner can update the required collateralization ratio.\n    function updateCollateralizationRatio(uint256 newRatio) external onlyOwner {\n        require(newRatio >= 10000, \"Collateralization ratio must be at least 100%\");\n        collateralizationRatio = newRatio;\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 385,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 462,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 468,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 470,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 472,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 474,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:9390  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:9390  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220fe17030de0556f67aedc1ea4bf304ac0f0dbc906a7276e479159e0692a32ed7f64736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220fe17030de0556f67aedc1ea4bf304ac0f0dbc906a7276e479159e0692a32ed7f64736f6c634300081d0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID OR SUB 0xD RJUMP 0x556F PUSH8 0xAEDC1EA4BF304AC0 CREATE 0xDB 0xC9 MOD 0xA7 0x27 PUSH15 0x479159E0692A32ED7F64736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "698:8692:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220fe17030de0556f67aedc1ea4bf304ac0f0dbc906a7276e479159e0692a32ed7f64736f6c634300081d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID OR SUB 0xD RJUMP 0x556F PUSH8 0xAEDC1EA4BF304AC0 CREATE 0xDB 0xC9 MOD 0xA7 0x27 PUSH15 0x479159E0692A32ED7F64736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "698:8692:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fe17030de0556f67aedc1ea4bf304ac0f0dbc906a7276e479159e0692a32ed7f64736f6c634300081d0033",
									".code": [
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"C/commingling .sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"C/commingling .sol": {
				"CollateralizedStableCoin": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_collateralToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_collateralizationRatio",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "CollateralDeposited",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "CollateralWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "StableCoinBurned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "StableCoinMinted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnStableCoin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "collateralBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "collateralToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "collateralizationRatio",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "debtBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositCollateral",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserCollateralizationRatio",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mintStableCoin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newRatio",
									"type": "uint256"
								}
							],
							"name": "updateCollateralizationRatio",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "vaults",
							"outputs": [
								{
									"internalType": "contract Vault",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawCollateral",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"params": {
									"_collateralToken": "Address of the collateral ERC20 token.",
									"_collateralizationRatio": "Required collateralization ratio in basis points (>= 10000 = 100%).",
									"name": "Name of the stable coin.",
									"symbol": "Symbol of the stable coin."
								}
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"C/commingling .sol\":1857:7819  contract CollateralizedStableCoin is ERC20, Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0xa0)\n    /* \"C/commingling .sol\":3332:3847  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"C/commingling .sol\":3529:3539  msg.sender */\n  caller\n    /* \"C/commingling .sol\":3499:3503  name */\n  dup3\n    /* \"C/commingling .sol\":3505:3511  symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_11\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_11:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_13\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_14\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_16\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_17)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x06\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"C/commingling .sol\":3591:3592  0 */\n  0x00\n    /* \"C/commingling .sol\":3563:3593  _collateralToken != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"C/commingling .sol\":3563:3579  _collateralToken */\n  dup5\n    /* \"C/commingling .sol\":3563:3593  _collateralToken != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"C/commingling .sol\":3555:3630  require(_collateralToken != address(0), \"Invalid collateral token address\") */\n  tag_20\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_21\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_20:\n    /* \"C/commingling .sol\":3675:3680  10000 */\n  0x2710\n    /* \"C/commingling .sol\":3648:3671  _collateralizationRatio */\n  dup4\n    /* \"C/commingling .sol\":3648:3680  _collateralizationRatio >= 10000 */\n  lt\n  iszero\n    /* \"C/commingling .sol\":3640:3730  require(_collateralizationRatio >= 10000, \"Collateralization ratio must be at least 100%\") */\n  tag_23\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_24\n  swap1\n  tag_25\n  jump\t// in\ntag_24:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_23:\n    /* \"C/commingling .sol\":3765:3781  _collateralToken */\n  dup4\n    /* \"C/commingling .sol\":3740:3782  collateralToken = IERC20(_collateralToken) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"C/commingling .sol\":3817:3840  _collateralizationRatio */\n  dup3\n    /* \"C/commingling .sol\":3792:3814  collateralizationRatio */\n  0x0a\n    /* \"C/commingling .sol\":3792:3840  collateralizationRatio = _collateralizationRatio */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"C/commingling .sol\":3332:3847  constructor(... */\n  pop\n  pop\n  pop\n  pop\n    /* \"C/commingling .sol\":1857:7819  contract CollateralizedStableCoin is ERC20, Ownable, ReentrancyGuard {... */\n  jump(tag_26)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_17:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_28:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_29:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_30:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  0x00\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_31:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_32:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_78\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_31\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_33:\n    /* \"#utility.yul\":641:665   */\n  tag_80\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_32\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_81\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_81:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_34:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_83\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_33\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_35:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_36:\n    /* \"#utility.yul\":1001:1025   */\n  tag_86\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_35\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_87\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  0x00\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_87:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_37:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_89\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_36\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1322   */\ntag_38:\n    /* \"#utility.yul\":1314:1315   */\n  0x00\n    /* \"#utility.yul\":1311:1312   */\n  0x00\n    /* \"#utility.yul\":1304:1316   */\n  revert\n    /* \"#utility.yul\":1328:1445   */\ntag_39:\n    /* \"#utility.yul\":1437:1438   */\n  0x00\n    /* \"#utility.yul\":1434:1435   */\n  0x00\n    /* \"#utility.yul\":1427:1439   */\n  revert\n    /* \"#utility.yul\":1451:1553   */\ntag_40:\n    /* \"#utility.yul\":1492:1498   */\n  0x00\n    /* \"#utility.yul\":1543:1545   */\n  0x1f\n    /* \"#utility.yul\":1539:1546   */\n  not\n    /* \"#utility.yul\":1534:1536   */\n  0x1f\n    /* \"#utility.yul\":1527:1532   */\n  dup4\n    /* \"#utility.yul\":1523:1537   */\n  add\n    /* \"#utility.yul\":1519:1547   */\n  and\n    /* \"#utility.yul\":1509:1547   */\n  swap1\n  pop\n    /* \"#utility.yul\":1451:1553   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1559:1739   */\ntag_41:\n    /* \"#utility.yul\":1607:1684   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1604:1605   */\n  0x00\n    /* \"#utility.yul\":1597:1685   */\n  mstore\n    /* \"#utility.yul\":1704:1708   */\n  0x41\n    /* \"#utility.yul\":1701:1702   */\n  0x04\n    /* \"#utility.yul\":1694:1709   */\n  mstore\n    /* \"#utility.yul\":1728:1732   */\n  0x24\n    /* \"#utility.yul\":1725:1726   */\n  0x00\n    /* \"#utility.yul\":1718:1733   */\n  revert\n    /* \"#utility.yul\":1745:2026   */\ntag_42:\n    /* \"#utility.yul\":1828:1855   */\n  tag_95\n    /* \"#utility.yul\":1850:1854   */\n  dup3\n    /* \"#utility.yul\":1828:1855   */\n  tag_40\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":1820:1826   */\n  dup2\n    /* \"#utility.yul\":1816:1856   */\n  add\n    /* \"#utility.yul\":1958:1964   */\n  dup2\n    /* \"#utility.yul\":1946:1956   */\n  dup2\n    /* \"#utility.yul\":1943:1965   */\n  lt\n    /* \"#utility.yul\":1922:1940   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1910:1920   */\n  dup3\n    /* \"#utility.yul\":1907:1941   */\n  gt\n    /* \"#utility.yul\":1904:1966   */\n  or\n    /* \"#utility.yul\":1901:1989   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":1969:1987   */\n  tag_97\n  tag_41\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":1901:1989   */\ntag_96:\n    /* \"#utility.yul\":2009:2019   */\n  dup1\n    /* \"#utility.yul\":2005:2007   */\n  0x40\n    /* \"#utility.yul\":1998:2020   */\n  mstore\n    /* \"#utility.yul\":1788:2026   */\n  pop\n    /* \"#utility.yul\":1745:2026   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2032:2161   */\ntag_43:\n    /* \"#utility.yul\":2066:2072   */\n  0x00\n    /* \"#utility.yul\":2093:2113   */\n  tag_99\n  tag_28\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":2083:2113   */\n  swap1\n  pop\n    /* \"#utility.yul\":2122:2155   */\n  tag_100\n    /* \"#utility.yul\":2150:2154   */\n  dup3\n    /* \"#utility.yul\":2142:2148   */\n  dup3\n    /* \"#utility.yul\":2122:2155   */\n  tag_42\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":2032:2161   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2167:2475   */\ntag_44:\n    /* \"#utility.yul\":2229:2233   */\n  0x00\n    /* \"#utility.yul\":2319:2337   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2311:2317   */\n  dup3\n    /* \"#utility.yul\":2308:2338   */\n  gt\n    /* \"#utility.yul\":2305:2361   */\n  iszero\n  tag_102\n  jumpi\n    /* \"#utility.yul\":2341:2359   */\n  tag_103\n  tag_41\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":2305:2361   */\ntag_102:\n    /* \"#utility.yul\":2379:2408   */\n  tag_104\n    /* \"#utility.yul\":2401:2407   */\n  dup3\n    /* \"#utility.yul\":2379:2408   */\n  tag_40\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":2371:2408   */\n  swap1\n  pop\n    /* \"#utility.yul\":2463:2467   */\n  0x20\n    /* \"#utility.yul\":2457:2461   */\n  dup2\n    /* \"#utility.yul\":2453:2468   */\n  add\n    /* \"#utility.yul\":2445:2468   */\n  swap1\n  pop\n    /* \"#utility.yul\":2167:2475   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2481:2620   */\ntag_45:\n    /* \"#utility.yul\":2570:2576   */\n  dup3\n    /* \"#utility.yul\":2565:2568   */\n  dup2\n    /* \"#utility.yul\":2560:2563   */\n  dup4\n    /* \"#utility.yul\":2554:2577   */\n  mcopy\n    /* \"#utility.yul\":2611:2612   */\n  0x00\n    /* \"#utility.yul\":2602:2608   */\n  dup4\n    /* \"#utility.yul\":2597:2600   */\n  dup4\n    /* \"#utility.yul\":2593:2609   */\n  add\n    /* \"#utility.yul\":2586:2613   */\n  mstore\n    /* \"#utility.yul\":2481:2620   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2626:3060   */\ntag_46:\n    /* \"#utility.yul\":2715:2720   */\n  0x00\n    /* \"#utility.yul\":2740:2806   */\n  tag_107\n    /* \"#utility.yul\":2756:2805   */\n  tag_108\n    /* \"#utility.yul\":2798:2804   */\n  dup5\n    /* \"#utility.yul\":2756:2805   */\n  tag_44\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":2740:2806   */\n  tag_43\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":2731:2806   */\n  swap1\n  pop\n    /* \"#utility.yul\":2829:2835   */\n  dup3\n    /* \"#utility.yul\":2822:2827   */\n  dup2\n    /* \"#utility.yul\":2815:2836   */\n  mstore\n    /* \"#utility.yul\":2867:2871   */\n  0x20\n    /* \"#utility.yul\":2860:2865   */\n  dup2\n    /* \"#utility.yul\":2856:2872   */\n  add\n    /* \"#utility.yul\":2905:2908   */\n  dup5\n    /* \"#utility.yul\":2896:2902   */\n  dup5\n    /* \"#utility.yul\":2891:2894   */\n  dup5\n    /* \"#utility.yul\":2887:2903   */\n  add\n    /* \"#utility.yul\":2884:2909   */\n  gt\n    /* \"#utility.yul\":2881:2993   */\n  iszero\n  tag_109\n  jumpi\n    /* \"#utility.yul\":2912:2991   */\n  tag_110\n  tag_39\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":2881:2993   */\ntag_109:\n    /* \"#utility.yul\":3002:3054   */\n  tag_111\n    /* \"#utility.yul\":3047:3053   */\n  dup5\n    /* \"#utility.yul\":3042:3045   */\n  dup3\n    /* \"#utility.yul\":3037:3040   */\n  dup6\n    /* \"#utility.yul\":3002:3054   */\n  tag_45\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":2721:3060   */\n  pop\n    /* \"#utility.yul\":2626:3060   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3080:3435   */\ntag_47:\n    /* \"#utility.yul\":3147:3152   */\n  0x00\n    /* \"#utility.yul\":3196:3199   */\n  dup3\n    /* \"#utility.yul\":3189:3193   */\n  0x1f\n    /* \"#utility.yul\":3181:3187   */\n  dup4\n    /* \"#utility.yul\":3177:3194   */\n  add\n    /* \"#utility.yul\":3173:3200   */\n  slt\n    /* \"#utility.yul\":3163:3285   */\n  tag_113\n  jumpi\n    /* \"#utility.yul\":3204:3283   */\n  tag_114\n  tag_38\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":3163:3285   */\ntag_113:\n    /* \"#utility.yul\":3314:3320   */\n  dup2\n    /* \"#utility.yul\":3308:3321   */\n  mload\n    /* \"#utility.yul\":3339:3429   */\n  tag_115\n    /* \"#utility.yul\":3425:3428   */\n  dup5\n    /* \"#utility.yul\":3417:3423   */\n  dup3\n    /* \"#utility.yul\":3410:3414   */\n  0x20\n    /* \"#utility.yul\":3402:3408   */\n  dup7\n    /* \"#utility.yul\":3398:3415   */\n  add\n    /* \"#utility.yul\":3339:3429   */\n  tag_46\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":3330:3429   */\n  swap2\n  pop\n    /* \"#utility.yul\":3153:3435   */\n  pop\n    /* \"#utility.yul\":3080:3435   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3441:4607   */\ntag_3:\n    /* \"#utility.yul\":3558:3564   */\n  0x00\n    /* \"#utility.yul\":3566:3572   */\n  0x00\n    /* \"#utility.yul\":3574:3580   */\n  0x00\n    /* \"#utility.yul\":3582:3588   */\n  0x00\n    /* \"#utility.yul\":3631:3634   */\n  0x80\n    /* \"#utility.yul\":3619:3628   */\n  dup6\n    /* \"#utility.yul\":3610:3617   */\n  dup8\n    /* \"#utility.yul\":3606:3629   */\n  sub\n    /* \"#utility.yul\":3602:3635   */\n  slt\n    /* \"#utility.yul\":3599:3719   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":3638:3717   */\n  tag_118\n  tag_29\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":3599:3719   */\ntag_117:\n    /* \"#utility.yul\":3758:3759   */\n  0x00\n    /* \"#utility.yul\":3783:3847   */\n  tag_119\n    /* \"#utility.yul\":3839:3846   */\n  dup8\n    /* \"#utility.yul\":3830:3836   */\n  dup3\n    /* \"#utility.yul\":3819:3828   */\n  dup9\n    /* \"#utility.yul\":3815:3837   */\n  add\n    /* \"#utility.yul\":3783:3847   */\n  tag_34\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":3773:3847   */\n  swap5\n  pop\n    /* \"#utility.yul\":3729:3857   */\n  pop\n    /* \"#utility.yul\":3896:3898   */\n  0x20\n    /* \"#utility.yul\":3922:3986   */\n  tag_120\n    /* \"#utility.yul\":3978:3985   */\n  dup8\n    /* \"#utility.yul\":3969:3975   */\n  dup3\n    /* \"#utility.yul\":3958:3967   */\n  dup9\n    /* \"#utility.yul\":3954:3976   */\n  add\n    /* \"#utility.yul\":3922:3986   */\n  tag_37\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":3912:3986   */\n  swap4\n  pop\n    /* \"#utility.yul\":3867:3996   */\n  pop\n    /* \"#utility.yul\":4056:4058   */\n  0x40\n    /* \"#utility.yul\":4045:4054   */\n  dup6\n    /* \"#utility.yul\":4041:4059   */\n  add\n    /* \"#utility.yul\":4035:4060   */\n  mload\n    /* \"#utility.yul\":4087:4105   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4079:4085   */\n  dup2\n    /* \"#utility.yul\":4076:4106   */\n  gt\n    /* \"#utility.yul\":4073:4190   */\n  iszero\n  tag_121\n  jumpi\n    /* \"#utility.yul\":4109:4188   */\n  tag_122\n  tag_30\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":4073:4190   */\ntag_121:\n    /* \"#utility.yul\":4214:4288   */\n  tag_123\n    /* \"#utility.yul\":4280:4287   */\n  dup8\n    /* \"#utility.yul\":4271:4277   */\n  dup3\n    /* \"#utility.yul\":4260:4269   */\n  dup9\n    /* \"#utility.yul\":4256:4278   */\n  add\n    /* \"#utility.yul\":4214:4288   */\n  tag_47\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":4204:4288   */\n  swap3\n  pop\n    /* \"#utility.yul\":4006:4298   */\n  pop\n    /* \"#utility.yul\":4358:4360   */\n  0x60\n    /* \"#utility.yul\":4347:4356   */\n  dup6\n    /* \"#utility.yul\":4343:4361   */\n  add\n    /* \"#utility.yul\":4337:4362   */\n  mload\n    /* \"#utility.yul\":4389:4407   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4381:4387   */\n  dup2\n    /* \"#utility.yul\":4378:4408   */\n  gt\n    /* \"#utility.yul\":4375:4492   */\n  iszero\n  tag_124\n  jumpi\n    /* \"#utility.yul\":4411:4490   */\n  tag_125\n  tag_30\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":4375:4492   */\ntag_124:\n    /* \"#utility.yul\":4516:4590   */\n  tag_126\n    /* \"#utility.yul\":4582:4589   */\n  dup8\n    /* \"#utility.yul\":4573:4579   */\n  dup3\n    /* \"#utility.yul\":4562:4571   */\n  dup9\n    /* \"#utility.yul\":4558:4580   */\n  add\n    /* \"#utility.yul\":4516:4590   */\n  tag_47\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":4506:4590   */\n  swap2\n  pop\n    /* \"#utility.yul\":4308:4600   */\n  pop\n    /* \"#utility.yul\":3441:4607   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4613:4712   */\ntag_48:\n    /* \"#utility.yul\":4665:4671   */\n  0x00\n    /* \"#utility.yul\":4699:4704   */\n  dup2\n    /* \"#utility.yul\":4693:4705   */\n  mload\n    /* \"#utility.yul\":4683:4705   */\n  swap1\n  pop\n    /* \"#utility.yul\":4613:4712   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4718:4898   */\ntag_49:\n    /* \"#utility.yul\":4766:4843   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4763:4764   */\n  0x00\n    /* \"#utility.yul\":4756:4844   */\n  mstore\n    /* \"#utility.yul\":4863:4867   */\n  0x22\n    /* \"#utility.yul\":4860:4861   */\n  0x04\n    /* \"#utility.yul\":4853:4868   */\n  mstore\n    /* \"#utility.yul\":4887:4891   */\n  0x24\n    /* \"#utility.yul\":4884:4885   */\n  0x00\n    /* \"#utility.yul\":4877:4892   */\n  revert\n    /* \"#utility.yul\":4904:5224   */\ntag_50:\n    /* \"#utility.yul\":4948:4954   */\n  0x00\n    /* \"#utility.yul\":4985:4986   */\n  0x02\n    /* \"#utility.yul\":4979:4983   */\n  dup3\n    /* \"#utility.yul\":4975:4987   */\n  div\n    /* \"#utility.yul\":4965:4987   */\n  swap1\n  pop\n    /* \"#utility.yul\":5032:5033   */\n  0x01\n    /* \"#utility.yul\":5026:5030   */\n  dup3\n    /* \"#utility.yul\":5022:5034   */\n  and\n    /* \"#utility.yul\":5053:5071   */\n  dup1\n    /* \"#utility.yul\":5043:5124   */\n  tag_130\n  jumpi\n    /* \"#utility.yul\":5109:5113   */\n  0x7f\n    /* \"#utility.yul\":5101:5107   */\n  dup3\n    /* \"#utility.yul\":5097:5114   */\n  and\n    /* \"#utility.yul\":5087:5114   */\n  swap2\n  pop\n    /* \"#utility.yul\":5043:5124   */\ntag_130:\n    /* \"#utility.yul\":5171:5173   */\n  0x20\n    /* \"#utility.yul\":5163:5169   */\n  dup3\n    /* \"#utility.yul\":5160:5174   */\n  lt\n    /* \"#utility.yul\":5140:5158   */\n  dup2\n    /* \"#utility.yul\":5137:5175   */\n  sub\n    /* \"#utility.yul\":5134:5218   */\n  tag_131\n  jumpi\n    /* \"#utility.yul\":5190:5208   */\n  tag_132\n  tag_49\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":5134:5218   */\ntag_131:\n    /* \"#utility.yul\":4955:5224   */\n  pop\n    /* \"#utility.yul\":4904:5224   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5230:5371   */\ntag_51:\n    /* \"#utility.yul\":5279:5283   */\n  0x00\n    /* \"#utility.yul\":5302:5305   */\n  dup2\n    /* \"#utility.yul\":5294:5305   */\n  swap1\n  pop\n    /* \"#utility.yul\":5325:5328   */\n  dup2\n    /* \"#utility.yul\":5322:5323   */\n  0x00\n    /* \"#utility.yul\":5315:5329   */\n  mstore\n    /* \"#utility.yul\":5359:5363   */\n  0x20\n    /* \"#utility.yul\":5356:5357   */\n  0x00\n    /* \"#utility.yul\":5346:5364   */\n  keccak256\n    /* \"#utility.yul\":5338:5364   */\n  swap1\n  pop\n    /* \"#utility.yul\":5230:5371   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5377:5470   */\ntag_52:\n    /* \"#utility.yul\":5414:5420   */\n  0x00\n    /* \"#utility.yul\":5461:5463   */\n  0x20\n    /* \"#utility.yul\":5456:5458   */\n  0x1f\n    /* \"#utility.yul\":5449:5454   */\n  dup4\n    /* \"#utility.yul\":5445:5459   */\n  add\n    /* \"#utility.yul\":5441:5464   */\n  div\n    /* \"#utility.yul\":5431:5464   */\n  swap1\n  pop\n    /* \"#utility.yul\":5377:5470   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5476:5583   */\ntag_53:\n    /* \"#utility.yul\":5520:5528   */\n  0x00\n    /* \"#utility.yul\":5570:5575   */\n  dup3\n    /* \"#utility.yul\":5564:5568   */\n  dup3\n    /* \"#utility.yul\":5560:5576   */\n  shl\n    /* \"#utility.yul\":5539:5576   */\n  swap1\n  pop\n    /* \"#utility.yul\":5476:5583   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5589:5982   */\ntag_54:\n    /* \"#utility.yul\":5658:5664   */\n  0x00\n    /* \"#utility.yul\":5708:5709   */\n  0x08\n    /* \"#utility.yul\":5696:5706   */\n  dup4\n    /* \"#utility.yul\":5692:5710   */\n  mul\n    /* \"#utility.yul\":5731:5828   */\n  tag_137\n    /* \"#utility.yul\":5761:5827   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5750:5759   */\n  dup3\n    /* \"#utility.yul\":5731:5828   */\n  tag_53\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":5849:5888   */\n  tag_138\n    /* \"#utility.yul\":5879:5887   */\n  dup7\n    /* \"#utility.yul\":5868:5877   */\n  dup4\n    /* \"#utility.yul\":5849:5888   */\n  tag_53\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":5837:5888   */\n  swap6\n  pop\n    /* \"#utility.yul\":5921:5925   */\n  dup1\n    /* \"#utility.yul\":5917:5926   */\n  not\n    /* \"#utility.yul\":5910:5915   */\n  dup5\n    /* \"#utility.yul\":5906:5927   */\n  and\n    /* \"#utility.yul\":5897:5927   */\n  swap4\n  pop\n    /* \"#utility.yul\":5970:5974   */\n  dup1\n    /* \"#utility.yul\":5960:5968   */\n  dup7\n    /* \"#utility.yul\":5956:5975   */\n  and\n    /* \"#utility.yul\":5949:5954   */\n  dup5\n    /* \"#utility.yul\":5946:5976   */\n  or\n    /* \"#utility.yul\":5936:5976   */\n  swap3\n  pop\n    /* \"#utility.yul\":5665:5982   */\n  pop\n  pop\n    /* \"#utility.yul\":5589:5982   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5988:6048   */\ntag_55:\n    /* \"#utility.yul\":6016:6019   */\n  0x00\n    /* \"#utility.yul\":6037:6042   */\n  dup2\n    /* \"#utility.yul\":6030:6042   */\n  swap1\n  pop\n    /* \"#utility.yul\":5988:6048   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6054:6196   */\ntag_56:\n    /* \"#utility.yul\":6104:6113   */\n  0x00\n    /* \"#utility.yul\":6137:6190   */\n  tag_141\n    /* \"#utility.yul\":6155:6189   */\n  tag_142\n    /* \"#utility.yul\":6164:6188   */\n  tag_143\n    /* \"#utility.yul\":6182:6187   */\n  dup5\n    /* \"#utility.yul\":6164:6188   */\n  tag_35\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":6155:6189   */\n  tag_55\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":6137:6190   */\n  tag_35\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":6124:6190   */\n  swap1\n  pop\n    /* \"#utility.yul\":6054:6196   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6202:6277   */\ntag_57:\n    /* \"#utility.yul\":6245:6248   */\n  0x00\n    /* \"#utility.yul\":6266:6271   */\n  dup2\n    /* \"#utility.yul\":6259:6271   */\n  swap1\n  pop\n    /* \"#utility.yul\":6202:6277   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6283:6552   */\ntag_58:\n    /* \"#utility.yul\":6393:6432   */\n  tag_146\n    /* \"#utility.yul\":6424:6431   */\n  dup4\n    /* \"#utility.yul\":6393:6432   */\n  tag_56\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":6454:6545   */\n  tag_147\n    /* \"#utility.yul\":6503:6544   */\n  tag_148\n    /* \"#utility.yul\":6527:6543   */\n  dup3\n    /* \"#utility.yul\":6503:6544   */\n  tag_57\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":6495:6501   */\n  dup5\n    /* \"#utility.yul\":6488:6492   */\n  dup5\n    /* \"#utility.yul\":6482:6493   */\n  sload\n    /* \"#utility.yul\":6454:6545   */\n  tag_54\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":6448:6452   */\n  dup3\n    /* \"#utility.yul\":6441:6546   */\n  sstore\n    /* \"#utility.yul\":6359:6552   */\n  pop\n    /* \"#utility.yul\":6283:6552   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6558:6631   */\ntag_59:\n    /* \"#utility.yul\":6603:6606   */\n  0x00\n    /* \"#utility.yul\":6624:6625   */\n  0x00\n    /* \"#utility.yul\":6617:6625   */\n  swap1\n  pop\n    /* \"#utility.yul\":6558:6631   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6637:6826   */\ntag_60:\n    /* \"#utility.yul\":6714:6746   */\n  tag_151\n  tag_59\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":6755:6820   */\n  tag_152\n    /* \"#utility.yul\":6813:6819   */\n  dup2\n    /* \"#utility.yul\":6805:6811   */\n  dup5\n    /* \"#utility.yul\":6799:6803   */\n  dup5\n    /* \"#utility.yul\":6755:6820   */\n  tag_58\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":6690:6826   */\n  pop\n    /* \"#utility.yul\":6637:6826   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6832:7018   */\ntag_61:\n    /* \"#utility.yul\":6892:7012   */\ntag_154:\n    /* \"#utility.yul\":6909:6912   */\n  dup2\n    /* \"#utility.yul\":6902:6907   */\n  dup2\n    /* \"#utility.yul\":6899:6913   */\n  lt\n    /* \"#utility.yul\":6892:7012   */\n  iszero\n  tag_156\n  jumpi\n    /* \"#utility.yul\":6963:7002   */\n  tag_157\n    /* \"#utility.yul\":7000:7001   */\n  0x00\n    /* \"#utility.yul\":6993:6998   */\n  dup3\n    /* \"#utility.yul\":6963:7002   */\n  tag_60\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":6936:6937   */\n  0x01\n    /* \"#utility.yul\":6929:6934   */\n  dup2\n    /* \"#utility.yul\":6925:6938   */\n  add\n    /* \"#utility.yul\":6916:6938   */\n  swap1\n  pop\n    /* \"#utility.yul\":6892:7012   */\n  jump(tag_154)\ntag_156:\n    /* \"#utility.yul\":6832:7018   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7024:7567   */\ntag_62:\n    /* \"#utility.yul\":7125:7127   */\n  0x1f\n    /* \"#utility.yul\":7120:7123   */\n  dup3\n    /* \"#utility.yul\":7117:7128   */\n  gt\n    /* \"#utility.yul\":7114:7560   */\n  iszero\n  tag_159\n  jumpi\n    /* \"#utility.yul\":7159:7197   */\n  tag_160\n    /* \"#utility.yul\":7191:7196   */\n  dup2\n    /* \"#utility.yul\":7159:7197   */\n  tag_51\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":7243:7272   */\n  tag_161\n    /* \"#utility.yul\":7261:7271   */\n  dup5\n    /* \"#utility.yul\":7243:7272   */\n  tag_52\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":7233:7241   */\n  dup2\n    /* \"#utility.yul\":7229:7273   */\n  add\n    /* \"#utility.yul\":7426:7428   */\n  0x20\n    /* \"#utility.yul\":7414:7424   */\n  dup6\n    /* \"#utility.yul\":7411:7429   */\n  lt\n    /* \"#utility.yul\":7408:7457   */\n  iszero\n  tag_162\n  jumpi\n    /* \"#utility.yul\":7447:7455   */\n  dup2\n    /* \"#utility.yul\":7432:7455   */\n  swap1\n  pop\n    /* \"#utility.yul\":7408:7457   */\ntag_162:\n    /* \"#utility.yul\":7470:7550   */\n  tag_163\n    /* \"#utility.yul\":7526:7548   */\n  tag_164\n    /* \"#utility.yul\":7544:7547   */\n  dup6\n    /* \"#utility.yul\":7526:7548   */\n  tag_52\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":7516:7524   */\n  dup4\n    /* \"#utility.yul\":7512:7549   */\n  add\n    /* \"#utility.yul\":7499:7510   */\n  dup3\n    /* \"#utility.yul\":7470:7550   */\n  tag_61\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":7129:7560   */\n  pop\n  pop\n    /* \"#utility.yul\":7114:7560   */\ntag_159:\n    /* \"#utility.yul\":7024:7567   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7573:7690   */\ntag_63:\n    /* \"#utility.yul\":7627:7635   */\n  0x00\n    /* \"#utility.yul\":7677:7682   */\n  dup3\n    /* \"#utility.yul\":7671:7675   */\n  dup3\n    /* \"#utility.yul\":7667:7683   */\n  shr\n    /* \"#utility.yul\":7646:7683   */\n  swap1\n  pop\n    /* \"#utility.yul\":7573:7690   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7696:7865   */\ntag_64:\n    /* \"#utility.yul\":7740:7746   */\n  0x00\n    /* \"#utility.yul\":7773:7824   */\n  tag_167\n    /* \"#utility.yul\":7821:7822   */\n  0x00\n    /* \"#utility.yul\":7817:7823   */\n  not\n    /* \"#utility.yul\":7809:7814   */\n  dup5\n    /* \"#utility.yul\":7806:7807   */\n  0x08\n    /* \"#utility.yul\":7802:7815   */\n  mul\n    /* \"#utility.yul\":7773:7824   */\n  tag_63\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":7769:7825   */\n  not\n    /* \"#utility.yul\":7854:7858   */\n  dup1\n    /* \"#utility.yul\":7848:7852   */\n  dup4\n    /* \"#utility.yul\":7844:7859   */\n  and\n    /* \"#utility.yul\":7834:7859   */\n  swap2\n  pop\n    /* \"#utility.yul\":7747:7865   */\n  pop\n    /* \"#utility.yul\":7696:7865   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7870:8165   */\ntag_65:\n    /* \"#utility.yul\":7946:7950   */\n  0x00\n    /* \"#utility.yul\":8092:8121   */\n  tag_169\n    /* \"#utility.yul\":8117:8120   */\n  dup4\n    /* \"#utility.yul\":8111:8115   */\n  dup4\n    /* \"#utility.yul\":8092:8121   */\n  tag_64\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":8084:8121   */\n  swap2\n  pop\n    /* \"#utility.yul\":8154:8157   */\n  dup3\n    /* \"#utility.yul\":8151:8152   */\n  0x02\n    /* \"#utility.yul\":8147:8158   */\n  mul\n    /* \"#utility.yul\":8141:8145   */\n  dup3\n    /* \"#utility.yul\":8138:8159   */\n  or\n    /* \"#utility.yul\":8130:8159   */\n  swap1\n  pop\n    /* \"#utility.yul\":7870:8165   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8170:9565   */\ntag_10:\n    /* \"#utility.yul\":8287:8324   */\n  tag_171\n    /* \"#utility.yul\":8320:8323   */\n  dup3\n    /* \"#utility.yul\":8287:8324   */\n  tag_48\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":8389:8407   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8381:8387   */\n  dup2\n    /* \"#utility.yul\":8378:8408   */\n  gt\n    /* \"#utility.yul\":8375:8431   */\n  iszero\n  tag_172\n  jumpi\n    /* \"#utility.yul\":8411:8429   */\n  tag_173\n  tag_41\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":8375:8431   */\ntag_172:\n    /* \"#utility.yul\":8455:8493   */\n  tag_174\n    /* \"#utility.yul\":8487:8491   */\n  dup3\n    /* \"#utility.yul\":8481:8492   */\n  sload\n    /* \"#utility.yul\":8455:8493   */\n  tag_50\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":8540:8607   */\n  tag_175\n    /* \"#utility.yul\":8600:8606   */\n  dup3\n    /* \"#utility.yul\":8592:8598   */\n  dup3\n    /* \"#utility.yul\":8586:8590   */\n  dup6\n    /* \"#utility.yul\":8540:8607   */\n  tag_62\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":8634:8635   */\n  0x00\n    /* \"#utility.yul\":8658:8662   */\n  0x20\n    /* \"#utility.yul\":8645:8662   */\n  swap1\n  pop\n    /* \"#utility.yul\":8690:8692   */\n  0x1f\n    /* \"#utility.yul\":8682:8688   */\n  dup4\n    /* \"#utility.yul\":8679:8693   */\n  gt\n    /* \"#utility.yul\":8707:8708   */\n  0x01\n    /* \"#utility.yul\":8702:9320   */\n  dup2\n  eq\n  tag_177\n  jumpi\n    /* \"#utility.yul\":9364:9365   */\n  0x00\n    /* \"#utility.yul\":9381:9387   */\n  dup5\n    /* \"#utility.yul\":9378:9455   */\n  iszero\n  tag_178\n  jumpi\n    /* \"#utility.yul\":9430:9439   */\n  dup3\n    /* \"#utility.yul\":9425:9428   */\n  dup8\n    /* \"#utility.yul\":9421:9440   */\n  add\n    /* \"#utility.yul\":9415:9441   */\n  mload\n    /* \"#utility.yul\":9406:9441   */\n  swap1\n  pop\n    /* \"#utility.yul\":9378:9455   */\ntag_178:\n    /* \"#utility.yul\":9481:9548   */\n  tag_179\n    /* \"#utility.yul\":9541:9547   */\n  dup6\n    /* \"#utility.yul\":9534:9539   */\n  dup3\n    /* \"#utility.yul\":9481:9548   */\n  tag_65\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":9475:9479   */\n  dup7\n    /* \"#utility.yul\":9468:9549   */\n  sstore\n    /* \"#utility.yul\":9337:9559   */\n  pop\n    /* \"#utility.yul\":8672:9559   */\n  jump(tag_176)\n    /* \"#utility.yul\":8702:9320   */\ntag_177:\n    /* \"#utility.yul\":8754:8758   */\n  0x1f\n    /* \"#utility.yul\":8750:8759   */\n  not\n    /* \"#utility.yul\":8742:8748   */\n  dup5\n    /* \"#utility.yul\":8738:8760   */\n  and\n    /* \"#utility.yul\":8788:8825   */\n  tag_180\n    /* \"#utility.yul\":8820:8824   */\n  dup7\n    /* \"#utility.yul\":8788:8825   */\n  tag_51\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":8847:8848   */\n  0x00\n    /* \"#utility.yul\":8861:9069   */\ntag_181:\n    /* \"#utility.yul\":8875:8882   */\n  dup3\n    /* \"#utility.yul\":8872:8873   */\n  dup2\n    /* \"#utility.yul\":8869:8883   */\n  lt\n    /* \"#utility.yul\":8861:9069   */\n  iszero\n  tag_183\n  jumpi\n    /* \"#utility.yul\":8954:8963   */\n  dup5\n    /* \"#utility.yul\":8949:8952   */\n  dup10\n    /* \"#utility.yul\":8945:8964   */\n  add\n    /* \"#utility.yul\":8939:8965   */\n  mload\n    /* \"#utility.yul\":8931:8937   */\n  dup3\n    /* \"#utility.yul\":8924:8966   */\n  sstore\n    /* \"#utility.yul\":9005:9006   */\n  0x01\n    /* \"#utility.yul\":8997:9003   */\n  dup3\n    /* \"#utility.yul\":8993:9007   */\n  add\n    /* \"#utility.yul\":8983:9007   */\n  swap2\n  pop\n    /* \"#utility.yul\":9052:9054   */\n  0x20\n    /* \"#utility.yul\":9041:9050   */\n  dup6\n    /* \"#utility.yul\":9037:9055   */\n  add\n    /* \"#utility.yul\":9024:9055   */\n  swap5\n  pop\n    /* \"#utility.yul\":8898:8902   */\n  0x20\n    /* \"#utility.yul\":8895:8896   */\n  dup2\n    /* \"#utility.yul\":8891:8903   */\n  add\n    /* \"#utility.yul\":8886:8903   */\n  swap1\n  pop\n    /* \"#utility.yul\":8861:9069   */\n  jump(tag_181)\ntag_183:\n    /* \"#utility.yul\":9097:9103   */\n  dup7\n    /* \"#utility.yul\":9088:9095   */\n  dup4\n    /* \"#utility.yul\":9085:9104   */\n  lt\n    /* \"#utility.yul\":9082:9261   */\n  iszero\n  tag_184\n  jumpi\n    /* \"#utility.yul\":9155:9164   */\n  dup5\n    /* \"#utility.yul\":9150:9153   */\n  dup10\n    /* \"#utility.yul\":9146:9165   */\n  add\n    /* \"#utility.yul\":9140:9166   */\n  mload\n    /* \"#utility.yul\":9198:9246   */\n  tag_185\n    /* \"#utility.yul\":9240:9244   */\n  0x1f\n    /* \"#utility.yul\":9232:9238   */\n  dup10\n    /* \"#utility.yul\":9228:9245   */\n  and\n    /* \"#utility.yul\":9217:9226   */\n  dup3\n    /* \"#utility.yul\":9198:9246   */\n  tag_64\n  jump\t// in\ntag_185:\n    /* \"#utility.yul\":9190:9196   */\n  dup4\n    /* \"#utility.yul\":9183:9247   */\n  sstore\n    /* \"#utility.yul\":9105:9261   */\n  pop\n    /* \"#utility.yul\":9082:9261   */\ntag_184:\n    /* \"#utility.yul\":9307:9308   */\n  0x01\n    /* \"#utility.yul\":9303:9304   */\n  0x02\n    /* \"#utility.yul\":9295:9301   */\n  dup9\n    /* \"#utility.yul\":9291:9305   */\n  mul\n    /* \"#utility.yul\":9287:9309   */\n  add\n    /* \"#utility.yul\":9281:9285   */\n  dup9\n    /* \"#utility.yul\":9274:9310   */\n  sstore\n    /* \"#utility.yul\":8709:9320   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8672:9559   */\ntag_176:\n  pop\n    /* \"#utility.yul\":8262:9565   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8170:9565   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9571:9689   */\ntag_66:\n    /* \"#utility.yul\":9658:9682   */\n  tag_187\n    /* \"#utility.yul\":9676:9681   */\n  dup2\n    /* \"#utility.yul\":9658:9682   */\n  tag_32\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":9653:9656   */\n  dup3\n    /* \"#utility.yul\":9646:9683   */\n  mstore\n    /* \"#utility.yul\":9571:9689   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9695:9917   */\ntag_15:\n    /* \"#utility.yul\":9788:9792   */\n  0x00\n    /* \"#utility.yul\":9826:9828   */\n  0x20\n    /* \"#utility.yul\":9815:9824   */\n  dup3\n    /* \"#utility.yul\":9811:9829   */\n  add\n    /* \"#utility.yul\":9803:9829   */\n  swap1\n  pop\n    /* \"#utility.yul\":9839:9910   */\n  tag_189\n    /* \"#utility.yul\":9907:9908   */\n  0x00\n    /* \"#utility.yul\":9896:9905   */\n  dup4\n    /* \"#utility.yul\":9892:9909   */\n  add\n    /* \"#utility.yul\":9883:9889   */\n  dup5\n    /* \"#utility.yul\":9839:9910   */\n  tag_66\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":9695:9917   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9923:10092   */\ntag_67:\n    /* \"#utility.yul\":10007:10018   */\n  0x00\n    /* \"#utility.yul\":10041:10047   */\n  dup3\n    /* \"#utility.yul\":10036:10039   */\n  dup3\n    /* \"#utility.yul\":10029:10048   */\n  mstore\n    /* \"#utility.yul\":10081:10085   */\n  0x20\n    /* \"#utility.yul\":10076:10079   */\n  dup3\n    /* \"#utility.yul\":10072:10086   */\n  add\n    /* \"#utility.yul\":10057:10086   */\n  swap1\n  pop\n    /* \"#utility.yul\":9923:10092   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10098:10280   */\ntag_68:\n    /* \"#utility.yul\":10238:10272   */\n  0x496e76616c696420636f6c6c61746572616c20746f6b656e2061646472657373\n    /* \"#utility.yul\":10234:10235   */\n  0x00\n    /* \"#utility.yul\":10226:10232   */\n  dup3\n    /* \"#utility.yul\":10222:10236   */\n  add\n    /* \"#utility.yul\":10215:10273   */\n  mstore\n    /* \"#utility.yul\":10098:10280   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10286:10652   */\ntag_69:\n    /* \"#utility.yul\":10428:10431   */\n  0x00\n    /* \"#utility.yul\":10449:10516   */\n  tag_193\n    /* \"#utility.yul\":10513:10515   */\n  0x20\n    /* \"#utility.yul\":10508:10511   */\n  dup4\n    /* \"#utility.yul\":10449:10516   */\n  tag_67\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":10442:10516   */\n  swap2\n  pop\n    /* \"#utility.yul\":10525:10618   */\n  tag_194\n    /* \"#utility.yul\":10614:10617   */\n  dup3\n    /* \"#utility.yul\":10525:10618   */\n  tag_68\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":10643:10645   */\n  0x20\n    /* \"#utility.yul\":10638:10641   */\n  dup3\n    /* \"#utility.yul\":10634:10646   */\n  add\n    /* \"#utility.yul\":10627:10646   */\n  swap1\n  pop\n    /* \"#utility.yul\":10286:10652   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10658:11077   */\ntag_22:\n    /* \"#utility.yul\":10824:10828   */\n  0x00\n    /* \"#utility.yul\":10862:10864   */\n  0x20\n    /* \"#utility.yul\":10851:10860   */\n  dup3\n    /* \"#utility.yul\":10847:10865   */\n  add\n    /* \"#utility.yul\":10839:10865   */\n  swap1\n  pop\n    /* \"#utility.yul\":10911:10920   */\n  dup2\n    /* \"#utility.yul\":10905:10909   */\n  dup2\n    /* \"#utility.yul\":10901:10921   */\n  sub\n    /* \"#utility.yul\":10897:10898   */\n  0x00\n    /* \"#utility.yul\":10886:10895   */\n  dup4\n    /* \"#utility.yul\":10882:10899   */\n  add\n    /* \"#utility.yul\":10875:10922   */\n  mstore\n    /* \"#utility.yul\":10939:11070   */\n  tag_196\n    /* \"#utility.yul\":11065:11069   */\n  dup2\n    /* \"#utility.yul\":10939:11070   */\n  tag_69\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":10931:11070   */\n  swap1\n  pop\n    /* \"#utility.yul\":10658:11077   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11083:11315   */\ntag_70:\n    /* \"#utility.yul\":11223:11257   */\n  0x436f6c6c61746572616c697a6174696f6e20726174696f206d75737420626520\n    /* \"#utility.yul\":11219:11220   */\n  0x00\n    /* \"#utility.yul\":11211:11217   */\n  dup3\n    /* \"#utility.yul\":11207:11221   */\n  add\n    /* \"#utility.yul\":11200:11258   */\n  mstore\n    /* \"#utility.yul\":11292:11307   */\n  0x6174206c65617374203130302500000000000000000000000000000000000000\n    /* \"#utility.yul\":11287:11289   */\n  0x20\n    /* \"#utility.yul\":11279:11285   */\n  dup3\n    /* \"#utility.yul\":11275:11290   */\n  add\n    /* \"#utility.yul\":11268:11308   */\n  mstore\n    /* \"#utility.yul\":11083:11315   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11321:11687   */\ntag_71:\n    /* \"#utility.yul\":11463:11466   */\n  0x00\n    /* \"#utility.yul\":11484:11551   */\n  tag_199\n    /* \"#utility.yul\":11548:11550   */\n  0x2d\n    /* \"#utility.yul\":11543:11546   */\n  dup4\n    /* \"#utility.yul\":11484:11551   */\n  tag_67\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":11477:11551   */\n  swap2\n  pop\n    /* \"#utility.yul\":11560:11653   */\n  tag_200\n    /* \"#utility.yul\":11649:11652   */\n  dup3\n    /* \"#utility.yul\":11560:11653   */\n  tag_70\n  jump\t// in\ntag_200:\n    /* \"#utility.yul\":11678:11680   */\n  0x40\n    /* \"#utility.yul\":11673:11676   */\n  dup3\n    /* \"#utility.yul\":11669:11681   */\n  add\n    /* \"#utility.yul\":11662:11681   */\n  swap1\n  pop\n    /* \"#utility.yul\":11321:11687   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11693:12112   */\ntag_25:\n    /* \"#utility.yul\":11859:11863   */\n  0x00\n    /* \"#utility.yul\":11897:11899   */\n  0x20\n    /* \"#utility.yul\":11886:11895   */\n  dup3\n    /* \"#utility.yul\":11882:11900   */\n  add\n    /* \"#utility.yul\":11874:11900   */\n  swap1\n  pop\n    /* \"#utility.yul\":11946:11955   */\n  dup2\n    /* \"#utility.yul\":11940:11944   */\n  dup2\n    /* \"#utility.yul\":11936:11956   */\n  sub\n    /* \"#utility.yul\":11932:11933   */\n  0x00\n    /* \"#utility.yul\":11921:11930   */\n  dup4\n    /* \"#utility.yul\":11917:11934   */\n  add\n    /* \"#utility.yul\":11910:11957   */\n  mstore\n    /* \"#utility.yul\":11974:12105   */\n  tag_202\n    /* \"#utility.yul\":12100:12104   */\n  dup2\n    /* \"#utility.yul\":11974:12105   */\n  tag_71\n  jump\t// in\ntag_202:\n    /* \"#utility.yul\":11966:12105   */\n  swap1\n  pop\n    /* \"#utility.yul\":11693:12112   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"C/commingling .sol\":1857:7819  contract CollateralizedStableCoin is ERC20, Ownable, ReentrancyGuard {... */\ntag_26:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x4d10a0db24f434e6025a5ab91426fb885a8a41f2a9a3e3f8c3bfdea4a211adc4\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"C/commingling .sol\":1857:7819  contract CollateralizedStableCoin is ERC20, Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xbad4a01f\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xbad4a01f\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xbfa244fe\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xdcaf9c44\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xe1d5e571\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa1bf2840\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa622ee7c\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xb2016bd4\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x23b872dd\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x4798eb21\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6112fe2e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x0607ec70\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x11005b07\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"C/commingling .sol\":7607:7817  function updateCollateralizationRatio(uint256 newRatio) external onlyOwner {... */\n    tag_3:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"C/commingling .sol\":2292:2338  mapping(address => uint256) public debtBalance */\n    tag_6:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_9:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"C/commingling .sol\":6325:6658  function burnStableCoin(uint256 amount) external nonReentrant {... */\n    tag_10:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n    tag_61:\n      stop\n        /* \"C/commingling .sol\":4928:5650  function withdrawCollateral(uint256 amount) external nonReentrant {... */\n    tag_11:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n    tag_64:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_14:\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_15:\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"C/commingling .sol\":2169:2221  mapping(address => uint256) public collateralBalance */\n    tag_16:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"C/commingling .sol\":2402:2441  mapping(address => Vault) public vaults */\n    tag_17:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_18:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"C/commingling .sol\":2027:2066  IERC20 public immutable collateralToken */\n    tag_19:\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"C/commingling .sol\":4358:4773  function depositCollateral(uint256 amount) external nonReentrant {... */\n    tag_20:\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n    tag_97:\n      stop\n        /* \"C/commingling .sol\":5807:6266  function mintStableCoin(uint256 amount) external nonReentrant {... */\n    tag_21:\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n    tag_100:\n      stop\n        /* \"C/commingling .sol\":2602:2639  uint256 public collateralizationRatio */\n    tag_22:\n      tag_103\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      tag_105\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_23:\n      tag_106\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_107\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      tag_109\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      tag_110\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"C/commingling .sol\":7262:7526  function getUserCollateralizationRatio(address user) external view returns (uint256) {... */\n    tag_24:\n      tag_111\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_112:\n      tag_113\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      tag_114\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_25:\n      tag_115\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_116\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_116:\n      tag_117\n      jump\t// in\n    tag_115:\n      stop\n        /* \"C/commingling .sol\":7607:7817  function updateCollateralizationRatio(uint256 newRatio) external onlyOwner {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_120\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_119:\n        /* \"C/commingling .sol\":7712:7717  10000 */\n      0x2710\n        /* \"C/commingling .sol\":7700:7708  newRatio */\n      dup2\n        /* \"C/commingling .sol\":7700:7717  newRatio >= 10000 */\n      lt\n      iszero\n        /* \"C/commingling .sol\":7692:7767  require(newRatio >= 10000, \"Collateralization ratio must be at least 100%\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_122:\n        /* \"C/commingling .sol\":7802:7810  newRatio */\n      dup1\n        /* \"C/commingling .sol\":7777:7799  collateralizationRatio */\n      0x0a\n        /* \"C/commingling .sol\":7777:7810  collateralizationRatio = newRatio */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"C/commingling .sol\":7607:7817  function updateCollateralizationRatio(uint256 newRatio) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_126\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_128\n      swap1\n      tag_127\n      jump\t// in\n    tag_128:\n      dup1\n      iszero\n      tag_129\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_130\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_129)\n    tag_130:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_131:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_131\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_129:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_133\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"C/commingling .sol\":2292:2338  mapping(address => uint256) public debtBalance */\n    tag_46:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_143\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"C/commingling .sol\":6325:6658  function burnStableCoin(uint256 amount) external nonReentrant {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_146\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_147\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_146:\n        /* \"C/commingling .sol\":6414:6415  0 */\n      0x00\n        /* \"C/commingling .sol\":6405:6411  amount */\n      dup2\n        /* \"C/commingling .sol\":6405:6415  amount > 0 */\n      gt\n        /* \"C/commingling .sol\":6397:6438  require(amount > 0, \"Amount must be > 0\") */\n      tag_149\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_149:\n        /* \"C/commingling .sol\":6483:6489  amount */\n      dup1\n        /* \"C/commingling .sol\":6456:6467  debtBalance */\n      0x08\n        /* \"C/commingling .sol\":6456:6479  debtBalance[msg.sender] */\n      0x00\n        /* \"C/commingling .sol\":6468:6478  msg.sender */\n      caller\n        /* \"C/commingling .sol\":6456:6479  debtBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"C/commingling .sol\":6456:6489  debtBalance[msg.sender] >= amount */\n      lt\n      iszero\n        /* \"C/commingling .sol\":6448:6513  require(debtBalance[msg.sender] >= amount, \"Amount exceeds debt\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"C/commingling .sol\":6559:6565  amount */\n      dup1\n        /* \"C/commingling .sol\":6532:6543  debtBalance */\n      0x08\n        /* \"C/commingling .sol\":6532:6555  debtBalance[msg.sender] */\n      0x00\n        /* \"C/commingling .sol\":6544:6554  msg.sender */\n      caller\n        /* \"C/commingling .sol\":6532:6555  debtBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"C/commingling .sol\":6532:6565  debtBalance[msg.sender] -= amount */\n      dup3\n      dup3\n      sload\n      tag_155\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"C/commingling .sol\":6575:6600  _burn(msg.sender, amount) */\n      tag_157\n        /* \"C/commingling .sol\":6581:6591  msg.sender */\n      caller\n        /* \"C/commingling .sol\":6593:6599  amount */\n      dup3\n        /* \"C/commingling .sol\":6575:6580  _burn */\n      tag_158\n        /* \"C/commingling .sol\":6575:6600  _burn(msg.sender, amount) */\n      jump\t// in\n    tag_157:\n        /* \"C/commingling .sol\":6632:6642  msg.sender */\n      caller\n        /* \"C/commingling .sol\":6615:6651  StableCoinBurned(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe46e4414fb02a244a8932c7ec11c904ddf0313b8403a267c5e583cb565b473af\n        /* \"C/commingling .sol\":6644:6650  amount */\n      dup3\n        /* \"C/commingling .sol\":6615:6651  StableCoinBurned(msg.sender, amount) */\n      mload(0x40)\n      tag_159\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_160\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_161\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_160:\n        /* \"C/commingling .sol\":6325:6658  function burnStableCoin(uint256 amount) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"C/commingling .sol\":4928:5650  function withdrawCollateral(uint256 amount) external nonReentrant {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_163\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_147\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_163:\n        /* \"C/commingling .sol\":5021:5022  0 */\n      0x00\n        /* \"C/commingling .sol\":5012:5018  amount */\n      dup2\n        /* \"C/commingling .sol\":5012:5022  amount > 0 */\n      gt\n        /* \"C/commingling .sol\":5004:5045  require(amount > 0, \"Amount must be > 0\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_151\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_165:\n        /* \"C/commingling .sol\":5096:5102  amount */\n      dup1\n        /* \"C/commingling .sol\":5063:5080  collateralBalance */\n      0x07\n        /* \"C/commingling .sol\":5063:5092  collateralBalance[msg.sender] */\n      0x00\n        /* \"C/commingling .sol\":5081:5091  msg.sender */\n      caller\n        /* \"C/commingling .sol\":5063:5092  collateralBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"C/commingling .sol\":5063:5102  collateralBalance[msg.sender] >= amount */\n      lt\n      iszero\n        /* \"C/commingling .sol\":5055:5138  require(collateralBalance[msg.sender] >= amount, \"Insufficient collateral balance\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_167:\n        /* \"C/commingling .sol\":5157:5178  uint256 newCollateral */\n      0x00\n        /* \"C/commingling .sol\":5213:5219  amount */\n      dup2\n        /* \"C/commingling .sol\":5181:5198  collateralBalance */\n      0x07\n        /* \"C/commingling .sol\":5181:5210  collateralBalance[msg.sender] */\n      0x00\n        /* \"C/commingling .sol\":5199:5209  msg.sender */\n      caller\n        /* \"C/commingling .sol\":5181:5210  collateralBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"C/commingling .sol\":5181:5219  collateralBalance[msg.sender] - amount */\n      tag_170\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_170:\n        /* \"C/commingling .sol\":5157:5219  uint256 newCollateral = collateralBalance[msg.sender] - amount */\n      swap1\n      pop\n        /* \"C/commingling .sol\":5237:5312  _isCollateralSufficient(msg.sender, newCollateral, debtBalance[msg.sender]) */\n      tag_171\n        /* \"C/commingling .sol\":5261:5271  msg.sender */\n      caller\n        /* \"C/commingling .sol\":5273:5286  newCollateral */\n      dup3\n        /* \"C/commingling .sol\":5288:5299  debtBalance */\n      0x08\n        /* \"C/commingling .sol\":5288:5311  debtBalance[msg.sender] */\n      0x00\n        /* \"C/commingling .sol\":5300:5310  msg.sender */\n      caller\n        /* \"C/commingling .sol\":5288:5311  debtBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"C/commingling .sol\":5237:5260  _isCollateralSufficient */\n      tag_172\n        /* \"C/commingling .sol\":5237:5312  _isCollateralSufficient(msg.sender, newCollateral, debtBalance[msg.sender]) */\n      jump\t// in\n    tag_171:\n        /* \"C/commingling .sol\":5229:5364  require(_isCollateralSufficient(msg.sender, newCollateral, debtBalance[msg.sender]), \"Withdrawal would breach collateralization ratio\") */\n      tag_173\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_173:\n        /* \"C/commingling .sol\":5415:5428  newCollateral */\n      dup1\n        /* \"C/commingling .sol\":5383:5400  collateralBalance */\n      0x07\n        /* \"C/commingling .sol\":5383:5412  collateralBalance[msg.sender] */\n      0x00\n        /* \"C/commingling .sol\":5401:5411  msg.sender */\n      caller\n        /* \"C/commingling .sol\":5383:5412  collateralBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"C/commingling .sol\":5383:5428  collateralBalance[msg.sender] = newCollateral */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"C/commingling .sol\":5438:5449  Vault vault */\n      0x00\n        /* \"C/commingling .sol\":5452:5458  vaults */\n      0x09\n        /* \"C/commingling .sol\":5452:5470  vaults[msg.sender] */\n      0x00\n        /* \"C/commingling .sol\":5459:5469  msg.sender */\n      caller\n        /* \"C/commingling .sol\":5452:5470  vaults[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"C/commingling .sol\":5438:5470  Vault vault = vaults[msg.sender] */\n      swap1\n      pop\n        /* \"C/commingling .sol\":5514:5515  0 */\n      0x00\n        /* \"C/commingling .sol\":5488:5516  address(vault) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"C/commingling .sol\":5496:5501  vault */\n      dup2\n        /* \"C/commingling .sol\":5488:5516  address(vault) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"C/commingling .sol\":5480:5545  require(address(vault) != address(0), \"No vault exists for user\") */\n      tag_176\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_176:\n        /* \"C/commingling .sol\":5555:5560  vault */\n      dup1\n        /* \"C/commingling .sol\":5555:5569  vault.withdraw */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf3fef3a3\n        /* \"C/commingling .sol\":5570:5580  msg.sender */\n      caller\n        /* \"C/commingling .sol\":5582:5588  amount */\n      dup6\n        /* \"C/commingling .sol\":5555:5589  vault.withdraw(msg.sender, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap3\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_179:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_181\n      jumpi\n      revert(0x00, 0x00)\n    tag_181:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_183\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_183:\n      pop\n      pop\n      pop\n      pop\n        /* \"C/commingling .sol\":5624:5634  msg.sender */\n      caller\n        /* \"C/commingling .sol\":5604:5643  CollateralWithdrawn(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc30fcfbcaac9e0deffa719714eaa82396ff506a0d0d0eebe170830177288715d\n        /* \"C/commingling .sol\":5636:5642  amount */\n      dup5\n        /* \"C/commingling .sol\":5604:5643  CollateralWithdrawn(msg.sender, amount) */\n      mload(0x40)\n      tag_184\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"C/commingling .sol\":4994:5650  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_185\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_161\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_185:\n        /* \"C/commingling .sol\":4928:5650  function withdrawCollateral(uint256 amount) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_188\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_120\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_188:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_190\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_191\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_194\n      swap1\n      tag_127\n      jump\t// in\n    tag_194:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_195\n      swap1\n      tag_127\n      jump\t// in\n    tag_195:\n      dup1\n      iszero\n      tag_196\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_197\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_196)\n    tag_197:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_198:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_198\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_196:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"C/commingling .sol\":2169:2221  mapping(address => uint256) public collateralBalance */\n    tag_82:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"C/commingling .sol\":2402:2441  mapping(address => Vault) public vaults */\n    tag_86:\n      mstore(0x20, 0x09)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_200\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_201\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_143\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_201:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"C/commingling .sol\":2027:2066  IERC20 public immutable collateralToken */\n    tag_94:\n      immutable(\"0x4d10a0db24f434e6025a5ab91426fb885a8a41f2a9a3e3f8c3bfdea4a211adc4\")\n      dup2\n      jump\t// out\n        /* \"C/commingling .sol\":4358:4773  function depositCollateral(uint256 amount) external nonReentrant {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_203\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_147\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_203:\n        /* \"C/commingling .sol\":4450:4451  0 */\n      0x00\n        /* \"C/commingling .sol\":4441:4447  amount */\n      dup2\n        /* \"C/commingling .sol\":4441:4451  amount > 0 */\n      gt\n        /* \"C/commingling .sol\":4433:4474  require(amount > 0, \"Amount must be > 0\") */\n      tag_205\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_206\n      swap1\n      tag_151\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_205:\n        /* \"C/commingling .sol\":4484:4495  Vault vault */\n      0x00\n        /* \"C/commingling .sol\":4498:4519  _getVault(msg.sender) */\n      tag_207\n        /* \"C/commingling .sol\":4508:4518  msg.sender */\n      caller\n        /* \"C/commingling .sol\":4498:4507  _getVault */\n      tag_208\n        /* \"C/commingling .sol\":4498:4519  _getVault(msg.sender) */\n      jump\t// in\n    tag_207:\n        /* \"C/commingling .sol\":4484:4519  Vault vault = _getVault(msg.sender) */\n      swap1\n      pop\n        /* \"C/commingling .sol\":4595:4663  collateralToken.safeTransferFrom(msg.sender, address(vault), amount) */\n      tag_209\n        /* \"C/commingling .sol\":4628:4638  msg.sender */\n      caller\n        /* \"C/commingling .sol\":4648:4653  vault */\n      dup3\n        /* \"C/commingling .sol\":4656:4662  amount */\n      dup5\n        /* \"C/commingling .sol\":4595:4610  collateralToken */\n      immutable(\"0x4d10a0db24f434e6025a5ab91426fb885a8a41f2a9a3e3f8c3bfdea4a211adc4\")\n        /* \"C/commingling .sol\":4595:4627  collateralToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_210\n      swap1\n        /* \"C/commingling .sol\":4595:4663  collateralToken.safeTransferFrom(msg.sender, address(vault), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_209:\n        /* \"C/commingling .sol\":4706:4712  amount */\n      dup2\n        /* \"C/commingling .sol\":4673:4690  collateralBalance */\n      0x07\n        /* \"C/commingling .sol\":4673:4702  collateralBalance[msg.sender] */\n      0x00\n        /* \"C/commingling .sol\":4691:4701  msg.sender */\n      caller\n        /* \"C/commingling .sol\":4673:4702  collateralBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"C/commingling .sol\":4673:4712  collateralBalance[msg.sender] += amount */\n      dup3\n      dup3\n      sload\n      tag_211\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_211:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"C/commingling .sol\":4747:4757  msg.sender */\n      caller\n        /* \"C/commingling .sol\":4727:4766  CollateralDeposited(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd7243f6f8212d5188fd054141cf6ea89cfc0d91facb8c3afe2f88a1358480142\n        /* \"C/commingling .sol\":4759:4765  amount */\n      dup4\n        /* \"C/commingling .sol\":4727:4766  CollateralDeposited(msg.sender, amount) */\n      mload(0x40)\n      tag_213\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_213:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"C/commingling .sol\":4423:4773  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_214\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_161\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_214:\n        /* \"C/commingling .sol\":4358:4773  function depositCollateral(uint256 amount) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"C/commingling .sol\":5807:6266  function mintStableCoin(uint256 amount) external nonReentrant {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_216\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_147\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_216:\n        /* \"C/commingling .sol\":5896:5897  0 */\n      0x00\n        /* \"C/commingling .sol\":5887:5893  amount */\n      dup2\n        /* \"C/commingling .sol\":5887:5897  amount > 0 */\n      gt\n        /* \"C/commingling .sol\":5879:5920  require(amount > 0, \"Amount must be > 0\") */\n      tag_218\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_219\n      swap1\n      tag_151\n      jump\t// in\n    tag_219:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_218:\n        /* \"C/commingling .sol\":5930:5945  uint256 newDebt */\n      0x00\n        /* \"C/commingling .sol\":5974:5980  amount */\n      dup2\n        /* \"C/commingling .sol\":5948:5959  debtBalance */\n      0x08\n        /* \"C/commingling .sol\":5948:5971  debtBalance[msg.sender] */\n      0x00\n        /* \"C/commingling .sol\":5960:5970  msg.sender */\n      caller\n        /* \"C/commingling .sol\":5948:5971  debtBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"C/commingling .sol\":5948:5980  debtBalance[msg.sender] + amount */\n      tag_220\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_220:\n        /* \"C/commingling .sol\":5930:5980  uint256 newDebt = debtBalance[msg.sender] + amount */\n      swap1\n      pop\n        /* \"C/commingling .sol\":5998:6073  _isCollateralSufficient(msg.sender, collateralBalance[msg.sender], newDebt) */\n      tag_221\n        /* \"C/commingling .sol\":6022:6032  msg.sender */\n      caller\n        /* \"C/commingling .sol\":6034:6051  collateralBalance */\n      0x07\n        /* \"C/commingling .sol\":6034:6063  collateralBalance[msg.sender] */\n      0x00\n        /* \"C/commingling .sol\":6052:6062  msg.sender */\n      caller\n        /* \"C/commingling .sol\":6034:6063  collateralBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"C/commingling .sol\":6065:6072  newDebt */\n      dup4\n        /* \"C/commingling .sol\":5998:6021  _isCollateralSufficient */\n      tag_172\n        /* \"C/commingling .sol\":5998:6073  _isCollateralSufficient(msg.sender, collateralBalance[msg.sender], newDebt) */\n      jump\t// in\n    tag_221:\n        /* \"C/commingling .sol\":5990:6121  require(_isCollateralSufficient(msg.sender, collateralBalance[msg.sender], newDebt), \"Insufficient collateral to mint that amount\") */\n      tag_222\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_223\n      swap1\n      tag_224\n      jump\t// in\n    tag_223:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_222:\n        /* \"C/commingling .sol\":6166:6173  newDebt */\n      dup1\n        /* \"C/commingling .sol\":6140:6151  debtBalance */\n      0x08\n        /* \"C/commingling .sol\":6140:6163  debtBalance[msg.sender] */\n      0x00\n        /* \"C/commingling .sol\":6152:6162  msg.sender */\n      caller\n        /* \"C/commingling .sol\":6140:6163  debtBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"C/commingling .sol\":6140:6173  debtBalance[msg.sender] = newDebt */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"C/commingling .sol\":6183:6208  _mint(msg.sender, amount) */\n      tag_225\n        /* \"C/commingling .sol\":6189:6199  msg.sender */\n      caller\n        /* \"C/commingling .sol\":6201:6207  amount */\n      dup4\n        /* \"C/commingling .sol\":6183:6188  _mint */\n      tag_226\n        /* \"C/commingling .sol\":6183:6208  _mint(msg.sender, amount) */\n      jump\t// in\n    tag_225:\n        /* \"C/commingling .sol\":6240:6250  msg.sender */\n      caller\n        /* \"C/commingling .sol\":6223:6259  StableCoinMinted(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3f1ae0a6113ff787f6445396e9ec4e9d0f6e1a0f05a9a856206f72f9623a2e9f\n        /* \"C/commingling .sol\":6252:6258  amount */\n      dup4\n        /* \"C/commingling .sol\":6223:6259  StableCoinMinted(msg.sender, amount) */\n      mload(0x40)\n      tag_227\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_227:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"C/commingling .sol\":5869:6266  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_228\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_161\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_228:\n        /* \"C/commingling .sol\":5807:6266  function mintStableCoin(uint256 amount) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"C/commingling .sol\":2602:2639  uint256 public collateralizationRatio */\n    tag_104:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"C/commingling .sol\":7262:7526  function getUserCollateralizationRatio(address user) external view returns (uint256) {... */\n    tag_113:\n        /* \"C/commingling .sol\":7338:7345  uint256 */\n      0x00\n        /* \"C/commingling .sol\":7357:7369  uint256 debt */\n      0x00\n        /* \"C/commingling .sol\":7372:7383  debtBalance */\n      0x08\n        /* \"C/commingling .sol\":7372:7389  debtBalance[user] */\n      0x00\n        /* \"C/commingling .sol\":7384:7388  user */\n      dup5\n        /* \"C/commingling .sol\":7372:7389  debtBalance[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"C/commingling .sol\":7357:7389  uint256 debt = debtBalance[user] */\n      swap1\n      pop\n        /* \"C/commingling .sol\":7411:7412  0 */\n      0x00\n        /* \"C/commingling .sol\":7403:7407  debt */\n      dup2\n        /* \"C/commingling .sol\":7403:7412  debt == 0 */\n      sub\n        /* \"C/commingling .sol\":7399:7463  if (debt == 0) {... */\n      tag_231\n      jumpi\n        /* \"C/commingling .sol\":7435:7452  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"C/commingling .sol\":7428:7452  return type(uint256).max */\n      swap2\n      pop\n      pop\n      jump(tag_230)\n        /* \"C/commingling .sol\":7399:7463  if (debt == 0) {... */\n    tag_231:\n        /* \"C/commingling .sol\":7515:7519  debt */\n      dup1\n        /* \"C/commingling .sol\":7506:7511  10000 */\n      0x2710\n        /* \"C/commingling .sol\":7480:7497  collateralBalance */\n      0x07\n        /* \"C/commingling .sol\":7480:7503  collateralBalance[user] */\n      0x00\n        /* \"C/commingling .sol\":7498:7502  user */\n      dup7\n        /* \"C/commingling .sol\":7480:7503  collateralBalance[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"C/commingling .sol\":7480:7511  collateralBalance[user] * 10000 */\n      tag_232\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_232:\n        /* \"C/commingling .sol\":7479:7519  (collateralBalance[user] * 10000) / debt */\n      tag_234\n      swap2\n      swap1\n      tag_235\n      jump\t// in\n    tag_234:\n        /* \"C/commingling .sol\":7472:7519  return (collateralBalance[user] * 10000) / debt */\n      swap2\n      pop\n      pop\n        /* \"C/commingling .sol\":7262:7526  function getUserCollateralizationRatio(address user) external view returns (uint256) {... */\n    tag_230:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_237\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_120\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_237:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_239\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_240\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_240:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_239:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_241\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_191\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_241:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_243\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_243:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_244\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_244:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_245\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_246\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_246:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_247\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_247:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_245:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_250\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_251\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_250:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_253\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_253:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10599:10616  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10616  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_254\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10655:10660  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10652  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10660  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n      iszero\n      tag_255\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10714:10721  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10723:10739  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10741:10746  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_256\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_257\n      jump\t// in\n    tag_256:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n    tag_255:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      tag_258\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10812:10817  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10819:10826  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10847:10852  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10852  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10854:10859  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10811  _approve */\n      tag_251\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_258:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n    tag_254:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10891  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_260\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_261\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_261:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_260:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_262\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_263\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_263:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_262:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_264\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_265\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_264:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x06)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_267\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_268\n      swap1\n      tag_269\n      jump\t// in\n    tag_268:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_267:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8073:8074  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8061  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n      tag_271\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8125:8126  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8098:8128  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_272\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_272:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n    tag_271:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      tag_273\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8156:8163  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8173:8174  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8177:8182  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8155  _update */\n      tag_265\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      jump\t// in\n    tag_273:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"C/commingling .sol\":6836:7100  function _isCollateralSufficient(address user, uint256 collateralAmt, uint256 debtAmt) internal view returns (bool) {... */\n    tag_172:\n        /* \"C/commingling .sol\":6946:6950  bool */\n      0x00\n        /* \"C/commingling .sol\":6977:6978  0 */\n      0x00\n        /* \"C/commingling .sol\":6966:6973  debtAmt */\n      dup3\n        /* \"C/commingling .sol\":6966:6978  debtAmt == 0 */\n      sub\n        /* \"C/commingling .sol\":6962:7016  if (debtAmt == 0) {... */\n      tag_276\n      jumpi\n        /* \"C/commingling .sol\":7001:7005  true */\n      0x01\n        /* \"C/commingling .sol\":6994:7005  return true */\n      swap1\n      pop\n      jump(tag_275)\n        /* \"C/commingling .sol\":6962:7016  if (debtAmt == 0) {... */\n    tag_276:\n        /* \"C/commingling .sol\":7070:7092  collateralizationRatio */\n      sload(0x0a)\n        /* \"C/commingling .sol\":7060:7067  debtAmt */\n      dup3\n        /* \"C/commingling .sol\":7060:7092  debtAmt * collateralizationRatio */\n      tag_277\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_277:\n        /* \"C/commingling .sol\":7049:7054  10000 */\n      0x2710\n        /* \"C/commingling .sol\":7033:7046  collateralAmt */\n      dup5\n        /* \"C/commingling .sol\":7033:7054  collateralAmt * 10000 */\n      tag_278\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_278:\n        /* \"C/commingling .sol\":7032:7093  (collateralAmt * 10000) >= (debtAmt * collateralizationRatio) */\n      lt\n      iszero\n        /* \"C/commingling .sol\":7025:7093  return (collateralAmt * 10000) >= (debtAmt * collateralizationRatio) */\n      swap1\n      pop\n        /* \"C/commingling .sol\":6836:7100  function _isCollateralSufficient(address user, uint256 collateralAmt, uint256 debtAmt) internal view returns (bool) {... */\n    tag_275:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_191:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"C/commingling .sol\":3935:4208  function _getVault(address user) internal returns (Vault) {... */\n    tag_208:\n        /* \"C/commingling .sol\":3986:3991  Vault */\n      0x00\n        /* \"C/commingling .sol\":4040:4041  0 */\n      0x00\n        /* \"C/commingling .sol\":4007:4042  address(vaults[user]) == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"C/commingling .sol\":4015:4021  vaults */\n      0x09\n        /* \"C/commingling .sol\":4015:4027  vaults[user] */\n      0x00\n        /* \"C/commingling .sol\":4022:4026  user */\n      dup5\n        /* \"C/commingling .sol\":4015:4027  vaults[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"C/commingling .sol\":4007:4042  address(vaults[user]) == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"C/commingling .sol\":4003:4173  if (address(vaults[user]) == address(0)) {... */\n      tag_281\n      jumpi\n        /* \"C/commingling .sol\":4058:4072  Vault newVault */\n      0x00\n        /* \"C/commingling .sol\":4093:4108  collateralToken */\n      immutable(\"0x4d10a0db24f434e6025a5ab91426fb885a8a41f2a9a3e3f8c3bfdea4a211adc4\")\n        /* \"C/commingling .sol\":4119:4123  this */\n      address\n        /* \"C/commingling .sol\":4075:4125  new Vault(address(collateralToken), address(this)) */\n      mload(0x40)\n      tag_282\n      swap1\n      tag_283\n      jump\t// in\n    tag_282:\n      tag_284\n      swap3\n      swap2\n      swap1\n      tag_285\n      jump\t// in\n    tag_284:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      0x00\n      create\n      dup1\n      iszero\n      dup1\n      iszero\n      tag_286\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_286:\n      pop\n        /* \"C/commingling .sol\":4058:4125  Vault newVault = new Vault(address(collateralToken), address(this)) */\n      swap1\n      pop\n        /* \"C/commingling .sol\":4154:4162  newVault */\n      dup1\n        /* \"C/commingling .sol\":4139:4145  vaults */\n      0x09\n        /* \"C/commingling .sol\":4139:4151  vaults[user] */\n      0x00\n        /* \"C/commingling .sol\":4146:4150  user */\n      dup6\n        /* \"C/commingling .sol\":4139:4151  vaults[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"C/commingling .sol\":4139:4162  vaults[user] = newVault */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"C/commingling .sol\":4044:4173  {... */\n      pop\n        /* \"C/commingling .sol\":4003:4173  if (address(vaults[user]) == address(0)) {... */\n    tag_281:\n        /* \"C/commingling .sol\":4189:4195  vaults */\n      0x09\n        /* \"C/commingling .sol\":4189:4201  vaults[user] */\n      0x00\n        /* \"C/commingling .sol\":4196:4200  user */\n      dup4\n        /* \"C/commingling .sol\":4189:4201  vaults[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"C/commingling .sol\":4182:4201  return vaults[user] */\n      swap1\n      pop\n        /* \"C/commingling .sol\":3935:4208  function _getVault(address user) internal returns (Vault) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_288\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1765  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1781:1785  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1787:1789  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1791:1796  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_289\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_290\n      jump\t// in\n    tag_289:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1737  _callOptionalReturn */\n      tag_291\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_288:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n    tag_226:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n      tag_293\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_294\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_294:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n    tag_293:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      tag_295\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n      tag_265\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      jump\t// in\n    tag_295:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_297\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_298\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_298:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_297:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_299\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_300\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_300:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_299:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_301\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_302\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_302:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_301:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_304\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_305\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_305:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_306)\n    tag_304:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_307\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_308\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_257\n      jump\t// in\n    tag_308:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_307:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_306:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_309\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_310)\n    tag_309:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_310:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_311\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_311:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7686:8406  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_291:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7766:7784  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7794:7813  uint256 returnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7932:7936  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7929:7930  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7922:7926  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7916:7927  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7909:7913  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7903:7907  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7899:7914  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7896:7897  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7889:7894  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7882:7887  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7877:7937  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7989:7996  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7979:8155  if iszero(success) {... */\n      tag_313\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8033:8037  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8027:8038  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8078:8094  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8075:8076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8070:8073  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8055:8095  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8124:8140  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8119:8122  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8112:8141  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7979:8155  if iszero(success) {... */\n    tag_313:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8182:8198  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8168:8198  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8232:8233  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8226:8234  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8211:8234  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7848:8244  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8272:8273  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8268  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8273  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_314\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8325:8326  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8321  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8326  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_315)\n    tag_314:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8284:8289  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8276:8302  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8276:8307  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_315:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8254:8400  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_316\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8382:8387  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8349:8389  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_317\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_317:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8254:8400  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_316:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7756:8406  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7686:8406  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n    tag_283:\n      dataSize(sub_0)\n      dup1\n      dataOffset(sub_0)\n      dup4\n      codecopy\n      add\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_319:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_321:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_322:\n        /* \"#utility.yul\":490:514   */\n      tag_371\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_321\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_372\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      0x00\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_372:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_323:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_374\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_322\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_31:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_376\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_377\n      tag_319\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":766:885   */\n    tag_376:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_378\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_323\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1124   */\n    tag_324:\n        /* \"#utility.yul\":1077:1083   */\n      0x00\n        /* \"#utility.yul\":1111:1116   */\n      dup2\n        /* \"#utility.yul\":1105:1117   */\n      mload\n        /* \"#utility.yul\":1095:1117   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1124   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1130:1299   */\n    tag_325:\n        /* \"#utility.yul\":1214:1225   */\n      0x00\n        /* \"#utility.yul\":1248:1254   */\n      dup3\n        /* \"#utility.yul\":1243:1246   */\n      dup3\n        /* \"#utility.yul\":1236:1255   */\n      mstore\n        /* \"#utility.yul\":1288:1292   */\n      0x20\n        /* \"#utility.yul\":1283:1286   */\n      dup3\n        /* \"#utility.yul\":1279:1293   */\n      add\n        /* \"#utility.yul\":1264:1293   */\n      swap1\n      pop\n        /* \"#utility.yul\":1130:1299   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1305:1444   */\n    tag_326:\n        /* \"#utility.yul\":1394:1400   */\n      dup3\n        /* \"#utility.yul\":1389:1392   */\n      dup2\n        /* \"#utility.yul\":1384:1387   */\n      dup4\n        /* \"#utility.yul\":1378:1401   */\n      mcopy\n        /* \"#utility.yul\":1435:1436   */\n      0x00\n        /* \"#utility.yul\":1426:1432   */\n      dup4\n        /* \"#utility.yul\":1421:1424   */\n      dup4\n        /* \"#utility.yul\":1417:1433   */\n      add\n        /* \"#utility.yul\":1410:1437   */\n      mstore\n        /* \"#utility.yul\":1305:1444   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1450:1552   */\n    tag_327:\n        /* \"#utility.yul\":1491:1497   */\n      0x00\n        /* \"#utility.yul\":1542:1544   */\n      0x1f\n        /* \"#utility.yul\":1538:1545   */\n      not\n        /* \"#utility.yul\":1533:1535   */\n      0x1f\n        /* \"#utility.yul\":1526:1531   */\n      dup4\n        /* \"#utility.yul\":1522:1536   */\n      add\n        /* \"#utility.yul\":1518:1546   */\n      and\n        /* \"#utility.yul\":1508:1546   */\n      swap1\n      pop\n        /* \"#utility.yul\":1450:1552   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1558:1935   */\n    tag_328:\n        /* \"#utility.yul\":1646:1649   */\n      0x00\n        /* \"#utility.yul\":1674:1713   */\n      tag_384\n        /* \"#utility.yul\":1707:1712   */\n      dup3\n        /* \"#utility.yul\":1674:1713   */\n      tag_324\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":1729:1800   */\n      tag_385\n        /* \"#utility.yul\":1793:1799   */\n      dup2\n        /* \"#utility.yul\":1788:1791   */\n      dup6\n        /* \"#utility.yul\":1729:1800   */\n      tag_325\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":1722:1800   */\n      swap4\n      pop\n        /* \"#utility.yul\":1809:1874   */\n      tag_386\n        /* \"#utility.yul\":1867:1873   */\n      dup2\n        /* \"#utility.yul\":1862:1865   */\n      dup6\n        /* \"#utility.yul\":1855:1859   */\n      0x20\n        /* \"#utility.yul\":1848:1853   */\n      dup7\n        /* \"#utility.yul\":1844:1860   */\n      add\n        /* \"#utility.yul\":1809:1874   */\n      tag_326\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":1899:1928   */\n      tag_387\n        /* \"#utility.yul\":1921:1927   */\n      dup2\n        /* \"#utility.yul\":1899:1928   */\n      tag_327\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":1894:1897   */\n      dup5\n        /* \"#utility.yul\":1890:1929   */\n      add\n        /* \"#utility.yul\":1883:1929   */\n      swap2\n      pop\n        /* \"#utility.yul\":1650:1935   */\n      pop\n        /* \"#utility.yul\":1558:1935   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1941:2254   */\n    tag_36:\n        /* \"#utility.yul\":2054:2058   */\n      0x00\n        /* \"#utility.yul\":2092:2094   */\n      0x20\n        /* \"#utility.yul\":2081:2090   */\n      dup3\n        /* \"#utility.yul\":2077:2095   */\n      add\n        /* \"#utility.yul\":2069:2095   */\n      swap1\n      pop\n        /* \"#utility.yul\":2141:2150   */\n      dup2\n        /* \"#utility.yul\":2135:2139   */\n      dup2\n        /* \"#utility.yul\":2131:2151   */\n      sub\n        /* \"#utility.yul\":2127:2128   */\n      0x00\n        /* \"#utility.yul\":2116:2125   */\n      dup4\n        /* \"#utility.yul\":2112:2129   */\n      add\n        /* \"#utility.yul\":2105:2152   */\n      mstore\n        /* \"#utility.yul\":2169:2247   */\n      tag_389\n        /* \"#utility.yul\":2242:2246   */\n      dup2\n        /* \"#utility.yul\":2233:2239   */\n      dup5\n        /* \"#utility.yul\":2169:2247   */\n      tag_328\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":2161:2247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1941:2254   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2260:2386   */\n    tag_329:\n        /* \"#utility.yul\":2297:2304   */\n      0x00\n        /* \"#utility.yul\":2337:2379   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2330:2335   */\n      dup3\n        /* \"#utility.yul\":2326:2380   */\n      and\n        /* \"#utility.yul\":2315:2380   */\n      swap1\n      pop\n        /* \"#utility.yul\":2260:2386   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2392:2488   */\n    tag_330:\n        /* \"#utility.yul\":2429:2436   */\n      0x00\n        /* \"#utility.yul\":2458:2482   */\n      tag_392\n        /* \"#utility.yul\":2476:2481   */\n      dup3\n        /* \"#utility.yul\":2458:2482   */\n      tag_329\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":2447:2482   */\n      swap1\n      pop\n        /* \"#utility.yul\":2392:2488   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2494:2616   */\n    tag_331:\n        /* \"#utility.yul\":2567:2591   */\n      tag_394\n        /* \"#utility.yul\":2585:2590   */\n      dup2\n        /* \"#utility.yul\":2567:2591   */\n      tag_330\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":2560:2565   */\n      dup2\n        /* \"#utility.yul\":2557:2592   */\n      eq\n        /* \"#utility.yul\":2547:2610   */\n      tag_395\n      jumpi\n        /* \"#utility.yul\":2606:2607   */\n      0x00\n        /* \"#utility.yul\":2603:2604   */\n      0x00\n        /* \"#utility.yul\":2596:2608   */\n      revert\n        /* \"#utility.yul\":2547:2610   */\n    tag_395:\n        /* \"#utility.yul\":2494:2616   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2622:2761   */\n    tag_332:\n        /* \"#utility.yul\":2668:2673   */\n      0x00\n        /* \"#utility.yul\":2706:2712   */\n      dup2\n        /* \"#utility.yul\":2693:2713   */\n      calldataload\n        /* \"#utility.yul\":2684:2713   */\n      swap1\n      pop\n        /* \"#utility.yul\":2722:2755   */\n      tag_397\n        /* \"#utility.yul\":2749:2754   */\n      dup2\n        /* \"#utility.yul\":2722:2755   */\n      tag_331\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":2622:2761   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2767:3241   */\n    tag_39:\n        /* \"#utility.yul\":2835:2841   */\n      0x00\n        /* \"#utility.yul\":2843:2849   */\n      0x00\n        /* \"#utility.yul\":2892:2894   */\n      0x40\n        /* \"#utility.yul\":2880:2889   */\n      dup4\n        /* \"#utility.yul\":2871:2878   */\n      dup6\n        /* \"#utility.yul\":2867:2890   */\n      sub\n        /* \"#utility.yul\":2863:2895   */\n      slt\n        /* \"#utility.yul\":2860:2979   */\n      iszero\n      tag_399\n      jumpi\n        /* \"#utility.yul\":2898:2977   */\n      tag_400\n      tag_319\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":2860:2979   */\n    tag_399:\n        /* \"#utility.yul\":3018:3019   */\n      0x00\n        /* \"#utility.yul\":3043:3096   */\n      tag_401\n        /* \"#utility.yul\":3088:3095   */\n      dup6\n        /* \"#utility.yul\":3079:3085   */\n      dup3\n        /* \"#utility.yul\":3068:3077   */\n      dup7\n        /* \"#utility.yul\":3064:3086   */\n      add\n        /* \"#utility.yul\":3043:3096   */\n      tag_332\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":3033:3096   */\n      swap3\n      pop\n        /* \"#utility.yul\":2989:3106   */\n      pop\n        /* \"#utility.yul\":3145:3147   */\n      0x20\n        /* \"#utility.yul\":3171:3224   */\n      tag_402\n        /* \"#utility.yul\":3216:3223   */\n      dup6\n        /* \"#utility.yul\":3207:3213   */\n      dup3\n        /* \"#utility.yul\":3196:3205   */\n      dup7\n        /* \"#utility.yul\":3192:3214   */\n      add\n        /* \"#utility.yul\":3171:3224   */\n      tag_323\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":3161:3224   */\n      swap2\n      pop\n        /* \"#utility.yul\":3116:3234   */\n      pop\n        /* \"#utility.yul\":2767:3241   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3247:3337   */\n    tag_333:\n        /* \"#utility.yul\":3281:3288   */\n      0x00\n        /* \"#utility.yul\":3324:3329   */\n      dup2\n        /* \"#utility.yul\":3317:3330   */\n      iszero\n        /* \"#utility.yul\":3310:3331   */\n      iszero\n        /* \"#utility.yul\":3299:3331   */\n      swap1\n      pop\n        /* \"#utility.yul\":3247:3337   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3343:3452   */\n    tag_334:\n        /* \"#utility.yul\":3424:3445   */\n      tag_405\n        /* \"#utility.yul\":3439:3444   */\n      dup2\n        /* \"#utility.yul\":3424:3445   */\n      tag_333\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":3419:3422   */\n      dup3\n        /* \"#utility.yul\":3412:3446   */\n      mstore\n        /* \"#utility.yul\":3343:3452   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3458:3668   */\n    tag_42:\n        /* \"#utility.yul\":3545:3549   */\n      0x00\n        /* \"#utility.yul\":3583:3585   */\n      0x20\n        /* \"#utility.yul\":3572:3581   */\n      dup3\n        /* \"#utility.yul\":3568:3586   */\n      add\n        /* \"#utility.yul\":3560:3586   */\n      swap1\n      pop\n        /* \"#utility.yul\":3596:3661   */\n      tag_407\n        /* \"#utility.yul\":3658:3659   */\n      0x00\n        /* \"#utility.yul\":3647:3656   */\n      dup4\n        /* \"#utility.yul\":3643:3660   */\n      add\n        /* \"#utility.yul\":3634:3640   */\n      dup5\n        /* \"#utility.yul\":3596:3661   */\n      tag_334\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":3458:3668   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3674:4003   */\n    tag_45:\n        /* \"#utility.yul\":3733:3739   */\n      0x00\n        /* \"#utility.yul\":3782:3784   */\n      0x20\n        /* \"#utility.yul\":3770:3779   */\n      dup3\n        /* \"#utility.yul\":3761:3768   */\n      dup5\n        /* \"#utility.yul\":3757:3780   */\n      sub\n        /* \"#utility.yul\":3753:3785   */\n      slt\n        /* \"#utility.yul\":3750:3869   */\n      iszero\n      tag_409\n      jumpi\n        /* \"#utility.yul\":3788:3867   */\n      tag_410\n      tag_319\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":3750:3869   */\n    tag_409:\n        /* \"#utility.yul\":3908:3909   */\n      0x00\n        /* \"#utility.yul\":3933:3986   */\n      tag_411\n        /* \"#utility.yul\":3978:3985   */\n      dup5\n        /* \"#utility.yul\":3969:3975   */\n      dup3\n        /* \"#utility.yul\":3958:3967   */\n      dup6\n        /* \"#utility.yul\":3954:3976   */\n      add\n        /* \"#utility.yul\":3933:3986   */\n      tag_332\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":3923:3986   */\n      swap2\n      pop\n        /* \"#utility.yul\":3879:3996   */\n      pop\n        /* \"#utility.yul\":3674:4003   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4009:4127   */\n    tag_335:\n        /* \"#utility.yul\":4096:4120   */\n      tag_413\n        /* \"#utility.yul\":4114:4119   */\n      dup2\n        /* \"#utility.yul\":4096:4120   */\n      tag_321\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":4091:4094   */\n      dup3\n        /* \"#utility.yul\":4084:4121   */\n      mstore\n        /* \"#utility.yul\":4009:4127   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4133:4355   */\n    tag_48:\n        /* \"#utility.yul\":4226:4230   */\n      0x00\n        /* \"#utility.yul\":4264:4266   */\n      0x20\n        /* \"#utility.yul\":4253:4262   */\n      dup3\n        /* \"#utility.yul\":4249:4267   */\n      add\n        /* \"#utility.yul\":4241:4267   */\n      swap1\n      pop\n        /* \"#utility.yul\":4277:4348   */\n      tag_415\n        /* \"#utility.yul\":4345:4346   */\n      0x00\n        /* \"#utility.yul\":4334:4343   */\n      dup4\n        /* \"#utility.yul\":4330:4347   */\n      add\n        /* \"#utility.yul\":4321:4327   */\n      dup5\n        /* \"#utility.yul\":4277:4348   */\n      tag_335\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":4133:4355   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4361:4980   */\n    tag_54:\n        /* \"#utility.yul\":4438:4444   */\n      0x00\n        /* \"#utility.yul\":4446:4452   */\n      0x00\n        /* \"#utility.yul\":4454:4460   */\n      0x00\n        /* \"#utility.yul\":4503:4505   */\n      0x60\n        /* \"#utility.yul\":4491:4500   */\n      dup5\n        /* \"#utility.yul\":4482:4489   */\n      dup7\n        /* \"#utility.yul\":4478:4501   */\n      sub\n        /* \"#utility.yul\":4474:4506   */\n      slt\n        /* \"#utility.yul\":4471:4590   */\n      iszero\n      tag_417\n      jumpi\n        /* \"#utility.yul\":4509:4588   */\n      tag_418\n      tag_319\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":4471:4590   */\n    tag_417:\n        /* \"#utility.yul\":4629:4630   */\n      0x00\n        /* \"#utility.yul\":4654:4707   */\n      tag_419\n        /* \"#utility.yul\":4699:4706   */\n      dup7\n        /* \"#utility.yul\":4690:4696   */\n      dup3\n        /* \"#utility.yul\":4679:4688   */\n      dup8\n        /* \"#utility.yul\":4675:4697   */\n      add\n        /* \"#utility.yul\":4654:4707   */\n      tag_332\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":4644:4707   */\n      swap4\n      pop\n        /* \"#utility.yul\":4600:4717   */\n      pop\n        /* \"#utility.yul\":4756:4758   */\n      0x20\n        /* \"#utility.yul\":4782:4835   */\n      tag_420\n        /* \"#utility.yul\":4827:4834   */\n      dup7\n        /* \"#utility.yul\":4818:4824   */\n      dup3\n        /* \"#utility.yul\":4807:4816   */\n      dup8\n        /* \"#utility.yul\":4803:4825   */\n      add\n        /* \"#utility.yul\":4782:4835   */\n      tag_332\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":4772:4835   */\n      swap3\n      pop\n        /* \"#utility.yul\":4727:4845   */\n      pop\n        /* \"#utility.yul\":4884:4886   */\n      0x40\n        /* \"#utility.yul\":4910:4963   */\n      tag_421\n        /* \"#utility.yul\":4955:4962   */\n      dup7\n        /* \"#utility.yul\":4946:4952   */\n      dup3\n        /* \"#utility.yul\":4935:4944   */\n      dup8\n        /* \"#utility.yul\":4931:4953   */\n      add\n        /* \"#utility.yul\":4910:4963   */\n      tag_323\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":4900:4963   */\n      swap2\n      pop\n        /* \"#utility.yul\":4855:4973   */\n      pop\n        /* \"#utility.yul\":4361:4980   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4986:5072   */\n    tag_336:\n        /* \"#utility.yul\":5021:5028   */\n      0x00\n        /* \"#utility.yul\":5061:5065   */\n      0xff\n        /* \"#utility.yul\":5054:5059   */\n      dup3\n        /* \"#utility.yul\":5050:5066   */\n      and\n        /* \"#utility.yul\":5039:5066   */\n      swap1\n      pop\n        /* \"#utility.yul\":4986:5072   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5078:5190   */\n    tag_337:\n        /* \"#utility.yul\":5161:5183   */\n      tag_424\n        /* \"#utility.yul\":5177:5182   */\n      dup2\n        /* \"#utility.yul\":5161:5183   */\n      tag_336\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":5156:5159   */\n      dup3\n        /* \"#utility.yul\":5149:5184   */\n      mstore\n        /* \"#utility.yul\":5078:5190   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5196:5410   */\n    tag_60:\n        /* \"#utility.yul\":5285:5289   */\n      0x00\n        /* \"#utility.yul\":5323:5325   */\n      0x20\n        /* \"#utility.yul\":5312:5321   */\n      dup3\n        /* \"#utility.yul\":5308:5326   */\n      add\n        /* \"#utility.yul\":5300:5326   */\n      swap1\n      pop\n        /* \"#utility.yul\":5336:5403   */\n      tag_426\n        /* \"#utility.yul\":5400:5401   */\n      0x00\n        /* \"#utility.yul\":5389:5398   */\n      dup4\n        /* \"#utility.yul\":5385:5402   */\n      add\n        /* \"#utility.yul\":5376:5382   */\n      dup5\n        /* \"#utility.yul\":5336:5403   */\n      tag_337\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":5196:5410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5416:5534   */\n    tag_338:\n        /* \"#utility.yul\":5503:5527   */\n      tag_428\n        /* \"#utility.yul\":5521:5526   */\n      dup2\n        /* \"#utility.yul\":5503:5527   */\n      tag_330\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":5498:5501   */\n      dup3\n        /* \"#utility.yul\":5491:5528   */\n      mstore\n        /* \"#utility.yul\":5416:5534   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5540:5762   */\n    tag_76:\n        /* \"#utility.yul\":5633:5637   */\n      0x00\n        /* \"#utility.yul\":5671:5673   */\n      0x20\n        /* \"#utility.yul\":5660:5669   */\n      dup3\n        /* \"#utility.yul\":5656:5674   */\n      add\n        /* \"#utility.yul\":5648:5674   */\n      swap1\n      pop\n        /* \"#utility.yul\":5684:5755   */\n      tag_430\n        /* \"#utility.yul\":5752:5753   */\n      0x00\n        /* \"#utility.yul\":5741:5750   */\n      dup4\n        /* \"#utility.yul\":5737:5754   */\n      add\n        /* \"#utility.yul\":5728:5734   */\n      dup5\n        /* \"#utility.yul\":5684:5755   */\n      tag_338\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":5540:5762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5768:5828   */\n    tag_339:\n        /* \"#utility.yul\":5796:5799   */\n      0x00\n        /* \"#utility.yul\":5817:5822   */\n      dup2\n        /* \"#utility.yul\":5810:5822   */\n      swap1\n      pop\n        /* \"#utility.yul\":5768:5828   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5834:5976   */\n    tag_340:\n        /* \"#utility.yul\":5884:5893   */\n      0x00\n        /* \"#utility.yul\":5917:5970   */\n      tag_433\n        /* \"#utility.yul\":5935:5969   */\n      tag_434\n        /* \"#utility.yul\":5944:5968   */\n      tag_435\n        /* \"#utility.yul\":5962:5967   */\n      dup5\n        /* \"#utility.yul\":5944:5968   */\n      tag_329\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":5935:5969   */\n      tag_339\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":5917:5970   */\n      tag_329\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":5904:5970   */\n      swap1\n      pop\n        /* \"#utility.yul\":5834:5976   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5982:6108   */\n    tag_341:\n        /* \"#utility.yul\":6032:6041   */\n      0x00\n        /* \"#utility.yul\":6065:6102   */\n      tag_437\n        /* \"#utility.yul\":6096:6101   */\n      dup3\n        /* \"#utility.yul\":6065:6102   */\n      tag_340\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":6052:6102   */\n      swap1\n      pop\n        /* \"#utility.yul\":5982:6108   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6114:6254   */\n    tag_342:\n        /* \"#utility.yul\":6178:6187   */\n      0x00\n        /* \"#utility.yul\":6211:6248   */\n      tag_439\n        /* \"#utility.yul\":6242:6247   */\n      dup3\n        /* \"#utility.yul\":6211:6248   */\n      tag_341\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":6198:6248   */\n      swap1\n      pop\n        /* \"#utility.yul\":6114:6254   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6260:6419   */\n    tag_343:\n        /* \"#utility.yul\":6361:6412   */\n      tag_441\n        /* \"#utility.yul\":6406:6411   */\n      dup2\n        /* \"#utility.yul\":6361:6412   */\n      tag_342\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":6356:6359   */\n      dup3\n        /* \"#utility.yul\":6349:6413   */\n      mstore\n        /* \"#utility.yul\":6260:6419   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6425:6675   */\n    tag_88:\n        /* \"#utility.yul\":6532:6536   */\n      0x00\n        /* \"#utility.yul\":6570:6572   */\n      0x20\n        /* \"#utility.yul\":6559:6568   */\n      dup3\n        /* \"#utility.yul\":6555:6573   */\n      add\n        /* \"#utility.yul\":6547:6573   */\n      swap1\n      pop\n        /* \"#utility.yul\":6583:6668   */\n      tag_443\n        /* \"#utility.yul\":6665:6666   */\n      0x00\n        /* \"#utility.yul\":6654:6663   */\n      dup4\n        /* \"#utility.yul\":6650:6667   */\n      add\n        /* \"#utility.yul\":6641:6647   */\n      dup5\n        /* \"#utility.yul\":6583:6668   */\n      tag_343\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":6425:6675   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6681:6822   */\n    tag_344:\n        /* \"#utility.yul\":6746:6755   */\n      0x00\n        /* \"#utility.yul\":6779:6816   */\n      tag_445\n        /* \"#utility.yul\":6810:6815   */\n      dup3\n        /* \"#utility.yul\":6779:6816   */\n      tag_341\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":6766:6816   */\n      swap1\n      pop\n        /* \"#utility.yul\":6681:6822   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6828:6989   */\n    tag_345:\n        /* \"#utility.yul\":6930:6982   */\n      tag_447\n        /* \"#utility.yul\":6976:6981   */\n      dup2\n        /* \"#utility.yul\":6930:6982   */\n      tag_344\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":6925:6928   */\n      dup3\n        /* \"#utility.yul\":6918:6983   */\n      mstore\n        /* \"#utility.yul\":6828:6989   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6995:7247   */\n    tag_96:\n        /* \"#utility.yul\":7103:7107   */\n      0x00\n        /* \"#utility.yul\":7141:7143   */\n      0x20\n        /* \"#utility.yul\":7130:7139   */\n      dup3\n        /* \"#utility.yul\":7126:7144   */\n      add\n        /* \"#utility.yul\":7118:7144   */\n      swap1\n      pop\n        /* \"#utility.yul\":7154:7240   */\n      tag_449\n        /* \"#utility.yul\":7237:7238   */\n      0x00\n        /* \"#utility.yul\":7226:7235   */\n      dup4\n        /* \"#utility.yul\":7222:7239   */\n      add\n        /* \"#utility.yul\":7213:7219   */\n      dup5\n        /* \"#utility.yul\":7154:7240   */\n      tag_345\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":6995:7247   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7253:7727   */\n    tag_108:\n        /* \"#utility.yul\":7321:7327   */\n      0x00\n        /* \"#utility.yul\":7329:7335   */\n      0x00\n        /* \"#utility.yul\":7378:7380   */\n      0x40\n        /* \"#utility.yul\":7366:7375   */\n      dup4\n        /* \"#utility.yul\":7357:7364   */\n      dup6\n        /* \"#utility.yul\":7353:7376   */\n      sub\n        /* \"#utility.yul\":7349:7381   */\n      slt\n        /* \"#utility.yul\":7346:7465   */\n      iszero\n      tag_451\n      jumpi\n        /* \"#utility.yul\":7384:7463   */\n      tag_452\n      tag_319\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":7346:7465   */\n    tag_451:\n        /* \"#utility.yul\":7504:7505   */\n      0x00\n        /* \"#utility.yul\":7529:7582   */\n      tag_453\n        /* \"#utility.yul\":7574:7581   */\n      dup6\n        /* \"#utility.yul\":7565:7571   */\n      dup3\n        /* \"#utility.yul\":7554:7563   */\n      dup7\n        /* \"#utility.yul\":7550:7572   */\n      add\n        /* \"#utility.yul\":7529:7582   */\n      tag_332\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":7519:7582   */\n      swap3\n      pop\n        /* \"#utility.yul\":7475:7592   */\n      pop\n        /* \"#utility.yul\":7631:7633   */\n      0x20\n        /* \"#utility.yul\":7657:7710   */\n      tag_454\n        /* \"#utility.yul\":7702:7709   */\n      dup6\n        /* \"#utility.yul\":7693:7699   */\n      dup3\n        /* \"#utility.yul\":7682:7691   */\n      dup7\n        /* \"#utility.yul\":7678:7700   */\n      add\n        /* \"#utility.yul\":7657:7710   */\n      tag_332\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":7647:7710   */\n      swap2\n      pop\n        /* \"#utility.yul\":7602:7720   */\n      pop\n        /* \"#utility.yul\":7253:7727   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7733:7965   */\n    tag_346:\n        /* \"#utility.yul\":7873:7907   */\n      0x436f6c6c61746572616c697a6174696f6e20726174696f206d75737420626520\n        /* \"#utility.yul\":7869:7870   */\n      0x00\n        /* \"#utility.yul\":7861:7867   */\n      dup3\n        /* \"#utility.yul\":7857:7871   */\n      add\n        /* \"#utility.yul\":7850:7908   */\n      mstore\n        /* \"#utility.yul\":7942:7957   */\n      0x6174206c65617374203130302500000000000000000000000000000000000000\n        /* \"#utility.yul\":7937:7939   */\n      0x20\n        /* \"#utility.yul\":7929:7935   */\n      dup3\n        /* \"#utility.yul\":7925:7940   */\n      add\n        /* \"#utility.yul\":7918:7958   */\n      mstore\n        /* \"#utility.yul\":7733:7965   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7971:8337   */\n    tag_347:\n        /* \"#utility.yul\":8113:8116   */\n      0x00\n        /* \"#utility.yul\":8134:8201   */\n      tag_457\n        /* \"#utility.yul\":8198:8200   */\n      0x2d\n        /* \"#utility.yul\":8193:8196   */\n      dup4\n        /* \"#utility.yul\":8134:8201   */\n      tag_325\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":8127:8201   */\n      swap2\n      pop\n        /* \"#utility.yul\":8210:8303   */\n      tag_458\n        /* \"#utility.yul\":8299:8302   */\n      dup3\n        /* \"#utility.yul\":8210:8303   */\n      tag_346\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":8328:8330   */\n      0x40\n        /* \"#utility.yul\":8323:8326   */\n      dup3\n        /* \"#utility.yul\":8319:8331   */\n      add\n        /* \"#utility.yul\":8312:8331   */\n      swap1\n      pop\n        /* \"#utility.yul\":7971:8337   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8343:8762   */\n    tag_124:\n        /* \"#utility.yul\":8509:8513   */\n      0x00\n        /* \"#utility.yul\":8547:8549   */\n      0x20\n        /* \"#utility.yul\":8536:8545   */\n      dup3\n        /* \"#utility.yul\":8532:8550   */\n      add\n        /* \"#utility.yul\":8524:8550   */\n      swap1\n      pop\n        /* \"#utility.yul\":8596:8605   */\n      dup2\n        /* \"#utility.yul\":8590:8594   */\n      dup2\n        /* \"#utility.yul\":8586:8606   */\n      sub\n        /* \"#utility.yul\":8582:8583   */\n      0x00\n        /* \"#utility.yul\":8571:8580   */\n      dup4\n        /* \"#utility.yul\":8567:8584   */\n      add\n        /* \"#utility.yul\":8560:8607   */\n      mstore\n        /* \"#utility.yul\":8624:8755   */\n      tag_460\n        /* \"#utility.yul\":8750:8754   */\n      dup2\n        /* \"#utility.yul\":8624:8755   */\n      tag_347\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":8616:8755   */\n      swap1\n      pop\n        /* \"#utility.yul\":8343:8762   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8768:8948   */\n    tag_348:\n        /* \"#utility.yul\":8816:8893   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8813:8814   */\n      0x00\n        /* \"#utility.yul\":8806:8894   */\n      mstore\n        /* \"#utility.yul\":8913:8917   */\n      0x22\n        /* \"#utility.yul\":8910:8911   */\n      0x04\n        /* \"#utility.yul\":8903:8918   */\n      mstore\n        /* \"#utility.yul\":8937:8941   */\n      0x24\n        /* \"#utility.yul\":8934:8935   */\n      0x00\n        /* \"#utility.yul\":8927:8942   */\n      revert\n        /* \"#utility.yul\":8954:9274   */\n    tag_127:\n        /* \"#utility.yul\":8998:9004   */\n      0x00\n        /* \"#utility.yul\":9035:9036   */\n      0x02\n        /* \"#utility.yul\":9029:9033   */\n      dup3\n        /* \"#utility.yul\":9025:9037   */\n      div\n        /* \"#utility.yul\":9015:9037   */\n      swap1\n      pop\n        /* \"#utility.yul\":9082:9083   */\n      0x01\n        /* \"#utility.yul\":9076:9080   */\n      dup3\n        /* \"#utility.yul\":9072:9084   */\n      and\n        /* \"#utility.yul\":9103:9121   */\n      dup1\n        /* \"#utility.yul\":9093:9174   */\n      tag_463\n      jumpi\n        /* \"#utility.yul\":9159:9163   */\n      0x7f\n        /* \"#utility.yul\":9151:9157   */\n      dup3\n        /* \"#utility.yul\":9147:9164   */\n      and\n        /* \"#utility.yul\":9137:9164   */\n      swap2\n      pop\n        /* \"#utility.yul\":9093:9174   */\n    tag_463:\n        /* \"#utility.yul\":9221:9223   */\n      0x20\n        /* \"#utility.yul\":9213:9219   */\n      dup3\n        /* \"#utility.yul\":9210:9224   */\n      lt\n        /* \"#utility.yul\":9190:9208   */\n      dup2\n        /* \"#utility.yul\":9187:9225   */\n      sub\n        /* \"#utility.yul\":9184:9268   */\n      tag_464\n      jumpi\n        /* \"#utility.yul\":9240:9258   */\n      tag_465\n      tag_348\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":9184:9268   */\n    tag_464:\n        /* \"#utility.yul\":9005:9274   */\n      pop\n        /* \"#utility.yul\":8954:9274   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9280:9448   */\n    tag_349:\n        /* \"#utility.yul\":9420:9440   */\n      0x416d6f756e74206d757374206265203e20300000000000000000000000000000\n        /* \"#utility.yul\":9416:9417   */\n      0x00\n        /* \"#utility.yul\":9408:9414   */\n      dup3\n        /* \"#utility.yul\":9404:9418   */\n      add\n        /* \"#utility.yul\":9397:9441   */\n      mstore\n        /* \"#utility.yul\":9280:9448   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9454:9820   */\n    tag_350:\n        /* \"#utility.yul\":9596:9599   */\n      0x00\n        /* \"#utility.yul\":9617:9684   */\n      tag_468\n        /* \"#utility.yul\":9681:9683   */\n      0x12\n        /* \"#utility.yul\":9676:9679   */\n      dup4\n        /* \"#utility.yul\":9617:9684   */\n      tag_325\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":9610:9684   */\n      swap2\n      pop\n        /* \"#utility.yul\":9693:9786   */\n      tag_469\n        /* \"#utility.yul\":9782:9785   */\n      dup3\n        /* \"#utility.yul\":9693:9786   */\n      tag_349\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":9811:9813   */\n      0x20\n        /* \"#utility.yul\":9806:9809   */\n      dup3\n        /* \"#utility.yul\":9802:9814   */\n      add\n        /* \"#utility.yul\":9795:9814   */\n      swap1\n      pop\n        /* \"#utility.yul\":9454:9820   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9826:10245   */\n    tag_151:\n        /* \"#utility.yul\":9992:9996   */\n      0x00\n        /* \"#utility.yul\":10030:10032   */\n      0x20\n        /* \"#utility.yul\":10019:10028   */\n      dup3\n        /* \"#utility.yul\":10015:10033   */\n      add\n        /* \"#utility.yul\":10007:10033   */\n      swap1\n      pop\n        /* \"#utility.yul\":10079:10088   */\n      dup2\n        /* \"#utility.yul\":10073:10077   */\n      dup2\n        /* \"#utility.yul\":10069:10089   */\n      sub\n        /* \"#utility.yul\":10065:10066   */\n      0x00\n        /* \"#utility.yul\":10054:10063   */\n      dup4\n        /* \"#utility.yul\":10050:10067   */\n      add\n        /* \"#utility.yul\":10043:10090   */\n      mstore\n        /* \"#utility.yul\":10107:10238   */\n      tag_471\n        /* \"#utility.yul\":10233:10237   */\n      dup2\n        /* \"#utility.yul\":10107:10238   */\n      tag_350\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":10099:10238   */\n      swap1\n      pop\n        /* \"#utility.yul\":9826:10245   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10251:10420   */\n    tag_351:\n        /* \"#utility.yul\":10391:10412   */\n      0x416d6f756e742065786365656473206465627400000000000000000000000000\n        /* \"#utility.yul\":10387:10388   */\n      0x00\n        /* \"#utility.yul\":10379:10385   */\n      dup3\n        /* \"#utility.yul\":10375:10389   */\n      add\n        /* \"#utility.yul\":10368:10413   */\n      mstore\n        /* \"#utility.yul\":10251:10420   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10426:10792   */\n    tag_352:\n        /* \"#utility.yul\":10568:10571   */\n      0x00\n        /* \"#utility.yul\":10589:10656   */\n      tag_474\n        /* \"#utility.yul\":10653:10655   */\n      0x13\n        /* \"#utility.yul\":10648:10651   */\n      dup4\n        /* \"#utility.yul\":10589:10656   */\n      tag_325\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":10582:10656   */\n      swap2\n      pop\n        /* \"#utility.yul\":10665:10758   */\n      tag_475\n        /* \"#utility.yul\":10754:10757   */\n      dup3\n        /* \"#utility.yul\":10665:10758   */\n      tag_351\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":10783:10785   */\n      0x20\n        /* \"#utility.yul\":10778:10781   */\n      dup3\n        /* \"#utility.yul\":10774:10786   */\n      add\n        /* \"#utility.yul\":10767:10786   */\n      swap1\n      pop\n        /* \"#utility.yul\":10426:10792   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10798:11217   */\n    tag_154:\n        /* \"#utility.yul\":10964:10968   */\n      0x00\n        /* \"#utility.yul\":11002:11004   */\n      0x20\n        /* \"#utility.yul\":10991:11000   */\n      dup3\n        /* \"#utility.yul\":10987:11005   */\n      add\n        /* \"#utility.yul\":10979:11005   */\n      swap1\n      pop\n        /* \"#utility.yul\":11051:11060   */\n      dup2\n        /* \"#utility.yul\":11045:11049   */\n      dup2\n        /* \"#utility.yul\":11041:11061   */\n      sub\n        /* \"#utility.yul\":11037:11038   */\n      0x00\n        /* \"#utility.yul\":11026:11035   */\n      dup4\n        /* \"#utility.yul\":11022:11039   */\n      add\n        /* \"#utility.yul\":11015:11062   */\n      mstore\n        /* \"#utility.yul\":11079:11210   */\n      tag_477\n        /* \"#utility.yul\":11205:11209   */\n      dup2\n        /* \"#utility.yul\":11079:11210   */\n      tag_352\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":11071:11210   */\n      swap1\n      pop\n        /* \"#utility.yul\":10798:11217   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11223:11403   */\n    tag_353:\n        /* \"#utility.yul\":11271:11348   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11268:11269   */\n      0x00\n        /* \"#utility.yul\":11261:11349   */\n      mstore\n        /* \"#utility.yul\":11368:11372   */\n      0x11\n        /* \"#utility.yul\":11365:11366   */\n      0x04\n        /* \"#utility.yul\":11358:11373   */\n      mstore\n        /* \"#utility.yul\":11392:11396   */\n      0x24\n        /* \"#utility.yul\":11389:11390   */\n      0x00\n        /* \"#utility.yul\":11382:11397   */\n      revert\n        /* \"#utility.yul\":11409:11603   */\n    tag_156:\n        /* \"#utility.yul\":11449:11453   */\n      0x00\n        /* \"#utility.yul\":11469:11489   */\n      tag_480\n        /* \"#utility.yul\":11487:11488   */\n      dup3\n        /* \"#utility.yul\":11469:11489   */\n      tag_321\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":11464:11489   */\n      swap2\n      pop\n        /* \"#utility.yul\":11503:11523   */\n      tag_481\n        /* \"#utility.yul\":11521:11522   */\n      dup4\n        /* \"#utility.yul\":11503:11523   */\n      tag_321\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":11498:11523   */\n      swap3\n      pop\n        /* \"#utility.yul\":11547:11548   */\n      dup3\n        /* \"#utility.yul\":11544:11545   */\n      dup3\n        /* \"#utility.yul\":11540:11549   */\n      sub\n        /* \"#utility.yul\":11532:11549   */\n      swap1\n      pop\n        /* \"#utility.yul\":11571:11572   */\n      dup2\n        /* \"#utility.yul\":11565:11569   */\n      dup2\n        /* \"#utility.yul\":11562:11573   */\n      gt\n        /* \"#utility.yul\":11559:11596   */\n      iszero\n      tag_482\n      jumpi\n        /* \"#utility.yul\":11576:11594   */\n      tag_483\n      tag_353\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":11559:11596   */\n    tag_482:\n        /* \"#utility.yul\":11409:11603   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11609:11790   */\n    tag_354:\n        /* \"#utility.yul\":11749:11782   */\n      0x496e73756666696369656e7420636f6c6c61746572616c2062616c616e636500\n        /* \"#utility.yul\":11745:11746   */\n      0x00\n        /* \"#utility.yul\":11737:11743   */\n      dup3\n        /* \"#utility.yul\":11733:11747   */\n      add\n        /* \"#utility.yul\":11726:11783   */\n      mstore\n        /* \"#utility.yul\":11609:11790   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11796:12162   */\n    tag_355:\n        /* \"#utility.yul\":11938:11941   */\n      0x00\n        /* \"#utility.yul\":11959:12026   */\n      tag_486\n        /* \"#utility.yul\":12023:12025   */\n      0x1f\n        /* \"#utility.yul\":12018:12021   */\n      dup4\n        /* \"#utility.yul\":11959:12026   */\n      tag_325\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":11952:12026   */\n      swap2\n      pop\n        /* \"#utility.yul\":12035:12128   */\n      tag_487\n        /* \"#utility.yul\":12124:12127   */\n      dup3\n        /* \"#utility.yul\":12035:12128   */\n      tag_354\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":12153:12155   */\n      0x20\n        /* \"#utility.yul\":12148:12151   */\n      dup3\n        /* \"#utility.yul\":12144:12156   */\n      add\n        /* \"#utility.yul\":12137:12156   */\n      swap1\n      pop\n        /* \"#utility.yul\":11796:12162   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12168:12587   */\n    tag_169:\n        /* \"#utility.yul\":12334:12338   */\n      0x00\n        /* \"#utility.yul\":12372:12374   */\n      0x20\n        /* \"#utility.yul\":12361:12370   */\n      dup3\n        /* \"#utility.yul\":12357:12375   */\n      add\n        /* \"#utility.yul\":12349:12375   */\n      swap1\n      pop\n        /* \"#utility.yul\":12421:12430   */\n      dup2\n        /* \"#utility.yul\":12415:12419   */\n      dup2\n        /* \"#utility.yul\":12411:12431   */\n      sub\n        /* \"#utility.yul\":12407:12408   */\n      0x00\n        /* \"#utility.yul\":12396:12405   */\n      dup4\n        /* \"#utility.yul\":12392:12409   */\n      add\n        /* \"#utility.yul\":12385:12432   */\n      mstore\n        /* \"#utility.yul\":12449:12580   */\n      tag_489\n        /* \"#utility.yul\":12575:12579   */\n      dup2\n        /* \"#utility.yul\":12449:12580   */\n      tag_355\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":12441:12580   */\n      swap1\n      pop\n        /* \"#utility.yul\":12168:12587   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12593:12827   */\n    tag_356:\n        /* \"#utility.yul\":12733:12767   */\n      0x5769746864726177616c20776f756c642062726561636820636f6c6c61746572\n        /* \"#utility.yul\":12729:12730   */\n      0x00\n        /* \"#utility.yul\":12721:12727   */\n      dup3\n        /* \"#utility.yul\":12717:12731   */\n      add\n        /* \"#utility.yul\":12710:12768   */\n      mstore\n        /* \"#utility.yul\":12802:12819   */\n      0x616c697a6174696f6e20726174696f0000000000000000000000000000000000\n        /* \"#utility.yul\":12797:12799   */\n      0x20\n        /* \"#utility.yul\":12789:12795   */\n      dup3\n        /* \"#utility.yul\":12785:12800   */\n      add\n        /* \"#utility.yul\":12778:12820   */\n      mstore\n        /* \"#utility.yul\":12593:12827   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12833:13199   */\n    tag_357:\n        /* \"#utility.yul\":12975:12978   */\n      0x00\n        /* \"#utility.yul\":12996:13063   */\n      tag_492\n        /* \"#utility.yul\":13060:13062   */\n      0x2f\n        /* \"#utility.yul\":13055:13058   */\n      dup4\n        /* \"#utility.yul\":12996:13063   */\n      tag_325\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":12989:13063   */\n      swap2\n      pop\n        /* \"#utility.yul\":13072:13165   */\n      tag_493\n        /* \"#utility.yul\":13161:13164   */\n      dup3\n        /* \"#utility.yul\":13072:13165   */\n      tag_356\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":13190:13192   */\n      0x40\n        /* \"#utility.yul\":13185:13188   */\n      dup3\n        /* \"#utility.yul\":13181:13193   */\n      add\n        /* \"#utility.yul\":13174:13193   */\n      swap1\n      pop\n        /* \"#utility.yul\":12833:13199   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13205:13624   */\n    tag_175:\n        /* \"#utility.yul\":13371:13375   */\n      0x00\n        /* \"#utility.yul\":13409:13411   */\n      0x20\n        /* \"#utility.yul\":13398:13407   */\n      dup3\n        /* \"#utility.yul\":13394:13412   */\n      add\n        /* \"#utility.yul\":13386:13412   */\n      swap1\n      pop\n        /* \"#utility.yul\":13458:13467   */\n      dup2\n        /* \"#utility.yul\":13452:13456   */\n      dup2\n        /* \"#utility.yul\":13448:13468   */\n      sub\n        /* \"#utility.yul\":13444:13445   */\n      0x00\n        /* \"#utility.yul\":13433:13442   */\n      dup4\n        /* \"#utility.yul\":13429:13446   */\n      add\n        /* \"#utility.yul\":13422:13469   */\n      mstore\n        /* \"#utility.yul\":13486:13617   */\n      tag_495\n        /* \"#utility.yul\":13612:13616   */\n      dup2\n        /* \"#utility.yul\":13486:13617   */\n      tag_357\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":13478:13617   */\n      swap1\n      pop\n        /* \"#utility.yul\":13205:13624   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13630:13804   */\n    tag_358:\n        /* \"#utility.yul\":13770:13796   */\n      0x4e6f207661756c742065786973747320666f7220757365720000000000000000\n        /* \"#utility.yul\":13766:13767   */\n      0x00\n        /* \"#utility.yul\":13758:13764   */\n      dup3\n        /* \"#utility.yul\":13754:13768   */\n      add\n        /* \"#utility.yul\":13747:13797   */\n      mstore\n        /* \"#utility.yul\":13630:13804   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13810:14176   */\n    tag_359:\n        /* \"#utility.yul\":13952:13955   */\n      0x00\n        /* \"#utility.yul\":13973:14040   */\n      tag_498\n        /* \"#utility.yul\":14037:14039   */\n      0x18\n        /* \"#utility.yul\":14032:14035   */\n      dup4\n        /* \"#utility.yul\":13973:14040   */\n      tag_325\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":13966:14040   */\n      swap2\n      pop\n        /* \"#utility.yul\":14049:14142   */\n      tag_499\n        /* \"#utility.yul\":14138:14141   */\n      dup3\n        /* \"#utility.yul\":14049:14142   */\n      tag_358\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":14167:14169   */\n      0x20\n        /* \"#utility.yul\":14162:14165   */\n      dup3\n        /* \"#utility.yul\":14158:14170   */\n      add\n        /* \"#utility.yul\":14151:14170   */\n      swap1\n      pop\n        /* \"#utility.yul\":13810:14176   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14182:14601   */\n    tag_178:\n        /* \"#utility.yul\":14348:14352   */\n      0x00\n        /* \"#utility.yul\":14386:14388   */\n      0x20\n        /* \"#utility.yul\":14375:14384   */\n      dup3\n        /* \"#utility.yul\":14371:14389   */\n      add\n        /* \"#utility.yul\":14363:14389   */\n      swap1\n      pop\n        /* \"#utility.yul\":14435:14444   */\n      dup2\n        /* \"#utility.yul\":14429:14433   */\n      dup2\n        /* \"#utility.yul\":14425:14445   */\n      sub\n        /* \"#utility.yul\":14421:14422   */\n      0x00\n        /* \"#utility.yul\":14410:14419   */\n      dup4\n        /* \"#utility.yul\":14406:14423   */\n      add\n        /* \"#utility.yul\":14399:14446   */\n      mstore\n        /* \"#utility.yul\":14463:14594   */\n      tag_501\n        /* \"#utility.yul\":14589:14593   */\n      dup2\n        /* \"#utility.yul\":14463:14594   */\n      tag_359\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":14455:14594   */\n      swap1\n      pop\n        /* \"#utility.yul\":14182:14601   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14607:14939   */\n    tag_180:\n        /* \"#utility.yul\":14728:14732   */\n      0x00\n        /* \"#utility.yul\":14766:14768   */\n      0x40\n        /* \"#utility.yul\":14755:14764   */\n      dup3\n        /* \"#utility.yul\":14751:14769   */\n      add\n        /* \"#utility.yul\":14743:14769   */\n      swap1\n      pop\n        /* \"#utility.yul\":14779:14850   */\n      tag_503\n        /* \"#utility.yul\":14847:14848   */\n      0x00\n        /* \"#utility.yul\":14836:14845   */\n      dup4\n        /* \"#utility.yul\":14832:14849   */\n      add\n        /* \"#utility.yul\":14823:14829   */\n      dup6\n        /* \"#utility.yul\":14779:14850   */\n      tag_338\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":14860:14932   */\n      tag_504\n        /* \"#utility.yul\":14928:14930   */\n      0x20\n        /* \"#utility.yul\":14917:14926   */\n      dup4\n        /* \"#utility.yul\":14913:14931   */\n      add\n        /* \"#utility.yul\":14904:14910   */\n      dup5\n        /* \"#utility.yul\":14860:14932   */\n      tag_335\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":14607:14939   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14945:15136   */\n    tag_212:\n        /* \"#utility.yul\":14985:14988   */\n      0x00\n        /* \"#utility.yul\":15004:15024   */\n      tag_506\n        /* \"#utility.yul\":15022:15023   */\n      dup3\n        /* \"#utility.yul\":15004:15024   */\n      tag_321\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":14999:15024   */\n      swap2\n      pop\n        /* \"#utility.yul\":15038:15058   */\n      tag_507\n        /* \"#utility.yul\":15056:15057   */\n      dup4\n        /* \"#utility.yul\":15038:15058   */\n      tag_321\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":15033:15058   */\n      swap3\n      pop\n        /* \"#utility.yul\":15081:15082   */\n      dup3\n        /* \"#utility.yul\":15078:15079   */\n      dup3\n        /* \"#utility.yul\":15074:15083   */\n      add\n        /* \"#utility.yul\":15067:15083   */\n      swap1\n      pop\n        /* \"#utility.yul\":15102:15105   */\n      dup1\n        /* \"#utility.yul\":15099:15100   */\n      dup3\n        /* \"#utility.yul\":15096:15106   */\n      gt\n        /* \"#utility.yul\":15093:15129   */\n      iszero\n      tag_508\n      jumpi\n        /* \"#utility.yul\":15109:15127   */\n      tag_509\n      tag_353\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":15093:15129   */\n    tag_508:\n        /* \"#utility.yul\":14945:15136   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15142:15372   */\n    tag_360:\n        /* \"#utility.yul\":15282:15316   */\n      0x496e73756666696369656e7420636f6c6c61746572616c20746f206d696e7420\n        /* \"#utility.yul\":15278:15279   */\n      0x00\n        /* \"#utility.yul\":15270:15276   */\n      dup3\n        /* \"#utility.yul\":15266:15280   */\n      add\n        /* \"#utility.yul\":15259:15317   */\n      mstore\n        /* \"#utility.yul\":15351:15364   */\n      0x7468617420616d6f756e74000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15346:15348   */\n      0x20\n        /* \"#utility.yul\":15338:15344   */\n      dup3\n        /* \"#utility.yul\":15334:15349   */\n      add\n        /* \"#utility.yul\":15327:15365   */\n      mstore\n        /* \"#utility.yul\":15142:15372   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15378:15744   */\n    tag_361:\n        /* \"#utility.yul\":15520:15523   */\n      0x00\n        /* \"#utility.yul\":15541:15608   */\n      tag_512\n        /* \"#utility.yul\":15605:15607   */\n      0x2b\n        /* \"#utility.yul\":15600:15603   */\n      dup4\n        /* \"#utility.yul\":15541:15608   */\n      tag_325\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":15534:15608   */\n      swap2\n      pop\n        /* \"#utility.yul\":15617:15710   */\n      tag_513\n        /* \"#utility.yul\":15706:15709   */\n      dup3\n        /* \"#utility.yul\":15617:15710   */\n      tag_360\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":15735:15737   */\n      0x40\n        /* \"#utility.yul\":15730:15733   */\n      dup3\n        /* \"#utility.yul\":15726:15738   */\n      add\n        /* \"#utility.yul\":15719:15738   */\n      swap1\n      pop\n        /* \"#utility.yul\":15378:15744   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15750:16169   */\n    tag_224:\n        /* \"#utility.yul\":15916:15920   */\n      0x00\n        /* \"#utility.yul\":15954:15956   */\n      0x20\n        /* \"#utility.yul\":15943:15952   */\n      dup3\n        /* \"#utility.yul\":15939:15957   */\n      add\n        /* \"#utility.yul\":15931:15957   */\n      swap1\n      pop\n        /* \"#utility.yul\":16003:16012   */\n      dup2\n        /* \"#utility.yul\":15997:16001   */\n      dup2\n        /* \"#utility.yul\":15993:16013   */\n      sub\n        /* \"#utility.yul\":15989:15990   */\n      0x00\n        /* \"#utility.yul\":15978:15987   */\n      dup4\n        /* \"#utility.yul\":15974:15991   */\n      add\n        /* \"#utility.yul\":15967:16014   */\n      mstore\n        /* \"#utility.yul\":16031:16162   */\n      tag_515\n        /* \"#utility.yul\":16157:16161   */\n      dup2\n        /* \"#utility.yul\":16031:16162   */\n      tag_361\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":16023:16162   */\n      swap1\n      pop\n        /* \"#utility.yul\":15750:16169   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16175:16585   */\n    tag_233:\n        /* \"#utility.yul\":16215:16222   */\n      0x00\n        /* \"#utility.yul\":16238:16258   */\n      tag_517\n        /* \"#utility.yul\":16256:16257   */\n      dup3\n        /* \"#utility.yul\":16238:16258   */\n      tag_321\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":16233:16258   */\n      swap2\n      pop\n        /* \"#utility.yul\":16272:16292   */\n      tag_518\n        /* \"#utility.yul\":16290:16291   */\n      dup4\n        /* \"#utility.yul\":16272:16292   */\n      tag_321\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":16267:16292   */\n      swap3\n      pop\n        /* \"#utility.yul\":16327:16328   */\n      dup3\n        /* \"#utility.yul\":16324:16325   */\n      dup3\n        /* \"#utility.yul\":16320:16329   */\n      mul\n        /* \"#utility.yul\":16349:16379   */\n      tag_519\n        /* \"#utility.yul\":16367:16378   */\n      dup2\n        /* \"#utility.yul\":16349:16379   */\n      tag_321\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":16338:16379   */\n      swap2\n      pop\n        /* \"#utility.yul\":16528:16529   */\n      dup3\n        /* \"#utility.yul\":16519:16526   */\n      dup3\n        /* \"#utility.yul\":16515:16530   */\n      div\n        /* \"#utility.yul\":16512:16513   */\n      dup5\n        /* \"#utility.yul\":16509:16531   */\n      eq\n        /* \"#utility.yul\":16489:16490   */\n      dup4\n        /* \"#utility.yul\":16482:16491   */\n      iszero\n        /* \"#utility.yul\":16462:16545   */\n      or\n        /* \"#utility.yul\":16439:16578   */\n      tag_520\n      jumpi\n        /* \"#utility.yul\":16558:16576   */\n      tag_521\n      tag_353\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":16439:16578   */\n    tag_520:\n        /* \"#utility.yul\":16223:16585   */\n      pop\n        /* \"#utility.yul\":16175:16585   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16591:16771   */\n    tag_362:\n        /* \"#utility.yul\":16639:16716   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16636:16637   */\n      0x00\n        /* \"#utility.yul\":16629:16717   */\n      mstore\n        /* \"#utility.yul\":16736:16740   */\n      0x12\n        /* \"#utility.yul\":16733:16734   */\n      0x04\n        /* \"#utility.yul\":16726:16741   */\n      mstore\n        /* \"#utility.yul\":16760:16764   */\n      0x24\n        /* \"#utility.yul\":16757:16758   */\n      0x00\n        /* \"#utility.yul\":16750:16765   */\n      revert\n        /* \"#utility.yul\":16777:16962   */\n    tag_235:\n        /* \"#utility.yul\":16817:16818   */\n      0x00\n        /* \"#utility.yul\":16834:16854   */\n      tag_524\n        /* \"#utility.yul\":16852:16853   */\n      dup3\n        /* \"#utility.yul\":16834:16854   */\n      tag_321\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":16829:16854   */\n      swap2\n      pop\n        /* \"#utility.yul\":16868:16888   */\n      tag_525\n        /* \"#utility.yul\":16886:16887   */\n      dup4\n        /* \"#utility.yul\":16868:16888   */\n      tag_321\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":16863:16888   */\n      swap3\n      pop\n        /* \"#utility.yul\":16907:16908   */\n      dup3\n        /* \"#utility.yul\":16897:16932   */\n      tag_526\n      jumpi\n        /* \"#utility.yul\":16912:16930   */\n      tag_527\n      tag_362\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":16897:16932   */\n    tag_526:\n        /* \"#utility.yul\":16954:16955   */\n      dup3\n        /* \"#utility.yul\":16951:16952   */\n      dup3\n        /* \"#utility.yul\":16947:16956   */\n      div\n        /* \"#utility.yul\":16942:16956   */\n      swap1\n      pop\n        /* \"#utility.yul\":16777:16962   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16968:17410   */\n    tag_257:\n        /* \"#utility.yul\":17117:17121   */\n      0x00\n        /* \"#utility.yul\":17155:17157   */\n      0x60\n        /* \"#utility.yul\":17144:17153   */\n      dup3\n        /* \"#utility.yul\":17140:17158   */\n      add\n        /* \"#utility.yul\":17132:17158   */\n      swap1\n      pop\n        /* \"#utility.yul\":17168:17239   */\n      tag_529\n        /* \"#utility.yul\":17236:17237   */\n      0x00\n        /* \"#utility.yul\":17225:17234   */\n      dup4\n        /* \"#utility.yul\":17221:17238   */\n      add\n        /* \"#utility.yul\":17212:17218   */\n      dup7\n        /* \"#utility.yul\":17168:17239   */\n      tag_338\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":17249:17321   */\n      tag_530\n        /* \"#utility.yul\":17317:17319   */\n      0x20\n        /* \"#utility.yul\":17306:17315   */\n      dup4\n        /* \"#utility.yul\":17302:17320   */\n      add\n        /* \"#utility.yul\":17293:17299   */\n      dup6\n        /* \"#utility.yul\":17249:17321   */\n      tag_335\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":17331:17403   */\n      tag_531\n        /* \"#utility.yul\":17399:17401   */\n      0x40\n        /* \"#utility.yul\":17388:17397   */\n      dup4\n        /* \"#utility.yul\":17384:17402   */\n      add\n        /* \"#utility.yul\":17375:17381   */\n      dup5\n        /* \"#utility.yul\":17331:17403   */\n      tag_335\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":16968:17410   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17416:17597   */\n    tag_363:\n        /* \"#utility.yul\":17556:17589   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":17552:17553   */\n      0x00\n        /* \"#utility.yul\":17544:17550   */\n      dup3\n        /* \"#utility.yul\":17540:17554   */\n      add\n        /* \"#utility.yul\":17533:17590   */\n      mstore\n        /* \"#utility.yul\":17416:17597   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17603:17969   */\n    tag_364:\n        /* \"#utility.yul\":17745:17748   */\n      0x00\n        /* \"#utility.yul\":17766:17833   */\n      tag_534\n        /* \"#utility.yul\":17830:17832   */\n      0x1f\n        /* \"#utility.yul\":17825:17828   */\n      dup4\n        /* \"#utility.yul\":17766:17833   */\n      tag_325\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":17759:17833   */\n      swap2\n      pop\n        /* \"#utility.yul\":17842:17935   */\n      tag_535\n        /* \"#utility.yul\":17931:17934   */\n      dup3\n        /* \"#utility.yul\":17842:17935   */\n      tag_363\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":17960:17962   */\n      0x20\n        /* \"#utility.yul\":17955:17958   */\n      dup3\n        /* \"#utility.yul\":17951:17963   */\n      add\n        /* \"#utility.yul\":17944:17963   */\n      swap1\n      pop\n        /* \"#utility.yul\":17603:17969   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17975:18394   */\n    tag_269:\n        /* \"#utility.yul\":18141:18145   */\n      0x00\n        /* \"#utility.yul\":18179:18181   */\n      0x20\n        /* \"#utility.yul\":18168:18177   */\n      dup3\n        /* \"#utility.yul\":18164:18182   */\n      add\n        /* \"#utility.yul\":18156:18182   */\n      swap1\n      pop\n        /* \"#utility.yul\":18228:18237   */\n      dup2\n        /* \"#utility.yul\":18222:18226   */\n      dup2\n        /* \"#utility.yul\":18218:18238   */\n      sub\n        /* \"#utility.yul\":18214:18215   */\n      0x00\n        /* \"#utility.yul\":18203:18212   */\n      dup4\n        /* \"#utility.yul\":18199:18216   */\n      add\n        /* \"#utility.yul\":18192:18239   */\n      mstore\n        /* \"#utility.yul\":18256:18387   */\n      tag_537\n        /* \"#utility.yul\":18382:18386   */\n      dup2\n        /* \"#utility.yul\":18256:18387   */\n      tag_364\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":18248:18387   */\n      swap1\n      pop\n        /* \"#utility.yul\":17975:18394   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18400:18732   */\n    tag_285:\n        /* \"#utility.yul\":18521:18525   */\n      0x00\n        /* \"#utility.yul\":18559:18561   */\n      0x40\n        /* \"#utility.yul\":18548:18557   */\n      dup3\n        /* \"#utility.yul\":18544:18562   */\n      add\n        /* \"#utility.yul\":18536:18562   */\n      swap1\n      pop\n        /* \"#utility.yul\":18572:18643   */\n      tag_539\n        /* \"#utility.yul\":18640:18641   */\n      0x00\n        /* \"#utility.yul\":18629:18638   */\n      dup4\n        /* \"#utility.yul\":18625:18642   */\n      add\n        /* \"#utility.yul\":18616:18622   */\n      dup6\n        /* \"#utility.yul\":18572:18643   */\n      tag_338\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":18653:18725   */\n      tag_540\n        /* \"#utility.yul\":18721:18723   */\n      0x20\n        /* \"#utility.yul\":18710:18719   */\n      dup4\n        /* \"#utility.yul\":18706:18724   */\n      add\n        /* \"#utility.yul\":18697:18703   */\n      dup5\n        /* \"#utility.yul\":18653:18725   */\n      tag_338\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":18400:18732   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18738:19180   */\n    tag_290:\n        /* \"#utility.yul\":18887:18891   */\n      0x00\n        /* \"#utility.yul\":18925:18927   */\n      0x60\n        /* \"#utility.yul\":18914:18923   */\n      dup3\n        /* \"#utility.yul\":18910:18928   */\n      add\n        /* \"#utility.yul\":18902:18928   */\n      swap1\n      pop\n        /* \"#utility.yul\":18938:19009   */\n      tag_542\n        /* \"#utility.yul\":19006:19007   */\n      0x00\n        /* \"#utility.yul\":18995:19004   */\n      dup4\n        /* \"#utility.yul\":18991:19008   */\n      add\n        /* \"#utility.yul\":18982:18988   */\n      dup7\n        /* \"#utility.yul\":18938:19009   */\n      tag_338\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":19019:19091   */\n      tag_543\n        /* \"#utility.yul\":19087:19089   */\n      0x20\n        /* \"#utility.yul\":19076:19085   */\n      dup4\n        /* \"#utility.yul\":19072:19090   */\n      add\n        /* \"#utility.yul\":19063:19069   */\n      dup6\n        /* \"#utility.yul\":19019:19091   */\n      tag_338\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":19101:19173   */\n      tag_544\n        /* \"#utility.yul\":19169:19171   */\n      0x40\n        /* \"#utility.yul\":19158:19167   */\n      dup4\n        /* \"#utility.yul\":19154:19172   */\n      add\n        /* \"#utility.yul\":19145:19151   */\n      dup5\n        /* \"#utility.yul\":19101:19173   */\n      tag_335\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":18738:19180   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n\n    sub_0: assembly {\n            /* \"C/commingling .sol\":481:1503  contract Vault is Ownable {... */\n          mstore(0x40, 0xa0)\n            /* \"C/commingling .sol\":829:1032  constructor(address _collateralToken, address owner_) Ownable(owner_) {... */\n          callvalue\n          dup1\n          iszero\n          tag_1\n          jumpi\n          revert(0x00, 0x00)\n        tag_1:\n          pop\n          mload(0x40)\n          sub(codesize, bytecodeSize)\n          dup1\n          bytecodeSize\n          dup4\n          codecopy\n          dup2\n          dup2\n          add\n          0x40\n          mstore\n          dup2\n          add\n          swap1\n          tag_2\n          swap2\n          swap1\n          tag_3\n          jump\t// in\n        tag_2:\n            /* \"C/commingling .sol\":891:897  owner_ */\n          dup1\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n          0x00\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n          dup2\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n          sub\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n          tag_7\n          jumpi\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n          0x00\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n          mload(0x40)\n          0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n          0x04\n          add\n          tag_8\n          swap2\n          swap1\n          tag_9\n          jump\t// in\n        tag_8:\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          revert\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n        tag_7:\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n          tag_10\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n          dup2\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n          shl(0x20, tag_11)\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n          0x20\n          shr\n          jump\t// in\n        tag_10:\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n          pop\n            /* \"C/commingling .sol\":945:946  0 */\n          0x00\n            /* \"C/commingling .sol\":917:947  _collateralToken != address(0) */\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n            /* \"C/commingling .sol\":917:933  _collateralToken */\n          dup3\n            /* \"C/commingling .sol\":917:947  _collateralToken != address(0) */\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n          sub\n            /* \"C/commingling .sol\":909:973  require(_collateralToken != address(0), \"Invalid token address\") */\n          tag_13\n          jumpi\n          mload(0x40)\n          0x08c379a000000000000000000000000000000000000000000000000000000000\n          dup2\n          mstore\n          0x04\n          add\n          tag_14\n          swap1\n          tag_15\n          jump\t// in\n        tag_14:\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          revert\n        tag_13:\n            /* \"C/commingling .sol\":1008:1024  _collateralToken */\n          dup2\n            /* \"C/commingling .sol\":983:1025  collateralToken = IERC20(_collateralToken) */\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n          0x80\n          dup2\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n          dup2\n          mstore\n          pop\n          pop\n            /* \"C/commingling .sol\":829:1032  constructor(address _collateralToken, address owner_) Ownable(owner_) {... */\n          pop\n          pop\n            /* \"C/commingling .sol\":481:1503  contract Vault is Ownable {... */\n          jump(tag_16)\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n        tag_11:\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n          0x00\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n          0x00\n          0x00\n          swap1\n          sload\n          swap1\n          0x0100\n          exp\n          swap1\n          div\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n          swap1\n          pop\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n          dup2\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n          0x00\n          0x00\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n          0x0100\n          exp\n          dup2\n          sload\n          dup2\n          0xffffffffffffffffffffffffffffffffffffffff\n          mul\n          not\n          and\n          swap1\n          dup4\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n          mul\n          or\n          swap1\n          sstore\n          pop\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n          dup2\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n          dup2\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n          0xffffffffffffffffffffffffffffffffffffffff\n          and\n          0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n          mload(0x40)\n          mload(0x40)\n          dup1\n          swap2\n          sub\n          swap1\n          log3\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n          pop\n            /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n          pop\n          jump\t// out\n            /* \"#utility.yul\":88:205   */\n        tag_19:\n            /* \"#utility.yul\":197:198   */\n          0x00\n            /* \"#utility.yul\":194:195   */\n          0x00\n            /* \"#utility.yul\":187:199   */\n          revert\n            /* \"#utility.yul\":334:460   */\n        tag_21:\n            /* \"#utility.yul\":371:378   */\n          0x00\n            /* \"#utility.yul\":411:453   */\n          0xffffffffffffffffffffffffffffffffffffffff\n            /* \"#utility.yul\":404:409   */\n          dup3\n            /* \"#utility.yul\":400:454   */\n          and\n            /* \"#utility.yul\":389:454   */\n          swap1\n          pop\n            /* \"#utility.yul\":334:460   */\n          swap2\n          swap1\n          pop\n          jump\t// out\n            /* \"#utility.yul\":466:562   */\n        tag_22:\n            /* \"#utility.yul\":503:510   */\n          0x00\n            /* \"#utility.yul\":532:556   */\n          tag_35\n            /* \"#utility.yul\":550:555   */\n          dup3\n            /* \"#utility.yul\":532:556   */\n          tag_21\n          jump\t// in\n        tag_35:\n            /* \"#utility.yul\":521:556   */\n          swap1\n          pop\n            /* \"#utility.yul\":466:562   */\n          swap2\n          swap1\n          pop\n          jump\t// out\n            /* \"#utility.yul\":568:690   */\n        tag_23:\n            /* \"#utility.yul\":641:665   */\n          tag_37\n            /* \"#utility.yul\":659:664   */\n          dup2\n            /* \"#utility.yul\":641:665   */\n          tag_22\n          jump\t// in\n        tag_37:\n            /* \"#utility.yul\":634:639   */\n          dup2\n            /* \"#utility.yul\":631:666   */\n          eq\n            /* \"#utility.yul\":621:684   */\n          tag_38\n          jumpi\n            /* \"#utility.yul\":680:681   */\n          0x00\n            /* \"#utility.yul\":677:678   */\n          0x00\n            /* \"#utility.yul\":670:682   */\n          revert\n            /* \"#utility.yul\":621:684   */\n        tag_38:\n            /* \"#utility.yul\":568:690   */\n          pop\n          jump\t// out\n            /* \"#utility.yul\":696:839   */\n        tag_24:\n            /* \"#utility.yul\":753:758   */\n          0x00\n            /* \"#utility.yul\":784:790   */\n          dup2\n            /* \"#utility.yul\":778:791   */\n          mload\n            /* \"#utility.yul\":769:791   */\n          swap1\n          pop\n            /* \"#utility.yul\":800:833   */\n          tag_40\n            /* \"#utility.yul\":827:832   */\n          dup2\n            /* \"#utility.yul\":800:833   */\n          tag_23\n          jump\t// in\n        tag_40:\n            /* \"#utility.yul\":696:839   */\n          swap3\n          swap2\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":845:1352   */\n        tag_3:\n            /* \"#utility.yul\":924:930   */\n          0x00\n            /* \"#utility.yul\":932:938   */\n          0x00\n            /* \"#utility.yul\":981:983   */\n          0x40\n            /* \"#utility.yul\":969:978   */\n          dup4\n            /* \"#utility.yul\":960:967   */\n          dup6\n            /* \"#utility.yul\":956:979   */\n          sub\n            /* \"#utility.yul\":952:984   */\n          slt\n            /* \"#utility.yul\":949:1068   */\n          iszero\n          tag_42\n          jumpi\n            /* \"#utility.yul\":987:1066   */\n          tag_43\n          tag_19\n          jump\t// in\n        tag_43:\n            /* \"#utility.yul\":949:1068   */\n        tag_42:\n            /* \"#utility.yul\":1107:1108   */\n          0x00\n            /* \"#utility.yul\":1132:1196   */\n          tag_44\n            /* \"#utility.yul\":1188:1195   */\n          dup6\n            /* \"#utility.yul\":1179:1185   */\n          dup3\n            /* \"#utility.yul\":1168:1177   */\n          dup7\n            /* \"#utility.yul\":1164:1186   */\n          add\n            /* \"#utility.yul\":1132:1196   */\n          tag_24\n          jump\t// in\n        tag_44:\n            /* \"#utility.yul\":1122:1196   */\n          swap3\n          pop\n            /* \"#utility.yul\":1078:1206   */\n          pop\n            /* \"#utility.yul\":1245:1247   */\n          0x20\n            /* \"#utility.yul\":1271:1335   */\n          tag_45\n            /* \"#utility.yul\":1327:1334   */\n          dup6\n            /* \"#utility.yul\":1318:1324   */\n          dup3\n            /* \"#utility.yul\":1307:1316   */\n          dup7\n            /* \"#utility.yul\":1303:1325   */\n          add\n            /* \"#utility.yul\":1271:1335   */\n          tag_24\n          jump\t// in\n        tag_45:\n            /* \"#utility.yul\":1261:1335   */\n          swap2\n          pop\n            /* \"#utility.yul\":1216:1345   */\n          pop\n            /* \"#utility.yul\":845:1352   */\n          swap3\n          pop\n          swap3\n          swap1\n          pop\n          jump\t// out\n            /* \"#utility.yul\":1358:1476   */\n        tag_25:\n            /* \"#utility.yul\":1445:1469   */\n          tag_47\n            /* \"#utility.yul\":1463:1468   */\n          dup2\n            /* \"#utility.yul\":1445:1469   */\n          tag_22\n          jump\t// in\n        tag_47:\n            /* \"#utility.yul\":1440:1443   */\n          dup3\n            /* \"#utility.yul\":1433:1470   */\n          mstore\n            /* \"#utility.yul\":1358:1476   */\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":1482:1704   */\n        tag_9:\n            /* \"#utility.yul\":1575:1579   */\n          0x00\n            /* \"#utility.yul\":1613:1615   */\n          0x20\n            /* \"#utility.yul\":1602:1611   */\n          dup3\n            /* \"#utility.yul\":1598:1616   */\n          add\n            /* \"#utility.yul\":1590:1616   */\n          swap1\n          pop\n            /* \"#utility.yul\":1626:1697   */\n          tag_49\n            /* \"#utility.yul\":1694:1695   */\n          0x00\n            /* \"#utility.yul\":1683:1692   */\n          dup4\n            /* \"#utility.yul\":1679:1696   */\n          add\n            /* \"#utility.yul\":1670:1676   */\n          dup5\n            /* \"#utility.yul\":1626:1697   */\n          tag_25\n          jump\t// in\n        tag_49:\n            /* \"#utility.yul\":1482:1704   */\n          swap3\n          swap2\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":1710:1879   */\n        tag_26:\n            /* \"#utility.yul\":1794:1805   */\n          0x00\n            /* \"#utility.yul\":1828:1834   */\n          dup3\n            /* \"#utility.yul\":1823:1826   */\n          dup3\n            /* \"#utility.yul\":1816:1835   */\n          mstore\n            /* \"#utility.yul\":1868:1872   */\n          0x20\n            /* \"#utility.yul\":1863:1866   */\n          dup3\n            /* \"#utility.yul\":1859:1873   */\n          add\n            /* \"#utility.yul\":1844:1873   */\n          swap1\n          pop\n            /* \"#utility.yul\":1710:1879   */\n          swap3\n          swap2\n          pop\n          pop\n          jump\t// out\n            /* \"#utility.yul\":1885:2056   */\n        tag_27:\n            /* \"#utility.yul\":2025:2048   */\n          0x496e76616c696420746f6b656e20616464726573730000000000000000000000\n            /* \"#utility.yul\":2021:2022   */\n          0x00\n            /* \"#utility.yul\":2013:2019   */\n          dup3\n            /* \"#utility.yul\":2009:2023   */\n          add\n            /* \"#utility.yul\":2002:2049   */\n          mstore\n            /* \"#utility.yul\":1885:2056   */\n          pop\n          jump\t// out\n            /* \"#utility.yul\":2062:2428   */\n        tag_28:\n            /* \"#utility.yul\":2204:2207   */\n          0x00\n            /* \"#utility.yul\":2225:2292   */\n          tag_53\n            /* \"#utility.yul\":2289:2291   */\n          0x15\n            /* \"#utility.yul\":2284:2287   */\n          dup4\n            /* \"#utility.yul\":2225:2292   */\n          tag_26\n          jump\t// in\n        tag_53:\n            /* \"#utility.yul\":2218:2292   */\n          swap2\n          pop\n            /* \"#utility.yul\":2301:2394   */\n          tag_54\n            /* \"#utility.yul\":2390:2393   */\n          dup3\n            /* \"#utility.yul\":2301:2394   */\n          tag_27\n          jump\t// in\n        tag_54:\n            /* \"#utility.yul\":2419:2421   */\n          0x20\n            /* \"#utility.yul\":2414:2417   */\n          dup3\n            /* \"#utility.yul\":2410:2422   */\n          add\n            /* \"#utility.yul\":2403:2422   */\n          swap1\n          pop\n            /* \"#utility.yul\":2062:2428   */\n          swap2\n          swap1\n          pop\n          jump\t// out\n            /* \"#utility.yul\":2434:2853   */\n        tag_15:\n            /* \"#utility.yul\":2600:2604   */\n          0x00\n            /* \"#utility.yul\":2638:2640   */\n          0x20\n            /* \"#utility.yul\":2627:2636   */\n          dup3\n            /* \"#utility.yul\":2623:2641   */\n          add\n            /* \"#utility.yul\":2615:2641   */\n          swap1\n          pop\n            /* \"#utility.yul\":2687:2696   */\n          dup2\n            /* \"#utility.yul\":2681:2685   */\n          dup2\n            /* \"#utility.yul\":2677:2697   */\n          sub\n            /* \"#utility.yul\":2673:2674   */\n          0x00\n            /* \"#utility.yul\":2662:2671   */\n          dup4\n            /* \"#utility.yul\":2658:2675   */\n          add\n            /* \"#utility.yul\":2651:2698   */\n          mstore\n            /* \"#utility.yul\":2715:2846   */\n          tag_56\n            /* \"#utility.yul\":2841:2845   */\n          dup2\n            /* \"#utility.yul\":2715:2846   */\n          tag_28\n          jump\t// in\n        tag_56:\n            /* \"#utility.yul\":2707:2846   */\n          swap1\n          pop\n            /* \"#utility.yul\":2434:2853   */\n          swap2\n          swap1\n          pop\n          jump\t// out\n            /* \"C/commingling .sol\":481:1503  contract Vault is Ownable {... */\n        tag_16:\n          mload(0x80)\n          codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n          0x00\n          assignImmutable(\"0x531478b608456d6cd277e16da5d4d5f38a3dd62f497fc533d273f6110185082c\")\n          return(0x00, dataSize(sub_0))\n        stop\n\n        sub_0: assembly {\n                /* \"C/commingling .sol\":481:1503  contract Vault is Ownable {... */\n              mstore(0x40, 0x80)\n              callvalue\n              dup1\n              iszero\n              tag_1\n              jumpi\n              revert(0x00, 0x00)\n            tag_1:\n              pop\n              jumpi(tag_2, lt(calldatasize, 0x04))\n              shr(0xe0, calldataload(0x00))\n              dup1\n              0x715018a6\n              eq\n              tag_3\n              jumpi\n              dup1\n              0x8da5cb5b\n              eq\n              tag_4\n              jumpi\n              dup1\n              0xb2016bd4\n              eq\n              tag_5\n              jumpi\n              dup1\n              0xb69ef8a8\n              eq\n              tag_6\n              jumpi\n              dup1\n              0xf2fde38b\n              eq\n              tag_7\n              jumpi\n              dup1\n              0xf3fef3a3\n              eq\n              tag_8\n              jumpi\n            tag_2:\n              revert(0x00, 0x00)\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n            tag_3:\n              tag_9\n              tag_10\n              jump\t// in\n            tag_9:\n              stop\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n            tag_4:\n              tag_11\n              tag_12\n              jump\t// in\n            tag_11:\n              mload(0x40)\n              tag_13\n              swap2\n              swap1\n              tag_14\n              jump\t// in\n            tag_13:\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              return\n                /* \"C/commingling .sol\":550:589  IERC20 public immutable collateralToken */\n            tag_5:\n              tag_15\n              tag_16\n              jump\t// in\n            tag_15:\n              mload(0x40)\n              tag_17\n              swap2\n              swap1\n              tag_18\n              jump\t// in\n            tag_17:\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              return\n                /* \"C/commingling .sol\":1386:1501  function balance() external view returns (uint256) {... */\n            tag_6:\n              tag_19\n              tag_20\n              jump\t// in\n            tag_19:\n              mload(0x40)\n              tag_21\n              swap2\n              swap1\n              tag_22\n              jump\t// in\n            tag_21:\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              return\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n            tag_7:\n              tag_23\n              0x04\n              dup1\n              calldatasize\n              sub\n              dup2\n              add\n              swap1\n              tag_24\n              swap2\n              swap1\n              tag_25\n              jump\t// in\n            tag_24:\n              tag_26\n              jump\t// in\n            tag_23:\n              stop\n                /* \"C/commingling .sol\":1188:1310  function withdraw(address to, uint256 amount) external onlyOwner {... */\n            tag_8:\n              tag_27\n              0x04\n              dup1\n              calldatasize\n              sub\n              dup2\n              add\n              swap1\n              tag_28\n              swap2\n              swap1\n              tag_29\n              jump\t// in\n            tag_28:\n              tag_30\n              jump\t// in\n            tag_27:\n              stop\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n            tag_10:\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n              tag_32\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n              tag_33\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n              jump\t// in\n            tag_32:\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n              tag_35\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n              0x00\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n              tag_36\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n              jump\t// in\n            tag_35:\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n              jump\t// out\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n            tag_12:\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n              0x00\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n              0x00\n              0x00\n              swap1\n              sload\n              swap1\n              0x0100\n              exp\n              swap1\n              div\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n              swap1\n              pop\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n              swap1\n              jump\t// out\n                /* \"C/commingling .sol\":550:589  IERC20 public immutable collateralToken */\n            tag_16:\n              immutable(\"0x531478b608456d6cd277e16da5d4d5f38a3dd62f497fc533d273f6110185082c\")\n              dup2\n              jump\t// out\n                /* \"C/commingling .sol\":1386:1501  function balance() external view returns (uint256) {... */\n            tag_20:\n                /* \"C/commingling .sol\":1428:1435  uint256 */\n              0x00\n                /* \"C/commingling .sol\":1454:1469  collateralToken */\n              immutable(\"0x531478b608456d6cd277e16da5d4d5f38a3dd62f497fc533d273f6110185082c\")\n                /* \"C/commingling .sol\":1454:1479  collateralToken.balanceOf */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0x70a08231\n                /* \"C/commingling .sol\":1488:1492  this */\n              address\n                /* \"C/commingling .sol\":1454:1494  collateralToken.balanceOf(address(this)) */\n              mload(0x40)\n              dup3\n              0xffffffff\n              and\n              0xe0\n              shl\n              dup2\n              mstore\n              0x04\n              add\n              tag_39\n              swap2\n              swap1\n              tag_14\n              jump\t// in\n            tag_39:\n              0x20\n              mload(0x40)\n              dup1\n              dup4\n              sub\n              dup2\n              dup7\n              gas\n              staticcall\n              iszero\n              dup1\n              iszero\n              tag_41\n              jumpi\n              returndatacopy(0x00, 0x00, returndatasize)\n              revert(0x00, returndatasize)\n            tag_41:\n              pop\n              pop\n              pop\n              pop\n              mload(0x40)\n              returndatasize\n              not(0x1f)\n              0x1f\n              dup3\n              add\n              and\n              dup3\n              add\n              dup1\n              0x40\n              mstore\n              pop\n              dup2\n              add\n              swap1\n              tag_42\n              swap2\n              swap1\n              tag_43\n              jump\t// in\n            tag_42:\n                /* \"C/commingling .sol\":1447:1494  return collateralToken.balanceOf(address(this)) */\n              swap1\n              pop\n                /* \"C/commingling .sol\":1386:1501  function balance() external view returns (uint256) {... */\n              swap1\n              jump\t// out\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n            tag_26:\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n              tag_45\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n              tag_33\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n              jump\t// in\n            tag_45:\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n              0x00\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n              dup2\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              sub\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n              tag_47\n              jumpi\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n              0x00\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n              mload(0x40)\n              0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n              dup2\n              mstore\n              0x04\n              add\n              tag_48\n              swap2\n              swap1\n              tag_14\n              jump\t// in\n            tag_48:\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              revert\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n            tag_47:\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n              tag_49\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n              dup2\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n              tag_36\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n              jump\t// in\n            tag_49:\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n              pop\n              jump\t// out\n                /* \"C/commingling .sol\":1188:1310  function withdraw(address to, uint256 amount) external onlyOwner {... */\n            tag_30:\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n              tag_51\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n              tag_33\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n              jump\t// in\n            tag_51:\n                /* \"C/commingling .sol\":1263:1303  collateralToken.safeTransfer(to, amount) */\n              tag_53\n                /* \"C/commingling .sol\":1292:1294  to */\n              dup3\n                /* \"C/commingling .sol\":1296:1302  amount */\n              dup3\n                /* \"C/commingling .sol\":1263:1278  collateralToken */\n              immutable(\"0x531478b608456d6cd277e16da5d4d5f38a3dd62f497fc533d273f6110185082c\")\n                /* \"C/commingling .sol\":1263:1291  collateralToken.safeTransfer */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              tag_54\n              swap1\n                /* \"C/commingling .sol\":1263:1303  collateralToken.safeTransfer(to, amount) */\n              swap3\n              swap2\n              swap1\n              0xffffffff\n              and\n              jump\t// in\n            tag_53:\n                /* \"C/commingling .sol\":1188:1310  function withdraw(address to, uint256 amount) external onlyOwner {... */\n              pop\n              pop\n              jump\t// out\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n            tag_33:\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n              tag_56\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n              tag_57\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n              jump\t// in\n            tag_56:\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n              tag_58\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n              tag_12\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n              jump\t// in\n            tag_58:\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              eq\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n              tag_59\n              jumpi\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n              tag_60\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n              tag_57\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n              jump\t// in\n            tag_60:\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n              mload(0x40)\n              0x118cdaa700000000000000000000000000000000000000000000000000000000\n              dup2\n              mstore\n              0x04\n              add\n              tag_61\n              swap2\n              swap1\n              tag_14\n              jump\t// in\n            tag_61:\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              revert\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n            tag_59:\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n              jump\t// out\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n            tag_36:\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n              0x00\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n              0x00\n              0x00\n              swap1\n              sload\n              swap1\n              0x0100\n              exp\n              swap1\n              div\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n              swap1\n              pop\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n              dup2\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n              0x00\n              0x00\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n              0x0100\n              exp\n              dup2\n              sload\n              dup2\n              0xffffffffffffffffffffffffffffffffffffffff\n              mul\n              not\n              and\n              swap1\n              dup4\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              mul\n              or\n              swap1\n              sstore\n              pop\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n              dup2\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n              dup2\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n              mload(0x40)\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              log3\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n              pop\n                /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n              pop\n              jump\t// out\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n            tag_54:\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n              tag_64\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n              dup4\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1348  token */\n              dup5\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              0xa9059cbb\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1360:1362  to */\n              dup6\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1364:1369  value */\n              dup6\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n              add(0x24, mload(0x40))\n              tag_65\n              swap3\n              swap2\n              swap1\n              tag_66\n              jump\t// in\n            tag_65:\n              mload(0x40)\n              0x20\n              dup2\n              dup4\n              sub\n              sub\n              dup2\n              mstore\n              swap1\n              0x40\n              mstore\n              swap2\n              pop\n              0xe0\n              shl\n              0x20\n              dup3\n              add\n              dup1\n              mload\n              0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n              dup4\n              dup2\n              dup4\n              and\n              or\n              dup4\n              mstore\n              pop\n              pop\n              pop\n              pop\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n              tag_67\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n              jump\t// in\n            tag_64:\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n              pop\n              pop\n              pop\n              jump\t// out\n                /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n            tag_57:\n                /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n              0x00\n                /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n              caller\n                /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n              swap1\n              pop\n                /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n              swap1\n              jump\t// out\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7686:8406  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n            tag_67:\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7766:7784  uint256 returnSize */\n              0x00\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7794:7813  uint256 returnValue */\n              0x00\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7932:7936  0x20 */\n              0x20\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7929:7930  0 */\n              0x00\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7922:7926  data */\n              dup5\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7916:7927  mload(data) */\n              mload\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7909:7913  0x20 */\n              0x20\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7903:7907  data */\n              dup7\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7899:7914  add(data, 0x20) */\n              add\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7896:7897  0 */\n              0x00\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7889:7894  token */\n              dup9\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7882:7887  gas() */\n              gas\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7877:7937  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n              call\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7989:7996  success */\n              dup1\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7979:8155  if iszero(success) {... */\n              tag_70\n              jumpi\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8033:8037  0x40 */\n              0x40\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8027:8038  mload(0x40) */\n              mload\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8078:8094  returndatasize() */\n              returndatasize\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8075:8076  0 */\n              0x00\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8070:8073  ptr */\n              dup3\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8055:8095  returndatacopy(ptr, 0, returndatasize()) */\n              returndatacopy\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8124:8140  returndatasize() */\n              returndatasize\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8119:8122  ptr */\n              dup2\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8112:8141  revert(ptr, returndatasize()) */\n              revert\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7979:8155  if iszero(success) {... */\n            tag_70:\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8182:8198  returndatasize() */\n              returndatasize\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8168:8198  returnSize := returndatasize() */\n              swap3\n              pop\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8232:8233  0 */\n              0x00\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8226:8234  mload(0) */\n              mload\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8211:8234  returnValue := mload(0) */\n              swap2\n              pop\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7848:8244  {... */\n              pop\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8272:8273  0 */\n              0x00\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8268  returnSize */\n              dup3\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8273  returnSize == 0 */\n              eq\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n              tag_71\n              jumpi\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8325:8326  1 */\n              0x01\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8321  returnValue */\n              dup2\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8326  returnValue != 1 */\n              eq\n              iszero\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n              jump(tag_72)\n            tag_71:\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8307  0 */\n              0x00\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8284:8289  token */\n              dup5\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8276:8302  address(token).code.length */\n              0xffffffffffffffffffffffffffffffffffffffff\n              and\n              extcodesize\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8276:8307  address(token).code.length == 0 */\n              eq\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n            tag_72:\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8254:8400  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n              iszero\n              tag_73\n              jumpi\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8382:8387  token */\n              dup4\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8349:8389  SafeERC20FailedOperation(address(token)) */\n              mload(0x40)\n              0x5274afe700000000000000000000000000000000000000000000000000000000\n              dup2\n              mstore\n              0x04\n              add\n              tag_74\n              swap2\n              swap1\n              tag_14\n              jump\t// in\n            tag_74:\n              mload(0x40)\n              dup1\n              swap2\n              sub\n              swap1\n              revert\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8254:8400  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n            tag_73:\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7756:8406  {... */\n              pop\n              pop\n                /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7686:8406  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n              pop\n              pop\n              jump\t// out\n                /* \"#utility.yul\":7:133   */\n            tag_75:\n                /* \"#utility.yul\":44:51   */\n              0x00\n                /* \"#utility.yul\":84:126   */\n              0xffffffffffffffffffffffffffffffffffffffff\n                /* \"#utility.yul\":77:82   */\n              dup3\n                /* \"#utility.yul\":73:127   */\n              and\n                /* \"#utility.yul\":62:127   */\n              swap1\n              pop\n                /* \"#utility.yul\":7:133   */\n              swap2\n              swap1\n              pop\n              jump\t// out\n                /* \"#utility.yul\":139:235   */\n            tag_76:\n                /* \"#utility.yul\":176:183   */\n              0x00\n                /* \"#utility.yul\":205:229   */\n              tag_96\n                /* \"#utility.yul\":223:228   */\n              dup3\n                /* \"#utility.yul\":205:229   */\n              tag_75\n              jump\t// in\n            tag_96:\n                /* \"#utility.yul\":194:229   */\n              swap1\n              pop\n                /* \"#utility.yul\":139:235   */\n              swap2\n              swap1\n              pop\n              jump\t// out\n                /* \"#utility.yul\":241:359   */\n            tag_77:\n                /* \"#utility.yul\":328:352   */\n              tag_98\n                /* \"#utility.yul\":346:351   */\n              dup2\n                /* \"#utility.yul\":328:352   */\n              tag_76\n              jump\t// in\n            tag_98:\n                /* \"#utility.yul\":323:326   */\n              dup3\n                /* \"#utility.yul\":316:353   */\n              mstore\n                /* \"#utility.yul\":241:359   */\n              pop\n              pop\n              jump\t// out\n                /* \"#utility.yul\":365:587   */\n            tag_14:\n                /* \"#utility.yul\":458:462   */\n              0x00\n                /* \"#utility.yul\":496:498   */\n              0x20\n                /* \"#utility.yul\":485:494   */\n              dup3\n                /* \"#utility.yul\":481:499   */\n              add\n                /* \"#utility.yul\":473:499   */\n              swap1\n              pop\n                /* \"#utility.yul\":509:580   */\n              tag_100\n                /* \"#utility.yul\":577:578   */\n              0x00\n                /* \"#utility.yul\":566:575   */\n              dup4\n                /* \"#utility.yul\":562:579   */\n              add\n                /* \"#utility.yul\":553:559   */\n              dup5\n                /* \"#utility.yul\":509:580   */\n              tag_77\n              jump\t// in\n            tag_100:\n                /* \"#utility.yul\":365:587   */\n              swap3\n              swap2\n              pop\n              pop\n              jump\t// out\n                /* \"#utility.yul\":593:653   */\n            tag_78:\n                /* \"#utility.yul\":621:624   */\n              0x00\n                /* \"#utility.yul\":642:647   */\n              dup2\n                /* \"#utility.yul\":635:647   */\n              swap1\n              pop\n                /* \"#utility.yul\":593:653   */\n              swap2\n              swap1\n              pop\n              jump\t// out\n                /* \"#utility.yul\":659:801   */\n            tag_79:\n                /* \"#utility.yul\":709:718   */\n              0x00\n                /* \"#utility.yul\":742:795   */\n              tag_103\n                /* \"#utility.yul\":760:794   */\n              tag_104\n                /* \"#utility.yul\":769:793   */\n              tag_105\n                /* \"#utility.yul\":787:792   */\n              dup5\n                /* \"#utility.yul\":769:793   */\n              tag_75\n              jump\t// in\n            tag_105:\n                /* \"#utility.yul\":760:794   */\n              tag_78\n              jump\t// in\n            tag_104:\n                /* \"#utility.yul\":742:795   */\n              tag_75\n              jump\t// in\n            tag_103:\n                /* \"#utility.yul\":729:795   */\n              swap1\n              pop\n                /* \"#utility.yul\":659:801   */\n              swap2\n              swap1\n              pop\n              jump\t// out\n                /* \"#utility.yul\":807:933   */\n            tag_80:\n                /* \"#utility.yul\":857:866   */\n              0x00\n                /* \"#utility.yul\":890:927   */\n              tag_107\n                /* \"#utility.yul\":921:926   */\n              dup3\n                /* \"#utility.yul\":890:927   */\n              tag_79\n              jump\t// in\n            tag_107:\n                /* \"#utility.yul\":877:927   */\n              swap1\n              pop\n                /* \"#utility.yul\":807:933   */\n              swap2\n              swap1\n              pop\n              jump\t// out\n                /* \"#utility.yul\":939:1080   */\n            tag_81:\n                /* \"#utility.yul\":1004:1013   */\n              0x00\n                /* \"#utility.yul\":1037:1074   */\n              tag_109\n                /* \"#utility.yul\":1068:1073   */\n              dup3\n                /* \"#utility.yul\":1037:1074   */\n              tag_80\n              jump\t// in\n            tag_109:\n                /* \"#utility.yul\":1024:1074   */\n              swap1\n              pop\n                /* \"#utility.yul\":939:1080   */\n              swap2\n              swap1\n              pop\n              jump\t// out\n                /* \"#utility.yul\":1086:1247   */\n            tag_82:\n                /* \"#utility.yul\":1188:1240   */\n              tag_111\n                /* \"#utility.yul\":1234:1239   */\n              dup2\n                /* \"#utility.yul\":1188:1240   */\n              tag_81\n              jump\t// in\n            tag_111:\n                /* \"#utility.yul\":1183:1186   */\n              dup3\n                /* \"#utility.yul\":1176:1241   */\n              mstore\n                /* \"#utility.yul\":1086:1247   */\n              pop\n              pop\n              jump\t// out\n                /* \"#utility.yul\":1253:1505   */\n            tag_18:\n                /* \"#utility.yul\":1361:1365   */\n              0x00\n                /* \"#utility.yul\":1399:1401   */\n              0x20\n                /* \"#utility.yul\":1388:1397   */\n              dup3\n                /* \"#utility.yul\":1384:1402   */\n              add\n                /* \"#utility.yul\":1376:1402   */\n              swap1\n              pop\n                /* \"#utility.yul\":1412:1498   */\n              tag_113\n                /* \"#utility.yul\":1495:1496   */\n              0x00\n                /* \"#utility.yul\":1484:1493   */\n              dup4\n                /* \"#utility.yul\":1480:1497   */\n              add\n                /* \"#utility.yul\":1471:1477   */\n              dup5\n                /* \"#utility.yul\":1412:1498   */\n              tag_82\n              jump\t// in\n            tag_113:\n                /* \"#utility.yul\":1253:1505   */\n              swap3\n              swap2\n              pop\n              pop\n              jump\t// out\n                /* \"#utility.yul\":1511:1588   */\n            tag_83:\n                /* \"#utility.yul\":1548:1555   */\n              0x00\n                /* \"#utility.yul\":1577:1582   */\n              dup2\n                /* \"#utility.yul\":1566:1582   */\n              swap1\n              pop\n                /* \"#utility.yul\":1511:1588   */\n              swap2\n              swap1\n              pop\n              jump\t// out\n                /* \"#utility.yul\":1594:1712   */\n            tag_84:\n                /* \"#utility.yul\":1681:1705   */\n              tag_116\n                /* \"#utility.yul\":1699:1704   */\n              dup2\n                /* \"#utility.yul\":1681:1705   */\n              tag_83\n              jump\t// in\n            tag_116:\n                /* \"#utility.yul\":1676:1679   */\n              dup3\n                /* \"#utility.yul\":1669:1706   */\n              mstore\n                /* \"#utility.yul\":1594:1712   */\n              pop\n              pop\n              jump\t// out\n                /* \"#utility.yul\":1718:1940   */\n            tag_22:\n                /* \"#utility.yul\":1811:1815   */\n              0x00\n                /* \"#utility.yul\":1849:1851   */\n              0x20\n                /* \"#utility.yul\":1838:1847   */\n              dup3\n                /* \"#utility.yul\":1834:1852   */\n              add\n                /* \"#utility.yul\":1826:1852   */\n              swap1\n              pop\n                /* \"#utility.yul\":1862:1933   */\n              tag_118\n                /* \"#utility.yul\":1930:1931   */\n              0x00\n                /* \"#utility.yul\":1919:1928   */\n              dup4\n                /* \"#utility.yul\":1915:1932   */\n              add\n                /* \"#utility.yul\":1906:1912   */\n              dup5\n                /* \"#utility.yul\":1862:1933   */\n              tag_84\n              jump\t// in\n            tag_118:\n                /* \"#utility.yul\":1718:1940   */\n              swap3\n              swap2\n              pop\n              pop\n              jump\t// out\n                /* \"#utility.yul\":2027:2144   */\n            tag_86:\n                /* \"#utility.yul\":2136:2137   */\n              0x00\n                /* \"#utility.yul\":2133:2134   */\n              0x00\n                /* \"#utility.yul\":2126:2138   */\n              revert\n                /* \"#utility.yul\":2273:2395   */\n            tag_88:\n                /* \"#utility.yul\":2346:2370   */\n              tag_123\n                /* \"#utility.yul\":2364:2369   */\n              dup2\n                /* \"#utility.yul\":2346:2370   */\n              tag_76\n              jump\t// in\n            tag_123:\n                /* \"#utility.yul\":2339:2344   */\n              dup2\n                /* \"#utility.yul\":2336:2371   */\n              eq\n                /* \"#utility.yul\":2326:2389   */\n              tag_124\n              jumpi\n                /* \"#utility.yul\":2385:2386   */\n              0x00\n                /* \"#utility.yul\":2382:2383   */\n              0x00\n                /* \"#utility.yul\":2375:2387   */\n              revert\n                /* \"#utility.yul\":2326:2389   */\n            tag_124:\n                /* \"#utility.yul\":2273:2395   */\n              pop\n              jump\t// out\n                /* \"#utility.yul\":2401:2540   */\n            tag_89:\n                /* \"#utility.yul\":2447:2452   */\n              0x00\n                /* \"#utility.yul\":2485:2491   */\n              dup2\n                /* \"#utility.yul\":2472:2492   */\n              calldataload\n                /* \"#utility.yul\":2463:2492   */\n              swap1\n              pop\n                /* \"#utility.yul\":2501:2534   */\n              tag_126\n                /* \"#utility.yul\":2528:2533   */\n              dup2\n                /* \"#utility.yul\":2501:2534   */\n              tag_88\n              jump\t// in\n            tag_126:\n                /* \"#utility.yul\":2401:2540   */\n              swap3\n              swap2\n              pop\n              pop\n              jump\t// out\n                /* \"#utility.yul\":2546:2875   */\n            tag_25:\n                /* \"#utility.yul\":2605:2611   */\n              0x00\n                /* \"#utility.yul\":2654:2656   */\n              0x20\n                /* \"#utility.yul\":2642:2651   */\n              dup3\n                /* \"#utility.yul\":2633:2640   */\n              dup5\n                /* \"#utility.yul\":2629:2652   */\n              sub\n                /* \"#utility.yul\":2625:2657   */\n              slt\n                /* \"#utility.yul\":2622:2741   */\n              iszero\n              tag_128\n              jumpi\n                /* \"#utility.yul\":2660:2739   */\n              tag_129\n              tag_86\n              jump\t// in\n            tag_129:\n                /* \"#utility.yul\":2622:2741   */\n            tag_128:\n                /* \"#utility.yul\":2780:2781   */\n              0x00\n                /* \"#utility.yul\":2805:2858   */\n              tag_130\n                /* \"#utility.yul\":2850:2857   */\n              dup5\n                /* \"#utility.yul\":2841:2847   */\n              dup3\n                /* \"#utility.yul\":2830:2839   */\n              dup6\n                /* \"#utility.yul\":2826:2848   */\n              add\n                /* \"#utility.yul\":2805:2858   */\n              tag_89\n              jump\t// in\n            tag_130:\n                /* \"#utility.yul\":2795:2858   */\n              swap2\n              pop\n                /* \"#utility.yul\":2751:2868   */\n              pop\n                /* \"#utility.yul\":2546:2875   */\n              swap3\n              swap2\n              pop\n              pop\n              jump\t// out\n                /* \"#utility.yul\":2881:3003   */\n            tag_90:\n                /* \"#utility.yul\":2954:2978   */\n              tag_132\n                /* \"#utility.yul\":2972:2977   */\n              dup2\n                /* \"#utility.yul\":2954:2978   */\n              tag_83\n              jump\t// in\n            tag_132:\n                /* \"#utility.yul\":2947:2952   */\n              dup2\n                /* \"#utility.yul\":2944:2979   */\n              eq\n                /* \"#utility.yul\":2934:2997   */\n              tag_133\n              jumpi\n                /* \"#utility.yul\":2993:2994   */\n              0x00\n                /* \"#utility.yul\":2990:2991   */\n              0x00\n                /* \"#utility.yul\":2983:2995   */\n              revert\n                /* \"#utility.yul\":2934:2997   */\n            tag_133:\n                /* \"#utility.yul\":2881:3003   */\n              pop\n              jump\t// out\n                /* \"#utility.yul\":3009:3148   */\n            tag_91:\n                /* \"#utility.yul\":3055:3060   */\n              0x00\n                /* \"#utility.yul\":3093:3099   */\n              dup2\n                /* \"#utility.yul\":3080:3100   */\n              calldataload\n                /* \"#utility.yul\":3071:3100   */\n              swap1\n              pop\n                /* \"#utility.yul\":3109:3142   */\n              tag_135\n                /* \"#utility.yul\":3136:3141   */\n              dup2\n                /* \"#utility.yul\":3109:3142   */\n              tag_90\n              jump\t// in\n            tag_135:\n                /* \"#utility.yul\":3009:3148   */\n              swap3\n              swap2\n              pop\n              pop\n              jump\t// out\n                /* \"#utility.yul\":3154:3628   */\n            tag_29:\n                /* \"#utility.yul\":3222:3228   */\n              0x00\n                /* \"#utility.yul\":3230:3236   */\n              0x00\n                /* \"#utility.yul\":3279:3281   */\n              0x40\n                /* \"#utility.yul\":3267:3276   */\n              dup4\n                /* \"#utility.yul\":3258:3265   */\n              dup6\n                /* \"#utility.yul\":3254:3277   */\n              sub\n                /* \"#utility.yul\":3250:3282   */\n              slt\n                /* \"#utility.yul\":3247:3366   */\n              iszero\n              tag_137\n              jumpi\n                /* \"#utility.yul\":3285:3364   */\n              tag_138\n              tag_86\n              jump\t// in\n            tag_138:\n                /* \"#utility.yul\":3247:3366   */\n            tag_137:\n                /* \"#utility.yul\":3405:3406   */\n              0x00\n                /* \"#utility.yul\":3430:3483   */\n              tag_139\n                /* \"#utility.yul\":3475:3482   */\n              dup6\n                /* \"#utility.yul\":3466:3472   */\n              dup3\n                /* \"#utility.yul\":3455:3464   */\n              dup7\n                /* \"#utility.yul\":3451:3473   */\n              add\n                /* \"#utility.yul\":3430:3483   */\n              tag_89\n              jump\t// in\n            tag_139:\n                /* \"#utility.yul\":3420:3483   */\n              swap3\n              pop\n                /* \"#utility.yul\":3376:3493   */\n              pop\n                /* \"#utility.yul\":3532:3534   */\n              0x20\n                /* \"#utility.yul\":3558:3611   */\n              tag_140\n                /* \"#utility.yul\":3603:3610   */\n              dup6\n                /* \"#utility.yul\":3594:3600   */\n              dup3\n                /* \"#utility.yul\":3583:3592   */\n              dup7\n                /* \"#utility.yul\":3579:3601   */\n              add\n                /* \"#utility.yul\":3558:3611   */\n              tag_91\n              jump\t// in\n            tag_140:\n                /* \"#utility.yul\":3548:3611   */\n              swap2\n              pop\n                /* \"#utility.yul\":3503:3621   */\n              pop\n                /* \"#utility.yul\":3154:3628   */\n              swap3\n              pop\n              swap3\n              swap1\n              pop\n              jump\t// out\n                /* \"#utility.yul\":3634:3777   */\n            tag_92:\n                /* \"#utility.yul\":3691:3696   */\n              0x00\n                /* \"#utility.yul\":3722:3728   */\n              dup2\n                /* \"#utility.yul\":3716:3729   */\n              mload\n                /* \"#utility.yul\":3707:3729   */\n              swap1\n              pop\n                /* \"#utility.yul\":3738:3771   */\n              tag_142\n                /* \"#utility.yul\":3765:3770   */\n              dup2\n                /* \"#utility.yul\":3738:3771   */\n              tag_90\n              jump\t// in\n            tag_142:\n                /* \"#utility.yul\":3634:3777   */\n              swap3\n              swap2\n              pop\n              pop\n              jump\t// out\n                /* \"#utility.yul\":3783:4134   */\n            tag_43:\n                /* \"#utility.yul\":3853:3859   */\n              0x00\n                /* \"#utility.yul\":3902:3904   */\n              0x20\n                /* \"#utility.yul\":3890:3899   */\n              dup3\n                /* \"#utility.yul\":3881:3888   */\n              dup5\n                /* \"#utility.yul\":3877:3900   */\n              sub\n                /* \"#utility.yul\":3873:3905   */\n              slt\n                /* \"#utility.yul\":3870:3989   */\n              iszero\n              tag_144\n              jumpi\n                /* \"#utility.yul\":3908:3987   */\n              tag_145\n              tag_86\n              jump\t// in\n            tag_145:\n                /* \"#utility.yul\":3870:3989   */\n            tag_144:\n                /* \"#utility.yul\":4028:4029   */\n              0x00\n                /* \"#utility.yul\":4053:4117   */\n              tag_146\n                /* \"#utility.yul\":4109:4116   */\n              dup5\n                /* \"#utility.yul\":4100:4106   */\n              dup3\n                /* \"#utility.yul\":4089:4098   */\n              dup6\n                /* \"#utility.yul\":4085:4107   */\n              add\n                /* \"#utility.yul\":4053:4117   */\n              tag_92\n              jump\t// in\n            tag_146:\n                /* \"#utility.yul\":4043:4117   */\n              swap2\n              pop\n                /* \"#utility.yul\":3999:4127   */\n              pop\n                /* \"#utility.yul\":3783:4134   */\n              swap3\n              swap2\n              pop\n              pop\n              jump\t// out\n                /* \"#utility.yul\":4140:4472   */\n            tag_66:\n                /* \"#utility.yul\":4261:4265   */\n              0x00\n                /* \"#utility.yul\":4299:4301   */\n              0x40\n                /* \"#utility.yul\":4288:4297   */\n              dup3\n                /* \"#utility.yul\":4284:4302   */\n              add\n                /* \"#utility.yul\":4276:4302   */\n              swap1\n              pop\n                /* \"#utility.yul\":4312:4383   */\n              tag_148\n                /* \"#utility.yul\":4380:4381   */\n              0x00\n                /* \"#utility.yul\":4369:4378   */\n              dup4\n                /* \"#utility.yul\":4365:4382   */\n              add\n                /* \"#utility.yul\":4356:4362   */\n              dup6\n                /* \"#utility.yul\":4312:4383   */\n              tag_77\n              jump\t// in\n            tag_148:\n                /* \"#utility.yul\":4393:4465   */\n              tag_149\n                /* \"#utility.yul\":4461:4463   */\n              0x20\n                /* \"#utility.yul\":4450:4459   */\n              dup4\n                /* \"#utility.yul\":4446:4464   */\n              add\n                /* \"#utility.yul\":4437:4443   */\n              dup5\n                /* \"#utility.yul\":4393:4465   */\n              tag_84\n              jump\t// in\n            tag_149:\n                /* \"#utility.yul\":4140:4472   */\n              swap4\n              swap3\n              pop\n              pop\n              pop\n              jump\t// out\n\n            auxdata: 0xa2646970667358221220c1198753c4d47eaa95c0862639943fda4ce251fcbe9ffe29421da0c40b3fd0c264736f6c634300081d0033\n        }\n    }\n\n    auxdata: 0xa264697066735822122076cd469e468e4f8a82ff466f7e348b5a291029f5c651f271d40db38a0d8c29f964736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1688": {
									"entryPoint": null,
									"id": 1688,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_393": {
									"entryPoint": null,
									"id": 393,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_491": {
									"entryPoint": null,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 469,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1028,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 751,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1093,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 802,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 1138,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2020,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_b0625f87e31dc518e790285a825bb3c4cd66fc859c380f7e244181f8081e3f92_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2258,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f11883101265ee814d3ec8ca32dd1376e23cf07c21786604713151f75410aa5a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2116,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2035,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b0625f87e31dc518e790285a825bb3c4cd66fc859c380f7e244181f8081e3f92__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2292,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f11883101265ee814d3ec8ca32dd1376e23cf07c21786604713151f75410aa5a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2150,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 940,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 664,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 966,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1397,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1294,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2060,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1676,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 712,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 681,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 771,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1642,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1532,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1813,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1014,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1415,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1349,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1786,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 891,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1523,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1758,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 1304,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 846,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1565,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 822,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 826,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 677,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 673,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1430,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1746,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1618,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_b0625f87e31dc518e790285a825bb3c4cd66fc859c380f7e244181f8081e3f92": {
									"entryPoint": 2180,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f11883101265ee814d3ec8ca32dd1376e23cf07c21786604713151f75410aa5a": {
									"entryPoint": 2076,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1442,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1574,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 729,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 780,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1611,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:12115:13",
										"nodeType": "YulBlock",
										"src": "0:12115:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "379:81:13",
													"nodeType": "YulBlock",
													"src": "379:81:13",
													"statements": [
														{
															"nativeSrc": "389:65:13",
															"nodeType": "YulAssignment",
															"src": "389:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:13",
																		"nodeType": "YulLiteral",
																		"src": "411:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:13"
																},
																"nativeSrc": "400:54:13",
																"nodeType": "YulFunctionCall",
																"src": "400:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:13",
														"nodeType": "YulTypedName",
														"src": "361:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:13",
														"nodeType": "YulTypedName",
														"src": "371:7:13",
														"type": ""
													}
												],
												"src": "334:126:13"
											},
											{
												"body": {
													"nativeSrc": "511:51:13",
													"nodeType": "YulBlock",
													"src": "511:51:13",
													"statements": [
														{
															"nativeSrc": "521:35:13",
															"nodeType": "YulAssignment",
															"src": "521:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:13"
																},
																"nativeSrc": "532:24:13",
																"nodeType": "YulFunctionCall",
																"src": "532:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:13",
														"nodeType": "YulTypedName",
														"src": "493:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:13",
														"nodeType": "YulTypedName",
														"src": "503:7:13",
														"type": ""
													}
												],
												"src": "466:96:13"
											},
											{
												"body": {
													"nativeSrc": "611:79:13",
													"nodeType": "YulBlock",
													"src": "611:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:13",
																"nodeType": "YulBlock",
																"src": "668:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:13",
																					"nodeType": "YulLiteral",
																					"src": "677:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:13",
																					"nodeType": "YulLiteral",
																					"src": "680:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:13"
																			},
																			"nativeSrc": "670:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:13"
																		},
																		"nativeSrc": "670:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:13"
																				},
																				"nativeSrc": "641:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:13"
																		},
																		"nativeSrc": "631:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:13"
																},
																"nativeSrc": "624:43:13",
																"nodeType": "YulFunctionCall",
																"src": "624:43:13"
															},
															"nativeSrc": "621:63:13",
															"nodeType": "YulIf",
															"src": "621:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:13",
														"nodeType": "YulTypedName",
														"src": "604:5:13",
														"type": ""
													}
												],
												"src": "568:122:13"
											},
											{
												"body": {
													"nativeSrc": "759:80:13",
													"nodeType": "YulBlock",
													"src": "759:80:13",
													"statements": [
														{
															"nativeSrc": "769:22:13",
															"nodeType": "YulAssignment",
															"src": "769:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:13"
																},
																"nativeSrc": "778:13:13",
																"nodeType": "YulFunctionCall",
																"src": "778:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:13"
																},
																"nativeSrc": "800:33:13",
																"nodeType": "YulFunctionCall",
																"src": "800:33:13"
															},
															"nativeSrc": "800:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:13"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:13",
														"nodeType": "YulTypedName",
														"src": "737:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:13",
														"nodeType": "YulTypedName",
														"src": "745:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:13",
														"nodeType": "YulTypedName",
														"src": "753:5:13",
														"type": ""
													}
												],
												"src": "696:143:13"
											},
											{
												"body": {
													"nativeSrc": "890:32:13",
													"nodeType": "YulBlock",
													"src": "890:32:13",
													"statements": [
														{
															"nativeSrc": "900:16:13",
															"nodeType": "YulAssignment",
															"src": "900:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "911:5:13",
																"nodeType": "YulIdentifier",
																"src": "911:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "900:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "845:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "872:5:13",
														"nodeType": "YulTypedName",
														"src": "872:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "882:7:13",
														"nodeType": "YulTypedName",
														"src": "882:7:13",
														"type": ""
													}
												],
												"src": "845:77:13"
											},
											{
												"body": {
													"nativeSrc": "971:79:13",
													"nodeType": "YulBlock",
													"src": "971:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:13",
																"nodeType": "YulBlock",
																"src": "1028:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:13"
																			},
																			"nativeSrc": "1030:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:13"
																		},
																		"nativeSrc": "1030:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1001:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:13"
																				},
																				"nativeSrc": "1001:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:13"
																		},
																		"nativeSrc": "991:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:13"
																},
																"nativeSrc": "984:43:13",
																"nodeType": "YulFunctionCall",
																"src": "984:43:13"
															},
															"nativeSrc": "981:63:13",
															"nodeType": "YulIf",
															"src": "981:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "928:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:13",
														"nodeType": "YulTypedName",
														"src": "964:5:13",
														"type": ""
													}
												],
												"src": "928:122:13"
											},
											{
												"body": {
													"nativeSrc": "1119:80:13",
													"nodeType": "YulBlock",
													"src": "1119:80:13",
													"statements": [
														{
															"nativeSrc": "1129:22:13",
															"nodeType": "YulAssignment",
															"src": "1129:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:13"
																},
																"nativeSrc": "1138:13:13",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1160:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:13"
																},
																"nativeSrc": "1160:33:13",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:13"
															},
															"nativeSrc": "1160:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1056:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:13",
														"nodeType": "YulTypedName",
														"src": "1097:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:13",
														"nodeType": "YulTypedName",
														"src": "1105:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:13",
														"nodeType": "YulTypedName",
														"src": "1113:5:13",
														"type": ""
													}
												],
												"src": "1056:143:13"
											},
											{
												"body": {
													"nativeSrc": "1294:28:13",
													"nodeType": "YulBlock",
													"src": "1294:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1311:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1311:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1314:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1314:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1304:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1304:6:13"
																},
																"nativeSrc": "1304:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1304:12:13"
															},
															"nativeSrc": "1304:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "1304:12:13"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "1205:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "1205:117:13"
											},
											{
												"body": {
													"nativeSrc": "1417:28:13",
													"nodeType": "YulBlock",
													"src": "1417:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1434:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1434:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1437:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1437:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1427:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1427:6:13"
																},
																"nativeSrc": "1427:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1427:12:13"
															},
															"nativeSrc": "1427:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "1427:12:13"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "1328:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "1328:117:13"
											},
											{
												"body": {
													"nativeSrc": "1499:54:13",
													"nodeType": "YulBlock",
													"src": "1499:54:13",
													"statements": [
														{
															"nativeSrc": "1509:38:13",
															"nodeType": "YulAssignment",
															"src": "1509:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1527:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1527:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1534:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1534:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1523:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1523:3:13"
																		},
																		"nativeSrc": "1523:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1523:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1543:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1543:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1539:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1539:3:13"
																		},
																		"nativeSrc": "1539:7:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1539:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1519:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1519:3:13"
																},
																"nativeSrc": "1519:28:13",
																"nodeType": "YulFunctionCall",
																"src": "1519:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1509:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1509:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1451:102:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1482:5:13",
														"nodeType": "YulTypedName",
														"src": "1482:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1492:6:13",
														"nodeType": "YulTypedName",
														"src": "1492:6:13",
														"type": ""
													}
												],
												"src": "1451:102:13"
											},
											{
												"body": {
													"nativeSrc": "1587:152:13",
													"nodeType": "YulBlock",
													"src": "1587:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1604:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1604:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1607:77:13",
																		"nodeType": "YulLiteral",
																		"src": "1607:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1597:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1597:6:13"
																},
																"nativeSrc": "1597:88:13",
																"nodeType": "YulFunctionCall",
																"src": "1597:88:13"
															},
															"nativeSrc": "1597:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "1597:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1701:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1701:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1704:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1704:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1694:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1694:6:13"
																},
																"nativeSrc": "1694:15:13",
																"nodeType": "YulFunctionCall",
																"src": "1694:15:13"
															},
															"nativeSrc": "1694:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "1694:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1725:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1725:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1728:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1728:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1718:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1718:6:13"
																},
																"nativeSrc": "1718:15:13",
																"nodeType": "YulFunctionCall",
																"src": "1718:15:13"
															},
															"nativeSrc": "1718:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "1718:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1559:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "1559:180:13"
											},
											{
												"body": {
													"nativeSrc": "1788:238:13",
													"nodeType": "YulBlock",
													"src": "1788:238:13",
													"statements": [
														{
															"nativeSrc": "1798:58:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1798:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1820:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1820:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "1850:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "1850:4:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1828:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "1828:21:13"
																		},
																		"nativeSrc": "1828:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1828:27:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1816:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1816:3:13"
																},
																"nativeSrc": "1816:40:13",
																"nodeType": "YulFunctionCall",
																"src": "1816:40:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1802:10:13",
																	"nodeType": "YulTypedName",
																	"src": "1802:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1967:22:13",
																"nodeType": "YulBlock",
																"src": "1967:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1969:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "1969:16:13"
																			},
																			"nativeSrc": "1969:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1969:18:13"
																		},
																		"nativeSrc": "1969:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1969:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1910:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "1910:10:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1922:18:13",
																				"nodeType": "YulLiteral",
																				"src": "1922:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1907:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1907:2:13"
																		},
																		"nativeSrc": "1907:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1907:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1946:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "1946:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1958:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1958:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1943:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1943:2:13"
																		},
																		"nativeSrc": "1943:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1943:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1904:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1904:2:13"
																},
																"nativeSrc": "1904:62:13",
																"nodeType": "YulFunctionCall",
																"src": "1904:62:13"
															},
															"nativeSrc": "1901:88:13",
															"nodeType": "YulIf",
															"src": "1901:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2005:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2005:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "2009:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "2009:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1998:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1998:6:13"
																},
																"nativeSrc": "1998:22:13",
																"nodeType": "YulFunctionCall",
																"src": "1998:22:13"
															},
															"nativeSrc": "1998:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "1998:22:13"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "1745:281:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1774:6:13",
														"nodeType": "YulTypedName",
														"src": "1774:6:13",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "1782:4:13",
														"nodeType": "YulTypedName",
														"src": "1782:4:13",
														"type": ""
													}
												],
												"src": "1745:281:13"
											},
											{
												"body": {
													"nativeSrc": "2073:88:13",
													"nodeType": "YulBlock",
													"src": "2073:88:13",
													"statements": [
														{
															"nativeSrc": "2083:30:13",
															"nodeType": "YulAssignment",
															"src": "2083:30:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "2093:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "2093:18:13"
																},
																"nativeSrc": "2093:20:13",
																"nodeType": "YulFunctionCall",
																"src": "2093:20:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2083:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2083:6:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2142:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2142:6:13"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "2150:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2150:4:13"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "2122:19:13",
																	"nodeType": "YulIdentifier",
																	"src": "2122:19:13"
																},
																"nativeSrc": "2122:33:13",
																"nodeType": "YulFunctionCall",
																"src": "2122:33:13"
															},
															"nativeSrc": "2122:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "2122:33:13"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "2032:129:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "2057:4:13",
														"nodeType": "YulTypedName",
														"src": "2057:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "2066:6:13",
														"nodeType": "YulTypedName",
														"src": "2066:6:13",
														"type": ""
													}
												],
												"src": "2032:129:13"
											},
											{
												"body": {
													"nativeSrc": "2234:241:13",
													"nodeType": "YulBlock",
													"src": "2234:241:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2339:22:13",
																"nodeType": "YulBlock",
																"src": "2339:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2341:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "2341:16:13"
																			},
																			"nativeSrc": "2341:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2341:18:13"
																		},
																		"nativeSrc": "2341:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2341:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2311:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2311:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2319:18:13",
																		"nodeType": "YulLiteral",
																		"src": "2319:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2308:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "2308:2:13"
																},
																"nativeSrc": "2308:30:13",
																"nodeType": "YulFunctionCall",
																"src": "2308:30:13"
															},
															"nativeSrc": "2305:56:13",
															"nodeType": "YulIf",
															"src": "2305:56:13"
														},
														{
															"nativeSrc": "2371:37:13",
															"nodeType": "YulAssignment",
															"src": "2371:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2401:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2401:6:13"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "2379:21:13",
																	"nodeType": "YulIdentifier",
																	"src": "2379:21:13"
																},
																"nativeSrc": "2379:29:13",
																"nodeType": "YulFunctionCall",
																"src": "2379:29:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2371:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2371:4:13"
																}
															]
														},
														{
															"nativeSrc": "2445:23:13",
															"nodeType": "YulAssignment",
															"src": "2445:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "2457:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2457:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2463:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2463:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2453:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2453:3:13"
																},
																"nativeSrc": "2453:15:13",
																"nodeType": "YulFunctionCall",
																"src": "2453:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2445:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2445:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "2167:308:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "2218:6:13",
														"nodeType": "YulTypedName",
														"src": "2218:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "2229:4:13",
														"nodeType": "YulTypedName",
														"src": "2229:4:13",
														"type": ""
													}
												],
												"src": "2167:308:13"
											},
											{
												"body": {
													"nativeSrc": "2543:77:13",
													"nodeType": "YulBlock",
													"src": "2543:77:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "2560:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2560:3:13"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "2565:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2565:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2570:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2570:6:13"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "2554:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2554:5:13"
																},
																"nativeSrc": "2554:23:13",
																"nodeType": "YulFunctionCall",
																"src": "2554:23:13"
															},
															"nativeSrc": "2554:23:13",
															"nodeType": "YulExpressionStatement",
															"src": "2554:23:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2597:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "2597:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2602:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2602:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2593:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2593:3:13"
																		},
																		"nativeSrc": "2593:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2593:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2611:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2611:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2586:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2586:6:13"
																},
																"nativeSrc": "2586:27:13",
																"nodeType": "YulFunctionCall",
																"src": "2586:27:13"
															},
															"nativeSrc": "2586:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "2586:27:13"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "2481:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2525:3:13",
														"nodeType": "YulTypedName",
														"src": "2525:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "2530:3:13",
														"nodeType": "YulTypedName",
														"src": "2530:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2535:6:13",
														"nodeType": "YulTypedName",
														"src": "2535:6:13",
														"type": ""
													}
												],
												"src": "2481:139:13"
											},
											{
												"body": {
													"nativeSrc": "2721:339:13",
													"nodeType": "YulBlock",
													"src": "2721:339:13",
													"statements": [
														{
															"nativeSrc": "2731:75:13",
															"nodeType": "YulAssignment",
															"src": "2731:75:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2798:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2798:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "2756:41:13",
																			"nodeType": "YulIdentifier",
																			"src": "2756:41:13"
																		},
																		"nativeSrc": "2756:49:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2756:49:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "2740:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "2740:15:13"
																},
																"nativeSrc": "2740:66:13",
																"nodeType": "YulFunctionCall",
																"src": "2740:66:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2731:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2731:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2822:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2822:5:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2829:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2829:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2815:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2815:6:13"
																},
																"nativeSrc": "2815:21:13",
																"nodeType": "YulFunctionCall",
																"src": "2815:21:13"
															},
															"nativeSrc": "2815:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "2815:21:13"
														},
														{
															"nativeSrc": "2845:27:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2845:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2860:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2860:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2867:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2867:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2856:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2856:3:13"
																},
																"nativeSrc": "2856:16:13",
																"nodeType": "YulFunctionCall",
																"src": "2856:16:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2849:3:13",
																	"nodeType": "YulTypedName",
																	"src": "2849:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2910:83:13",
																"nodeType": "YulBlock",
																"src": "2910:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2912:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "2912:77:13"
																			},
																			"nativeSrc": "2912:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2912:79:13"
																		},
																		"nativeSrc": "2912:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2912:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2891:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "2891:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2896:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2896:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2887:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2887:3:13"
																		},
																		"nativeSrc": "2887:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2887:16:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2905:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2905:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2884:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "2884:2:13"
																},
																"nativeSrc": "2884:25:13",
																"nodeType": "YulFunctionCall",
																"src": "2884:25:13"
															},
															"nativeSrc": "2881:112:13",
															"nodeType": "YulIf",
															"src": "2881:112:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3037:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3037:3:13"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "3042:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3042:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3047:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3047:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "3002:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "3002:34:13"
																},
																"nativeSrc": "3002:52:13",
																"nodeType": "YulFunctionCall",
																"src": "3002:52:13"
															},
															"nativeSrc": "3002:52:13",
															"nodeType": "YulExpressionStatement",
															"src": "3002:52:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2626:434:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2694:3:13",
														"nodeType": "YulTypedName",
														"src": "2694:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2699:6:13",
														"nodeType": "YulTypedName",
														"src": "2699:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2707:3:13",
														"nodeType": "YulTypedName",
														"src": "2707:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2715:5:13",
														"nodeType": "YulTypedName",
														"src": "2715:5:13",
														"type": ""
													}
												],
												"src": "2626:434:13"
											},
											{
												"body": {
													"nativeSrc": "3153:282:13",
													"nodeType": "YulBlock",
													"src": "3153:282:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3202:83:13",
																"nodeType": "YulBlock",
																"src": "3202:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "3204:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "3204:77:13"
																			},
																			"nativeSrc": "3204:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3204:79:13"
																		},
																		"nativeSrc": "3204:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3204:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "3181:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3181:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3189:4:13",
																						"nodeType": "YulLiteral",
																						"src": "3189:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3177:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3177:3:13"
																				},
																				"nativeSrc": "3177:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3177:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "3196:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "3196:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3173:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3173:3:13"
																		},
																		"nativeSrc": "3173:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3173:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3166:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3166:6:13"
																},
																"nativeSrc": "3166:35:13",
																"nodeType": "YulFunctionCall",
																"src": "3166:35:13"
															},
															"nativeSrc": "3163:122:13",
															"nodeType": "YulIf",
															"src": "3163:122:13"
														},
														{
															"nativeSrc": "3294:27:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3294:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3314:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3314:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3308:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3308:5:13"
																},
																"nativeSrc": "3308:13:13",
																"nodeType": "YulFunctionCall",
																"src": "3308:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3298:6:13",
																	"nodeType": "YulTypedName",
																	"src": "3298:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3330:99:13",
															"nodeType": "YulAssignment",
															"src": "3330:99:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3402:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3402:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3410:4:13",
																				"nodeType": "YulLiteral",
																				"src": "3410:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3398:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3398:3:13"
																		},
																		"nativeSrc": "3398:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3398:17:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3417:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3417:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3425:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3425:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "3339:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "3339:58:13"
																},
																"nativeSrc": "3339:90:13",
																"nodeType": "YulFunctionCall",
																"src": "3339:90:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3330:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3330:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "3080:355:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3131:6:13",
														"nodeType": "YulTypedName",
														"src": "3131:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3139:3:13",
														"nodeType": "YulTypedName",
														"src": "3139:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "3147:5:13",
														"nodeType": "YulTypedName",
														"src": "3147:5:13",
														"type": ""
													}
												],
												"src": "3080:355:13"
											},
											{
												"body": {
													"nativeSrc": "3589:1018:13",
													"nodeType": "YulBlock",
													"src": "3589:1018:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3636:83:13",
																"nodeType": "YulBlock",
																"src": "3636:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3638:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "3638:77:13"
																			},
																			"nativeSrc": "3638:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3638:79:13"
																		},
																		"nativeSrc": "3638:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3638:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3610:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3610:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3619:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3619:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3606:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3606:3:13"
																		},
																		"nativeSrc": "3606:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3606:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3631:3:13",
																		"nodeType": "YulLiteral",
																		"src": "3631:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3602:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3602:3:13"
																},
																"nativeSrc": "3602:33:13",
																"nodeType": "YulFunctionCall",
																"src": "3602:33:13"
															},
															"nativeSrc": "3599:120:13",
															"nodeType": "YulIf",
															"src": "3599:120:13"
														},
														{
															"nativeSrc": "3729:128:13",
															"nodeType": "YulBlock",
															"src": "3729:128:13",
															"statements": [
																{
																	"nativeSrc": "3744:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3744:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3758:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3758:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3748:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3748:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3773:74:13",
																	"nodeType": "YulAssignment",
																	"src": "3773:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3819:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3819:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3830:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3830:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3815:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3815:3:13"
																				},
																				"nativeSrc": "3815:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3815:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3839:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3839:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "3783:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "3783:31:13"
																		},
																		"nativeSrc": "3783:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3783:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3773:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3773:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3867:129:13",
															"nodeType": "YulBlock",
															"src": "3867:129:13",
															"statements": [
																{
																	"nativeSrc": "3882:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3882:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3896:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3896:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3886:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3886:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3912:74:13",
																	"nodeType": "YulAssignment",
																	"src": "3912:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3958:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3958:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3969:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3969:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3954:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3954:3:13"
																				},
																				"nativeSrc": "3954:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3954:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3978:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3978:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "3922:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "3922:31:13"
																		},
																		"nativeSrc": "3922:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3922:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3912:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3912:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4006:292:13",
															"nodeType": "YulBlock",
															"src": "4006:292:13",
															"statements": [
																{
																	"nativeSrc": "4021:39:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4021:39:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4045:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4045:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4056:2:13",
																						"nodeType": "YulLiteral",
																						"src": "4056:2:13",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4041:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4041:3:13"
																				},
																				"nativeSrc": "4041:18:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4041:18:13"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4035:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "4035:5:13"
																		},
																		"nativeSrc": "4035:25:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4035:25:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4025:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4025:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4107:83:13",
																		"nodeType": "YulBlock",
																		"src": "4107:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4109:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "4109:77:13"
																					},
																					"nativeSrc": "4109:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4109:79:13"
																				},
																				"nativeSrc": "4109:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "4109:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4079:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4079:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4087:18:13",
																				"nodeType": "YulLiteral",
																				"src": "4087:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4076:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "4076:2:13"
																		},
																		"nativeSrc": "4076:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4076:30:13"
																	},
																	"nativeSrc": "4073:117:13",
																	"nodeType": "YulIf",
																	"src": "4073:117:13"
																},
																{
																	"nativeSrc": "4204:84:13",
																	"nodeType": "YulAssignment",
																	"src": "4204:84:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4260:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4260:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4271:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4271:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4256:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4256:3:13"
																				},
																				"nativeSrc": "4256:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4256:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4280:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4280:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "4214:41:13",
																			"nodeType": "YulIdentifier",
																			"src": "4214:41:13"
																		},
																		"nativeSrc": "4214:74:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4214:74:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4204:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4204:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4308:292:13",
															"nodeType": "YulBlock",
															"src": "4308:292:13",
															"statements": [
																{
																	"nativeSrc": "4323:39:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4323:39:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4347:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4347:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4358:2:13",
																						"nodeType": "YulLiteral",
																						"src": "4358:2:13",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4343:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4343:3:13"
																				},
																				"nativeSrc": "4343:18:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4343:18:13"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4337:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "4337:5:13"
																		},
																		"nativeSrc": "4337:25:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4337:25:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4327:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4327:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4409:83:13",
																		"nodeType": "YulBlock",
																		"src": "4409:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4411:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "4411:77:13"
																					},
																					"nativeSrc": "4411:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4411:79:13"
																				},
																				"nativeSrc": "4411:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "4411:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4381:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4381:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4389:18:13",
																				"nodeType": "YulLiteral",
																				"src": "4389:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4378:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "4378:2:13"
																		},
																		"nativeSrc": "4378:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4378:30:13"
																	},
																	"nativeSrc": "4375:117:13",
																	"nodeType": "YulIf",
																	"src": "4375:117:13"
																},
																{
																	"nativeSrc": "4506:84:13",
																	"nodeType": "YulAssignment",
																	"src": "4506:84:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4562:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4562:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4573:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4573:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4558:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4558:3:13"
																				},
																				"nativeSrc": "4558:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4558:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4582:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4582:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "4516:41:13",
																			"nodeType": "YulIdentifier",
																			"src": "4516:41:13"
																		},
																		"nativeSrc": "4516:74:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4516:74:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "4506:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4506:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "3441:1166:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3535:9:13",
														"nodeType": "YulTypedName",
														"src": "3535:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3546:7:13",
														"nodeType": "YulTypedName",
														"src": "3546:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3558:6:13",
														"nodeType": "YulTypedName",
														"src": "3558:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3566:6:13",
														"nodeType": "YulTypedName",
														"src": "3566:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3574:6:13",
														"nodeType": "YulTypedName",
														"src": "3574:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3582:6:13",
														"nodeType": "YulTypedName",
														"src": "3582:6:13",
														"type": ""
													}
												],
												"src": "3441:1166:13"
											},
											{
												"body": {
													"nativeSrc": "4672:40:13",
													"nodeType": "YulBlock",
													"src": "4672:40:13",
													"statements": [
														{
															"nativeSrc": "4683:22:13",
															"nodeType": "YulAssignment",
															"src": "4683:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4699:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "4699:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4693:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "4693:5:13"
																},
																"nativeSrc": "4693:12:13",
																"nodeType": "YulFunctionCall",
																"src": "4693:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4683:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4683:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4613:99:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4655:5:13",
														"nodeType": "YulTypedName",
														"src": "4655:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4665:6:13",
														"nodeType": "YulTypedName",
														"src": "4665:6:13",
														"type": ""
													}
												],
												"src": "4613:99:13"
											},
											{
												"body": {
													"nativeSrc": "4746:152:13",
													"nodeType": "YulBlock",
													"src": "4746:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4763:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4763:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4766:77:13",
																		"nodeType": "YulLiteral",
																		"src": "4766:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4756:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4756:6:13"
																},
																"nativeSrc": "4756:88:13",
																"nodeType": "YulFunctionCall",
																"src": "4756:88:13"
															},
															"nativeSrc": "4756:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "4756:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4860:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4860:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4863:4:13",
																		"nodeType": "YulLiteral",
																		"src": "4863:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4853:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4853:6:13"
																},
																"nativeSrc": "4853:15:13",
																"nodeType": "YulFunctionCall",
																"src": "4853:15:13"
															},
															"nativeSrc": "4853:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "4853:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4884:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4884:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4887:4:13",
																		"nodeType": "YulLiteral",
																		"src": "4887:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4877:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4877:6:13"
																},
																"nativeSrc": "4877:15:13",
																"nodeType": "YulFunctionCall",
																"src": "4877:15:13"
															},
															"nativeSrc": "4877:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "4877:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4718:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "4718:180:13"
											},
											{
												"body": {
													"nativeSrc": "4955:269:13",
													"nodeType": "YulBlock",
													"src": "4955:269:13",
													"statements": [
														{
															"nativeSrc": "4965:22:13",
															"nodeType": "YulAssignment",
															"src": "4965:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4979:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4979:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4985:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4985:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4975:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4975:3:13"
																},
																"nativeSrc": "4975:12:13",
																"nodeType": "YulFunctionCall",
																"src": "4975:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4965:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4965:6:13"
																}
															]
														},
														{
															"nativeSrc": "4996:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4996:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5026:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "5026:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5032:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5032:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5022:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5022:3:13"
																},
																"nativeSrc": "5022:12:13",
																"nodeType": "YulFunctionCall",
																"src": "5022:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "5000:18:13",
																	"nodeType": "YulTypedName",
																	"src": "5000:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5073:51:13",
																"nodeType": "YulBlock",
																"src": "5073:51:13",
																"statements": [
																	{
																		"nativeSrc": "5087:27:13",
																		"nodeType": "YulAssignment",
																		"src": "5087:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "5101:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "5101:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5109:4:13",
																					"nodeType": "YulLiteral",
																					"src": "5109:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5097:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "5097:3:13"
																			},
																			"nativeSrc": "5097:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5097:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "5087:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5087:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5053:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "5053:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5046:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5046:6:13"
																},
																"nativeSrc": "5046:26:13",
																"nodeType": "YulFunctionCall",
																"src": "5046:26:13"
															},
															"nativeSrc": "5043:81:13",
															"nodeType": "YulIf",
															"src": "5043:81:13"
														},
														{
															"body": {
																"nativeSrc": "5176:42:13",
																"nodeType": "YulBlock",
																"src": "5176:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "5190:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "5190:16:13"
																			},
																			"nativeSrc": "5190:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5190:18:13"
																		},
																		"nativeSrc": "5190:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5190:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5140:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "5140:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5163:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5163:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5171:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5171:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5160:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "5160:2:13"
																		},
																		"nativeSrc": "5160:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5160:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5137:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5137:2:13"
																},
																"nativeSrc": "5137:38:13",
																"nodeType": "YulFunctionCall",
																"src": "5137:38:13"
															},
															"nativeSrc": "5134:84:13",
															"nodeType": "YulIf",
															"src": "5134:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4904:320:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4939:4:13",
														"nodeType": "YulTypedName",
														"src": "4939:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4948:6:13",
														"nodeType": "YulTypedName",
														"src": "4948:6:13",
														"type": ""
													}
												],
												"src": "4904:320:13"
											},
											{
												"body": {
													"nativeSrc": "5284:87:13",
													"nodeType": "YulBlock",
													"src": "5284:87:13",
													"statements": [
														{
															"nativeSrc": "5294:11:13",
															"nodeType": "YulAssignment",
															"src": "5294:11:13",
															"value": {
																"name": "ptr",
																"nativeSrc": "5302:3:13",
																"nodeType": "YulIdentifier",
																"src": "5302:3:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5294:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5294:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5322:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5322:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "5325:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5325:3:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5315:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5315:6:13"
																},
																"nativeSrc": "5315:14:13",
																"nodeType": "YulFunctionCall",
																"src": "5315:14:13"
															},
															"nativeSrc": "5315:14:13",
															"nodeType": "YulExpressionStatement",
															"src": "5315:14:13"
														},
														{
															"nativeSrc": "5338:26:13",
															"nodeType": "YulAssignment",
															"src": "5338:26:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5356:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5356:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5359:4:13",
																		"nodeType": "YulLiteral",
																		"src": "5359:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "5346:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "5346:9:13"
																},
																"nativeSrc": "5346:18:13",
																"nodeType": "YulFunctionCall",
																"src": "5346:18:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5338:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5338:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "5230:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "5271:3:13",
														"nodeType": "YulTypedName",
														"src": "5271:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "5279:4:13",
														"nodeType": "YulTypedName",
														"src": "5279:4:13",
														"type": ""
													}
												],
												"src": "5230:141:13"
											},
											{
												"body": {
													"nativeSrc": "5421:49:13",
													"nodeType": "YulBlock",
													"src": "5421:49:13",
													"statements": [
														{
															"nativeSrc": "5431:33:13",
															"nodeType": "YulAssignment",
															"src": "5431:33:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5449:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5449:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5456:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5456:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5445:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5445:3:13"
																		},
																		"nativeSrc": "5445:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5445:14:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5461:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5461:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5441:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5441:3:13"
																},
																"nativeSrc": "5441:23:13",
																"nodeType": "YulFunctionCall",
																"src": "5441:23:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5431:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5431:6:13"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "5377:93:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5404:5:13",
														"nodeType": "YulTypedName",
														"src": "5404:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5414:6:13",
														"nodeType": "YulTypedName",
														"src": "5414:6:13",
														"type": ""
													}
												],
												"src": "5377:93:13"
											},
											{
												"body": {
													"nativeSrc": "5529:54:13",
													"nodeType": "YulBlock",
													"src": "5529:54:13",
													"statements": [
														{
															"nativeSrc": "5539:37:13",
															"nodeType": "YulAssignment",
															"src": "5539:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5564:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "5564:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5570:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "5570:5:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5560:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5560:3:13"
																},
																"nativeSrc": "5560:16:13",
																"nodeType": "YulFunctionCall",
																"src": "5560:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5539:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "5539:8:13"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "5476:107:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5504:4:13",
														"nodeType": "YulTypedName",
														"src": "5504:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5510:5:13",
														"nodeType": "YulTypedName",
														"src": "5510:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5520:8:13",
														"nodeType": "YulTypedName",
														"src": "5520:8:13",
														"type": ""
													}
												],
												"src": "5476:107:13"
											},
											{
												"body": {
													"nativeSrc": "5665:317:13",
													"nodeType": "YulBlock",
													"src": "5665:317:13",
													"statements": [
														{
															"nativeSrc": "5675:35:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5675:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5696:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "5696:10:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5708:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5708:1:13",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5692:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5692:3:13"
																},
																"nativeSrc": "5692:18:13",
																"nodeType": "YulFunctionCall",
																"src": "5692:18:13"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5679:9:13",
																	"nodeType": "YulTypedName",
																	"src": "5679:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5719:109:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5719:109:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5750:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5750:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5761:66:13",
																		"nodeType": "YulLiteral",
																		"src": "5761:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5731:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "5731:18:13"
																},
																"nativeSrc": "5731:97:13",
																"nodeType": "YulFunctionCall",
																"src": "5731:97:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5723:4:13",
																	"nodeType": "YulTypedName",
																	"src": "5723:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5837:51:13",
															"nodeType": "YulAssignment",
															"src": "5837:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5868:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5868:9:13"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5879:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "5879:8:13"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5849:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "5849:18:13"
																},
																"nativeSrc": "5849:39:13",
																"nodeType": "YulFunctionCall",
																"src": "5849:39:13"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5837:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "5837:8:13"
																}
															]
														},
														{
															"nativeSrc": "5897:30:13",
															"nodeType": "YulAssignment",
															"src": "5897:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5910:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "5910:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5921:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "5921:4:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5917:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5917:3:13"
																		},
																		"nativeSrc": "5917:9:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5917:9:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5906:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5906:3:13"
																},
																"nativeSrc": "5906:21:13",
																"nodeType": "YulFunctionCall",
																"src": "5906:21:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5897:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "5897:5:13"
																}
															]
														},
														{
															"nativeSrc": "5936:40:13",
															"nodeType": "YulAssignment",
															"src": "5936:40:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5949:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "5949:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5960:8:13",
																				"nodeType": "YulIdentifier",
																				"src": "5960:8:13"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5970:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "5970:4:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5956:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5956:3:13"
																		},
																		"nativeSrc": "5956:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5956:19:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5946:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5946:2:13"
																},
																"nativeSrc": "5946:30:13",
																"nodeType": "YulFunctionCall",
																"src": "5946:30:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5936:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5936:6:13"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5589:393:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5626:5:13",
														"nodeType": "YulTypedName",
														"src": "5626:5:13",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5633:10:13",
														"nodeType": "YulTypedName",
														"src": "5633:10:13",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5645:8:13",
														"nodeType": "YulTypedName",
														"src": "5645:8:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5658:6:13",
														"nodeType": "YulTypedName",
														"src": "5658:6:13",
														"type": ""
													}
												],
												"src": "5589:393:13"
											},
											{
												"body": {
													"nativeSrc": "6020:28:13",
													"nodeType": "YulBlock",
													"src": "6020:28:13",
													"statements": [
														{
															"nativeSrc": "6030:12:13",
															"nodeType": "YulAssignment",
															"src": "6030:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "6037:5:13",
																"nodeType": "YulIdentifier",
																"src": "6037:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6030:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6030:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5988:60:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6006:5:13",
														"nodeType": "YulTypedName",
														"src": "6006:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6016:3:13",
														"nodeType": "YulTypedName",
														"src": "6016:3:13",
														"type": ""
													}
												],
												"src": "5988:60:13"
											},
											{
												"body": {
													"nativeSrc": "6114:82:13",
													"nodeType": "YulBlock",
													"src": "6114:82:13",
													"statements": [
														{
															"nativeSrc": "6124:66:13",
															"nodeType": "YulAssignment",
															"src": "6124:66:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6182:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "6182:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "6164:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "6164:17:13"
																				},
																				"nativeSrc": "6164:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6164:24:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "6155:8:13",
																			"nodeType": "YulIdentifier",
																			"src": "6155:8:13"
																		},
																		"nativeSrc": "6155:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6155:34:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6137:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "6137:17:13"
																},
																"nativeSrc": "6137:53:13",
																"nodeType": "YulFunctionCall",
																"src": "6137:53:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6124:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "6124:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "6054:142:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6094:5:13",
														"nodeType": "YulTypedName",
														"src": "6094:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6104:9:13",
														"nodeType": "YulTypedName",
														"src": "6104:9:13",
														"type": ""
													}
												],
												"src": "6054:142:13"
											},
											{
												"body": {
													"nativeSrc": "6249:28:13",
													"nodeType": "YulBlock",
													"src": "6249:28:13",
													"statements": [
														{
															"nativeSrc": "6259:12:13",
															"nodeType": "YulAssignment",
															"src": "6259:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "6266:5:13",
																"nodeType": "YulIdentifier",
																"src": "6266:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6259:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6259:3:13"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "6202:75:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6235:5:13",
														"nodeType": "YulTypedName",
														"src": "6235:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6245:3:13",
														"nodeType": "YulTypedName",
														"src": "6245:3:13",
														"type": ""
													}
												],
												"src": "6202:75:13"
											},
											{
												"body": {
													"nativeSrc": "6359:193:13",
													"nodeType": "YulBlock",
													"src": "6359:193:13",
													"statements": [
														{
															"nativeSrc": "6369:63:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6369:63:13",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "6424:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "6424:7:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "6393:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "6393:30:13"
																},
																"nativeSrc": "6393:39:13",
																"nodeType": "YulFunctionCall",
																"src": "6393:39:13"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "6373:16:13",
																	"nodeType": "YulTypedName",
																	"src": "6373:16:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6448:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "6448:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "6488:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "6488:4:13"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6482:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "6482:5:13"
																				},
																				"nativeSrc": "6482:11:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6482:11:13"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6495:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6495:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6527:16:13",
																						"nodeType": "YulIdentifier",
																						"src": "6527:16:13"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "6503:23:13",
																					"nodeType": "YulIdentifier",
																					"src": "6503:23:13"
																				},
																				"nativeSrc": "6503:41:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6503:41:13"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "6454:27:13",
																			"nodeType": "YulIdentifier",
																			"src": "6454:27:13"
																		},
																		"nativeSrc": "6454:91:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6454:91:13"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "6441:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6441:6:13"
																},
																"nativeSrc": "6441:105:13",
																"nodeType": "YulFunctionCall",
																"src": "6441:105:13"
															},
															"nativeSrc": "6441:105:13",
															"nodeType": "YulExpressionStatement",
															"src": "6441:105:13"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "6283:269:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6336:4:13",
														"nodeType": "YulTypedName",
														"src": "6336:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6342:6:13",
														"nodeType": "YulTypedName",
														"src": "6342:6:13",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "6350:7:13",
														"nodeType": "YulTypedName",
														"src": "6350:7:13",
														"type": ""
													}
												],
												"src": "6283:269:13"
											},
											{
												"body": {
													"nativeSrc": "6607:24:13",
													"nodeType": "YulBlock",
													"src": "6607:24:13",
													"statements": [
														{
															"nativeSrc": "6617:8:13",
															"nodeType": "YulAssignment",
															"src": "6617:8:13",
															"value": {
																"kind": "number",
																"nativeSrc": "6624:1:13",
																"nodeType": "YulLiteral",
																"src": "6624:1:13",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6617:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6617:3:13"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "6558:73:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6603:3:13",
														"nodeType": "YulTypedName",
														"src": "6603:3:13",
														"type": ""
													}
												],
												"src": "6558:73:13"
											},
											{
												"body": {
													"nativeSrc": "6690:136:13",
													"nodeType": "YulBlock",
													"src": "6690:136:13",
													"statements": [
														{
															"nativeSrc": "6700:46:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6700:46:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6714:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "6714:30:13"
																},
																"nativeSrc": "6714:32:13",
																"nodeType": "YulFunctionCall",
																"src": "6714:32:13"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6704:6:13",
																	"nodeType": "YulTypedName",
																	"src": "6704:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6799:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "6799:4:13"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6805:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6805:6:13"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6813:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6813:6:13"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6755:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "6755:43:13"
																},
																"nativeSrc": "6755:65:13",
																"nodeType": "YulFunctionCall",
																"src": "6755:65:13"
															},
															"nativeSrc": "6755:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "6755:65:13"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6637:189:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6676:4:13",
														"nodeType": "YulTypedName",
														"src": "6676:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6682:6:13",
														"nodeType": "YulTypedName",
														"src": "6682:6:13",
														"type": ""
													}
												],
												"src": "6637:189:13"
											},
											{
												"body": {
													"nativeSrc": "6882:136:13",
													"nodeType": "YulBlock",
													"src": "6882:136:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6949:63:13",
																"nodeType": "YulBlock",
																"src": "6949:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6993:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "6993:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7000:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7000:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6963:29:13",
																				"nodeType": "YulIdentifier",
																				"src": "6963:29:13"
																			},
																			"nativeSrc": "6963:39:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6963:39:13"
																		},
																		"nativeSrc": "6963:39:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6963:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6902:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6902:5:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6909:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6909:3:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6899:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "6899:2:13"
																},
																"nativeSrc": "6899:14:13",
																"nodeType": "YulFunctionCall",
																"src": "6899:14:13"
															},
															"nativeSrc": "6892:120:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6914:26:13",
																"nodeType": "YulBlock",
																"src": "6914:26:13",
																"statements": [
																	{
																		"nativeSrc": "6916:22:13",
																		"nodeType": "YulAssignment",
																		"src": "6916:22:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6929:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "6929:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6936:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6936:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6925:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "6925:3:13"
																			},
																			"nativeSrc": "6925:13:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6925:13:13"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6916:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6916:5:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6896:2:13",
																"nodeType": "YulBlock",
																"src": "6896:2:13",
																"statements": []
															},
															"src": "6892:120:13"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6832:186:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6870:5:13",
														"nodeType": "YulTypedName",
														"src": "6870:5:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6877:3:13",
														"nodeType": "YulTypedName",
														"src": "6877:3:13",
														"type": ""
													}
												],
												"src": "6832:186:13"
											},
											{
												"body": {
													"nativeSrc": "7103:464:13",
													"nodeType": "YulBlock",
													"src": "7103:464:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "7129:431:13",
																"nodeType": "YulBlock",
																"src": "7129:431:13",
																"statements": [
																	{
																		"nativeSrc": "7143:54:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7143:54:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "7191:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "7191:5:13"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "7159:31:13",
																				"nodeType": "YulIdentifier",
																				"src": "7159:31:13"
																			},
																			"nativeSrc": "7159:38:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7159:38:13"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "7147:8:13",
																				"nodeType": "YulTypedName",
																				"src": "7147:8:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7210:63:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7210:63:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "7233:8:13",
																					"nodeType": "YulIdentifier",
																					"src": "7233:8:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "7261:10:13",
																							"nodeType": "YulIdentifier",
																							"src": "7261:10:13"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "7243:17:13",
																						"nodeType": "YulIdentifier",
																						"src": "7243:17:13"
																					},
																					"nativeSrc": "7243:29:13",
																					"nodeType": "YulFunctionCall",
																					"src": "7243:29:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7229:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "7229:3:13"
																			},
																			"nativeSrc": "7229:44:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7229:44:13"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "7214:11:13",
																				"nodeType": "YulTypedName",
																				"src": "7214:11:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7430:27:13",
																			"nodeType": "YulBlock",
																			"src": "7430:27:13",
																			"statements": [
																				{
																					"nativeSrc": "7432:23:13",
																					"nodeType": "YulAssignment",
																					"src": "7432:23:13",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "7447:8:13",
																						"nodeType": "YulIdentifier",
																						"src": "7447:8:13"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "7432:11:13",
																							"nodeType": "YulIdentifier",
																							"src": "7432:11:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "7414:10:13",
																					"nodeType": "YulIdentifier",
																					"src": "7414:10:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7426:2:13",
																					"nodeType": "YulLiteral",
																					"src": "7426:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "7411:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "7411:2:13"
																			},
																			"nativeSrc": "7411:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7411:18:13"
																		},
																		"nativeSrc": "7408:49:13",
																		"nodeType": "YulIf",
																		"src": "7408:49:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "7499:11:13",
																					"nodeType": "YulIdentifier",
																					"src": "7499:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "7516:8:13",
																							"nodeType": "YulIdentifier",
																							"src": "7516:8:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7544:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "7544:3:13"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "7526:17:13",
																								"nodeType": "YulIdentifier",
																								"src": "7526:17:13"
																							},
																							"nativeSrc": "7526:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "7526:22:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7512:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "7512:3:13"
																					},
																					"nativeSrc": "7512:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "7512:37:13"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "7470:28:13",
																				"nodeType": "YulIdentifier",
																				"src": "7470:28:13"
																			},
																			"nativeSrc": "7470:80:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7470:80:13"
																		},
																		"nativeSrc": "7470:80:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7470:80:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "7120:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7120:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7125:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7125:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7117:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "7117:2:13"
																},
																"nativeSrc": "7117:11:13",
																"nodeType": "YulFunctionCall",
																"src": "7117:11:13"
															},
															"nativeSrc": "7114:446:13",
															"nodeType": "YulIf",
															"src": "7114:446:13"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "7024:543:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "7079:5:13",
														"nodeType": "YulTypedName",
														"src": "7079:5:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7086:3:13",
														"nodeType": "YulTypedName",
														"src": "7086:3:13",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "7091:10:13",
														"nodeType": "YulTypedName",
														"src": "7091:10:13",
														"type": ""
													}
												],
												"src": "7024:543:13"
											},
											{
												"body": {
													"nativeSrc": "7636:54:13",
													"nodeType": "YulBlock",
													"src": "7636:54:13",
													"statements": [
														{
															"nativeSrc": "7646:37:13",
															"nodeType": "YulAssignment",
															"src": "7646:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7671:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "7671:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7677:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "7677:5:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7667:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7667:3:13"
																},
																"nativeSrc": "7667:16:13",
																"nodeType": "YulFunctionCall",
																"src": "7667:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7646:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "7646:8:13"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7573:117:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7611:4:13",
														"nodeType": "YulTypedName",
														"src": "7611:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7617:5:13",
														"nodeType": "YulTypedName",
														"src": "7617:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7627:8:13",
														"nodeType": "YulTypedName",
														"src": "7627:8:13",
														"type": ""
													}
												],
												"src": "7573:117:13"
											},
											{
												"body": {
													"nativeSrc": "7747:118:13",
													"nodeType": "YulBlock",
													"src": "7747:118:13",
													"statements": [
														{
															"nativeSrc": "7757:68:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7757:68:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7806:1:13",
																						"nodeType": "YulLiteral",
																						"src": "7806:1:13",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7809:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "7809:5:13"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7802:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7802:3:13"
																				},
																				"nativeSrc": "7802:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7802:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7821:1:13",
																						"nodeType": "YulLiteral",
																						"src": "7821:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7817:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7817:3:13"
																				},
																				"nativeSrc": "7817:6:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7817:6:13"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7773:28:13",
																			"nodeType": "YulIdentifier",
																			"src": "7773:28:13"
																		},
																		"nativeSrc": "7773:51:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7773:51:13"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7769:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7769:3:13"
																},
																"nativeSrc": "7769:56:13",
																"nodeType": "YulFunctionCall",
																"src": "7769:56:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7761:4:13",
																	"nodeType": "YulTypedName",
																	"src": "7761:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7834:25:13",
															"nodeType": "YulAssignment",
															"src": "7834:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7848:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "7848:4:13"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7854:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "7854:4:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7844:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7844:3:13"
																},
																"nativeSrc": "7844:15:13",
																"nodeType": "YulFunctionCall",
																"src": "7844:15:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7834:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7834:6:13"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7696:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7724:4:13",
														"nodeType": "YulTypedName",
														"src": "7724:4:13",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7730:5:13",
														"nodeType": "YulTypedName",
														"src": "7730:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7740:6:13",
														"nodeType": "YulTypedName",
														"src": "7740:6:13",
														"type": ""
													}
												],
												"src": "7696:169:13"
											},
											{
												"body": {
													"nativeSrc": "7951:214:13",
													"nodeType": "YulBlock",
													"src": "7951:214:13",
													"statements": [
														{
															"nativeSrc": "8084:37:13",
															"nodeType": "YulAssignment",
															"src": "8084:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8111:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "8111:4:13"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "8117:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8117:3:13"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "8092:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "8092:18:13"
																},
																"nativeSrc": "8092:29:13",
																"nodeType": "YulFunctionCall",
																"src": "8092:29:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "8084:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8084:4:13"
																}
															]
														},
														{
															"nativeSrc": "8130:29:13",
															"nodeType": "YulAssignment",
															"src": "8130:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8141:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "8141:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8151:1:13",
																				"nodeType": "YulLiteral",
																				"src": "8151:1:13",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "8154:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "8154:3:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "8147:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8147:3:13"
																		},
																		"nativeSrc": "8147:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8147:11:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8138:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "8138:2:13"
																},
																"nativeSrc": "8138:21:13",
																"nodeType": "YulFunctionCall",
																"src": "8138:21:13"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "8130:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8130:4:13"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7870:295:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7932:4:13",
														"nodeType": "YulTypedName",
														"src": "7932:4:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7938:3:13",
														"nodeType": "YulTypedName",
														"src": "7938:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7946:4:13",
														"nodeType": "YulTypedName",
														"src": "7946:4:13",
														"type": ""
													}
												],
												"src": "7870:295:13"
											},
											{
												"body": {
													"nativeSrc": "8262:1303:13",
													"nodeType": "YulBlock",
													"src": "8262:1303:13",
													"statements": [
														{
															"nativeSrc": "8273:51:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8273:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8320:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8320:3:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "8287:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "8287:32:13"
																},
																"nativeSrc": "8287:37:13",
																"nodeType": "YulFunctionCall",
																"src": "8287:37:13"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "8277:6:13",
																	"nodeType": "YulTypedName",
																	"src": "8277:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8409:22:13",
																"nodeType": "YulBlock",
																"src": "8409:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8411:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "8411:16:13"
																			},
																			"nativeSrc": "8411:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8411:18:13"
																		},
																		"nativeSrc": "8411:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8411:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8381:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8381:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8389:18:13",
																		"nodeType": "YulLiteral",
																		"src": "8389:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8378:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "8378:2:13"
																},
																"nativeSrc": "8378:30:13",
																"nodeType": "YulFunctionCall",
																"src": "8378:30:13"
															},
															"nativeSrc": "8375:56:13",
															"nodeType": "YulIf",
															"src": "8375:56:13"
														},
														{
															"nativeSrc": "8441:52:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8441:52:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "8487:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "8487:4:13"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "8481:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "8481:5:13"
																		},
																		"nativeSrc": "8481:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8481:11:13"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "8455:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "8455:25:13"
																},
																"nativeSrc": "8455:38:13",
																"nodeType": "YulFunctionCall",
																"src": "8455:38:13"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "8445:6:13",
																	"nodeType": "YulTypedName",
																	"src": "8445:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8586:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "8586:4:13"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8592:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8592:6:13"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8600:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8600:6:13"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "8540:45:13",
																	"nodeType": "YulIdentifier",
																	"src": "8540:45:13"
																},
																"nativeSrc": "8540:67:13",
																"nodeType": "YulFunctionCall",
																"src": "8540:67:13"
															},
															"nativeSrc": "8540:67:13",
															"nodeType": "YulExpressionStatement",
															"src": "8540:67:13"
														},
														{
															"nativeSrc": "8617:18:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8617:18:13",
															"value": {
																"kind": "number",
																"nativeSrc": "8634:1:13",
																"nodeType": "YulLiteral",
																"src": "8634:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8621:9:13",
																	"nodeType": "YulTypedName",
																	"src": "8621:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8645:17:13",
															"nodeType": "YulAssignment",
															"src": "8645:17:13",
															"value": {
																"kind": "number",
																"nativeSrc": "8658:4:13",
																"nodeType": "YulLiteral",
																"src": "8658:4:13",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8645:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "8645:9:13"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8709:611:13",
																		"nodeType": "YulBlock",
																		"src": "8709:611:13",
																		"statements": [
																			{
																				"nativeSrc": "8723:37:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8723:37:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8742:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "8742:6:13"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8754:4:13",
																									"nodeType": "YulLiteral",
																									"src": "8754:4:13",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8750:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "8750:3:13"
																							},
																							"nativeSrc": "8750:9:13",
																							"nodeType": "YulFunctionCall",
																							"src": "8750:9:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8738:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "8738:3:13"
																					},
																					"nativeSrc": "8738:22:13",
																					"nodeType": "YulFunctionCall",
																					"src": "8738:22:13"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8727:7:13",
																						"nodeType": "YulTypedName",
																						"src": "8727:7:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8774:51:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8774:51:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8820:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "8820:4:13"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8788:31:13",
																						"nodeType": "YulIdentifier",
																						"src": "8788:31:13"
																					},
																					"nativeSrc": "8788:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "8788:37:13"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8778:6:13",
																						"nodeType": "YulTypedName",
																						"src": "8778:6:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8838:10:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8838:10:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8847:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8847:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8842:1:13",
																						"nodeType": "YulTypedName",
																						"src": "8842:1:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8906:163:13",
																					"nodeType": "YulBlock",
																					"src": "8906:163:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8931:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "8931:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8949:3:13",
																														"nodeType": "YulIdentifier",
																														"src": "8949:3:13"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8954:9:13",
																														"nodeType": "YulIdentifier",
																														"src": "8954:9:13"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8945:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "8945:3:13"
																												},
																												"nativeSrc": "8945:19:13",
																												"nodeType": "YulFunctionCall",
																												"src": "8945:19:13"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8939:5:13",
																											"nodeType": "YulIdentifier",
																											"src": "8939:5:13"
																										},
																										"nativeSrc": "8939:26:13",
																										"nodeType": "YulFunctionCall",
																										"src": "8939:26:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8924:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "8924:6:13"
																								},
																								"nativeSrc": "8924:42:13",
																								"nodeType": "YulFunctionCall",
																								"src": "8924:42:13"
																							},
																							"nativeSrc": "8924:42:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "8924:42:13"
																						},
																						{
																							"nativeSrc": "8983:24:13",
																							"nodeType": "YulAssignment",
																							"src": "8983:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8997:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "8997:6:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9005:1:13",
																										"nodeType": "YulLiteral",
																										"src": "9005:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8993:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "8993:3:13"
																								},
																								"nativeSrc": "8993:14:13",
																								"nodeType": "YulFunctionCall",
																								"src": "8993:14:13"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8983:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "8983:6:13"
																								}
																							]
																						},
																						{
																							"nativeSrc": "9024:31:13",
																							"nodeType": "YulAssignment",
																							"src": "9024:31:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "9041:9:13",
																										"nodeType": "YulIdentifier",
																										"src": "9041:9:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9052:2:13",
																										"nodeType": "YulLiteral",
																										"src": "9052:2:13",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9037:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "9037:3:13"
																								},
																								"nativeSrc": "9037:18:13",
																								"nodeType": "YulFunctionCall",
																								"src": "9037:18:13"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "9024:9:13",
																									"nodeType": "YulIdentifier",
																									"src": "9024:9:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8872:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "8872:1:13"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8875:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "8875:7:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8869:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "8869:2:13"
																					},
																					"nativeSrc": "8869:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "8869:14:13"
																				},
																				"nativeSrc": "8861:208:13",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8884:21:13",
																					"nodeType": "YulBlock",
																					"src": "8884:21:13",
																					"statements": [
																						{
																							"nativeSrc": "8886:17:13",
																							"nodeType": "YulAssignment",
																							"src": "8886:17:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8895:1:13",
																										"nodeType": "YulIdentifier",
																										"src": "8895:1:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8898:4:13",
																										"nodeType": "YulLiteral",
																										"src": "8898:4:13",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8891:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "8891:3:13"
																								},
																								"nativeSrc": "8891:12:13",
																								"nodeType": "YulFunctionCall",
																								"src": "8891:12:13"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8886:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "8886:1:13"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8865:3:13",
																					"nodeType": "YulBlock",
																					"src": "8865:3:13",
																					"statements": []
																				},
																				"src": "8861:208:13"
																			},
																			{
																				"body": {
																					"nativeSrc": "9105:156:13",
																					"nodeType": "YulBlock",
																					"src": "9105:156:13",
																					"statements": [
																						{
																							"nativeSrc": "9123:43:13",
																							"nodeType": "YulVariableDeclaration",
																							"src": "9123:43:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9150:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "9150:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9155:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "9155:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9146:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "9146:3:13"
																										},
																										"nativeSrc": "9146:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "9146:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9140:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "9140:5:13"
																								},
																								"nativeSrc": "9140:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "9140:26:13"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "9127:9:13",
																									"nodeType": "YulTypedName",
																									"src": "9127:9:13",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9190:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "9190:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "9217:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "9217:9:13"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "9232:6:13",
																														"nodeType": "YulIdentifier",
																														"src": "9232:6:13"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "9240:4:13",
																														"nodeType": "YulLiteral",
																														"src": "9240:4:13",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "9228:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "9228:3:13"
																												},
																												"nativeSrc": "9228:17:13",
																												"nodeType": "YulFunctionCall",
																												"src": "9228:17:13"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "9198:18:13",
																											"nodeType": "YulIdentifier",
																											"src": "9198:18:13"
																										},
																										"nativeSrc": "9198:48:13",
																										"nodeType": "YulFunctionCall",
																										"src": "9198:48:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "9183:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "9183:6:13"
																								},
																								"nativeSrc": "9183:64:13",
																								"nodeType": "YulFunctionCall",
																								"src": "9183:64:13"
																							},
																							"nativeSrc": "9183:64:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "9183:64:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "9088:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "9088:7:13"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "9097:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "9097:6:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "9085:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "9085:2:13"
																					},
																					"nativeSrc": "9085:19:13",
																					"nodeType": "YulFunctionCall",
																					"src": "9085:19:13"
																				},
																				"nativeSrc": "9082:179:13",
																				"nodeType": "YulIf",
																				"src": "9082:179:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9281:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "9281:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "9295:6:13",
																											"nodeType": "YulIdentifier",
																											"src": "9295:6:13"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "9303:1:13",
																											"nodeType": "YulLiteral",
																											"src": "9303:1:13",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "9291:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "9291:3:13"
																									},
																									"nativeSrc": "9291:14:13",
																									"nodeType": "YulFunctionCall",
																									"src": "9291:14:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "9307:1:13",
																									"nodeType": "YulLiteral",
																									"src": "9307:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9287:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "9287:3:13"
																							},
																							"nativeSrc": "9287:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "9287:22:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9274:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "9274:6:13"
																					},
																					"nativeSrc": "9274:36:13",
																					"nodeType": "YulFunctionCall",
																					"src": "9274:36:13"
																				},
																				"nativeSrc": "9274:36:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "9274:36:13"
																			}
																		]
																	},
																	"nativeSrc": "8702:618:13",
																	"nodeType": "YulCase",
																	"src": "8702:618:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8707:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8707:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "9337:222:13",
																		"nodeType": "YulBlock",
																		"src": "9337:222:13",
																		"statements": [
																			{
																				"nativeSrc": "9351:14:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9351:14:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9364:1:13",
																					"nodeType": "YulLiteral",
																					"src": "9364:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "9355:5:13",
																						"nodeType": "YulTypedName",
																						"src": "9355:5:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9388:67:13",
																					"nodeType": "YulBlock",
																					"src": "9388:67:13",
																					"statements": [
																						{
																							"nativeSrc": "9406:35:13",
																							"nodeType": "YulAssignment",
																							"src": "9406:35:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9425:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "9425:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9430:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "9430:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9421:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "9421:3:13"
																										},
																										"nativeSrc": "9421:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "9421:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9415:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "9415:5:13"
																								},
																								"nativeSrc": "9415:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "9415:26:13"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "9406:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "9406:5:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "9381:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "9381:6:13"
																				},
																				"nativeSrc": "9378:77:13",
																				"nodeType": "YulIf",
																				"src": "9378:77:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9475:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "9475:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9534:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "9534:5:13"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9541:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "9541:6:13"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "9481:52:13",
																								"nodeType": "YulIdentifier",
																								"src": "9481:52:13"
																							},
																							"nativeSrc": "9481:67:13",
																							"nodeType": "YulFunctionCall",
																							"src": "9481:67:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9468:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "9468:6:13"
																					},
																					"nativeSrc": "9468:81:13",
																					"nodeType": "YulFunctionCall",
																					"src": "9468:81:13"
																				},
																				"nativeSrc": "9468:81:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "9468:81:13"
																			}
																		]
																	},
																	"nativeSrc": "9329:230:13",
																	"nodeType": "YulCase",
																	"src": "9329:230:13",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8682:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8682:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8690:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8690:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8679:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "8679:2:13"
																},
																"nativeSrc": "8679:14:13",
																"nodeType": "YulFunctionCall",
																"src": "8679:14:13"
															},
															"nativeSrc": "8672:887:13",
															"nodeType": "YulSwitch",
															"src": "8672:887:13"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "8170:1395:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "8251:4:13",
														"nodeType": "YulTypedName",
														"src": "8251:4:13",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "8257:3:13",
														"nodeType": "YulTypedName",
														"src": "8257:3:13",
														"type": ""
													}
												],
												"src": "8170:1395:13"
											},
											{
												"body": {
													"nativeSrc": "9636:53:13",
													"nodeType": "YulBlock",
													"src": "9636:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9653:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9653:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9676:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "9676:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9658:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "9658:17:13"
																		},
																		"nativeSrc": "9658:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9658:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9646:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9646:6:13"
																},
																"nativeSrc": "9646:37:13",
																"nodeType": "YulFunctionCall",
																"src": "9646:37:13"
															},
															"nativeSrc": "9646:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "9646:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9571:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9624:5:13",
														"nodeType": "YulTypedName",
														"src": "9624:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9631:3:13",
														"nodeType": "YulTypedName",
														"src": "9631:3:13",
														"type": ""
													}
												],
												"src": "9571:118:13"
											},
											{
												"body": {
													"nativeSrc": "9793:124:13",
													"nodeType": "YulBlock",
													"src": "9793:124:13",
													"statements": [
														{
															"nativeSrc": "9803:26:13",
															"nodeType": "YulAssignment",
															"src": "9803:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9815:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "9815:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9826:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9826:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9811:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9811:3:13"
																},
																"nativeSrc": "9811:18:13",
																"nodeType": "YulFunctionCall",
																"src": "9811:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9803:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9803:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9883:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9883:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9896:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9896:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9907:1:13",
																				"nodeType": "YulLiteral",
																				"src": "9907:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9892:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9892:3:13"
																		},
																		"nativeSrc": "9892:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9892:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9839:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "9839:43:13"
																},
																"nativeSrc": "9839:71:13",
																"nodeType": "YulFunctionCall",
																"src": "9839:71:13"
															},
															"nativeSrc": "9839:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "9839:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9695:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9765:9:13",
														"nodeType": "YulTypedName",
														"src": "9765:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9777:6:13",
														"nodeType": "YulTypedName",
														"src": "9777:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9788:4:13",
														"nodeType": "YulTypedName",
														"src": "9788:4:13",
														"type": ""
													}
												],
												"src": "9695:222:13"
											},
											{
												"body": {
													"nativeSrc": "10019:73:13",
													"nodeType": "YulBlock",
													"src": "10019:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10036:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10036:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10041:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10041:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10029:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10029:6:13"
																},
																"nativeSrc": "10029:19:13",
																"nodeType": "YulFunctionCall",
																"src": "10029:19:13"
															},
															"nativeSrc": "10029:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "10029:19:13"
														},
														{
															"nativeSrc": "10057:29:13",
															"nodeType": "YulAssignment",
															"src": "10057:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10076:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10076:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10081:4:13",
																		"nodeType": "YulLiteral",
																		"src": "10081:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10072:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10072:3:13"
																},
																"nativeSrc": "10072:14:13",
																"nodeType": "YulFunctionCall",
																"src": "10072:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "10057:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "10057:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "9923:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9991:3:13",
														"nodeType": "YulTypedName",
														"src": "9991:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9996:6:13",
														"nodeType": "YulTypedName",
														"src": "9996:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "10007:11:13",
														"nodeType": "YulTypedName",
														"src": "10007:11:13",
														"type": ""
													}
												],
												"src": "9923:169:13"
											},
											{
												"body": {
													"nativeSrc": "10204:76:13",
													"nodeType": "YulBlock",
													"src": "10204:76:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10226:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10226:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10234:1:13",
																				"nodeType": "YulLiteral",
																				"src": "10234:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10222:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10222:3:13"
																		},
																		"nativeSrc": "10222:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10222:14:13"
																	},
																	{
																		"hexValue": "496e76616c696420636f6c6c61746572616c20746f6b656e2061646472657373",
																		"kind": "string",
																		"nativeSrc": "10238:34:13",
																		"nodeType": "YulLiteral",
																		"src": "10238:34:13",
																		"type": "",
																		"value": "Invalid collateral token address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10215:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10215:6:13"
																},
																"nativeSrc": "10215:58:13",
																"nodeType": "YulFunctionCall",
																"src": "10215:58:13"
															},
															"nativeSrc": "10215:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "10215:58:13"
														}
													]
												},
												"name": "store_literal_in_memory_f11883101265ee814d3ec8ca32dd1376e23cf07c21786604713151f75410aa5a",
												"nativeSrc": "10098:182:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10196:6:13",
														"nodeType": "YulTypedName",
														"src": "10196:6:13",
														"type": ""
													}
												],
												"src": "10098:182:13"
											},
											{
												"body": {
													"nativeSrc": "10432:220:13",
													"nodeType": "YulBlock",
													"src": "10432:220:13",
													"statements": [
														{
															"nativeSrc": "10442:74:13",
															"nodeType": "YulAssignment",
															"src": "10442:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10508:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10508:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10513:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10513:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10449:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "10449:58:13"
																},
																"nativeSrc": "10449:67:13",
																"nodeType": "YulFunctionCall",
																"src": "10449:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10442:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10442:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10614:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10614:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f11883101265ee814d3ec8ca32dd1376e23cf07c21786604713151f75410aa5a",
																	"nativeSrc": "10525:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "10525:88:13"
																},
																"nativeSrc": "10525:93:13",
																"nodeType": "YulFunctionCall",
																"src": "10525:93:13"
															},
															"nativeSrc": "10525:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "10525:93:13"
														},
														{
															"nativeSrc": "10627:19:13",
															"nodeType": "YulAssignment",
															"src": "10627:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10638:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10638:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10643:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10643:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10634:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10634:3:13"
																},
																"nativeSrc": "10634:12:13",
																"nodeType": "YulFunctionCall",
																"src": "10634:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10627:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10627:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f11883101265ee814d3ec8ca32dd1376e23cf07c21786604713151f75410aa5a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10286:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10420:3:13",
														"nodeType": "YulTypedName",
														"src": "10420:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10428:3:13",
														"nodeType": "YulTypedName",
														"src": "10428:3:13",
														"type": ""
													}
												],
												"src": "10286:366:13"
											},
											{
												"body": {
													"nativeSrc": "10829:248:13",
													"nodeType": "YulBlock",
													"src": "10829:248:13",
													"statements": [
														{
															"nativeSrc": "10839:26:13",
															"nodeType": "YulAssignment",
															"src": "10839:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10851:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "10851:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10862:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10862:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10847:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10847:3:13"
																},
																"nativeSrc": "10847:18:13",
																"nodeType": "YulFunctionCall",
																"src": "10847:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10839:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10839:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10886:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10886:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10897:1:13",
																				"nodeType": "YulLiteral",
																				"src": "10897:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10882:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10882:3:13"
																		},
																		"nativeSrc": "10882:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10882:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10905:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "10905:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10911:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10911:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10901:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10901:3:13"
																		},
																		"nativeSrc": "10901:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10901:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10875:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10875:6:13"
																},
																"nativeSrc": "10875:47:13",
																"nodeType": "YulFunctionCall",
																"src": "10875:47:13"
															},
															"nativeSrc": "10875:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "10875:47:13"
														},
														{
															"nativeSrc": "10931:139:13",
															"nodeType": "YulAssignment",
															"src": "10931:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11065:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "11065:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f11883101265ee814d3ec8ca32dd1376e23cf07c21786604713151f75410aa5a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10939:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "10939:124:13"
																},
																"nativeSrc": "10939:131:13",
																"nodeType": "YulFunctionCall",
																"src": "10939:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10931:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10931:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f11883101265ee814d3ec8ca32dd1376e23cf07c21786604713151f75410aa5a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10658:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10809:9:13",
														"nodeType": "YulTypedName",
														"src": "10809:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10824:4:13",
														"nodeType": "YulTypedName",
														"src": "10824:4:13",
														"type": ""
													}
												],
												"src": "10658:419:13"
											},
											{
												"body": {
													"nativeSrc": "11189:126:13",
													"nodeType": "YulBlock",
													"src": "11189:126:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11211:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11211:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11219:1:13",
																				"nodeType": "YulLiteral",
																				"src": "11219:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11207:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11207:3:13"
																		},
																		"nativeSrc": "11207:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11207:14:13"
																	},
																	{
																		"hexValue": "436f6c6c61746572616c697a6174696f6e20726174696f206d75737420626520",
																		"kind": "string",
																		"nativeSrc": "11223:34:13",
																		"nodeType": "YulLiteral",
																		"src": "11223:34:13",
																		"type": "",
																		"value": "Collateralization ratio must be "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11200:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11200:6:13"
																},
																"nativeSrc": "11200:58:13",
																"nodeType": "YulFunctionCall",
																"src": "11200:58:13"
															},
															"nativeSrc": "11200:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "11200:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11279:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11279:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11287:2:13",
																				"nodeType": "YulLiteral",
																				"src": "11287:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11275:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11275:3:13"
																		},
																		"nativeSrc": "11275:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11275:15:13"
																	},
																	{
																		"hexValue": "6174206c656173742031303025",
																		"kind": "string",
																		"nativeSrc": "11292:15:13",
																		"nodeType": "YulLiteral",
																		"src": "11292:15:13",
																		"type": "",
																		"value": "at least 100%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11268:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11268:6:13"
																},
																"nativeSrc": "11268:40:13",
																"nodeType": "YulFunctionCall",
																"src": "11268:40:13"
															},
															"nativeSrc": "11268:40:13",
															"nodeType": "YulExpressionStatement",
															"src": "11268:40:13"
														}
													]
												},
												"name": "store_literal_in_memory_b0625f87e31dc518e790285a825bb3c4cd66fc859c380f7e244181f8081e3f92",
												"nativeSrc": "11083:232:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11181:6:13",
														"nodeType": "YulTypedName",
														"src": "11181:6:13",
														"type": ""
													}
												],
												"src": "11083:232:13"
											},
											{
												"body": {
													"nativeSrc": "11467:220:13",
													"nodeType": "YulBlock",
													"src": "11467:220:13",
													"statements": [
														{
															"nativeSrc": "11477:74:13",
															"nodeType": "YulAssignment",
															"src": "11477:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11543:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11543:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11548:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11548:2:13",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11484:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "11484:58:13"
																},
																"nativeSrc": "11484:67:13",
																"nodeType": "YulFunctionCall",
																"src": "11484:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11477:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11477:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11649:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11649:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b0625f87e31dc518e790285a825bb3c4cd66fc859c380f7e244181f8081e3f92",
																	"nativeSrc": "11560:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "11560:88:13"
																},
																"nativeSrc": "11560:93:13",
																"nodeType": "YulFunctionCall",
																"src": "11560:93:13"
															},
															"nativeSrc": "11560:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "11560:93:13"
														},
														{
															"nativeSrc": "11662:19:13",
															"nodeType": "YulAssignment",
															"src": "11662:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11673:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11673:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11678:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11678:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11669:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11669:3:13"
																},
																"nativeSrc": "11669:12:13",
																"nodeType": "YulFunctionCall",
																"src": "11669:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11662:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11662:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b0625f87e31dc518e790285a825bb3c4cd66fc859c380f7e244181f8081e3f92_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11321:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11455:3:13",
														"nodeType": "YulTypedName",
														"src": "11455:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11463:3:13",
														"nodeType": "YulTypedName",
														"src": "11463:3:13",
														"type": ""
													}
												],
												"src": "11321:366:13"
											},
											{
												"body": {
													"nativeSrc": "11864:248:13",
													"nodeType": "YulBlock",
													"src": "11864:248:13",
													"statements": [
														{
															"nativeSrc": "11874:26:13",
															"nodeType": "YulAssignment",
															"src": "11874:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11886:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "11886:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11897:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11897:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11882:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11882:3:13"
																},
																"nativeSrc": "11882:18:13",
																"nodeType": "YulFunctionCall",
																"src": "11882:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11874:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11874:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11921:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11921:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11932:1:13",
																				"nodeType": "YulLiteral",
																				"src": "11932:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11917:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11917:3:13"
																		},
																		"nativeSrc": "11917:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11917:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11940:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "11940:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11946:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11946:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11936:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11936:3:13"
																		},
																		"nativeSrc": "11936:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11936:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11910:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11910:6:13"
																},
																"nativeSrc": "11910:47:13",
																"nodeType": "YulFunctionCall",
																"src": "11910:47:13"
															},
															"nativeSrc": "11910:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "11910:47:13"
														},
														{
															"nativeSrc": "11966:139:13",
															"nodeType": "YulAssignment",
															"src": "11966:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12100:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "12100:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b0625f87e31dc518e790285a825bb3c4cd66fc859c380f7e244181f8081e3f92_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11974:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "11974:124:13"
																},
																"nativeSrc": "11974:131:13",
																"nodeType": "YulFunctionCall",
																"src": "11974:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11966:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11966:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b0625f87e31dc518e790285a825bb3c4cd66fc859c380f7e244181f8081e3f92__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11693:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11844:9:13",
														"nodeType": "YulTypedName",
														"src": "11844:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11859:4:13",
														"nodeType": "YulTypedName",
														"src": "11859:4:13",
														"type": ""
													}
												],
												"src": "11693:419:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_f11883101265ee814d3ec8ca32dd1376e23cf07c21786604713151f75410aa5a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid collateral token address\")\n\n    }\n\n    function abi_encode_t_stringliteral_f11883101265ee814d3ec8ca32dd1376e23cf07c21786604713151f75410aa5a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_f11883101265ee814d3ec8ca32dd1376e23cf07c21786604713151f75410aa5a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f11883101265ee814d3ec8ca32dd1376e23cf07c21786604713151f75410aa5a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f11883101265ee814d3ec8ca32dd1376e23cf07c21786604713151f75410aa5a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b0625f87e31dc518e790285a825bb3c4cd66fc859c380f7e244181f8081e3f92(memPtr) {\n\n        mstore(add(memPtr, 0), \"Collateralization ratio must be \")\n\n        mstore(add(memPtr, 32), \"at least 100%\")\n\n    }\n\n    function abi_encode_t_stringliteral_b0625f87e31dc518e790285a825bb3c4cd66fc859c380f7e244181f8081e3f92_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_b0625f87e31dc518e790285a825bb3c4cd66fc859c380f7e244181f8081e3f92(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b0625f87e31dc518e790285a825bb3c4cd66fc859c380f7e244181f8081e3f92__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b0625f87e31dc518e790285a825bb3c4cd66fc859c380f7e244181f8081e3f92_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561000f575f5ffd5b50604051613acf380380613acf83398181016040528101906100319190610472565b33828281600390816100439190610715565b5080600490816100539190610715565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100c6575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100bd91906107f3565b60405180910390fd5b6100d5816101d560201b60201c565b5060016006819055505f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361014c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014390610866565b60405180910390fd5b612710831015610191576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610188906108f4565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505082600a8190555050505050610912565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f604051905090565b5f5ffd5b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102d2826102a9565b9050919050565b6102e2816102c8565b81146102ec575f5ffd5b50565b5f815190506102fd816102d9565b92915050565b5f819050919050565b61031581610303565b811461031f575f5ffd5b50565b5f815190506103308161030c565b92915050565b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6103848261033e565b810181811067ffffffffffffffff821117156103a3576103a261034e565b5b80604052505050565b5f6103b5610298565b90506103c1828261037b565b919050565b5f67ffffffffffffffff8211156103e0576103df61034e565b5b6103e98261033e565b9050602081019050919050565b8281835e5f83830152505050565b5f610416610411846103c6565b6103ac565b9050828152602081018484840111156104325761043161033a565b5b61043d8482856103f6565b509392505050565b5f82601f83011261045957610458610336565b5b8151610469848260208601610404565b91505092915050565b5f5f5f5f6080858703121561048a576104896102a1565b5b5f610497878288016102ef565b94505060206104a887828801610322565b935050604085015167ffffffffffffffff8111156104c9576104c86102a5565b5b6104d587828801610445565b925050606085015167ffffffffffffffff8111156104f6576104f56102a5565b5b61050287828801610445565b91505092959194509250565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061055c57607f821691505b60208210810361056f5761056e610518565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026105d17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610596565b6105db8683610596565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61061661061161060c84610303565b6105f3565b610303565b9050919050565b5f819050919050565b61062f836105fc565b61064361063b8261061d565b8484546105a2565b825550505050565b5f5f905090565b61065a61064b565b610665818484610626565b505050565b5b818110156106885761067d5f82610652565b60018101905061066b565b5050565b601f8211156106cd5761069e81610575565b6106a784610587565b810160208510156106b6578190505b6106ca6106c285610587565b83018261066a565b50505b505050565b5f82821c905092915050565b5f6106ed5f19846008026106d2565b1980831691505092915050565b5f61070583836106de565b9150826002028217905092915050565b61071e8261050e565b67ffffffffffffffff8111156107375761073661034e565b5b6107418254610545565b61074c82828561068c565b5f60209050601f83116001811461077d575f841561076b578287015190505b61077585826106fa565b8655506107dc565b601f19841661078b86610575565b5f5b828110156107b25784890151825560018201915060208501945060208101905061078d565b868310156107cf57848901516107cb601f8916826106de565b8355505b6001600288020188555050505b505050505050565b6107ed816102c8565b82525050565b5f6020820190506108065f8301846107e4565b92915050565b5f82825260208201905092915050565b7f496e76616c696420636f6c6c61746572616c20746f6b656e20616464726573735f82015250565b5f61085060208361080c565b915061085b8261081c565b602082019050919050565b5f6020820190508181035f83015261087d81610844565b9050919050565b7f436f6c6c61746572616c697a6174696f6e20726174696f206d757374206265205f8201527f6174206c65617374203130302500000000000000000000000000000000000000602082015250565b5f6108de602d8361080c565b91506108e982610884565b604082019050919050565b5f6020820190508181035f83015261090b816108d2565b9050919050565b6080516131976109385f395f8181610c4901528181610cc901526115e501526131975ff3fe608060405234801561000f575f5ffd5b506004361061014b575f3560e01c80638da5cb5b116100c1578063bad4a01f1161007a578063bad4a01f146103b1578063bfa244fe146103cd578063dcaf9c44146103e9578063dd62ed3e14610407578063e1d5e57114610437578063f2fde38b146104675761014b565b80638da5cb5b146102c757806395d89b41146102e5578063a1bf284014610303578063a622ee7c14610333578063a9059cbb14610363578063b2016bd4146103935761014b565b806323b872dd1161011357806323b872dd14610207578063313ce567146102375780634798eb21146102555780636112fe2e1461027157806370a082311461028d578063715018a6146102bd5761014b565b80630607ec701461014f57806306fdde031461016b578063095ea7b31461018957806311005b07146101b957806318160ddd146101e9575b5f5ffd5b61016960048036038101906101649190611ce1565b610483565b005b6101736104da565b6040516101809190611d7c565b60405180910390f35b6101a3600480360381019061019e9190611df6565b61056a565b6040516101b09190611e4e565b60405180910390f35b6101d360048036038101906101ce9190611e67565b61058c565b6040516101e09190611ea1565b60405180910390f35b6101f16105a1565b6040516101fe9190611ea1565b60405180910390f35b610221600480360381019061021c9190611eba565b6105aa565b60405161022e9190611e4e565b60405180910390f35b61023f6105d8565b60405161024c9190611f25565b60405180910390f35b61026f600480360381019061026a9190611ce1565b6105e0565b005b61028b60048036038101906102869190611ce1565b610760565b005b6102a760048036038101906102a29190611e67565b610ad0565b6040516102b49190611ea1565b60405180910390f35b6102c5610b15565b005b6102cf610b28565b6040516102dc9190611f4d565b60405180910390f35b6102ed610b50565b6040516102fa9190611d7c565b60405180910390f35b61031d60048036038101906103189190611e67565b610be0565b60405161032a9190611ea1565b60405180910390f35b61034d60048036038101906103489190611e67565b610bf5565b60405161035a9190611fc1565b60405180910390f35b61037d60048036038101906103789190611df6565b610c25565b60405161038a9190611e4e565b60405180910390f35b61039b610c47565b6040516103a89190611ffa565b60405180910390f35b6103cb60048036038101906103c69190611ce1565b610c6b565b005b6103e760048036038101906103e29190611ce1565b610dbb565b005b6103f1610f7e565b6040516103fe9190611ea1565b60405180910390f35b610421600480360381019061041c9190612013565b610f84565b60405161042e9190611ea1565b60405180910390f35b610451600480360381019061044c9190611e67565b611006565b60405161045e9190611ea1565b60405180910390f35b610481600480360381019061047c9190611e67565b6110d7565b005b61048b61115b565b6127108110156104d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c7906120c1565b60405180910390fd5b80600a8190555050565b6060600380546104e99061210c565b80601f01602080910402602001604051908101604052809291908181526020018280546105159061210c565b80156105605780601f1061053757610100808354040283529160200191610560565b820191905f5260205f20905b81548152906001019060200180831161054357829003601f168201915b5050505050905090565b5f5f6105746111e2565b90506105818185856111e9565b600191505092915050565b6008602052805f5260405f205f915090505481565b5f600254905090565b5f5f6105b46111e2565b90506105c18582856111fb565b6105cc85858561128e565b60019150509392505050565b5f6012905090565b6105e861137e565b5f811161062a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062190612186565b60405180910390fd5b8060085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205410156106aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a1906121ee565b60405180910390fd5b8060085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546106f69190612239565b9250508190555061070733826113cd565b3373ffffffffffffffffffffffffffffffffffffffff167fe46e4414fb02a244a8932c7ec11c904ddf0313b8403a267c5e583cb565b473af8260405161074d9190611ea1565b60405180910390a261075d61144c565b50565b61076861137e565b5f81116107aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a190612186565b60405180910390fd5b8060075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054101561082a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610821906122b6565b60405180910390fd5b5f8160075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546108749190612239565b90506108be338260085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054611456565b6108fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f490612344565b60405180910390fd5b8060075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f60095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a04906123ac565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663f3fef3a333856040518363ffffffff1660e01b8152600401610a489291906123ca565b5f604051808303815f87803b158015610a5f575f5ffd5b505af1158015610a71573d5f5f3e3d5ffd5b505050503373ffffffffffffffffffffffffffffffffffffffff167fc30fcfbcaac9e0deffa719714eaa82396ff506a0d0d0eebe170830177288715d84604051610abb9190611ea1565b60405180910390a25050610acd61144c565b50565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610b1d61115b565b610b265f61148f565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610b5f9061210c565b80601f0160208091040260200160405190810160405280929190818152602001828054610b8b9061210c565b8015610bd65780601f10610bad57610100808354040283529160200191610bd6565b820191905f5260205f20905b815481529060010190602001808311610bb957829003601f168201915b5050505050905090565b6007602052805f5260405f205f915090505481565b6009602052805f5260405f205f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5f610c2f6111e2565b9050610c3c81858561128e565b600191505092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b610c7361137e565b5f8111610cb5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cac90612186565b60405180910390fd5b5f610cbf33611552565b9050610d0e3382847f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611719909392919063ffffffff16565b8160075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610d5a91906123f1565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167fd7243f6f8212d5188fd054141cf6ea89cfc0d91facb8c3afe2f88a135848014283604051610da79190611ea1565b60405180910390a250610db861144c565b50565b610dc361137e565b5f8111610e05576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dfc90612186565b60405180910390fd5b5f8160085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610e4f91906123f1565b9050610e993360075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205483611456565b610ed8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ecf90612494565b60405180910390fd5b8060085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610f24338361179b565b3373ffffffffffffffffffffffffffffffffffffffff167f3f1ae0a6113ff787f6445396e9ec4e9d0f6e1a0f05a9a856206f72f9623a2e9f83604051610f6a9190611ea1565b60405180910390a250610f7b61144c565b50565b600a5481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f5f60085f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8103611078577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9150506110d2565b8061271060075f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546110c491906124b2565b6110ce9190612520565b9150505b919050565b6110df61115b565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361114f575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016111469190611f4d565b60405180910390fd5b6111588161148f565b50565b6111636111e2565b73ffffffffffffffffffffffffffffffffffffffff16611181610b28565b73ffffffffffffffffffffffffffffffffffffffff16146111e0576111a46111e2565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016111d79190611f4d565b60405180910390fd5b565b5f33905090565b6111f6838383600161181a565b505050565b5f6112068484610f84565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156112885781811015611279578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161127093929190612550565b60405180910390fd5b61128784848484035f61181a565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036112fe575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016112f59190611f4d565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361136e575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016113659190611f4d565b60405180910390fd5b6113798383836119e9565b505050565b6002600654036113c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ba906125cf565b60405180910390fd5b6002600681905550565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361143d575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016114349190611f4d565b60405180910390fd5b611448825f836119e9565b5050565b6001600681905550565b5f5f82036114675760019050611488565b600a548261147591906124b2565b6127108461148391906124b2565b101590505b9392505050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5f73ffffffffffffffffffffffffffffffffffffffff1660095f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036116b5575f7f00000000000000000000000000000000000000000000000000000000000000003060405161161190611c9d565b61161c9291906125ed565b604051809103905ff080158015611635573d5f5f3e3d5ffd5b5090508060095f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b60095f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b611795848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161174e93929190612614565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611c02565b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361180b575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016118029190611f4d565b60405180910390fd5b6118165f83836119e9565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361188a575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016118819190611f4d565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036118fa575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016118f19190611f4d565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156119e3578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516119da9190611ea1565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611a39578060025f828254611a2d91906123f1565b92505081905550611b07565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611ac2578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611ab993929190612550565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611b4e578060025f8282540392505081905550611b98565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611bf59190611ea1565b60405180910390a3505050565b5f5f60205f8451602086015f885af180611c21576040513d5f823e3d81fd5b3d92505f519150505f8214611c3a576001811415611c55565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b15611c9757836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401611c8e9190611f4d565b60405180910390fd5b50505050565b610b188061264a83390190565b5f5ffd5b5f819050919050565b611cc081611cae565b8114611cca575f5ffd5b50565b5f81359050611cdb81611cb7565b92915050565b5f60208284031215611cf657611cf5611caa565b5b5f611d0384828501611ccd565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611d4e82611d0c565b611d588185611d16565b9350611d68818560208601611d26565b611d7181611d34565b840191505092915050565b5f6020820190508181035f830152611d948184611d44565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611dc582611d9c565b9050919050565b611dd581611dbb565b8114611ddf575f5ffd5b50565b5f81359050611df081611dcc565b92915050565b5f5f60408385031215611e0c57611e0b611caa565b5b5f611e1985828601611de2565b9250506020611e2a85828601611ccd565b9150509250929050565b5f8115159050919050565b611e4881611e34565b82525050565b5f602082019050611e615f830184611e3f565b92915050565b5f60208284031215611e7c57611e7b611caa565b5b5f611e8984828501611de2565b91505092915050565b611e9b81611cae565b82525050565b5f602082019050611eb45f830184611e92565b92915050565b5f5f5f60608486031215611ed157611ed0611caa565b5b5f611ede86828701611de2565b9350506020611eef86828701611de2565b9250506040611f0086828701611ccd565b9150509250925092565b5f60ff82169050919050565b611f1f81611f0a565b82525050565b5f602082019050611f385f830184611f16565b92915050565b611f4781611dbb565b82525050565b5f602082019050611f605f830184611f3e565b92915050565b5f819050919050565b5f611f89611f84611f7f84611d9c565b611f66565b611d9c565b9050919050565b5f611f9a82611f6f565b9050919050565b5f611fab82611f90565b9050919050565b611fbb81611fa1565b82525050565b5f602082019050611fd45f830184611fb2565b92915050565b5f611fe482611f90565b9050919050565b611ff481611fda565b82525050565b5f60208201905061200d5f830184611feb565b92915050565b5f5f6040838503121561202957612028611caa565b5b5f61203685828601611de2565b925050602061204785828601611de2565b9150509250929050565b7f436f6c6c61746572616c697a6174696f6e20726174696f206d757374206265205f8201527f6174206c65617374203130302500000000000000000000000000000000000000602082015250565b5f6120ab602d83611d16565b91506120b682612051565b604082019050919050565b5f6020820190508181035f8301526120d88161209f565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061212357607f821691505b602082108103612136576121356120df565b5b50919050565b7f416d6f756e74206d757374206265203e203000000000000000000000000000005f82015250565b5f612170601283611d16565b915061217b8261213c565b602082019050919050565b5f6020820190508181035f83015261219d81612164565b9050919050565b7f416d6f756e7420657863656564732064656274000000000000000000000000005f82015250565b5f6121d8601383611d16565b91506121e3826121a4565b602082019050919050565b5f6020820190508181035f830152612205816121cc565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61224382611cae565b915061224e83611cae565b92508282039050818111156122665761226561220c565b5b92915050565b7f496e73756666696369656e7420636f6c6c61746572616c2062616c616e6365005f82015250565b5f6122a0601f83611d16565b91506122ab8261226c565b602082019050919050565b5f6020820190508181035f8301526122cd81612294565b9050919050565b7f5769746864726177616c20776f756c642062726561636820636f6c6c617465725f8201527f616c697a6174696f6e20726174696f0000000000000000000000000000000000602082015250565b5f61232e602f83611d16565b9150612339826122d4565b604082019050919050565b5f6020820190508181035f83015261235b81612322565b9050919050565b7f4e6f207661756c742065786973747320666f72207573657200000000000000005f82015250565b5f612396601883611d16565b91506123a182612362565b602082019050919050565b5f6020820190508181035f8301526123c38161238a565b9050919050565b5f6040820190506123dd5f830185611f3e565b6123ea6020830184611e92565b9392505050565b5f6123fb82611cae565b915061240683611cae565b925082820190508082111561241e5761241d61220c565b5b92915050565b7f496e73756666696369656e7420636f6c6c61746572616c20746f206d696e74205f8201527f7468617420616d6f756e74000000000000000000000000000000000000000000602082015250565b5f61247e602b83611d16565b915061248982612424565b604082019050919050565b5f6020820190508181035f8301526124ab81612472565b9050919050565b5f6124bc82611cae565b91506124c783611cae565b92508282026124d581611cae565b915082820484148315176124ec576124eb61220c565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61252a82611cae565b915061253583611cae565b925082612545576125446124f3565b5b828204905092915050565b5f6060820190506125635f830186611f3e565b6125706020830185611e92565b61257d6040830184611e92565b949350505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f6125b9601f83611d16565b91506125c482612585565b602082019050919050565b5f6020820190508181035f8301526125e6816125ad565b9050919050565b5f6040820190506126005f830185611f3e565b61260d6020830184611f3e565b9392505050565b5f6060820190506126275f830186611f3e565b6126346020830185611f3e565b6126416040830184611e92565b94935050505056fe60a060405234801561000f575f5ffd5b50604051610b18380380610b188339818101604052810190610031919061027a565b805f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a2575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009991906102c7565b60405180910390fd5b6100b18161015b60201b60201c565b505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610120576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101179061033a565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505050610358565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61024982610220565b9050919050565b6102598161023f565b8114610263575f5ffd5b50565b5f8151905061027481610250565b92915050565b5f5f604083850312156102905761028f61021c565b5b5f61029d85828601610266565b92505060206102ae85828601610266565b9150509250929050565b6102c18161023f565b82525050565b5f6020820190506102da5f8301846102b8565b92915050565b5f82825260208201905092915050565b7f496e76616c696420746f6b656e206164647265737300000000000000000000005f82015250565b5f6103246015836102e0565b915061032f826102f0565b602082019050919050565b5f6020820190508181035f83015261035181610318565b9050919050565b60805161079a61037e5f395f818161013c01528181610161015261028f015261079a5ff3fe608060405234801561000f575f5ffd5b5060043610610060575f3560e01c8063715018a6146100645780638da5cb5b1461006e578063b2016bd41461008c578063b69ef8a8146100aa578063f2fde38b146100c8578063f3fef3a3146100e4575b5f5ffd5b61006c610100565b005b610076610113565b604051610083919061057f565b60405180910390f35b61009461013a565b6040516100a191906105f3565b60405180910390f35b6100b261015e565b6040516100bf9190610624565b60405180910390f35b6100e260048036038101906100dd919061066b565b6101fc565b005b6100fe60048036038101906100f991906106c0565b610280565b005b6101086102d7565b6101115f61035e565b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016101b8919061057f565b602060405180830381865afa1580156101d3573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101f79190610712565b905090565b6102046102d7565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610274575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161026b919061057f565b60405180910390fd5b61027d8161035e565b50565b6102886102d7565b6102d382827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661041f9092919063ffffffff16565b5050565b6102df61049e565b73ffffffffffffffffffffffffffffffffffffffff166102fd610113565b73ffffffffffffffffffffffffffffffffffffffff161461035c5761032061049e565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610353919061057f565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610499838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb858560405160240161045292919061073d565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506104a5565b505050565b5f33905090565b5f5f60205f8451602086015f885af1806104c4576040513d5f823e3d81fd5b3d92505f519150505f82146104dd5760018114156104f8565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561053a57836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610531919061057f565b60405180910390fd5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61056982610540565b9050919050565b6105798161055f565b82525050565b5f6020820190506105925f830184610570565b92915050565b5f819050919050565b5f6105bb6105b66105b184610540565b610598565b610540565b9050919050565b5f6105cc826105a1565b9050919050565b5f6105dd826105c2565b9050919050565b6105ed816105d3565b82525050565b5f6020820190506106065f8301846105e4565b92915050565b5f819050919050565b61061e8161060c565b82525050565b5f6020820190506106375f830184610615565b92915050565b5f5ffd5b61064a8161055f565b8114610654575f5ffd5b50565b5f8135905061066581610641565b92915050565b5f602082840312156106805761067f61063d565b5b5f61068d84828501610657565b91505092915050565b61069f8161060c565b81146106a9575f5ffd5b50565b5f813590506106ba81610696565b92915050565b5f5f604083850312156106d6576106d561063d565b5b5f6106e385828601610657565b92505060206106f4858286016106ac565b9150509250929050565b5f8151905061070c81610696565b92915050565b5f602082840312156107275761072661063d565b5b5f610734848285016106fe565b91505092915050565b5f6040820190506107505f830185610570565b61075d6020830184610615565b939250505056fea2646970667358221220c1198753c4d47eaa95c0862639943fda4ce251fcbe9ffe29421da0c40b3fd0c264736f6c634300081d0033a264697066735822122076cd469e468e4f8a82ff466f7e348b5a291029f5c651f271d40db38a0d8c29f964736f6c634300081d0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3ACF CODESIZE SUB DUP1 PUSH2 0x3ACF DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x472 JUMP JUMPDEST CALLER DUP3 DUP3 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x43 SWAP2 SWAP1 PUSH2 0x715 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x53 SWAP2 SWAP1 PUSH2 0x715 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x7F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD5 DUP2 PUSH2 0x1D5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x143 SWAP1 PUSH2 0x866 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2710 DUP4 LT ISZERO PUSH2 0x191 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x188 SWAP1 PUSH2 0x8F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP3 PUSH1 0xA DUP2 SWAP1 SSTORE POP POP POP POP POP PUSH2 0x912 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2D2 DUP3 PUSH2 0x2A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E2 DUP2 PUSH2 0x2C8 JUMP JUMPDEST DUP2 EQ PUSH2 0x2EC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2FD DUP2 PUSH2 0x2D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x315 DUP2 PUSH2 0x303 JUMP JUMPDEST DUP2 EQ PUSH2 0x31F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x330 DUP2 PUSH2 0x30C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x384 DUP3 PUSH2 0x33E JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3A3 JUMPI PUSH2 0x3A2 PUSH2 0x34E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3B5 PUSH2 0x298 JUMP JUMPDEST SWAP1 POP PUSH2 0x3C1 DUP3 DUP3 PUSH2 0x37B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3E0 JUMPI PUSH2 0x3DF PUSH2 0x34E JUMP JUMPDEST JUMPDEST PUSH2 0x3E9 DUP3 PUSH2 0x33E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x416 PUSH2 0x411 DUP5 PUSH2 0x3C6 JUMP JUMPDEST PUSH2 0x3AC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x432 JUMPI PUSH2 0x431 PUSH2 0x33A JUMP JUMPDEST JUMPDEST PUSH2 0x43D DUP5 DUP3 DUP6 PUSH2 0x3F6 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x459 JUMPI PUSH2 0x458 PUSH2 0x336 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x469 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x404 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x48A JUMPI PUSH2 0x489 PUSH2 0x2A1 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x497 DUP8 DUP3 DUP9 ADD PUSH2 0x2EF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x4A8 DUP8 DUP3 DUP9 ADD PUSH2 0x322 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4C9 JUMPI PUSH2 0x4C8 PUSH2 0x2A5 JUMP JUMPDEST JUMPDEST PUSH2 0x4D5 DUP8 DUP3 DUP9 ADD PUSH2 0x445 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4F6 JUMPI PUSH2 0x4F5 PUSH2 0x2A5 JUMP JUMPDEST JUMPDEST PUSH2 0x502 DUP8 DUP3 DUP9 ADD PUSH2 0x445 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x55C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x56F JUMPI PUSH2 0x56E PUSH2 0x518 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x5D1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x596 JUMP JUMPDEST PUSH2 0x5DB DUP7 DUP4 PUSH2 0x596 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x616 PUSH2 0x611 PUSH2 0x60C DUP5 PUSH2 0x303 JUMP JUMPDEST PUSH2 0x5F3 JUMP JUMPDEST PUSH2 0x303 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x62F DUP4 PUSH2 0x5FC JUMP JUMPDEST PUSH2 0x643 PUSH2 0x63B DUP3 PUSH2 0x61D JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x5A2 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x65A PUSH2 0x64B JUMP JUMPDEST PUSH2 0x665 DUP2 DUP5 DUP5 PUSH2 0x626 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x688 JUMPI PUSH2 0x67D PUSH0 DUP3 PUSH2 0x652 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x66B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x6CD JUMPI PUSH2 0x69E DUP2 PUSH2 0x575 JUMP JUMPDEST PUSH2 0x6A7 DUP5 PUSH2 0x587 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x6B6 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x6CA PUSH2 0x6C2 DUP6 PUSH2 0x587 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x66A JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6ED PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x6D2 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x705 DUP4 DUP4 PUSH2 0x6DE JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x71E DUP3 PUSH2 0x50E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x737 JUMPI PUSH2 0x736 PUSH2 0x34E JUMP JUMPDEST JUMPDEST PUSH2 0x741 DUP3 SLOAD PUSH2 0x545 JUMP JUMPDEST PUSH2 0x74C DUP3 DUP3 DUP6 PUSH2 0x68C JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x77D JUMPI PUSH0 DUP5 ISZERO PUSH2 0x76B JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x775 DUP6 DUP3 PUSH2 0x6FA JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x7DC JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x78B DUP7 PUSH2 0x575 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x7B2 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x78D JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x7CF JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x7CB PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x6DE JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7ED DUP2 PUSH2 0x2C8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x806 PUSH0 DUP4 ADD DUP5 PUSH2 0x7E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420636F6C6C61746572616C20746F6B656E2061646472657373 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x850 PUSH1 0x20 DUP4 PUSH2 0x80C JUMP JUMPDEST SWAP2 POP PUSH2 0x85B DUP3 PUSH2 0x81C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x87D DUP2 PUSH2 0x844 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6C6C61746572616C697A6174696F6E20726174696F206D75737420626520 PUSH0 DUP3 ADD MSTORE PUSH32 0x6174206C65617374203130302500000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x8DE PUSH1 0x2D DUP4 PUSH2 0x80C JUMP JUMPDEST SWAP2 POP PUSH2 0x8E9 DUP3 PUSH2 0x884 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x90B DUP2 PUSH2 0x8D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x3197 PUSH2 0x938 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0xC49 ADD MSTORE DUP2 DUP2 PUSH2 0xCC9 ADD MSTORE PUSH2 0x15E5 ADD MSTORE PUSH2 0x3197 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xBAD4A01F GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xBAD4A01F EQ PUSH2 0x3B1 JUMPI DUP1 PUSH4 0xBFA244FE EQ PUSH2 0x3CD JUMPI DUP1 PUSH4 0xDCAF9C44 EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0xE1D5E571 EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x467 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0xA1BF2840 EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0xA622EE7C EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0xB2016BD4 EQ PUSH2 0x393 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x4798EB21 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x6112FE2E EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2BD JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x607EC70 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0x11005B07 EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1E9 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x1CE1 JUMP JUMPDEST PUSH2 0x483 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x173 PUSH2 0x4DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x180 SWAP2 SWAP1 PUSH2 0x1D7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x1DF6 JUMP JUMPDEST PUSH2 0x56A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0x1E4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0x1E67 JUMP JUMPDEST PUSH2 0x58C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0x1EA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F1 PUSH2 0x5A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x1EA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x221 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x1EBA JUMP JUMPDEST PUSH2 0x5AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22E SWAP2 SWAP1 PUSH2 0x1E4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH2 0x5D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x1F25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x1CE1 JUMP JUMPDEST PUSH2 0x5E0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x1CE1 JUMP JUMPDEST PUSH2 0x760 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x1E67 JUMP JUMPDEST PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x1EA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C5 PUSH2 0xB15 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CF PUSH2 0xB28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x1F4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2ED PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x1D7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x1E67 JUMP JUMPDEST PUSH2 0xBE0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x1EA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x1E67 JUMP JUMPDEST PUSH2 0xBF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x1FC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x378 SWAP2 SWAP1 PUSH2 0x1DF6 JUMP JUMPDEST PUSH2 0xC25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38A SWAP2 SWAP1 PUSH2 0x1E4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39B PUSH2 0xC47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A8 SWAP2 SWAP1 PUSH2 0x1FFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0x1CE1 JUMP JUMPDEST PUSH2 0xC6B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E2 SWAP2 SWAP1 PUSH2 0x1CE1 JUMP JUMPDEST PUSH2 0xDBB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F1 PUSH2 0xF7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FE SWAP2 SWAP1 PUSH2 0x1EA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x421 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41C SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST PUSH2 0xF84 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42E SWAP2 SWAP1 PUSH2 0x1EA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x451 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44C SWAP2 SWAP1 PUSH2 0x1E67 JUMP JUMPDEST PUSH2 0x1006 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45E SWAP2 SWAP1 PUSH2 0x1EA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x481 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47C SWAP2 SWAP1 PUSH2 0x1E67 JUMP JUMPDEST PUSH2 0x10D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x48B PUSH2 0x115B JUMP JUMPDEST PUSH2 0x2710 DUP2 LT ISZERO PUSH2 0x4D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C7 SWAP1 PUSH2 0x20C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xA DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4E9 SWAP1 PUSH2 0x210C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x515 SWAP1 PUSH2 0x210C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x560 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x537 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x560 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x543 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x574 PUSH2 0x11E2 JUMP JUMPDEST SWAP1 POP PUSH2 0x581 DUP2 DUP6 DUP6 PUSH2 0x11E9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x5B4 PUSH2 0x11E2 JUMP JUMPDEST SWAP1 POP PUSH2 0x5C1 DUP6 DUP3 DUP6 PUSH2 0x11FB JUMP JUMPDEST PUSH2 0x5CC DUP6 DUP6 DUP6 PUSH2 0x128E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5E8 PUSH2 0x137E JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x62A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x621 SWAP1 PUSH2 0x2186 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x6AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A1 SWAP1 PUSH2 0x21EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x6F6 SWAP2 SWAP1 PUSH2 0x2239 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x707 CALLER DUP3 PUSH2 0x13CD JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE46E4414FB02A244A8932C7EC11C904DDF0313B8403A267C5E583CB565B473AF DUP3 PUSH1 0x40 MLOAD PUSH2 0x74D SWAP2 SWAP1 PUSH2 0x1EA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x75D PUSH2 0x144C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x768 PUSH2 0x137E JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x7AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A1 SWAP1 PUSH2 0x2186 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x82A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x821 SWAP1 PUSH2 0x22B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x874 SWAP2 SWAP1 PUSH2 0x2239 JUMP JUMPDEST SWAP1 POP PUSH2 0x8BE CALLER DUP3 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x1456 JUMP JUMPDEST PUSH2 0x8FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F4 SWAP1 PUSH2 0x2344 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA04 SWAP1 PUSH2 0x23AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF3FEF3A3 CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA48 SWAP3 SWAP2 SWAP1 PUSH2 0x23CA JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA5F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA71 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC30FCFBCAAC9E0DEFFA719714EAA82396FF506A0D0D0EEBE170830177288715D DUP5 PUSH1 0x40 MLOAD PUSH2 0xABB SWAP2 SWAP1 PUSH2 0x1EA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0xACD PUSH2 0x144C JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB1D PUSH2 0x115B JUMP JUMPDEST PUSH2 0xB26 PUSH0 PUSH2 0x148F JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xB5F SWAP1 PUSH2 0x210C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB8B SWAP1 PUSH2 0x210C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBD6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBAD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBD6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBB9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xC2F PUSH2 0x11E2 JUMP JUMPDEST SWAP1 POP PUSH2 0xC3C DUP2 DUP6 DUP6 PUSH2 0x128E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0xC73 PUSH2 0x137E JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xCB5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCAC SWAP1 PUSH2 0x2186 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xCBF CALLER PUSH2 0x1552 JUMP JUMPDEST SWAP1 POP PUSH2 0xD0E CALLER DUP3 DUP5 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1719 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD5A SWAP2 SWAP1 PUSH2 0x23F1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD7243F6F8212D5188FD054141CF6EA89CFC0D91FACB8C3AFE2F88A1358480142 DUP4 PUSH1 0x40 MLOAD PUSH2 0xDA7 SWAP2 SWAP1 PUSH2 0x1EA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0xDB8 PUSH2 0x144C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xDC3 PUSH2 0x137E JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xE05 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDFC SWAP1 PUSH2 0x2186 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xE4F SWAP2 SWAP1 PUSH2 0x23F1 JUMP JUMPDEST SWAP1 POP PUSH2 0xE99 CALLER PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP4 PUSH2 0x1456 JUMP JUMPDEST PUSH2 0xED8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xECF SWAP1 PUSH2 0x2494 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xF24 CALLER DUP4 PUSH2 0x179B JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3F1AE0A6113FF787F6445396E9EC4E9D0F6E1A0F05A9A856206F72F9623A2E9F DUP4 PUSH1 0x40 MLOAD PUSH2 0xF6A SWAP2 SWAP1 PUSH2 0x1EA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0xF7B PUSH2 0x144C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x8 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x1078 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 POP POP PUSH2 0x10D2 JUMP JUMPDEST DUP1 PUSH2 0x2710 PUSH1 0x7 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x10C4 SWAP2 SWAP1 PUSH2 0x24B2 JUMP JUMPDEST PUSH2 0x10CE SWAP2 SWAP1 PUSH2 0x2520 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10DF PUSH2 0x115B JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x114F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1146 SWAP2 SWAP1 PUSH2 0x1F4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1158 DUP2 PUSH2 0x148F JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1163 PUSH2 0x11E2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1181 PUSH2 0xB28 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11E0 JUMPI PUSH2 0x11A4 PUSH2 0x11E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D7 SWAP2 SWAP1 PUSH2 0x1F4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x11F6 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x181A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1206 DUP5 DUP5 PUSH2 0xF84 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x1288 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1279 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1270 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2550 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1287 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x181A JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12FE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12F5 SWAP2 SWAP1 PUSH2 0x1F4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x136E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1365 SWAP2 SWAP1 PUSH2 0x1F4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1379 DUP4 DUP4 DUP4 PUSH2 0x19E9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x13C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13BA SWAP1 PUSH2 0x25CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x143D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1434 SWAP2 SWAP1 PUSH2 0x1F4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1448 DUP3 PUSH0 DUP4 PUSH2 0x19E9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SUB PUSH2 0x1467 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1488 JUMP JUMPDEST PUSH1 0xA SLOAD DUP3 PUSH2 0x1475 SWAP2 SWAP1 PUSH2 0x24B2 JUMP JUMPDEST PUSH2 0x2710 DUP5 PUSH2 0x1483 SWAP2 SWAP1 PUSH2 0x24B2 JUMP JUMPDEST LT ISZERO SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x9 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16B5 JUMPI PUSH0 PUSH32 0x0 ADDRESS PUSH1 0x40 MLOAD PUSH2 0x1611 SWAP1 PUSH2 0x1C9D JUMP JUMPDEST PUSH2 0x161C SWAP3 SWAP2 SWAP1 PUSH2 0x25ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x1635 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP SWAP1 POP DUP1 PUSH1 0x9 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x9 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1795 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x174E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2614 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1C02 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x180B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1802 SWAP2 SWAP1 PUSH2 0x1F4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1816 PUSH0 DUP4 DUP4 PUSH2 0x19E9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x188A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1881 SWAP2 SWAP1 PUSH2 0x1F4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18FA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18F1 SWAP2 SWAP1 PUSH2 0x1F4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x19E3 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x19DA SWAP2 SWAP1 PUSH2 0x1EA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A39 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1A2D SWAP2 SWAP1 PUSH2 0x23F1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1B07 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1AC2 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AB9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2550 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B4E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1B98 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1BF5 SWAP2 SWAP1 PUSH2 0x1EA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1C21 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x1C3A JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1C55 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1C97 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C8E SWAP2 SWAP1 PUSH2 0x1F4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xB18 DUP1 PUSH2 0x264A DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CC0 DUP2 PUSH2 0x1CAE JUMP JUMPDEST DUP2 EQ PUSH2 0x1CCA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CDB DUP2 PUSH2 0x1CB7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CF6 JUMPI PUSH2 0x1CF5 PUSH2 0x1CAA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D03 DUP5 DUP3 DUP6 ADD PUSH2 0x1CCD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D4E DUP3 PUSH2 0x1D0C JUMP JUMPDEST PUSH2 0x1D58 DUP2 DUP6 PUSH2 0x1D16 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D68 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D26 JUMP JUMPDEST PUSH2 0x1D71 DUP2 PUSH2 0x1D34 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D94 DUP2 DUP5 PUSH2 0x1D44 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DC5 DUP3 PUSH2 0x1D9C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DD5 DUP2 PUSH2 0x1DBB JUMP JUMPDEST DUP2 EQ PUSH2 0x1DDF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DF0 DUP2 PUSH2 0x1DCC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E0C JUMPI PUSH2 0x1E0B PUSH2 0x1CAA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E19 DUP6 DUP3 DUP7 ADD PUSH2 0x1DE2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E2A DUP6 DUP3 DUP7 ADD PUSH2 0x1CCD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E48 DUP2 PUSH2 0x1E34 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E61 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E3F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E7C JUMPI PUSH2 0x1E7B PUSH2 0x1CAA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E89 DUP5 DUP3 DUP6 ADD PUSH2 0x1DE2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E9B DUP2 PUSH2 0x1CAE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EB4 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E92 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1ED1 JUMPI PUSH2 0x1ED0 PUSH2 0x1CAA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EDE DUP7 DUP3 DUP8 ADD PUSH2 0x1DE2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1EEF DUP7 DUP3 DUP8 ADD PUSH2 0x1DE2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F00 DUP7 DUP3 DUP8 ADD PUSH2 0x1CCD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F1F DUP2 PUSH2 0x1F0A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F38 PUSH0 DUP4 ADD DUP5 PUSH2 0x1F16 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F47 DUP2 PUSH2 0x1DBB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F60 PUSH0 DUP4 ADD DUP5 PUSH2 0x1F3E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F89 PUSH2 0x1F84 PUSH2 0x1F7F DUP5 PUSH2 0x1D9C JUMP JUMPDEST PUSH2 0x1F66 JUMP JUMPDEST PUSH2 0x1D9C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F9A DUP3 PUSH2 0x1F6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FAB DUP3 PUSH2 0x1F90 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FBB DUP2 PUSH2 0x1FA1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FD4 PUSH0 DUP4 ADD DUP5 PUSH2 0x1FB2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FE4 DUP3 PUSH2 0x1F90 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FF4 DUP2 PUSH2 0x1FDA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x200D PUSH0 DUP4 ADD DUP5 PUSH2 0x1FEB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2029 JUMPI PUSH2 0x2028 PUSH2 0x1CAA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2036 DUP6 DUP3 DUP7 ADD PUSH2 0x1DE2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2047 DUP6 DUP3 DUP7 ADD PUSH2 0x1DE2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6C6C61746572616C697A6174696F6E20726174696F206D75737420626520 PUSH0 DUP3 ADD MSTORE PUSH32 0x6174206C65617374203130302500000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20AB PUSH1 0x2D DUP4 PUSH2 0x1D16 JUMP JUMPDEST SWAP2 POP PUSH2 0x20B6 DUP3 PUSH2 0x2051 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20D8 DUP2 PUSH2 0x209F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2123 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2136 JUMPI PUSH2 0x2135 PUSH2 0x20DF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D757374206265203E20300000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2170 PUSH1 0x12 DUP4 PUSH2 0x1D16 JUMP JUMPDEST SWAP2 POP PUSH2 0x217B DUP3 PUSH2 0x213C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x219D DUP2 PUSH2 0x2164 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E742065786365656473206465627400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21D8 PUSH1 0x13 DUP4 PUSH2 0x1D16 JUMP JUMPDEST SWAP2 POP PUSH2 0x21E3 DUP3 PUSH2 0x21A4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2205 DUP2 PUSH2 0x21CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2243 DUP3 PUSH2 0x1CAE JUMP JUMPDEST SWAP2 POP PUSH2 0x224E DUP4 PUSH2 0x1CAE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2266 JUMPI PUSH2 0x2265 PUSH2 0x220C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420636F6C6C61746572616C2062616C616E636500 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x22A0 PUSH1 0x1F DUP4 PUSH2 0x1D16 JUMP JUMPDEST SWAP2 POP PUSH2 0x22AB DUP3 PUSH2 0x226C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22CD DUP2 PUSH2 0x2294 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5769746864726177616C20776F756C642062726561636820636F6C6C61746572 PUSH0 DUP3 ADD MSTORE PUSH32 0x616C697A6174696F6E20726174696F0000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x232E PUSH1 0x2F DUP4 PUSH2 0x1D16 JUMP JUMPDEST SWAP2 POP PUSH2 0x2339 DUP3 PUSH2 0x22D4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x235B DUP2 PUSH2 0x2322 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F207661756C742065786973747320666F7220757365720000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2396 PUSH1 0x18 DUP4 PUSH2 0x1D16 JUMP JUMPDEST SWAP2 POP PUSH2 0x23A1 DUP3 PUSH2 0x2362 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23C3 DUP2 PUSH2 0x238A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x23DD PUSH0 DUP4 ADD DUP6 PUSH2 0x1F3E JUMP JUMPDEST PUSH2 0x23EA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E92 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x23FB DUP3 PUSH2 0x1CAE JUMP JUMPDEST SWAP2 POP PUSH2 0x2406 DUP4 PUSH2 0x1CAE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x241E JUMPI PUSH2 0x241D PUSH2 0x220C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420636F6C6C61746572616C20746F206D696E7420 PUSH0 DUP3 ADD MSTORE PUSH32 0x7468617420616D6F756E74000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x247E PUSH1 0x2B DUP4 PUSH2 0x1D16 JUMP JUMPDEST SWAP2 POP PUSH2 0x2489 DUP3 PUSH2 0x2424 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24AB DUP2 PUSH2 0x2472 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x24BC DUP3 PUSH2 0x1CAE JUMP JUMPDEST SWAP2 POP PUSH2 0x24C7 DUP4 PUSH2 0x1CAE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x24D5 DUP2 PUSH2 0x1CAE JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x24EC JUMPI PUSH2 0x24EB PUSH2 0x220C JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x252A DUP3 PUSH2 0x1CAE JUMP JUMPDEST SWAP2 POP PUSH2 0x2535 DUP4 PUSH2 0x1CAE JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2545 JUMPI PUSH2 0x2544 PUSH2 0x24F3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2563 PUSH0 DUP4 ADD DUP7 PUSH2 0x1F3E JUMP JUMPDEST PUSH2 0x2570 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1E92 JUMP JUMPDEST PUSH2 0x257D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1E92 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25B9 PUSH1 0x1F DUP4 PUSH2 0x1D16 JUMP JUMPDEST SWAP2 POP PUSH2 0x25C4 DUP3 PUSH2 0x2585 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x25E6 DUP2 PUSH2 0x25AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2600 PUSH0 DUP4 ADD DUP6 PUSH2 0x1F3E JUMP JUMPDEST PUSH2 0x260D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F3E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2627 PUSH0 DUP4 ADD DUP7 PUSH2 0x1F3E JUMP JUMPDEST PUSH2 0x2634 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1F3E JUMP JUMPDEST PUSH2 0x2641 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1E92 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xB18 CODESIZE SUB DUP1 PUSH2 0xB18 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x27A JUMP JUMPDEST DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x2C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1 DUP2 PUSH2 0x15B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x120 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x117 SWAP1 PUSH2 0x33A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP PUSH2 0x358 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x249 DUP3 PUSH2 0x220 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x259 DUP2 PUSH2 0x23F JUMP JUMPDEST DUP2 EQ PUSH2 0x263 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x274 DUP2 PUSH2 0x250 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x290 JUMPI PUSH2 0x28F PUSH2 0x21C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x29D DUP6 DUP3 DUP7 ADD PUSH2 0x266 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2AE DUP6 DUP3 DUP7 ADD PUSH2 0x266 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C1 DUP2 PUSH2 0x23F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2DA PUSH0 DUP4 ADD DUP5 PUSH2 0x2B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E20616464726573730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x324 PUSH1 0x15 DUP4 PUSH2 0x2E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x32F DUP3 PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x351 DUP2 PUSH2 0x318 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x79A PUSH2 0x37E PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x13C ADD MSTORE DUP2 DUP2 PUSH2 0x161 ADD MSTORE PUSH2 0x28F ADD MSTORE PUSH2 0x79A PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0xB2016BD4 EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0xB69EF8A8 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0xE4 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x6C PUSH2 0x100 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x76 PUSH2 0x113 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x94 PUSH2 0x13A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x5F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB2 PUSH2 0x15E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x624 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x66B JUMP JUMPDEST PUSH2 0x1FC JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0x6C0 JUMP JUMPDEST PUSH2 0x280 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x108 PUSH2 0x2D7 JUMP JUMPDEST PUSH2 0x111 PUSH0 PUSH2 0x35E JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x57F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D3 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x712 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x2D7 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x274 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x27D DUP2 PUSH2 0x35E JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x288 PUSH2 0x2D7 JUMP JUMPDEST PUSH2 0x2D3 DUP3 DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x41F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x49E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2FD PUSH2 0x113 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x35C JUMPI PUSH2 0x320 PUSH2 0x49E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x499 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x452 SWAP3 SWAP2 SWAP1 PUSH2 0x73D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x4A5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x4C4 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x4DD JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x4F8 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x53A JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x531 SWAP2 SWAP1 PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x569 DUP3 PUSH2 0x540 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x579 DUP2 PUSH2 0x55F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x592 PUSH0 DUP4 ADD DUP5 PUSH2 0x570 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5BB PUSH2 0x5B6 PUSH2 0x5B1 DUP5 PUSH2 0x540 JUMP JUMPDEST PUSH2 0x598 JUMP JUMPDEST PUSH2 0x540 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5CC DUP3 PUSH2 0x5A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5DD DUP3 PUSH2 0x5C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5ED DUP2 PUSH2 0x5D3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x606 PUSH0 DUP4 ADD DUP5 PUSH2 0x5E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x61E DUP2 PUSH2 0x60C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x637 PUSH0 DUP4 ADD DUP5 PUSH2 0x615 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x64A DUP2 PUSH2 0x55F JUMP JUMPDEST DUP2 EQ PUSH2 0x654 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x665 DUP2 PUSH2 0x641 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x680 JUMPI PUSH2 0x67F PUSH2 0x63D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x68D DUP5 DUP3 DUP6 ADD PUSH2 0x657 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x69F DUP2 PUSH2 0x60C JUMP JUMPDEST DUP2 EQ PUSH2 0x6A9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6BA DUP2 PUSH2 0x696 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6D6 JUMPI PUSH2 0x6D5 PUSH2 0x63D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6E3 DUP6 DUP3 DUP7 ADD PUSH2 0x657 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x6F4 DUP6 DUP3 DUP7 ADD PUSH2 0x6AC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x70C DUP2 PUSH2 0x696 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x727 JUMPI PUSH2 0x726 PUSH2 0x63D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x734 DUP5 DUP3 DUP6 ADD PUSH2 0x6FE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x750 PUSH0 DUP4 ADD DUP6 PUSH2 0x570 JUMP JUMPDEST PUSH2 0x75D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x615 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 NOT DUP8 MSTORE8 0xC4 0xD4 PUSH31 0xAA95C0862639943FDA4CE251FCBE9FFE29421DA0C40B3FD0C264736F6C6343 STOP ADDMOD SAR STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0xCD469E468E4F8A82FF466F7E348B5A291029F5C651F271 0xD4 0xD 0xB3 DUP11 0xD DUP13 0x29 EXTDELEGATECALL PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "1857:5962:12:-:0;;;3332:515;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3529:10;3499:4;3505:6;1675:5:6;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:5;1821:7;:22;;;;3591:1:12::2;3563:30;;:16;:30;;::::0;3555:75:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;3675:5;3648:23;:32;;3640:90;;;;;;;;;;;;:::i;:::-;;;;;;;;;3765:16;3740:42;;;;;;;;::::0;::::2;3817:23;3792:22;:48;;;;3332:515:::0;;;;1857:5962;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:75:13:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:117::-;1314:1;1311;1304:12;1328:117;1437:1;1434;1427:12;1451:102;1492:6;1543:2;1539:7;1534:2;1527:5;1523:14;1519:28;1509:38;;1451:102;;;:::o;1559:180::-;1607:77;1604:1;1597:88;1704:4;1701:1;1694:15;1728:4;1725:1;1718:15;1745:281;1828:27;1850:4;1828:27;:::i;:::-;1820:6;1816:40;1958:6;1946:10;1943:22;1922:18;1910:10;1907:34;1904:62;1901:88;;;1969:18;;:::i;:::-;1901:88;2009:10;2005:2;1998:22;1788:238;1745:281;;:::o;2032:129::-;2066:6;2093:20;;:::i;:::-;2083:30;;2122:33;2150:4;2142:6;2122:33;:::i;:::-;2032:129;;;:::o;2167:308::-;2229:4;2319:18;2311:6;2308:30;2305:56;;;2341:18;;:::i;:::-;2305:56;2379:29;2401:6;2379:29;:::i;:::-;2371:37;;2463:4;2457;2453:15;2445:23;;2167:308;;;:::o;2481:139::-;2570:6;2565:3;2560;2554:23;2611:1;2602:6;2597:3;2593:16;2586:27;2481:139;;;:::o;2626:434::-;2715:5;2740:66;2756:49;2798:6;2756:49;:::i;:::-;2740:66;:::i;:::-;2731:75;;2829:6;2822:5;2815:21;2867:4;2860:5;2856:16;2905:3;2896:6;2891:3;2887:16;2884:25;2881:112;;;2912:79;;:::i;:::-;2881:112;3002:52;3047:6;3042:3;3037;3002:52;:::i;:::-;2721:339;2626:434;;;;;:::o;3080:355::-;3147:5;3196:3;3189:4;3181:6;3177:17;3173:27;3163:122;;3204:79;;:::i;:::-;3163:122;3314:6;3308:13;3339:90;3425:3;3417:6;3410:4;3402:6;3398:17;3339:90;:::i;:::-;3330:99;;3153:282;3080:355;;;;:::o;3441:1166::-;3558:6;3566;3574;3582;3631:3;3619:9;3610:7;3606:23;3602:33;3599:120;;;3638:79;;:::i;:::-;3599:120;3758:1;3783:64;3839:7;3830:6;3819:9;3815:22;3783:64;:::i;:::-;3773:74;;3729:128;3896:2;3922:64;3978:7;3969:6;3958:9;3954:22;3922:64;:::i;:::-;3912:74;;3867:129;4056:2;4045:9;4041:18;4035:25;4087:18;4079:6;4076:30;4073:117;;;4109:79;;:::i;:::-;4073:117;4214:74;4280:7;4271:6;4260:9;4256:22;4214:74;:::i;:::-;4204:84;;4006:292;4358:2;4347:9;4343:18;4337:25;4389:18;4381:6;4378:30;4375:117;;;4411:79;;:::i;:::-;4375:117;4516:74;4582:7;4573:6;4562:9;4558:22;4516:74;:::i;:::-;4506:84;;4308:292;3441:1166;;;;;;;:::o;4613:99::-;4665:6;4699:5;4693:12;4683:22;;4613:99;;;:::o;4718:180::-;4766:77;4763:1;4756:88;4863:4;4860:1;4853:15;4887:4;4884:1;4877:15;4904:320;4948:6;4985:1;4979:4;4975:12;4965:22;;5032:1;5026:4;5022:12;5053:18;5043:81;;5109:4;5101:6;5097:17;5087:27;;5043:81;5171:2;5163:6;5160:14;5140:18;5137:38;5134:84;;5190:18;;:::i;:::-;5134:84;4955:269;4904:320;;;:::o;5230:141::-;5279:4;5302:3;5294:11;;5325:3;5322:1;5315:14;5359:4;5356:1;5346:18;5338:26;;5230:141;;;:::o;5377:93::-;5414:6;5461:2;5456;5449:5;5445:14;5441:23;5431:33;;5377:93;;;:::o;5476:107::-;5520:8;5570:5;5564:4;5560:16;5539:37;;5476:107;;;;:::o;5589:393::-;5658:6;5708:1;5696:10;5692:18;5731:97;5761:66;5750:9;5731:97;:::i;:::-;5849:39;5879:8;5868:9;5849:39;:::i;:::-;5837:51;;5921:4;5917:9;5910:5;5906:21;5897:30;;5970:4;5960:8;5956:19;5949:5;5946:30;5936:40;;5665:317;;5589:393;;;;;:::o;5988:60::-;6016:3;6037:5;6030:12;;5988:60;;;:::o;6054:142::-;6104:9;6137:53;6155:34;6164:24;6182:5;6164:24;:::i;:::-;6155:34;:::i;:::-;6137:53;:::i;:::-;6124:66;;6054:142;;;:::o;6202:75::-;6245:3;6266:5;6259:12;;6202:75;;;:::o;6283:269::-;6393:39;6424:7;6393:39;:::i;:::-;6454:91;6503:41;6527:16;6503:41;:::i;:::-;6495:6;6488:4;6482:11;6454:91;:::i;:::-;6448:4;6441:105;6359:193;6283:269;;;:::o;6558:73::-;6603:3;6624:1;6617:8;;6558:73;:::o;6637:189::-;6714:32;;:::i;:::-;6755:65;6813:6;6805;6799:4;6755:65;:::i;:::-;6690:136;6637:189;;:::o;6832:186::-;6892:120;6909:3;6902:5;6899:14;6892:120;;;6963:39;7000:1;6993:5;6963:39;:::i;:::-;6936:1;6929:5;6925:13;6916:22;;6892:120;;;6832:186;;:::o;7024:543::-;7125:2;7120:3;7117:11;7114:446;;;7159:38;7191:5;7159:38;:::i;:::-;7243:29;7261:10;7243:29;:::i;:::-;7233:8;7229:44;7426:2;7414:10;7411:18;7408:49;;;7447:8;7432:23;;7408:49;7470:80;7526:22;7544:3;7526:22;:::i;:::-;7516:8;7512:37;7499:11;7470:80;:::i;:::-;7129:431;;7114:446;7024:543;;;:::o;7573:117::-;7627:8;7677:5;7671:4;7667:16;7646:37;;7573:117;;;;:::o;7696:169::-;7740:6;7773:51;7821:1;7817:6;7809:5;7806:1;7802:13;7773:51;:::i;:::-;7769:56;7854:4;7848;7844:15;7834:25;;7747:118;7696:169;;;;:::o;7870:295::-;7946:4;8092:29;8117:3;8111:4;8092:29;:::i;:::-;8084:37;;8154:3;8151:1;8147:11;8141:4;8138:21;8130:29;;7870:295;;;;:::o;8170:1395::-;8287:37;8320:3;8287:37;:::i;:::-;8389:18;8381:6;8378:30;8375:56;;;8411:18;;:::i;:::-;8375:56;8455:38;8487:4;8481:11;8455:38;:::i;:::-;8540:67;8600:6;8592;8586:4;8540:67;:::i;:::-;8634:1;8658:4;8645:17;;8690:2;8682:6;8679:14;8707:1;8702:618;;;;9364:1;9381:6;9378:77;;;9430:9;9425:3;9421:19;9415:26;9406:35;;9378:77;9481:67;9541:6;9534:5;9481:67;:::i;:::-;9475:4;9468:81;9337:222;8672:887;;8702:618;8754:4;8750:9;8742:6;8738:22;8788:37;8820:4;8788:37;:::i;:::-;8847:1;8861:208;8875:7;8872:1;8869:14;8861:208;;;8954:9;8949:3;8945:19;8939:26;8931:6;8924:42;9005:1;8997:6;8993:14;8983:24;;9052:2;9041:9;9037:18;9024:31;;8898:4;8895:1;8891:12;8886:17;;8861:208;;;9097:6;9088:7;9085:19;9082:179;;;9155:9;9150:3;9146:19;9140:26;9198:48;9240:4;9232:6;9228:17;9217:9;9198:48;:::i;:::-;9190:6;9183:64;9105:156;9082:179;9307:1;9303;9295:6;9291:14;9287:22;9281:4;9274:36;8709:611;;;8672:887;;8262:1303;;;8170:1395;;:::o;9571:118::-;9658:24;9676:5;9658:24;:::i;:::-;9653:3;9646:37;9571:118;;:::o;9695:222::-;9788:4;9826:2;9815:9;9811:18;9803:26;;9839:71;9907:1;9896:9;9892:17;9883:6;9839:71;:::i;:::-;9695:222;;;;:::o;9923:169::-;10007:11;10041:6;10036:3;10029:19;10081:4;10076:3;10072:14;10057:29;;9923:169;;;;:::o;10098:182::-;10238:34;10234:1;10226:6;10222:14;10215:58;10098:182;:::o;10286:366::-;10428:3;10449:67;10513:2;10508:3;10449:67;:::i;:::-;10442:74;;10525:93;10614:3;10525:93;:::i;:::-;10643:2;10638:3;10634:12;10627:19;;10286:366;;;:::o;10658:419::-;10824:4;10862:2;10851:9;10847:18;10839:26;;10911:9;10905:4;10901:20;10897:1;10886:9;10882:17;10875:47;10939:131;11065:4;10939:131;:::i;:::-;10931:139;;10658:419;;;:::o;11083:232::-;11223:34;11219:1;11211:6;11207:14;11200:58;11292:15;11287:2;11279:6;11275:15;11268:40;11083:232;:::o;11321:366::-;11463:3;11484:67;11548:2;11543:3;11484:67;:::i;:::-;11477:74;;11560:93;11649:3;11560:93;:::i;:::-;11678:2;11673:3;11669:12;11662:19;;11321:366;;;:::o;11693:419::-;11859:4;11897:2;11886:9;11882:18;11874:26;;11946:9;11940:4;11936:20;11932:1;11921:9;11917:17;11910:47;11974:131;12100:4;11974:131;:::i;:::-;11966:139;;11693:419;;;:::o;1857:5962:12:-;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_845": {
									"entryPoint": 4585,
									"id": 845,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_905": {
									"entryPoint": 6170,
									"id": 905,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_827": {
									"entryPoint": 5069,
									"id": 827,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_callOptionalReturn_1425": {
									"entryPoint": 7170,
									"id": 1425,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 4443,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getVault_1737": {
									"entryPoint": 5458,
									"id": 1737,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isCollateralSufficient_2008": {
									"entryPoint": 5206,
									"id": 2008,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_794": {
									"entryPoint": 6043,
									"id": 794,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1479": {
									"entryPoint": 4578,
									"id": 1479,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_427": {
									"entryPoint": 5196,
									"id": 427,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_419": {
									"entryPoint": 4990,
									"id": 419,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_953": {
									"entryPoint": 4603,
									"id": 953,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 5263,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_684": {
									"entryPoint": 4750,
									"id": 684,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_761": {
									"entryPoint": 6633,
									"id": 761,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_581": {
									"entryPoint": 3972,
									"id": 581,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_605": {
									"entryPoint": 1386,
									"id": 605,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_540": {
									"entryPoint": 2768,
									"id": 540,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnStableCoin_1978": {
									"entryPoint": 1504,
									"id": 1978,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@collateralBalance_1605": {
									"entryPoint": 3040,
									"id": 1605,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@collateralToken_1601": {
									"entryPoint": 3143,
									"id": 1601,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@collateralizationRatio_1616": {
									"entryPoint": 3966,
									"id": 1616,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@debtBalance_1609": {
									"entryPoint": 1420,
									"id": 1609,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_518": {
									"entryPoint": 1496,
									"id": 518,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@depositCollateral_1786": {
									"entryPoint": 3179,
									"id": 1786,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getUserCollateralizationRatio_2043": {
									"entryPoint": 4102,
									"id": 2043,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mintStableCoin_1933": {
									"entryPoint": 3515,
									"id": 1933,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@name_500": {
									"entryPoint": 1242,
									"id": 500,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 2856,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 2837,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_1130": {
									"entryPoint": 5913,
									"id": 1130,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@symbol_509": {
									"entryPoint": 2896,
									"id": 509,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_527": {
									"entryPoint": 1441,
									"id": 527,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_637": {
									"entryPoint": 1450,
									"id": 637,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 4311,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_564": {
									"entryPoint": 3109,
									"id": 564,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@updateCollateralizationRatio_2063": {
									"entryPoint": 1155,
									"id": 2063,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@vaults_1614": {
									"entryPoint": 3061,
									"id": 1614,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawCollateral_1876": {
									"entryPoint": 1888,
									"id": 1876,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 7650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7373,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7783,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7866,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7670,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7393,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7998,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7743,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$1032_to_t_address_fromStack": {
									"entryPoint": 8171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_Vault_$1587_to_t_address_fromStack": {
									"entryPoint": 8114,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7492,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8548,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0e36ef5e15ed9013dd7607096cd93e0b2ef988dfde5f216aa728191847127f83_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5821c66d801abd0f067bed9f888f52bbd0ec900df9f86f6117638508d1a7ebba_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9098,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5978e55655ae94e38fa7726ce96ce1eb90620fc9a937aeb007bc6487f417e4de_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8852,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_59f034818b0329044bc3dd8d1236d7e23aa7fbe805dec217b13e45ed2e126a55_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8994,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_969d0e7bdc9f60900822ca06581f62f1488479b8fc44dc0279e23a50719ed79d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8652,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b0625f87e31dc518e790285a825bb3c4cd66fc859c380f7e244181f8081e3f92_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9645,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7826,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 7958,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8013,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 9709,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9748,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9162,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9552,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7758,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$1032__to_t_address__fromStack_reversed": {
									"entryPoint": 8186,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_Vault_$1587__to_t_address__fromStack_reversed": {
									"entryPoint": 8129,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7548,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8582,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0e36ef5e15ed9013dd7607096cd93e0b2ef988dfde5f216aa728191847127f83__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9364,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5821c66d801abd0f067bed9f888f52bbd0ec900df9f86f6117638508d1a7ebba__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9132,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5978e55655ae94e38fa7726ce96ce1eb90620fc9a937aeb007bc6487f417e4de__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8886,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_59f034818b0329044bc3dd8d1236d7e23aa7fbe805dec217b13e45ed2e126a55__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9028,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_969d0e7bdc9f60900822ca06581f62f1488479b8fc44dc0279e23a50719ed79d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b0625f87e31dc518e790285a825bb3c4cd66fc859c380f7e244181f8081e3f92__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8385,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9679,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 7973,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7436,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9201,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 9504,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 9394,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8761,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7611,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7732,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7580,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7342,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 7946,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$1032_to_t_address": {
									"entryPoint": 8154,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_Vault_$1587_to_t_address": {
									"entryPoint": 8097,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 8080,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 8047,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7462,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 8460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 8038,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8716,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 9459,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8415,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7338,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7476,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb": {
									"entryPoint": 8508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_0e36ef5e15ed9013dd7607096cd93e0b2ef988dfde5f216aa728191847127f83": {
									"entryPoint": 9252,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5821c66d801abd0f067bed9f888f52bbd0ec900df9f86f6117638508d1a7ebba": {
									"entryPoint": 9058,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5978e55655ae94e38fa7726ce96ce1eb90620fc9a937aeb007bc6487f417e4de": {
									"entryPoint": 8812,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_59f034818b0329044bc3dd8d1236d7e23aa7fbe805dec217b13e45ed2e126a55": {
									"entryPoint": 8916,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_969d0e7bdc9f60900822ca06581f62f1488479b8fc44dc0279e23a50719ed79d": {
									"entryPoint": 8612,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b0625f87e31dc518e790285a825bb3c4cd66fc859c380f7e244181f8081e3f92": {
									"entryPoint": 8273,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 9605,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7628,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:19183:13",
										"nodeType": "YulBlock",
										"src": "0:19183:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "379:32:13",
													"nodeType": "YulBlock",
													"src": "379:32:13",
													"statements": [
														{
															"nativeSrc": "389:16:13",
															"nodeType": "YulAssignment",
															"src": "389:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:13",
																"nodeType": "YulIdentifier",
																"src": "400:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:13",
														"nodeType": "YulTypedName",
														"src": "361:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:13",
														"nodeType": "YulTypedName",
														"src": "371:7:13",
														"type": ""
													}
												],
												"src": "334:77:13"
											},
											{
												"body": {
													"nativeSrc": "460:79:13",
													"nodeType": "YulBlock",
													"src": "460:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:13",
																"nodeType": "YulBlock",
																"src": "517:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:13",
																					"nodeType": "YulLiteral",
																					"src": "526:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:13",
																					"nodeType": "YulLiteral",
																					"src": "529:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:13"
																			},
																			"nativeSrc": "519:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:13"
																		},
																		"nativeSrc": "519:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:13"
																				},
																				"nativeSrc": "490:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:13"
																		},
																		"nativeSrc": "480:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:13"
																},
																"nativeSrc": "473:43:13",
																"nodeType": "YulFunctionCall",
																"src": "473:43:13"
															},
															"nativeSrc": "470:63:13",
															"nodeType": "YulIf",
															"src": "470:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:13",
														"nodeType": "YulTypedName",
														"src": "453:5:13",
														"type": ""
													}
												],
												"src": "417:122:13"
											},
											{
												"body": {
													"nativeSrc": "597:87:13",
													"nodeType": "YulBlock",
													"src": "597:87:13",
													"statements": [
														{
															"nativeSrc": "607:29:13",
															"nodeType": "YulAssignment",
															"src": "607:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:13"
																},
																"nativeSrc": "616:20:13",
																"nodeType": "YulFunctionCall",
																"src": "616:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:13"
																},
																"nativeSrc": "645:33:13",
																"nodeType": "YulFunctionCall",
																"src": "645:33:13"
															},
															"nativeSrc": "645:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:13",
														"nodeType": "YulTypedName",
														"src": "575:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:13",
														"nodeType": "YulTypedName",
														"src": "583:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:13",
														"nodeType": "YulTypedName",
														"src": "591:5:13",
														"type": ""
													}
												],
												"src": "545:139:13"
											},
											{
												"body": {
													"nativeSrc": "756:263:13",
													"nodeType": "YulBlock",
													"src": "756:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:13",
																"nodeType": "YulBlock",
																"src": "802:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:13"
																			},
																			"nativeSrc": "804:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:13"
																		},
																		"nativeSrc": "804:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:13"
																		},
																		"nativeSrc": "773:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:13",
																		"nodeType": "YulLiteral",
																		"src": "798:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:13"
																},
																"nativeSrc": "769:32:13",
																"nodeType": "YulFunctionCall",
																"src": "769:32:13"
															},
															"nativeSrc": "766:119:13",
															"nodeType": "YulIf",
															"src": "766:119:13"
														},
														{
															"nativeSrc": "895:117:13",
															"nodeType": "YulBlock",
															"src": "895:117:13",
															"statements": [
																{
																	"nativeSrc": "910:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:13",
																		"nodeType": "YulLiteral",
																		"src": "924:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:13",
																			"nodeType": "YulTypedName",
																			"src": "914:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:13",
																	"nodeType": "YulAssignment",
																	"src": "939:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:13"
																				},
																				"nativeSrc": "970:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:13"
																		},
																		"nativeSrc": "949:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:13",
														"nodeType": "YulTypedName",
														"src": "726:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:13",
														"nodeType": "YulTypedName",
														"src": "737:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:13",
														"nodeType": "YulTypedName",
														"src": "749:6:13",
														"type": ""
													}
												],
												"src": "690:329:13"
											},
											{
												"body": {
													"nativeSrc": "1084:40:13",
													"nodeType": "YulBlock",
													"src": "1084:40:13",
													"statements": [
														{
															"nativeSrc": "1095:22:13",
															"nodeType": "YulAssignment",
															"src": "1095:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1111:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1111:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1105:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1105:5:13"
																},
																"nativeSrc": "1105:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1105:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1095:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1095:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1025:99:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1067:5:13",
														"nodeType": "YulTypedName",
														"src": "1067:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1077:6:13",
														"nodeType": "YulTypedName",
														"src": "1077:6:13",
														"type": ""
													}
												],
												"src": "1025:99:13"
											},
											{
												"body": {
													"nativeSrc": "1226:73:13",
													"nodeType": "YulBlock",
													"src": "1226:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1243:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1243:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1248:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1248:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1236:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1236:6:13"
																},
																"nativeSrc": "1236:19:13",
																"nodeType": "YulFunctionCall",
																"src": "1236:19:13"
															},
															"nativeSrc": "1236:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "1236:19:13"
														},
														{
															"nativeSrc": "1264:29:13",
															"nodeType": "YulAssignment",
															"src": "1264:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1283:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1283:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1288:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1279:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1279:3:13"
																},
																"nativeSrc": "1279:14:13",
																"nodeType": "YulFunctionCall",
																"src": "1279:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1264:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "1264:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1130:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1198:3:13",
														"nodeType": "YulTypedName",
														"src": "1198:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1203:6:13",
														"nodeType": "YulTypedName",
														"src": "1203:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1214:11:13",
														"nodeType": "YulTypedName",
														"src": "1214:11:13",
														"type": ""
													}
												],
												"src": "1130:169:13"
											},
											{
												"body": {
													"nativeSrc": "1367:77:13",
													"nodeType": "YulBlock",
													"src": "1367:77:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1384:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1384:3:13"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1389:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1389:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1394:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1394:6:13"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1378:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1378:5:13"
																},
																"nativeSrc": "1378:23:13",
																"nodeType": "YulFunctionCall",
																"src": "1378:23:13"
															},
															"nativeSrc": "1378:23:13",
															"nodeType": "YulExpressionStatement",
															"src": "1378:23:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1421:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "1421:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1426:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1426:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1417:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1417:3:13"
																		},
																		"nativeSrc": "1417:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1417:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1435:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1435:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1410:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1410:6:13"
																},
																"nativeSrc": "1410:27:13",
																"nodeType": "YulFunctionCall",
																"src": "1410:27:13"
															},
															"nativeSrc": "1410:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "1410:27:13"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1305:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1349:3:13",
														"nodeType": "YulTypedName",
														"src": "1349:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1354:3:13",
														"nodeType": "YulTypedName",
														"src": "1354:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1359:6:13",
														"nodeType": "YulTypedName",
														"src": "1359:6:13",
														"type": ""
													}
												],
												"src": "1305:139:13"
											},
											{
												"body": {
													"nativeSrc": "1498:54:13",
													"nodeType": "YulBlock",
													"src": "1498:54:13",
													"statements": [
														{
															"nativeSrc": "1508:38:13",
															"nodeType": "YulAssignment",
															"src": "1508:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1526:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1526:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1533:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1533:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1522:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1522:3:13"
																		},
																		"nativeSrc": "1522:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1522:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1542:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1542:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1538:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1538:3:13"
																		},
																		"nativeSrc": "1538:7:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1538:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1518:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1518:3:13"
																},
																"nativeSrc": "1518:28:13",
																"nodeType": "YulFunctionCall",
																"src": "1518:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1508:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1508:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1450:102:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1481:5:13",
														"nodeType": "YulTypedName",
														"src": "1481:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1491:6:13",
														"nodeType": "YulTypedName",
														"src": "1491:6:13",
														"type": ""
													}
												],
												"src": "1450:102:13"
											},
											{
												"body": {
													"nativeSrc": "1650:285:13",
													"nodeType": "YulBlock",
													"src": "1650:285:13",
													"statements": [
														{
															"nativeSrc": "1660:53:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1660:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1707:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1707:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "1674:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "1674:32:13"
																},
																"nativeSrc": "1674:39:13",
																"nodeType": "YulFunctionCall",
																"src": "1674:39:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1664:6:13",
																	"nodeType": "YulTypedName",
																	"src": "1664:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1722:78:13",
															"nodeType": "YulAssignment",
															"src": "1722:78:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1788:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1788:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1793:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1793:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1729:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "1729:58:13"
																},
																"nativeSrc": "1729:71:13",
																"nodeType": "YulFunctionCall",
																"src": "1729:71:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1722:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1722:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1848:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1848:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1855:4:13",
																				"nodeType": "YulLiteral",
																				"src": "1855:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1844:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1844:3:13"
																		},
																		"nativeSrc": "1844:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1844:16:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "1862:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1862:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1867:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1867:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1809:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "1809:34:13"
																},
																"nativeSrc": "1809:65:13",
																"nodeType": "YulFunctionCall",
																"src": "1809:65:13"
															},
															"nativeSrc": "1809:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "1809:65:13"
														},
														{
															"nativeSrc": "1883:46:13",
															"nodeType": "YulAssignment",
															"src": "1883:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1894:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1894:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1921:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1921:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1899:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "1899:21:13"
																		},
																		"nativeSrc": "1899:29:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1899:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1890:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1890:3:13"
																},
																"nativeSrc": "1890:39:13",
																"nodeType": "YulFunctionCall",
																"src": "1890:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1883:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1883:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1558:377:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1631:5:13",
														"nodeType": "YulTypedName",
														"src": "1631:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1638:3:13",
														"nodeType": "YulTypedName",
														"src": "1638:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1646:3:13",
														"nodeType": "YulTypedName",
														"src": "1646:3:13",
														"type": ""
													}
												],
												"src": "1558:377:13"
											},
											{
												"body": {
													"nativeSrc": "2059:195:13",
													"nodeType": "YulBlock",
													"src": "2059:195:13",
													"statements": [
														{
															"nativeSrc": "2069:26:13",
															"nodeType": "YulAssignment",
															"src": "2069:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2081:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2081:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2092:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2092:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2077:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2077:3:13"
																},
																"nativeSrc": "2077:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2077:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2069:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2069:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2116:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2116:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2127:1:13",
																				"nodeType": "YulLiteral",
																				"src": "2127:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2112:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2112:3:13"
																		},
																		"nativeSrc": "2112:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2112:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2135:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "2135:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2141:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2141:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2131:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2131:3:13"
																		},
																		"nativeSrc": "2131:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2131:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2105:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2105:6:13"
																},
																"nativeSrc": "2105:47:13",
																"nodeType": "YulFunctionCall",
																"src": "2105:47:13"
															},
															"nativeSrc": "2105:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "2105:47:13"
														},
														{
															"nativeSrc": "2161:86:13",
															"nodeType": "YulAssignment",
															"src": "2161:86:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2233:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2233:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2242:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2242:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2169:63:13",
																	"nodeType": "YulIdentifier",
																	"src": "2169:63:13"
																},
																"nativeSrc": "2169:78:13",
																"nodeType": "YulFunctionCall",
																"src": "2169:78:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2161:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2161:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1941:313:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2031:9:13",
														"nodeType": "YulTypedName",
														"src": "2031:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2043:6:13",
														"nodeType": "YulTypedName",
														"src": "2043:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2054:4:13",
														"nodeType": "YulTypedName",
														"src": "2054:4:13",
														"type": ""
													}
												],
												"src": "1941:313:13"
											},
											{
												"body": {
													"nativeSrc": "2305:81:13",
													"nodeType": "YulBlock",
													"src": "2305:81:13",
													"statements": [
														{
															"nativeSrc": "2315:65:13",
															"nodeType": "YulAssignment",
															"src": "2315:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2330:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2330:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2337:42:13",
																		"nodeType": "YulLiteral",
																		"src": "2337:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2326:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2326:3:13"
																},
																"nativeSrc": "2326:54:13",
																"nodeType": "YulFunctionCall",
																"src": "2326:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2315:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "2315:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2260:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2287:5:13",
														"nodeType": "YulTypedName",
														"src": "2287:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2297:7:13",
														"nodeType": "YulTypedName",
														"src": "2297:7:13",
														"type": ""
													}
												],
												"src": "2260:126:13"
											},
											{
												"body": {
													"nativeSrc": "2437:51:13",
													"nodeType": "YulBlock",
													"src": "2437:51:13",
													"statements": [
														{
															"nativeSrc": "2447:35:13",
															"nodeType": "YulAssignment",
															"src": "2447:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2476:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2476:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2458:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "2458:17:13"
																},
																"nativeSrc": "2458:24:13",
																"nodeType": "YulFunctionCall",
																"src": "2458:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2447:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "2447:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2392:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2419:5:13",
														"nodeType": "YulTypedName",
														"src": "2419:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2429:7:13",
														"nodeType": "YulTypedName",
														"src": "2429:7:13",
														"type": ""
													}
												],
												"src": "2392:96:13"
											},
											{
												"body": {
													"nativeSrc": "2537:79:13",
													"nodeType": "YulBlock",
													"src": "2537:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2594:16:13",
																"nodeType": "YulBlock",
																"src": "2594:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2603:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2603:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2606:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2606:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2596:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2596:6:13"
																			},
																			"nativeSrc": "2596:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2596:12:13"
																		},
																		"nativeSrc": "2596:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2596:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2560:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2560:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2585:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "2585:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2567:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "2567:17:13"
																				},
																				"nativeSrc": "2567:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2567:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2557:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "2557:2:13"
																		},
																		"nativeSrc": "2557:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2557:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2550:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2550:6:13"
																},
																"nativeSrc": "2550:43:13",
																"nodeType": "YulFunctionCall",
																"src": "2550:43:13"
															},
															"nativeSrc": "2547:63:13",
															"nodeType": "YulIf",
															"src": "2547:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2494:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2530:5:13",
														"nodeType": "YulTypedName",
														"src": "2530:5:13",
														"type": ""
													}
												],
												"src": "2494:122:13"
											},
											{
												"body": {
													"nativeSrc": "2674:87:13",
													"nodeType": "YulBlock",
													"src": "2674:87:13",
													"statements": [
														{
															"nativeSrc": "2684:29:13",
															"nodeType": "YulAssignment",
															"src": "2684:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2706:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2706:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2693:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "2693:12:13"
																},
																"nativeSrc": "2693:20:13",
																"nodeType": "YulFunctionCall",
																"src": "2693:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2684:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2684:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2749:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2749:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2722:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "2722:26:13"
																},
																"nativeSrc": "2722:33:13",
																"nodeType": "YulFunctionCall",
																"src": "2722:33:13"
															},
															"nativeSrc": "2722:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "2722:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2622:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2652:6:13",
														"nodeType": "YulTypedName",
														"src": "2652:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2660:3:13",
														"nodeType": "YulTypedName",
														"src": "2660:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2668:5:13",
														"nodeType": "YulTypedName",
														"src": "2668:5:13",
														"type": ""
													}
												],
												"src": "2622:139:13"
											},
											{
												"body": {
													"nativeSrc": "2850:391:13",
													"nodeType": "YulBlock",
													"src": "2850:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2896:83:13",
																"nodeType": "YulBlock",
																"src": "2896:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2898:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "2898:77:13"
																			},
																			"nativeSrc": "2898:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2898:79:13"
																		},
																		"nativeSrc": "2898:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2898:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2871:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2871:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2880:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2880:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2867:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2867:3:13"
																		},
																		"nativeSrc": "2867:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2867:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2892:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2892:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2863:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2863:3:13"
																},
																"nativeSrc": "2863:32:13",
																"nodeType": "YulFunctionCall",
																"src": "2863:32:13"
															},
															"nativeSrc": "2860:119:13",
															"nodeType": "YulIf",
															"src": "2860:119:13"
														},
														{
															"nativeSrc": "2989:117:13",
															"nodeType": "YulBlock",
															"src": "2989:117:13",
															"statements": [
																{
																	"nativeSrc": "3004:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3004:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3018:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3018:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3008:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3008:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3033:63:13",
																	"nodeType": "YulAssignment",
																	"src": "3033:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3068:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3068:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3079:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3079:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3064:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3064:3:13"
																				},
																				"nativeSrc": "3064:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3064:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3088:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3088:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3043:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "3043:20:13"
																		},
																		"nativeSrc": "3043:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3043:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3033:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3033:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3116:118:13",
															"nodeType": "YulBlock",
															"src": "3116:118:13",
															"statements": [
																{
																	"nativeSrc": "3131:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3131:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3145:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3145:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3135:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3135:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3161:63:13",
																	"nodeType": "YulAssignment",
																	"src": "3161:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3196:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3196:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3207:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3207:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3192:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3192:3:13"
																				},
																				"nativeSrc": "3192:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3192:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3216:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3216:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3171:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "3171:20:13"
																		},
																		"nativeSrc": "3171:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3171:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3161:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3161:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2767:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2812:9:13",
														"nodeType": "YulTypedName",
														"src": "2812:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2823:7:13",
														"nodeType": "YulTypedName",
														"src": "2823:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2835:6:13",
														"nodeType": "YulTypedName",
														"src": "2835:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2843:6:13",
														"nodeType": "YulTypedName",
														"src": "2843:6:13",
														"type": ""
													}
												],
												"src": "2767:474:13"
											},
											{
												"body": {
													"nativeSrc": "3289:48:13",
													"nodeType": "YulBlock",
													"src": "3289:48:13",
													"statements": [
														{
															"nativeSrc": "3299:32:13",
															"nodeType": "YulAssignment",
															"src": "3299:32:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3324:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3324:5:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3317:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3317:6:13"
																		},
																		"nativeSrc": "3317:13:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3317:13:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3310:6:13"
																},
																"nativeSrc": "3310:21:13",
																"nodeType": "YulFunctionCall",
																"src": "3310:21:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3299:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "3299:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3247:90:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3271:5:13",
														"nodeType": "YulTypedName",
														"src": "3271:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3281:7:13",
														"nodeType": "YulTypedName",
														"src": "3281:7:13",
														"type": ""
													}
												],
												"src": "3247:90:13"
											},
											{
												"body": {
													"nativeSrc": "3402:50:13",
													"nodeType": "YulBlock",
													"src": "3402:50:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3419:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3419:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3439:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3439:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3424:14:13",
																			"nodeType": "YulIdentifier",
																			"src": "3424:14:13"
																		},
																		"nativeSrc": "3424:21:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3424:21:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3412:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3412:6:13"
																},
																"nativeSrc": "3412:34:13",
																"nodeType": "YulFunctionCall",
																"src": "3412:34:13"
															},
															"nativeSrc": "3412:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "3412:34:13"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3343:109:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3390:5:13",
														"nodeType": "YulTypedName",
														"src": "3390:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3397:3:13",
														"nodeType": "YulTypedName",
														"src": "3397:3:13",
														"type": ""
													}
												],
												"src": "3343:109:13"
											},
											{
												"body": {
													"nativeSrc": "3550:118:13",
													"nodeType": "YulBlock",
													"src": "3550:118:13",
													"statements": [
														{
															"nativeSrc": "3560:26:13",
															"nodeType": "YulAssignment",
															"src": "3560:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3572:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3572:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3583:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3583:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3568:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3568:3:13"
																},
																"nativeSrc": "3568:18:13",
																"nodeType": "YulFunctionCall",
																"src": "3568:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3560:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3560:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3634:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3634:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3647:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3647:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3658:1:13",
																				"nodeType": "YulLiteral",
																				"src": "3658:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3643:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3643:3:13"
																		},
																		"nativeSrc": "3643:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3643:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3596:37:13",
																	"nodeType": "YulIdentifier",
																	"src": "3596:37:13"
																},
																"nativeSrc": "3596:65:13",
																"nodeType": "YulFunctionCall",
																"src": "3596:65:13"
															},
															"nativeSrc": "3596:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "3596:65:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3458:210:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3522:9:13",
														"nodeType": "YulTypedName",
														"src": "3522:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3534:6:13",
														"nodeType": "YulTypedName",
														"src": "3534:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3545:4:13",
														"nodeType": "YulTypedName",
														"src": "3545:4:13",
														"type": ""
													}
												],
												"src": "3458:210:13"
											},
											{
												"body": {
													"nativeSrc": "3740:263:13",
													"nodeType": "YulBlock",
													"src": "3740:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3786:83:13",
																"nodeType": "YulBlock",
																"src": "3786:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3788:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "3788:77:13"
																			},
																			"nativeSrc": "3788:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3788:79:13"
																		},
																		"nativeSrc": "3788:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3788:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3761:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3761:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3770:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3770:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3757:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3757:3:13"
																		},
																		"nativeSrc": "3757:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3757:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3782:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3782:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3753:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3753:3:13"
																},
																"nativeSrc": "3753:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3753:32:13"
															},
															"nativeSrc": "3750:119:13",
															"nodeType": "YulIf",
															"src": "3750:119:13"
														},
														{
															"nativeSrc": "3879:117:13",
															"nodeType": "YulBlock",
															"src": "3879:117:13",
															"statements": [
																{
																	"nativeSrc": "3894:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3894:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3908:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3908:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3898:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3898:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3923:63:13",
																	"nodeType": "YulAssignment",
																	"src": "3923:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3958:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3958:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3969:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3969:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3954:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3954:3:13"
																				},
																				"nativeSrc": "3954:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3954:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3978:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3978:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3933:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "3933:20:13"
																		},
																		"nativeSrc": "3933:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3933:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3923:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3923:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3674:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3710:9:13",
														"nodeType": "YulTypedName",
														"src": "3710:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3721:7:13",
														"nodeType": "YulTypedName",
														"src": "3721:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3733:6:13",
														"nodeType": "YulTypedName",
														"src": "3733:6:13",
														"type": ""
													}
												],
												"src": "3674:329:13"
											},
											{
												"body": {
													"nativeSrc": "4074:53:13",
													"nodeType": "YulBlock",
													"src": "4074:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4091:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4091:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4114:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "4114:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4096:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "4096:17:13"
																		},
																		"nativeSrc": "4096:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4096:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4084:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4084:6:13"
																},
																"nativeSrc": "4084:37:13",
																"nodeType": "YulFunctionCall",
																"src": "4084:37:13"
															},
															"nativeSrc": "4084:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "4084:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4009:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4062:5:13",
														"nodeType": "YulTypedName",
														"src": "4062:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4069:3:13",
														"nodeType": "YulTypedName",
														"src": "4069:3:13",
														"type": ""
													}
												],
												"src": "4009:118:13"
											},
											{
												"body": {
													"nativeSrc": "4231:124:13",
													"nodeType": "YulBlock",
													"src": "4231:124:13",
													"statements": [
														{
															"nativeSrc": "4241:26:13",
															"nodeType": "YulAssignment",
															"src": "4241:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4253:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4253:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4264:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4264:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4249:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4249:3:13"
																},
																"nativeSrc": "4249:18:13",
																"nodeType": "YulFunctionCall",
																"src": "4249:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4241:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4241:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4321:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4321:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4334:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4334:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4345:1:13",
																				"nodeType": "YulLiteral",
																				"src": "4345:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4330:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4330:3:13"
																		},
																		"nativeSrc": "4330:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4330:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4277:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "4277:43:13"
																},
																"nativeSrc": "4277:71:13",
																"nodeType": "YulFunctionCall",
																"src": "4277:71:13"
															},
															"nativeSrc": "4277:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "4277:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4133:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4203:9:13",
														"nodeType": "YulTypedName",
														"src": "4203:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4215:6:13",
														"nodeType": "YulTypedName",
														"src": "4215:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4226:4:13",
														"nodeType": "YulTypedName",
														"src": "4226:4:13",
														"type": ""
													}
												],
												"src": "4133:222:13"
											},
											{
												"body": {
													"nativeSrc": "4461:519:13",
													"nodeType": "YulBlock",
													"src": "4461:519:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4507:83:13",
																"nodeType": "YulBlock",
																"src": "4507:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4509:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "4509:77:13"
																			},
																			"nativeSrc": "4509:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4509:79:13"
																		},
																		"nativeSrc": "4509:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4509:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4482:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4482:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4491:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4491:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4478:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4478:3:13"
																		},
																		"nativeSrc": "4478:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4478:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4503:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4503:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4474:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4474:3:13"
																},
																"nativeSrc": "4474:32:13",
																"nodeType": "YulFunctionCall",
																"src": "4474:32:13"
															},
															"nativeSrc": "4471:119:13",
															"nodeType": "YulIf",
															"src": "4471:119:13"
														},
														{
															"nativeSrc": "4600:117:13",
															"nodeType": "YulBlock",
															"src": "4600:117:13",
															"statements": [
																{
																	"nativeSrc": "4615:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4615:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4629:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4629:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4619:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4619:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4644:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4644:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4679:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4679:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4690:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4690:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4675:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4675:3:13"
																				},
																				"nativeSrc": "4675:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4675:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4699:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4699:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4654:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4654:20:13"
																		},
																		"nativeSrc": "4654:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4654:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4644:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4644:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4727:118:13",
															"nodeType": "YulBlock",
															"src": "4727:118:13",
															"statements": [
																{
																	"nativeSrc": "4742:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4742:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4756:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4756:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4746:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4746:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4772:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4772:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4807:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4807:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4818:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4818:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4803:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4803:3:13"
																				},
																				"nativeSrc": "4803:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4803:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4827:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4827:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4782:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4782:20:13"
																		},
																		"nativeSrc": "4782:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4782:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4772:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4772:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4855:118:13",
															"nodeType": "YulBlock",
															"src": "4855:118:13",
															"statements": [
																{
																	"nativeSrc": "4870:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4870:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4884:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4884:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4874:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4874:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4900:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4900:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4935:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4935:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4946:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4946:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4931:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4931:3:13"
																				},
																				"nativeSrc": "4931:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4931:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4955:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4955:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4910:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4910:20:13"
																		},
																		"nativeSrc": "4910:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4910:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4900:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4900:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4361:619:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4415:9:13",
														"nodeType": "YulTypedName",
														"src": "4415:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4426:7:13",
														"nodeType": "YulTypedName",
														"src": "4426:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4438:6:13",
														"nodeType": "YulTypedName",
														"src": "4438:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4446:6:13",
														"nodeType": "YulTypedName",
														"src": "4446:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4454:6:13",
														"nodeType": "YulTypedName",
														"src": "4454:6:13",
														"type": ""
													}
												],
												"src": "4361:619:13"
											},
											{
												"body": {
													"nativeSrc": "5029:43:13",
													"nodeType": "YulBlock",
													"src": "5029:43:13",
													"statements": [
														{
															"nativeSrc": "5039:27:13",
															"nodeType": "YulAssignment",
															"src": "5039:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5054:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "5054:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5061:4:13",
																		"nodeType": "YulLiteral",
																		"src": "5061:4:13",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5050:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5050:3:13"
																},
																"nativeSrc": "5050:16:13",
																"nodeType": "YulFunctionCall",
																"src": "5050:16:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5039:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "5039:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4986:86:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5011:5:13",
														"nodeType": "YulTypedName",
														"src": "5011:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5021:7:13",
														"nodeType": "YulTypedName",
														"src": "5021:7:13",
														"type": ""
													}
												],
												"src": "4986:86:13"
											},
											{
												"body": {
													"nativeSrc": "5139:51:13",
													"nodeType": "YulBlock",
													"src": "5139:51:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5156:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5156:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5177:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5177:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "5161:15:13",
																			"nodeType": "YulIdentifier",
																			"src": "5161:15:13"
																		},
																		"nativeSrc": "5161:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5161:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5149:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5149:6:13"
																},
																"nativeSrc": "5149:35:13",
																"nodeType": "YulFunctionCall",
																"src": "5149:35:13"
															},
															"nativeSrc": "5149:35:13",
															"nodeType": "YulExpressionStatement",
															"src": "5149:35:13"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "5078:112:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5127:5:13",
														"nodeType": "YulTypedName",
														"src": "5127:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5134:3:13",
														"nodeType": "YulTypedName",
														"src": "5134:3:13",
														"type": ""
													}
												],
												"src": "5078:112:13"
											},
											{
												"body": {
													"nativeSrc": "5290:120:13",
													"nodeType": "YulBlock",
													"src": "5290:120:13",
													"statements": [
														{
															"nativeSrc": "5300:26:13",
															"nodeType": "YulAssignment",
															"src": "5300:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5312:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5312:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5323:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5323:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5308:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5308:3:13"
																},
																"nativeSrc": "5308:18:13",
																"nodeType": "YulFunctionCall",
																"src": "5308:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5300:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5300:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5376:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5376:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5389:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5389:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5400:1:13",
																				"nodeType": "YulLiteral",
																				"src": "5400:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5385:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5385:3:13"
																		},
																		"nativeSrc": "5385:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5385:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5336:39:13",
																	"nodeType": "YulIdentifier",
																	"src": "5336:39:13"
																},
																"nativeSrc": "5336:67:13",
																"nodeType": "YulFunctionCall",
																"src": "5336:67:13"
															},
															"nativeSrc": "5336:67:13",
															"nodeType": "YulExpressionStatement",
															"src": "5336:67:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "5196:214:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5262:9:13",
														"nodeType": "YulTypedName",
														"src": "5262:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5274:6:13",
														"nodeType": "YulTypedName",
														"src": "5274:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5285:4:13",
														"nodeType": "YulTypedName",
														"src": "5285:4:13",
														"type": ""
													}
												],
												"src": "5196:214:13"
											},
											{
												"body": {
													"nativeSrc": "5481:53:13",
													"nodeType": "YulBlock",
													"src": "5481:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5498:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5498:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5521:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5521:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5503:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "5503:17:13"
																		},
																		"nativeSrc": "5503:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5503:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5491:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5491:6:13"
																},
																"nativeSrc": "5491:37:13",
																"nodeType": "YulFunctionCall",
																"src": "5491:37:13"
															},
															"nativeSrc": "5491:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "5491:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5416:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5469:5:13",
														"nodeType": "YulTypedName",
														"src": "5469:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5476:3:13",
														"nodeType": "YulTypedName",
														"src": "5476:3:13",
														"type": ""
													}
												],
												"src": "5416:118:13"
											},
											{
												"body": {
													"nativeSrc": "5638:124:13",
													"nodeType": "YulBlock",
													"src": "5638:124:13",
													"statements": [
														{
															"nativeSrc": "5648:26:13",
															"nodeType": "YulAssignment",
															"src": "5648:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5660:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5660:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5671:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5671:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5656:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5656:3:13"
																},
																"nativeSrc": "5656:18:13",
																"nodeType": "YulFunctionCall",
																"src": "5656:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5648:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5648:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5728:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5728:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5741:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5741:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5752:1:13",
																				"nodeType": "YulLiteral",
																				"src": "5752:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5737:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5737:3:13"
																		},
																		"nativeSrc": "5737:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5737:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5684:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "5684:43:13"
																},
																"nativeSrc": "5684:71:13",
																"nodeType": "YulFunctionCall",
																"src": "5684:71:13"
															},
															"nativeSrc": "5684:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "5684:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5540:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5610:9:13",
														"nodeType": "YulTypedName",
														"src": "5610:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5622:6:13",
														"nodeType": "YulTypedName",
														"src": "5622:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5633:4:13",
														"nodeType": "YulTypedName",
														"src": "5633:4:13",
														"type": ""
													}
												],
												"src": "5540:222:13"
											},
											{
												"body": {
													"nativeSrc": "5800:28:13",
													"nodeType": "YulBlock",
													"src": "5800:28:13",
													"statements": [
														{
															"nativeSrc": "5810:12:13",
															"nodeType": "YulAssignment",
															"src": "5810:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "5817:5:13",
																"nodeType": "YulIdentifier",
																"src": "5817:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5810:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5810:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5768:60:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5786:5:13",
														"nodeType": "YulTypedName",
														"src": "5786:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5796:3:13",
														"nodeType": "YulTypedName",
														"src": "5796:3:13",
														"type": ""
													}
												],
												"src": "5768:60:13"
											},
											{
												"body": {
													"nativeSrc": "5894:82:13",
													"nodeType": "YulBlock",
													"src": "5894:82:13",
													"statements": [
														{
															"nativeSrc": "5904:66:13",
															"nodeType": "YulAssignment",
															"src": "5904:66:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5962:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "5962:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "5944:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "5944:17:13"
																				},
																				"nativeSrc": "5944:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5944:24:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5935:8:13",
																			"nodeType": "YulIdentifier",
																			"src": "5935:8:13"
																		},
																		"nativeSrc": "5935:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5935:34:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5917:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "5917:17:13"
																},
																"nativeSrc": "5917:53:13",
																"nodeType": "YulFunctionCall",
																"src": "5917:53:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5904:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "5904:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "5834:142:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5874:5:13",
														"nodeType": "YulTypedName",
														"src": "5874:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5884:9:13",
														"nodeType": "YulTypedName",
														"src": "5884:9:13",
														"type": ""
													}
												],
												"src": "5834:142:13"
											},
											{
												"body": {
													"nativeSrc": "6042:66:13",
													"nodeType": "YulBlock",
													"src": "6042:66:13",
													"statements": [
														{
															"nativeSrc": "6052:50:13",
															"nodeType": "YulAssignment",
															"src": "6052:50:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6096:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6096:5:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "6065:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "6065:30:13"
																},
																"nativeSrc": "6065:37:13",
																"nodeType": "YulFunctionCall",
																"src": "6065:37:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6052:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "6052:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "5982:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6022:5:13",
														"nodeType": "YulTypedName",
														"src": "6022:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6032:9:13",
														"nodeType": "YulTypedName",
														"src": "6032:9:13",
														"type": ""
													}
												],
												"src": "5982:126:13"
											},
											{
												"body": {
													"nativeSrc": "6188:66:13",
													"nodeType": "YulBlock",
													"src": "6188:66:13",
													"statements": [
														{
															"nativeSrc": "6198:50:13",
															"nodeType": "YulAssignment",
															"src": "6198:50:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6242:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6242:5:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "6211:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "6211:30:13"
																},
																"nativeSrc": "6211:37:13",
																"nodeType": "YulFunctionCall",
																"src": "6211:37:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6198:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "6198:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_Vault_$1587_to_t_address",
												"nativeSrc": "6114:140:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6168:5:13",
														"nodeType": "YulTypedName",
														"src": "6168:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6178:9:13",
														"nodeType": "YulTypedName",
														"src": "6178:9:13",
														"type": ""
													}
												],
												"src": "6114:140:13"
											},
											{
												"body": {
													"nativeSrc": "6339:80:13",
													"nodeType": "YulBlock",
													"src": "6339:80:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6356:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6356:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6406:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6406:5:13"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_Vault_$1587_to_t_address",
																			"nativeSrc": "6361:44:13",
																			"nodeType": "YulIdentifier",
																			"src": "6361:44:13"
																		},
																		"nativeSrc": "6361:51:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6361:51:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6349:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6349:6:13"
																},
																"nativeSrc": "6349:64:13",
																"nodeType": "YulFunctionCall",
																"src": "6349:64:13"
															},
															"nativeSrc": "6349:64:13",
															"nodeType": "YulExpressionStatement",
															"src": "6349:64:13"
														}
													]
												},
												"name": "abi_encode_t_contract$_Vault_$1587_to_t_address_fromStack",
												"nativeSrc": "6260:159:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6327:5:13",
														"nodeType": "YulTypedName",
														"src": "6327:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6334:3:13",
														"nodeType": "YulTypedName",
														"src": "6334:3:13",
														"type": ""
													}
												],
												"src": "6260:159:13"
											},
											{
												"body": {
													"nativeSrc": "6537:138:13",
													"nodeType": "YulBlock",
													"src": "6537:138:13",
													"statements": [
														{
															"nativeSrc": "6547:26:13",
															"nodeType": "YulAssignment",
															"src": "6547:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6559:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6559:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6570:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6570:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6555:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6555:3:13"
																},
																"nativeSrc": "6555:18:13",
																"nodeType": "YulFunctionCall",
																"src": "6555:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6547:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6547:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6641:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6641:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6654:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6654:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6665:1:13",
																				"nodeType": "YulLiteral",
																				"src": "6665:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6650:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6650:3:13"
																		},
																		"nativeSrc": "6650:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6650:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_Vault_$1587_to_t_address_fromStack",
																	"nativeSrc": "6583:57:13",
																	"nodeType": "YulIdentifier",
																	"src": "6583:57:13"
																},
																"nativeSrc": "6583:85:13",
																"nodeType": "YulFunctionCall",
																"src": "6583:85:13"
															},
															"nativeSrc": "6583:85:13",
															"nodeType": "YulExpressionStatement",
															"src": "6583:85:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_Vault_$1587__to_t_address__fromStack_reversed",
												"nativeSrc": "6425:250:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6509:9:13",
														"nodeType": "YulTypedName",
														"src": "6509:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6521:6:13",
														"nodeType": "YulTypedName",
														"src": "6521:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6532:4:13",
														"nodeType": "YulTypedName",
														"src": "6532:4:13",
														"type": ""
													}
												],
												"src": "6425:250:13"
											},
											{
												"body": {
													"nativeSrc": "6756:66:13",
													"nodeType": "YulBlock",
													"src": "6756:66:13",
													"statements": [
														{
															"nativeSrc": "6766:50:13",
															"nodeType": "YulAssignment",
															"src": "6766:50:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6810:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6810:5:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "6779:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "6779:30:13"
																},
																"nativeSrc": "6779:37:13",
																"nodeType": "YulFunctionCall",
																"src": "6779:37:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6766:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "6766:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$1032_to_t_address",
												"nativeSrc": "6681:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6736:5:13",
														"nodeType": "YulTypedName",
														"src": "6736:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6746:9:13",
														"nodeType": "YulTypedName",
														"src": "6746:9:13",
														"type": ""
													}
												],
												"src": "6681:141:13"
											},
											{
												"body": {
													"nativeSrc": "6908:81:13",
													"nodeType": "YulBlock",
													"src": "6908:81:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6925:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6925:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6976:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6976:5:13"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$1032_to_t_address",
																			"nativeSrc": "6930:45:13",
																			"nodeType": "YulIdentifier",
																			"src": "6930:45:13"
																		},
																		"nativeSrc": "6930:52:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6930:52:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6918:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6918:6:13"
																},
																"nativeSrc": "6918:65:13",
																"nodeType": "YulFunctionCall",
																"src": "6918:65:13"
															},
															"nativeSrc": "6918:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "6918:65:13"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$1032_to_t_address_fromStack",
												"nativeSrc": "6828:161:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6896:5:13",
														"nodeType": "YulTypedName",
														"src": "6896:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6903:3:13",
														"nodeType": "YulTypedName",
														"src": "6903:3:13",
														"type": ""
													}
												],
												"src": "6828:161:13"
											},
											{
												"body": {
													"nativeSrc": "7108:139:13",
													"nodeType": "YulBlock",
													"src": "7108:139:13",
													"statements": [
														{
															"nativeSrc": "7118:26:13",
															"nodeType": "YulAssignment",
															"src": "7118:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7130:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "7130:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7141:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7141:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7126:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7126:3:13"
																},
																"nativeSrc": "7126:18:13",
																"nodeType": "YulFunctionCall",
																"src": "7126:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7118:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7118:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7213:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7213:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7226:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7226:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7237:1:13",
																				"nodeType": "YulLiteral",
																				"src": "7237:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7222:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7222:3:13"
																		},
																		"nativeSrc": "7222:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7222:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$1032_to_t_address_fromStack",
																	"nativeSrc": "7154:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "7154:58:13"
																},
																"nativeSrc": "7154:86:13",
																"nodeType": "YulFunctionCall",
																"src": "7154:86:13"
															},
															"nativeSrc": "7154:86:13",
															"nodeType": "YulExpressionStatement",
															"src": "7154:86:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$1032__to_t_address__fromStack_reversed",
												"nativeSrc": "6995:252:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7080:9:13",
														"nodeType": "YulTypedName",
														"src": "7080:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7092:6:13",
														"nodeType": "YulTypedName",
														"src": "7092:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7103:4:13",
														"nodeType": "YulTypedName",
														"src": "7103:4:13",
														"type": ""
													}
												],
												"src": "6995:252:13"
											},
											{
												"body": {
													"nativeSrc": "7336:391:13",
													"nodeType": "YulBlock",
													"src": "7336:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "7382:83:13",
																"nodeType": "YulBlock",
																"src": "7382:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7384:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "7384:77:13"
																			},
																			"nativeSrc": "7384:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7384:79:13"
																		},
																		"nativeSrc": "7384:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7384:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7357:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7357:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7366:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7366:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7353:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7353:3:13"
																		},
																		"nativeSrc": "7353:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7353:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7378:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7378:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7349:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7349:3:13"
																},
																"nativeSrc": "7349:32:13",
																"nodeType": "YulFunctionCall",
																"src": "7349:32:13"
															},
															"nativeSrc": "7346:119:13",
															"nodeType": "YulIf",
															"src": "7346:119:13"
														},
														{
															"nativeSrc": "7475:117:13",
															"nodeType": "YulBlock",
															"src": "7475:117:13",
															"statements": [
																{
																	"nativeSrc": "7490:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7490:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7504:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7504:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7494:6:13",
																			"nodeType": "YulTypedName",
																			"src": "7494:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7519:63:13",
																	"nodeType": "YulAssignment",
																	"src": "7519:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7554:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "7554:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7565:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "7565:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7550:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7550:3:13"
																				},
																				"nativeSrc": "7550:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7550:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7574:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7574:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7529:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "7529:20:13"
																		},
																		"nativeSrc": "7529:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7529:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7519:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "7519:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7602:118:13",
															"nodeType": "YulBlock",
															"src": "7602:118:13",
															"statements": [
																{
																	"nativeSrc": "7617:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7617:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7631:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7631:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7621:6:13",
																			"nodeType": "YulTypedName",
																			"src": "7621:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7647:63:13",
																	"nodeType": "YulAssignment",
																	"src": "7647:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7682:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "7682:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7693:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "7693:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7678:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7678:3:13"
																				},
																				"nativeSrc": "7678:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7678:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7702:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7702:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7657:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "7657:20:13"
																		},
																		"nativeSrc": "7657:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7657:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7647:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "7647:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "7253:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7298:9:13",
														"nodeType": "YulTypedName",
														"src": "7298:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7309:7:13",
														"nodeType": "YulTypedName",
														"src": "7309:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7321:6:13",
														"nodeType": "YulTypedName",
														"src": "7321:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7329:6:13",
														"nodeType": "YulTypedName",
														"src": "7329:6:13",
														"type": ""
													}
												],
												"src": "7253:474:13"
											},
											{
												"body": {
													"nativeSrc": "7839:126:13",
													"nodeType": "YulBlock",
													"src": "7839:126:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7861:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7861:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7869:1:13",
																				"nodeType": "YulLiteral",
																				"src": "7869:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7857:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7857:3:13"
																		},
																		"nativeSrc": "7857:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7857:14:13"
																	},
																	{
																		"hexValue": "436f6c6c61746572616c697a6174696f6e20726174696f206d75737420626520",
																		"kind": "string",
																		"nativeSrc": "7873:34:13",
																		"nodeType": "YulLiteral",
																		"src": "7873:34:13",
																		"type": "",
																		"value": "Collateralization ratio must be "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7850:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7850:6:13"
																},
																"nativeSrc": "7850:58:13",
																"nodeType": "YulFunctionCall",
																"src": "7850:58:13"
															},
															"nativeSrc": "7850:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "7850:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7929:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7929:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7937:2:13",
																				"nodeType": "YulLiteral",
																				"src": "7937:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7925:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7925:3:13"
																		},
																		"nativeSrc": "7925:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7925:15:13"
																	},
																	{
																		"hexValue": "6174206c656173742031303025",
																		"kind": "string",
																		"nativeSrc": "7942:15:13",
																		"nodeType": "YulLiteral",
																		"src": "7942:15:13",
																		"type": "",
																		"value": "at least 100%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7918:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7918:6:13"
																},
																"nativeSrc": "7918:40:13",
																"nodeType": "YulFunctionCall",
																"src": "7918:40:13"
															},
															"nativeSrc": "7918:40:13",
															"nodeType": "YulExpressionStatement",
															"src": "7918:40:13"
														}
													]
												},
												"name": "store_literal_in_memory_b0625f87e31dc518e790285a825bb3c4cd66fc859c380f7e244181f8081e3f92",
												"nativeSrc": "7733:232:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7831:6:13",
														"nodeType": "YulTypedName",
														"src": "7831:6:13",
														"type": ""
													}
												],
												"src": "7733:232:13"
											},
											{
												"body": {
													"nativeSrc": "8117:220:13",
													"nodeType": "YulBlock",
													"src": "8117:220:13",
													"statements": [
														{
															"nativeSrc": "8127:74:13",
															"nodeType": "YulAssignment",
															"src": "8127:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8193:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8193:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8198:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8198:2:13",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8134:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "8134:58:13"
																},
																"nativeSrc": "8134:67:13",
																"nodeType": "YulFunctionCall",
																"src": "8134:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8127:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8127:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8299:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8299:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b0625f87e31dc518e790285a825bb3c4cd66fc859c380f7e244181f8081e3f92",
																	"nativeSrc": "8210:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "8210:88:13"
																},
																"nativeSrc": "8210:93:13",
																"nodeType": "YulFunctionCall",
																"src": "8210:93:13"
															},
															"nativeSrc": "8210:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "8210:93:13"
														},
														{
															"nativeSrc": "8312:19:13",
															"nodeType": "YulAssignment",
															"src": "8312:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8323:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8323:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8328:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8328:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8319:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8319:3:13"
																},
																"nativeSrc": "8319:12:13",
																"nodeType": "YulFunctionCall",
																"src": "8319:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8312:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8312:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b0625f87e31dc518e790285a825bb3c4cd66fc859c380f7e244181f8081e3f92_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7971:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8105:3:13",
														"nodeType": "YulTypedName",
														"src": "8105:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8113:3:13",
														"nodeType": "YulTypedName",
														"src": "8113:3:13",
														"type": ""
													}
												],
												"src": "7971:366:13"
											},
											{
												"body": {
													"nativeSrc": "8514:248:13",
													"nodeType": "YulBlock",
													"src": "8514:248:13",
													"statements": [
														{
															"nativeSrc": "8524:26:13",
															"nodeType": "YulAssignment",
															"src": "8524:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8536:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "8536:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8547:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8547:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8532:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8532:3:13"
																},
																"nativeSrc": "8532:18:13",
																"nodeType": "YulFunctionCall",
																"src": "8532:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8524:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8524:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8571:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8571:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8582:1:13",
																				"nodeType": "YulLiteral",
																				"src": "8582:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8567:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8567:3:13"
																		},
																		"nativeSrc": "8567:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8567:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8590:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "8590:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8596:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8596:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8586:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8586:3:13"
																		},
																		"nativeSrc": "8586:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8586:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8560:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8560:6:13"
																},
																"nativeSrc": "8560:47:13",
																"nodeType": "YulFunctionCall",
																"src": "8560:47:13"
															},
															"nativeSrc": "8560:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "8560:47:13"
														},
														{
															"nativeSrc": "8616:139:13",
															"nodeType": "YulAssignment",
															"src": "8616:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8750:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "8750:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b0625f87e31dc518e790285a825bb3c4cd66fc859c380f7e244181f8081e3f92_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8624:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "8624:124:13"
																},
																"nativeSrc": "8624:131:13",
																"nodeType": "YulFunctionCall",
																"src": "8624:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8616:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8616:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b0625f87e31dc518e790285a825bb3c4cd66fc859c380f7e244181f8081e3f92__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8343:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8494:9:13",
														"nodeType": "YulTypedName",
														"src": "8494:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8509:4:13",
														"nodeType": "YulTypedName",
														"src": "8509:4:13",
														"type": ""
													}
												],
												"src": "8343:419:13"
											},
											{
												"body": {
													"nativeSrc": "8796:152:13",
													"nodeType": "YulBlock",
													"src": "8796:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8813:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8813:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8816:77:13",
																		"nodeType": "YulLiteral",
																		"src": "8816:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8806:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8806:6:13"
																},
																"nativeSrc": "8806:88:13",
																"nodeType": "YulFunctionCall",
																"src": "8806:88:13"
															},
															"nativeSrc": "8806:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "8806:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8910:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8910:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8913:4:13",
																		"nodeType": "YulLiteral",
																		"src": "8913:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8903:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8903:6:13"
																},
																"nativeSrc": "8903:15:13",
																"nodeType": "YulFunctionCall",
																"src": "8903:15:13"
															},
															"nativeSrc": "8903:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "8903:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8934:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8934:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8937:4:13",
																		"nodeType": "YulLiteral",
																		"src": "8937:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8927:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8927:6:13"
																},
																"nativeSrc": "8927:15:13",
																"nodeType": "YulFunctionCall",
																"src": "8927:15:13"
															},
															"nativeSrc": "8927:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "8927:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "8768:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "8768:180:13"
											},
											{
												"body": {
													"nativeSrc": "9005:269:13",
													"nodeType": "YulBlock",
													"src": "9005:269:13",
													"statements": [
														{
															"nativeSrc": "9015:22:13",
															"nodeType": "YulAssignment",
															"src": "9015:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9029:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "9029:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9035:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9035:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9025:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9025:3:13"
																},
																"nativeSrc": "9025:12:13",
																"nodeType": "YulFunctionCall",
																"src": "9025:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9015:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9015:6:13"
																}
															]
														},
														{
															"nativeSrc": "9046:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "9046:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9076:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "9076:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9082:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9082:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9072:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9072:3:13"
																},
																"nativeSrc": "9072:12:13",
																"nodeType": "YulFunctionCall",
																"src": "9072:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "9050:18:13",
																	"nodeType": "YulTypedName",
																	"src": "9050:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9123:51:13",
																"nodeType": "YulBlock",
																"src": "9123:51:13",
																"statements": [
																	{
																		"nativeSrc": "9137:27:13",
																		"nodeType": "YulAssignment",
																		"src": "9137:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "9151:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "9151:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9159:4:13",
																					"nodeType": "YulLiteral",
																					"src": "9159:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "9147:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "9147:3:13"
																			},
																			"nativeSrc": "9147:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9147:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "9137:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9137:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9103:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "9103:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9096:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9096:6:13"
																},
																"nativeSrc": "9096:26:13",
																"nodeType": "YulFunctionCall",
																"src": "9096:26:13"
															},
															"nativeSrc": "9093:81:13",
															"nodeType": "YulIf",
															"src": "9093:81:13"
														},
														{
															"body": {
																"nativeSrc": "9226:42:13",
																"nodeType": "YulBlock",
																"src": "9226:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "9240:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "9240:16:13"
																			},
																			"nativeSrc": "9240:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9240:18:13"
																		},
																		"nativeSrc": "9240:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9240:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9190:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "9190:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9213:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9213:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9221:2:13",
																				"nodeType": "YulLiteral",
																				"src": "9221:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "9210:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "9210:2:13"
																		},
																		"nativeSrc": "9210:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9210:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "9187:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "9187:2:13"
																},
																"nativeSrc": "9187:38:13",
																"nodeType": "YulFunctionCall",
																"src": "9187:38:13"
															},
															"nativeSrc": "9184:84:13",
															"nodeType": "YulIf",
															"src": "9184:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "8954:320:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8989:4:13",
														"nodeType": "YulTypedName",
														"src": "8989:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8998:6:13",
														"nodeType": "YulTypedName",
														"src": "8998:6:13",
														"type": ""
													}
												],
												"src": "8954:320:13"
											},
											{
												"body": {
													"nativeSrc": "9386:62:13",
													"nodeType": "YulBlock",
													"src": "9386:62:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9408:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9408:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9416:1:13",
																				"nodeType": "YulLiteral",
																				"src": "9416:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9404:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9404:3:13"
																		},
																		"nativeSrc": "9404:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9404:14:13"
																	},
																	{
																		"hexValue": "416d6f756e74206d757374206265203e2030",
																		"kind": "string",
																		"nativeSrc": "9420:20:13",
																		"nodeType": "YulLiteral",
																		"src": "9420:20:13",
																		"type": "",
																		"value": "Amount must be > 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9397:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9397:6:13"
																},
																"nativeSrc": "9397:44:13",
																"nodeType": "YulFunctionCall",
																"src": "9397:44:13"
															},
															"nativeSrc": "9397:44:13",
															"nodeType": "YulExpressionStatement",
															"src": "9397:44:13"
														}
													]
												},
												"name": "store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
												"nativeSrc": "9280:168:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9378:6:13",
														"nodeType": "YulTypedName",
														"src": "9378:6:13",
														"type": ""
													}
												],
												"src": "9280:168:13"
											},
											{
												"body": {
													"nativeSrc": "9600:220:13",
													"nodeType": "YulBlock",
													"src": "9600:220:13",
													"statements": [
														{
															"nativeSrc": "9610:74:13",
															"nodeType": "YulAssignment",
															"src": "9610:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9676:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9676:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9681:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9681:2:13",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9617:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "9617:58:13"
																},
																"nativeSrc": "9617:67:13",
																"nodeType": "YulFunctionCall",
																"src": "9617:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9610:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9610:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9782:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9782:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																	"nativeSrc": "9693:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "9693:88:13"
																},
																"nativeSrc": "9693:93:13",
																"nodeType": "YulFunctionCall",
																"src": "9693:93:13"
															},
															"nativeSrc": "9693:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "9693:93:13"
														},
														{
															"nativeSrc": "9795:19:13",
															"nodeType": "YulAssignment",
															"src": "9795:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9806:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9806:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9811:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9811:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9802:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9802:3:13"
																},
																"nativeSrc": "9802:12:13",
																"nodeType": "YulFunctionCall",
																"src": "9802:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9795:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9795:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9454:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9588:3:13",
														"nodeType": "YulTypedName",
														"src": "9588:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9596:3:13",
														"nodeType": "YulTypedName",
														"src": "9596:3:13",
														"type": ""
													}
												],
												"src": "9454:366:13"
											},
											{
												"body": {
													"nativeSrc": "9997:248:13",
													"nodeType": "YulBlock",
													"src": "9997:248:13",
													"statements": [
														{
															"nativeSrc": "10007:26:13",
															"nodeType": "YulAssignment",
															"src": "10007:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10019:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "10019:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10030:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10030:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10015:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10015:3:13"
																},
																"nativeSrc": "10015:18:13",
																"nodeType": "YulFunctionCall",
																"src": "10015:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10007:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10007:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10054:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10054:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10065:1:13",
																				"nodeType": "YulLiteral",
																				"src": "10065:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10050:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10050:3:13"
																		},
																		"nativeSrc": "10050:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10050:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10073:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "10073:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10079:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10079:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10069:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10069:3:13"
																		},
																		"nativeSrc": "10069:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10069:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10043:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10043:6:13"
																},
																"nativeSrc": "10043:47:13",
																"nodeType": "YulFunctionCall",
																"src": "10043:47:13"
															},
															"nativeSrc": "10043:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "10043:47:13"
														},
														{
															"nativeSrc": "10099:139:13",
															"nodeType": "YulAssignment",
															"src": "10099:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10233:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "10233:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10107:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "10107:124:13"
																},
																"nativeSrc": "10107:131:13",
																"nodeType": "YulFunctionCall",
																"src": "10107:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10099:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10099:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9826:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9977:9:13",
														"nodeType": "YulTypedName",
														"src": "9977:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9992:4:13",
														"nodeType": "YulTypedName",
														"src": "9992:4:13",
														"type": ""
													}
												],
												"src": "9826:419:13"
											},
											{
												"body": {
													"nativeSrc": "10357:63:13",
													"nodeType": "YulBlock",
													"src": "10357:63:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10379:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10379:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10387:1:13",
																				"nodeType": "YulLiteral",
																				"src": "10387:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10375:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10375:3:13"
																		},
																		"nativeSrc": "10375:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10375:14:13"
																	},
																	{
																		"hexValue": "416d6f756e7420657863656564732064656274",
																		"kind": "string",
																		"nativeSrc": "10391:21:13",
																		"nodeType": "YulLiteral",
																		"src": "10391:21:13",
																		"type": "",
																		"value": "Amount exceeds debt"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10368:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10368:6:13"
																},
																"nativeSrc": "10368:45:13",
																"nodeType": "YulFunctionCall",
																"src": "10368:45:13"
															},
															"nativeSrc": "10368:45:13",
															"nodeType": "YulExpressionStatement",
															"src": "10368:45:13"
														}
													]
												},
												"name": "store_literal_in_memory_969d0e7bdc9f60900822ca06581f62f1488479b8fc44dc0279e23a50719ed79d",
												"nativeSrc": "10251:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10349:6:13",
														"nodeType": "YulTypedName",
														"src": "10349:6:13",
														"type": ""
													}
												],
												"src": "10251:169:13"
											},
											{
												"body": {
													"nativeSrc": "10572:220:13",
													"nodeType": "YulBlock",
													"src": "10572:220:13",
													"statements": [
														{
															"nativeSrc": "10582:74:13",
															"nodeType": "YulAssignment",
															"src": "10582:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10648:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10648:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10653:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10653:2:13",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10589:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "10589:58:13"
																},
																"nativeSrc": "10589:67:13",
																"nodeType": "YulFunctionCall",
																"src": "10589:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10582:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10582:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10754:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10754:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_969d0e7bdc9f60900822ca06581f62f1488479b8fc44dc0279e23a50719ed79d",
																	"nativeSrc": "10665:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "10665:88:13"
																},
																"nativeSrc": "10665:93:13",
																"nodeType": "YulFunctionCall",
																"src": "10665:93:13"
															},
															"nativeSrc": "10665:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "10665:93:13"
														},
														{
															"nativeSrc": "10767:19:13",
															"nodeType": "YulAssignment",
															"src": "10767:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10778:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10778:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10783:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10783:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10774:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10774:3:13"
																},
																"nativeSrc": "10774:12:13",
																"nodeType": "YulFunctionCall",
																"src": "10774:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10767:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10767:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_969d0e7bdc9f60900822ca06581f62f1488479b8fc44dc0279e23a50719ed79d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10426:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10560:3:13",
														"nodeType": "YulTypedName",
														"src": "10560:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10568:3:13",
														"nodeType": "YulTypedName",
														"src": "10568:3:13",
														"type": ""
													}
												],
												"src": "10426:366:13"
											},
											{
												"body": {
													"nativeSrc": "10969:248:13",
													"nodeType": "YulBlock",
													"src": "10969:248:13",
													"statements": [
														{
															"nativeSrc": "10979:26:13",
															"nodeType": "YulAssignment",
															"src": "10979:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10991:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "10991:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11002:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11002:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10987:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10987:3:13"
																},
																"nativeSrc": "10987:18:13",
																"nodeType": "YulFunctionCall",
																"src": "10987:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10979:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10979:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11026:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11026:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11037:1:13",
																				"nodeType": "YulLiteral",
																				"src": "11037:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11022:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11022:3:13"
																		},
																		"nativeSrc": "11022:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11022:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11045:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "11045:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11051:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11051:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11041:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11041:3:13"
																		},
																		"nativeSrc": "11041:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11041:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11015:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11015:6:13"
																},
																"nativeSrc": "11015:47:13",
																"nodeType": "YulFunctionCall",
																"src": "11015:47:13"
															},
															"nativeSrc": "11015:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "11015:47:13"
														},
														{
															"nativeSrc": "11071:139:13",
															"nodeType": "YulAssignment",
															"src": "11071:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11205:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "11205:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_969d0e7bdc9f60900822ca06581f62f1488479b8fc44dc0279e23a50719ed79d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11079:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "11079:124:13"
																},
																"nativeSrc": "11079:131:13",
																"nodeType": "YulFunctionCall",
																"src": "11079:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11071:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11071:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_969d0e7bdc9f60900822ca06581f62f1488479b8fc44dc0279e23a50719ed79d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10798:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10949:9:13",
														"nodeType": "YulTypedName",
														"src": "10949:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10964:4:13",
														"nodeType": "YulTypedName",
														"src": "10964:4:13",
														"type": ""
													}
												],
												"src": "10798:419:13"
											},
											{
												"body": {
													"nativeSrc": "11251:152:13",
													"nodeType": "YulBlock",
													"src": "11251:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11268:1:13",
																		"nodeType": "YulLiteral",
																		"src": "11268:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11271:77:13",
																		"nodeType": "YulLiteral",
																		"src": "11271:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11261:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11261:6:13"
																},
																"nativeSrc": "11261:88:13",
																"nodeType": "YulFunctionCall",
																"src": "11261:88:13"
															},
															"nativeSrc": "11261:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "11261:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11365:1:13",
																		"nodeType": "YulLiteral",
																		"src": "11365:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11368:4:13",
																		"nodeType": "YulLiteral",
																		"src": "11368:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11358:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11358:6:13"
																},
																"nativeSrc": "11358:15:13",
																"nodeType": "YulFunctionCall",
																"src": "11358:15:13"
															},
															"nativeSrc": "11358:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "11358:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11389:1:13",
																		"nodeType": "YulLiteral",
																		"src": "11389:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11392:4:13",
																		"nodeType": "YulLiteral",
																		"src": "11392:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11382:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11382:6:13"
																},
																"nativeSrc": "11382:15:13",
																"nodeType": "YulFunctionCall",
																"src": "11382:15:13"
															},
															"nativeSrc": "11382:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "11382:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "11223:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "11223:180:13"
											},
											{
												"body": {
													"nativeSrc": "11454:149:13",
													"nodeType": "YulBlock",
													"src": "11454:149:13",
													"statements": [
														{
															"nativeSrc": "11464:25:13",
															"nodeType": "YulAssignment",
															"src": "11464:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11487:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "11487:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11469:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "11469:17:13"
																},
																"nativeSrc": "11469:20:13",
																"nodeType": "YulFunctionCall",
																"src": "11469:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11464:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "11464:1:13"
																}
															]
														},
														{
															"nativeSrc": "11498:25:13",
															"nodeType": "YulAssignment",
															"src": "11498:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11521:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "11521:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11503:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "11503:17:13"
																},
																"nativeSrc": "11503:20:13",
																"nodeType": "YulFunctionCall",
																"src": "11503:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11498:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "11498:1:13"
																}
															]
														},
														{
															"nativeSrc": "11532:17:13",
															"nodeType": "YulAssignment",
															"src": "11532:17:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11544:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "11544:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11547:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "11547:1:13"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "11540:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11540:3:13"
																},
																"nativeSrc": "11540:9:13",
																"nodeType": "YulFunctionCall",
																"src": "11540:9:13"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "11532:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11532:4:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11574:22:13",
																"nodeType": "YulBlock",
																"src": "11574:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11576:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "11576:16:13"
																			},
																			"nativeSrc": "11576:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11576:18:13"
																		},
																		"nativeSrc": "11576:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "11576:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "11565:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "11565:4:13"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "11571:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "11571:1:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11562:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "11562:2:13"
																},
																"nativeSrc": "11562:11:13",
																"nodeType": "YulFunctionCall",
																"src": "11562:11:13"
															},
															"nativeSrc": "11559:37:13",
															"nodeType": "YulIf",
															"src": "11559:37:13"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "11409:194:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11440:1:13",
														"nodeType": "YulTypedName",
														"src": "11440:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11443:1:13",
														"nodeType": "YulTypedName",
														"src": "11443:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "11449:4:13",
														"nodeType": "YulTypedName",
														"src": "11449:4:13",
														"type": ""
													}
												],
												"src": "11409:194:13"
											},
											{
												"body": {
													"nativeSrc": "11715:75:13",
													"nodeType": "YulBlock",
													"src": "11715:75:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11737:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11737:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11745:1:13",
																				"nodeType": "YulLiteral",
																				"src": "11745:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11733:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11733:3:13"
																		},
																		"nativeSrc": "11733:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11733:14:13"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420636f6c6c61746572616c2062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "11749:33:13",
																		"nodeType": "YulLiteral",
																		"src": "11749:33:13",
																		"type": "",
																		"value": "Insufficient collateral balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11726:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11726:6:13"
																},
																"nativeSrc": "11726:57:13",
																"nodeType": "YulFunctionCall",
																"src": "11726:57:13"
															},
															"nativeSrc": "11726:57:13",
															"nodeType": "YulExpressionStatement",
															"src": "11726:57:13"
														}
													]
												},
												"name": "store_literal_in_memory_5978e55655ae94e38fa7726ce96ce1eb90620fc9a937aeb007bc6487f417e4de",
												"nativeSrc": "11609:181:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11707:6:13",
														"nodeType": "YulTypedName",
														"src": "11707:6:13",
														"type": ""
													}
												],
												"src": "11609:181:13"
											},
											{
												"body": {
													"nativeSrc": "11942:220:13",
													"nodeType": "YulBlock",
													"src": "11942:220:13",
													"statements": [
														{
															"nativeSrc": "11952:74:13",
															"nodeType": "YulAssignment",
															"src": "11952:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12018:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12018:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12023:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12023:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11959:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "11959:58:13"
																},
																"nativeSrc": "11959:67:13",
																"nodeType": "YulFunctionCall",
																"src": "11959:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11952:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11952:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12124:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12124:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5978e55655ae94e38fa7726ce96ce1eb90620fc9a937aeb007bc6487f417e4de",
																	"nativeSrc": "12035:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "12035:88:13"
																},
																"nativeSrc": "12035:93:13",
																"nodeType": "YulFunctionCall",
																"src": "12035:93:13"
															},
															"nativeSrc": "12035:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "12035:93:13"
														},
														{
															"nativeSrc": "12137:19:13",
															"nodeType": "YulAssignment",
															"src": "12137:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12148:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12148:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12153:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12153:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12144:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12144:3:13"
																},
																"nativeSrc": "12144:12:13",
																"nodeType": "YulFunctionCall",
																"src": "12144:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12137:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12137:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5978e55655ae94e38fa7726ce96ce1eb90620fc9a937aeb007bc6487f417e4de_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11796:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11930:3:13",
														"nodeType": "YulTypedName",
														"src": "11930:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11938:3:13",
														"nodeType": "YulTypedName",
														"src": "11938:3:13",
														"type": ""
													}
												],
												"src": "11796:366:13"
											},
											{
												"body": {
													"nativeSrc": "12339:248:13",
													"nodeType": "YulBlock",
													"src": "12339:248:13",
													"statements": [
														{
															"nativeSrc": "12349:26:13",
															"nodeType": "YulAssignment",
															"src": "12349:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12361:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "12361:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12372:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12372:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12357:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12357:3:13"
																},
																"nativeSrc": "12357:18:13",
																"nodeType": "YulFunctionCall",
																"src": "12357:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12349:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "12349:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12396:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12396:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12407:1:13",
																				"nodeType": "YulLiteral",
																				"src": "12407:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12392:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12392:3:13"
																		},
																		"nativeSrc": "12392:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12392:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12415:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "12415:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12421:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12421:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12411:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12411:3:13"
																		},
																		"nativeSrc": "12411:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12411:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12385:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12385:6:13"
																},
																"nativeSrc": "12385:47:13",
																"nodeType": "YulFunctionCall",
																"src": "12385:47:13"
															},
															"nativeSrc": "12385:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "12385:47:13"
														},
														{
															"nativeSrc": "12441:139:13",
															"nodeType": "YulAssignment",
															"src": "12441:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12575:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "12575:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5978e55655ae94e38fa7726ce96ce1eb90620fc9a937aeb007bc6487f417e4de_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12449:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "12449:124:13"
																},
																"nativeSrc": "12449:131:13",
																"nodeType": "YulFunctionCall",
																"src": "12449:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12441:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "12441:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5978e55655ae94e38fa7726ce96ce1eb90620fc9a937aeb007bc6487f417e4de__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12168:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12319:9:13",
														"nodeType": "YulTypedName",
														"src": "12319:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12334:4:13",
														"nodeType": "YulTypedName",
														"src": "12334:4:13",
														"type": ""
													}
												],
												"src": "12168:419:13"
											},
											{
												"body": {
													"nativeSrc": "12699:128:13",
													"nodeType": "YulBlock",
													"src": "12699:128:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12721:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "12721:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12729:1:13",
																				"nodeType": "YulLiteral",
																				"src": "12729:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12717:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12717:3:13"
																		},
																		"nativeSrc": "12717:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12717:14:13"
																	},
																	{
																		"hexValue": "5769746864726177616c20776f756c642062726561636820636f6c6c61746572",
																		"kind": "string",
																		"nativeSrc": "12733:34:13",
																		"nodeType": "YulLiteral",
																		"src": "12733:34:13",
																		"type": "",
																		"value": "Withdrawal would breach collater"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12710:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12710:6:13"
																},
																"nativeSrc": "12710:58:13",
																"nodeType": "YulFunctionCall",
																"src": "12710:58:13"
															},
															"nativeSrc": "12710:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "12710:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12789:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "12789:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12797:2:13",
																				"nodeType": "YulLiteral",
																				"src": "12797:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12785:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12785:3:13"
																		},
																		"nativeSrc": "12785:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12785:15:13"
																	},
																	{
																		"hexValue": "616c697a6174696f6e20726174696f",
																		"kind": "string",
																		"nativeSrc": "12802:17:13",
																		"nodeType": "YulLiteral",
																		"src": "12802:17:13",
																		"type": "",
																		"value": "alization ratio"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12778:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12778:6:13"
																},
																"nativeSrc": "12778:42:13",
																"nodeType": "YulFunctionCall",
																"src": "12778:42:13"
															},
															"nativeSrc": "12778:42:13",
															"nodeType": "YulExpressionStatement",
															"src": "12778:42:13"
														}
													]
												},
												"name": "store_literal_in_memory_59f034818b0329044bc3dd8d1236d7e23aa7fbe805dec217b13e45ed2e126a55",
												"nativeSrc": "12593:234:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12691:6:13",
														"nodeType": "YulTypedName",
														"src": "12691:6:13",
														"type": ""
													}
												],
												"src": "12593:234:13"
											},
											{
												"body": {
													"nativeSrc": "12979:220:13",
													"nodeType": "YulBlock",
													"src": "12979:220:13",
													"statements": [
														{
															"nativeSrc": "12989:74:13",
															"nodeType": "YulAssignment",
															"src": "12989:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13055:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13055:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13060:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13060:2:13",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12996:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "12996:58:13"
																},
																"nativeSrc": "12996:67:13",
																"nodeType": "YulFunctionCall",
																"src": "12996:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12989:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12989:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13161:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13161:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_59f034818b0329044bc3dd8d1236d7e23aa7fbe805dec217b13e45ed2e126a55",
																	"nativeSrc": "13072:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "13072:88:13"
																},
																"nativeSrc": "13072:93:13",
																"nodeType": "YulFunctionCall",
																"src": "13072:93:13"
															},
															"nativeSrc": "13072:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "13072:93:13"
														},
														{
															"nativeSrc": "13174:19:13",
															"nodeType": "YulAssignment",
															"src": "13174:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13185:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13185:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13190:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13190:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13181:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13181:3:13"
																},
																"nativeSrc": "13181:12:13",
																"nodeType": "YulFunctionCall",
																"src": "13181:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13174:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13174:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_59f034818b0329044bc3dd8d1236d7e23aa7fbe805dec217b13e45ed2e126a55_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12833:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12967:3:13",
														"nodeType": "YulTypedName",
														"src": "12967:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12975:3:13",
														"nodeType": "YulTypedName",
														"src": "12975:3:13",
														"type": ""
													}
												],
												"src": "12833:366:13"
											},
											{
												"body": {
													"nativeSrc": "13376:248:13",
													"nodeType": "YulBlock",
													"src": "13376:248:13",
													"statements": [
														{
															"nativeSrc": "13386:26:13",
															"nodeType": "YulAssignment",
															"src": "13386:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13398:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "13398:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13409:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13409:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13394:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13394:3:13"
																},
																"nativeSrc": "13394:18:13",
																"nodeType": "YulFunctionCall",
																"src": "13394:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13386:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13386:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13433:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13433:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13444:1:13",
																				"nodeType": "YulLiteral",
																				"src": "13444:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13429:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13429:3:13"
																		},
																		"nativeSrc": "13429:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13429:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13452:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "13452:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13458:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13458:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13448:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13448:3:13"
																		},
																		"nativeSrc": "13448:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13448:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13422:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13422:6:13"
																},
																"nativeSrc": "13422:47:13",
																"nodeType": "YulFunctionCall",
																"src": "13422:47:13"
															},
															"nativeSrc": "13422:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "13422:47:13"
														},
														{
															"nativeSrc": "13478:139:13",
															"nodeType": "YulAssignment",
															"src": "13478:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13612:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "13612:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_59f034818b0329044bc3dd8d1236d7e23aa7fbe805dec217b13e45ed2e126a55_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13486:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "13486:124:13"
																},
																"nativeSrc": "13486:131:13",
																"nodeType": "YulFunctionCall",
																"src": "13486:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13478:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13478:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_59f034818b0329044bc3dd8d1236d7e23aa7fbe805dec217b13e45ed2e126a55__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13205:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13356:9:13",
														"nodeType": "YulTypedName",
														"src": "13356:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13371:4:13",
														"nodeType": "YulTypedName",
														"src": "13371:4:13",
														"type": ""
													}
												],
												"src": "13205:419:13"
											},
											{
												"body": {
													"nativeSrc": "13736:68:13",
													"nodeType": "YulBlock",
													"src": "13736:68:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13758:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "13758:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13766:1:13",
																				"nodeType": "YulLiteral",
																				"src": "13766:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13754:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13754:3:13"
																		},
																		"nativeSrc": "13754:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13754:14:13"
																	},
																	{
																		"hexValue": "4e6f207661756c742065786973747320666f722075736572",
																		"kind": "string",
																		"nativeSrc": "13770:26:13",
																		"nodeType": "YulLiteral",
																		"src": "13770:26:13",
																		"type": "",
																		"value": "No vault exists for user"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13747:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13747:6:13"
																},
																"nativeSrc": "13747:50:13",
																"nodeType": "YulFunctionCall",
																"src": "13747:50:13"
															},
															"nativeSrc": "13747:50:13",
															"nodeType": "YulExpressionStatement",
															"src": "13747:50:13"
														}
													]
												},
												"name": "store_literal_in_memory_5821c66d801abd0f067bed9f888f52bbd0ec900df9f86f6117638508d1a7ebba",
												"nativeSrc": "13630:174:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13728:6:13",
														"nodeType": "YulTypedName",
														"src": "13728:6:13",
														"type": ""
													}
												],
												"src": "13630:174:13"
											},
											{
												"body": {
													"nativeSrc": "13956:220:13",
													"nodeType": "YulBlock",
													"src": "13956:220:13",
													"statements": [
														{
															"nativeSrc": "13966:74:13",
															"nodeType": "YulAssignment",
															"src": "13966:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14032:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14032:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14037:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14037:2:13",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13973:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "13973:58:13"
																},
																"nativeSrc": "13973:67:13",
																"nodeType": "YulFunctionCall",
																"src": "13973:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13966:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13966:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14138:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14138:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5821c66d801abd0f067bed9f888f52bbd0ec900df9f86f6117638508d1a7ebba",
																	"nativeSrc": "14049:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "14049:88:13"
																},
																"nativeSrc": "14049:93:13",
																"nodeType": "YulFunctionCall",
																"src": "14049:93:13"
															},
															"nativeSrc": "14049:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "14049:93:13"
														},
														{
															"nativeSrc": "14151:19:13",
															"nodeType": "YulAssignment",
															"src": "14151:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14162:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14162:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14167:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14167:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14158:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14158:3:13"
																},
																"nativeSrc": "14158:12:13",
																"nodeType": "YulFunctionCall",
																"src": "14158:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14151:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14151:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5821c66d801abd0f067bed9f888f52bbd0ec900df9f86f6117638508d1a7ebba_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13810:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13944:3:13",
														"nodeType": "YulTypedName",
														"src": "13944:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13952:3:13",
														"nodeType": "YulTypedName",
														"src": "13952:3:13",
														"type": ""
													}
												],
												"src": "13810:366:13"
											},
											{
												"body": {
													"nativeSrc": "14353:248:13",
													"nodeType": "YulBlock",
													"src": "14353:248:13",
													"statements": [
														{
															"nativeSrc": "14363:26:13",
															"nodeType": "YulAssignment",
															"src": "14363:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14375:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "14375:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14386:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14386:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14371:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14371:3:13"
																},
																"nativeSrc": "14371:18:13",
																"nodeType": "YulFunctionCall",
																"src": "14371:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14363:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "14363:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14410:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14410:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14421:1:13",
																				"nodeType": "YulLiteral",
																				"src": "14421:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14406:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14406:3:13"
																		},
																		"nativeSrc": "14406:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14406:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14429:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "14429:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14435:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14435:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14425:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14425:3:13"
																		},
																		"nativeSrc": "14425:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14425:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14399:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14399:6:13"
																},
																"nativeSrc": "14399:47:13",
																"nodeType": "YulFunctionCall",
																"src": "14399:47:13"
															},
															"nativeSrc": "14399:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "14399:47:13"
														},
														{
															"nativeSrc": "14455:139:13",
															"nodeType": "YulAssignment",
															"src": "14455:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14589:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "14589:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5821c66d801abd0f067bed9f888f52bbd0ec900df9f86f6117638508d1a7ebba_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14463:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "14463:124:13"
																},
																"nativeSrc": "14463:131:13",
																"nodeType": "YulFunctionCall",
																"src": "14463:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14455:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "14455:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5821c66d801abd0f067bed9f888f52bbd0ec900df9f86f6117638508d1a7ebba__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14182:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14333:9:13",
														"nodeType": "YulTypedName",
														"src": "14333:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14348:4:13",
														"nodeType": "YulTypedName",
														"src": "14348:4:13",
														"type": ""
													}
												],
												"src": "14182:419:13"
											},
											{
												"body": {
													"nativeSrc": "14733:206:13",
													"nodeType": "YulBlock",
													"src": "14733:206:13",
													"statements": [
														{
															"nativeSrc": "14743:26:13",
															"nodeType": "YulAssignment",
															"src": "14743:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14755:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "14755:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14766:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14766:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14751:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14751:3:13"
																},
																"nativeSrc": "14751:18:13",
																"nodeType": "YulFunctionCall",
																"src": "14751:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14743:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "14743:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14823:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14823:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14836:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14836:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14847:1:13",
																				"nodeType": "YulLiteral",
																				"src": "14847:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14832:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14832:3:13"
																		},
																		"nativeSrc": "14832:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14832:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14779:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "14779:43:13"
																},
																"nativeSrc": "14779:71:13",
																"nodeType": "YulFunctionCall",
																"src": "14779:71:13"
															},
															"nativeSrc": "14779:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "14779:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14904:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14904:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14917:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14917:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14928:2:13",
																				"nodeType": "YulLiteral",
																				"src": "14928:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14913:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14913:3:13"
																		},
																		"nativeSrc": "14913:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14913:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14860:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "14860:43:13"
																},
																"nativeSrc": "14860:72:13",
																"nodeType": "YulFunctionCall",
																"src": "14860:72:13"
															},
															"nativeSrc": "14860:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "14860:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "14607:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14697:9:13",
														"nodeType": "YulTypedName",
														"src": "14697:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14709:6:13",
														"nodeType": "YulTypedName",
														"src": "14709:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14717:6:13",
														"nodeType": "YulTypedName",
														"src": "14717:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14728:4:13",
														"nodeType": "YulTypedName",
														"src": "14728:4:13",
														"type": ""
													}
												],
												"src": "14607:332:13"
											},
											{
												"body": {
													"nativeSrc": "14989:147:13",
													"nodeType": "YulBlock",
													"src": "14989:147:13",
													"statements": [
														{
															"nativeSrc": "14999:25:13",
															"nodeType": "YulAssignment",
															"src": "14999:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15022:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "15022:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15004:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "15004:17:13"
																},
																"nativeSrc": "15004:20:13",
																"nodeType": "YulFunctionCall",
																"src": "15004:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14999:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "14999:1:13"
																}
															]
														},
														{
															"nativeSrc": "15033:25:13",
															"nodeType": "YulAssignment",
															"src": "15033:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15056:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "15056:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15038:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "15038:17:13"
																},
																"nativeSrc": "15038:20:13",
																"nodeType": "YulFunctionCall",
																"src": "15038:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15033:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "15033:1:13"
																}
															]
														},
														{
															"nativeSrc": "15067:16:13",
															"nodeType": "YulAssignment",
															"src": "15067:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15078:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "15078:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15081:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "15081:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15074:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15074:3:13"
																},
																"nativeSrc": "15074:9:13",
																"nodeType": "YulFunctionCall",
																"src": "15074:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "15067:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15067:3:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15107:22:13",
																"nodeType": "YulBlock",
																"src": "15107:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15109:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "15109:16:13"
																			},
																			"nativeSrc": "15109:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "15109:18:13"
																		},
																		"nativeSrc": "15109:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "15109:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15099:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "15099:1:13"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "15102:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15102:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15096:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "15096:2:13"
																},
																"nativeSrc": "15096:10:13",
																"nodeType": "YulFunctionCall",
																"src": "15096:10:13"
															},
															"nativeSrc": "15093:36:13",
															"nodeType": "YulIf",
															"src": "15093:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "14945:191:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14976:1:13",
														"nodeType": "YulTypedName",
														"src": "14976:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14979:1:13",
														"nodeType": "YulTypedName",
														"src": "14979:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "14985:3:13",
														"nodeType": "YulTypedName",
														"src": "14985:3:13",
														"type": ""
													}
												],
												"src": "14945:191:13"
											},
											{
												"body": {
													"nativeSrc": "15248:124:13",
													"nodeType": "YulBlock",
													"src": "15248:124:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15270:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "15270:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15278:1:13",
																				"nodeType": "YulLiteral",
																				"src": "15278:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15266:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15266:3:13"
																		},
																		"nativeSrc": "15266:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15266:14:13"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420636f6c6c61746572616c20746f206d696e7420",
																		"kind": "string",
																		"nativeSrc": "15282:34:13",
																		"nodeType": "YulLiteral",
																		"src": "15282:34:13",
																		"type": "",
																		"value": "Insufficient collateral to mint "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15259:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15259:6:13"
																},
																"nativeSrc": "15259:58:13",
																"nodeType": "YulFunctionCall",
																"src": "15259:58:13"
															},
															"nativeSrc": "15259:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "15259:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15338:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "15338:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15346:2:13",
																				"nodeType": "YulLiteral",
																				"src": "15346:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15334:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15334:3:13"
																		},
																		"nativeSrc": "15334:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15334:15:13"
																	},
																	{
																		"hexValue": "7468617420616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "15351:13:13",
																		"nodeType": "YulLiteral",
																		"src": "15351:13:13",
																		"type": "",
																		"value": "that amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15327:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15327:6:13"
																},
																"nativeSrc": "15327:38:13",
																"nodeType": "YulFunctionCall",
																"src": "15327:38:13"
															},
															"nativeSrc": "15327:38:13",
															"nodeType": "YulExpressionStatement",
															"src": "15327:38:13"
														}
													]
												},
												"name": "store_literal_in_memory_0e36ef5e15ed9013dd7607096cd93e0b2ef988dfde5f216aa728191847127f83",
												"nativeSrc": "15142:230:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15240:6:13",
														"nodeType": "YulTypedName",
														"src": "15240:6:13",
														"type": ""
													}
												],
												"src": "15142:230:13"
											},
											{
												"body": {
													"nativeSrc": "15524:220:13",
													"nodeType": "YulBlock",
													"src": "15524:220:13",
													"statements": [
														{
															"nativeSrc": "15534:74:13",
															"nodeType": "YulAssignment",
															"src": "15534:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15600:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15600:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15605:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15605:2:13",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15541:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "15541:58:13"
																},
																"nativeSrc": "15541:67:13",
																"nodeType": "YulFunctionCall",
																"src": "15541:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15534:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15534:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15706:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15706:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0e36ef5e15ed9013dd7607096cd93e0b2ef988dfde5f216aa728191847127f83",
																	"nativeSrc": "15617:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "15617:88:13"
																},
																"nativeSrc": "15617:93:13",
																"nodeType": "YulFunctionCall",
																"src": "15617:93:13"
															},
															"nativeSrc": "15617:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "15617:93:13"
														},
														{
															"nativeSrc": "15719:19:13",
															"nodeType": "YulAssignment",
															"src": "15719:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15730:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15730:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15735:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15735:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15726:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15726:3:13"
																},
																"nativeSrc": "15726:12:13",
																"nodeType": "YulFunctionCall",
																"src": "15726:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15719:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15719:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0e36ef5e15ed9013dd7607096cd93e0b2ef988dfde5f216aa728191847127f83_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15378:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15512:3:13",
														"nodeType": "YulTypedName",
														"src": "15512:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15520:3:13",
														"nodeType": "YulTypedName",
														"src": "15520:3:13",
														"type": ""
													}
												],
												"src": "15378:366:13"
											},
											{
												"body": {
													"nativeSrc": "15921:248:13",
													"nodeType": "YulBlock",
													"src": "15921:248:13",
													"statements": [
														{
															"nativeSrc": "15931:26:13",
															"nodeType": "YulAssignment",
															"src": "15931:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15943:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "15943:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15954:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15954:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15939:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15939:3:13"
																},
																"nativeSrc": "15939:18:13",
																"nodeType": "YulFunctionCall",
																"src": "15939:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15931:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "15931:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15978:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15978:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15989:1:13",
																				"nodeType": "YulLiteral",
																				"src": "15989:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15974:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15974:3:13"
																		},
																		"nativeSrc": "15974:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15974:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15997:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "15997:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16003:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "16003:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15993:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15993:3:13"
																		},
																		"nativeSrc": "15993:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15993:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15967:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15967:6:13"
																},
																"nativeSrc": "15967:47:13",
																"nodeType": "YulFunctionCall",
																"src": "15967:47:13"
															},
															"nativeSrc": "15967:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "15967:47:13"
														},
														{
															"nativeSrc": "16023:139:13",
															"nodeType": "YulAssignment",
															"src": "16023:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16157:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "16157:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0e36ef5e15ed9013dd7607096cd93e0b2ef988dfde5f216aa728191847127f83_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16031:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "16031:124:13"
																},
																"nativeSrc": "16031:131:13",
																"nodeType": "YulFunctionCall",
																"src": "16031:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16023:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "16023:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0e36ef5e15ed9013dd7607096cd93e0b2ef988dfde5f216aa728191847127f83__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15750:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15901:9:13",
														"nodeType": "YulTypedName",
														"src": "15901:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15916:4:13",
														"nodeType": "YulTypedName",
														"src": "15916:4:13",
														"type": ""
													}
												],
												"src": "15750:419:13"
											},
											{
												"body": {
													"nativeSrc": "16223:362:13",
													"nodeType": "YulBlock",
													"src": "16223:362:13",
													"statements": [
														{
															"nativeSrc": "16233:25:13",
															"nodeType": "YulAssignment",
															"src": "16233:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16256:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "16256:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16238:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "16238:17:13"
																},
																"nativeSrc": "16238:20:13",
																"nodeType": "YulFunctionCall",
																"src": "16238:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "16233:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "16233:1:13"
																}
															]
														},
														{
															"nativeSrc": "16267:25:13",
															"nodeType": "YulAssignment",
															"src": "16267:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16290:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "16290:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16272:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "16272:17:13"
																},
																"nativeSrc": "16272:20:13",
																"nodeType": "YulFunctionCall",
																"src": "16272:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16267:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "16267:1:13"
																}
															]
														},
														{
															"nativeSrc": "16301:28:13",
															"nodeType": "YulVariableDeclaration",
															"src": "16301:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16324:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "16324:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16327:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "16327:1:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "16320:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16320:3:13"
																},
																"nativeSrc": "16320:9:13",
																"nodeType": "YulFunctionCall",
																"src": "16320:9:13"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "16305:11:13",
																	"nodeType": "YulTypedName",
																	"src": "16305:11:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16338:41:13",
															"nodeType": "YulAssignment",
															"src": "16338:41:13",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "16367:11:13",
																		"nodeType": "YulIdentifier",
																		"src": "16367:11:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16349:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "16349:17:13"
																},
																"nativeSrc": "16349:30:13",
																"nodeType": "YulFunctionCall",
																"src": "16349:30:13"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "16338:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "16338:7:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16556:22:13",
																"nodeType": "YulBlock",
																"src": "16556:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "16558:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "16558:16:13"
																			},
																			"nativeSrc": "16558:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "16558:18:13"
																		},
																		"nativeSrc": "16558:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "16558:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "16489:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "16489:1:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "16482:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "16482:6:13"
																				},
																				"nativeSrc": "16482:9:13",
																				"nodeType": "YulFunctionCall",
																				"src": "16482:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "16512:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "16512:1:13"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "16519:7:13",
																								"nodeType": "YulIdentifier",
																								"src": "16519:7:13"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "16528:1:13",
																								"nodeType": "YulIdentifier",
																								"src": "16528:1:13"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "16515:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "16515:3:13"
																						},
																						"nativeSrc": "16515:15:13",
																						"nodeType": "YulFunctionCall",
																						"src": "16515:15:13"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "16509:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "16509:2:13"
																				},
																				"nativeSrc": "16509:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "16509:22:13"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "16462:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "16462:2:13"
																		},
																		"nativeSrc": "16462:83:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16462:83:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "16442:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16442:6:13"
																},
																"nativeSrc": "16442:113:13",
																"nodeType": "YulFunctionCall",
																"src": "16442:113:13"
															},
															"nativeSrc": "16439:139:13",
															"nodeType": "YulIf",
															"src": "16439:139:13"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "16175:410:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "16206:1:13",
														"nodeType": "YulTypedName",
														"src": "16206:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16209:1:13",
														"nodeType": "YulTypedName",
														"src": "16209:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "16215:7:13",
														"nodeType": "YulTypedName",
														"src": "16215:7:13",
														"type": ""
													}
												],
												"src": "16175:410:13"
											},
											{
												"body": {
													"nativeSrc": "16619:152:13",
													"nodeType": "YulBlock",
													"src": "16619:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16636:1:13",
																		"nodeType": "YulLiteral",
																		"src": "16636:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16639:77:13",
																		"nodeType": "YulLiteral",
																		"src": "16639:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16629:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16629:6:13"
																},
																"nativeSrc": "16629:88:13",
																"nodeType": "YulFunctionCall",
																"src": "16629:88:13"
															},
															"nativeSrc": "16629:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "16629:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16733:1:13",
																		"nodeType": "YulLiteral",
																		"src": "16733:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16736:4:13",
																		"nodeType": "YulLiteral",
																		"src": "16736:4:13",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16726:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16726:6:13"
																},
																"nativeSrc": "16726:15:13",
																"nodeType": "YulFunctionCall",
																"src": "16726:15:13"
															},
															"nativeSrc": "16726:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "16726:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16757:1:13",
																		"nodeType": "YulLiteral",
																		"src": "16757:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16760:4:13",
																		"nodeType": "YulLiteral",
																		"src": "16760:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "16750:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16750:6:13"
																},
																"nativeSrc": "16750:15:13",
																"nodeType": "YulFunctionCall",
																"src": "16750:15:13"
															},
															"nativeSrc": "16750:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "16750:15:13"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "16591:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "16591:180:13"
											},
											{
												"body": {
													"nativeSrc": "16819:143:13",
													"nodeType": "YulBlock",
													"src": "16819:143:13",
													"statements": [
														{
															"nativeSrc": "16829:25:13",
															"nodeType": "YulAssignment",
															"src": "16829:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16852:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "16852:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16834:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "16834:17:13"
																},
																"nativeSrc": "16834:20:13",
																"nodeType": "YulFunctionCall",
																"src": "16834:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "16829:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "16829:1:13"
																}
															]
														},
														{
															"nativeSrc": "16863:25:13",
															"nodeType": "YulAssignment",
															"src": "16863:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16886:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "16886:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16868:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "16868:17:13"
																},
																"nativeSrc": "16868:20:13",
																"nodeType": "YulFunctionCall",
																"src": "16868:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16863:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "16863:1:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16910:22:13",
																"nodeType": "YulBlock",
																"src": "16910:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "16912:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "16912:16:13"
																			},
																			"nativeSrc": "16912:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "16912:18:13"
																		},
																		"nativeSrc": "16912:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "16912:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16907:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "16907:1:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "16900:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16900:6:13"
																},
																"nativeSrc": "16900:9:13",
																"nodeType": "YulFunctionCall",
																"src": "16900:9:13"
															},
															"nativeSrc": "16897:35:13",
															"nodeType": "YulIf",
															"src": "16897:35:13"
														},
														{
															"nativeSrc": "16942:14:13",
															"nodeType": "YulAssignment",
															"src": "16942:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16951:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "16951:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16954:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "16954:1:13"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "16947:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16947:3:13"
																},
																"nativeSrc": "16947:9:13",
																"nodeType": "YulFunctionCall",
																"src": "16947:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "16942:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "16942:1:13"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "16777:185:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "16808:1:13",
														"nodeType": "YulTypedName",
														"src": "16808:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16811:1:13",
														"nodeType": "YulTypedName",
														"src": "16811:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "16817:1:13",
														"nodeType": "YulTypedName",
														"src": "16817:1:13",
														"type": ""
													}
												],
												"src": "16777:185:13"
											},
											{
												"body": {
													"nativeSrc": "17122:288:13",
													"nodeType": "YulBlock",
													"src": "17122:288:13",
													"statements": [
														{
															"nativeSrc": "17132:26:13",
															"nodeType": "YulAssignment",
															"src": "17132:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17144:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "17144:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17155:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17155:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17140:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17140:3:13"
																},
																"nativeSrc": "17140:18:13",
																"nodeType": "YulFunctionCall",
																"src": "17140:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17132:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "17132:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17212:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "17212:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17225:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17225:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17236:1:13",
																				"nodeType": "YulLiteral",
																				"src": "17236:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17221:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17221:3:13"
																		},
																		"nativeSrc": "17221:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17221:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17168:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "17168:43:13"
																},
																"nativeSrc": "17168:71:13",
																"nodeType": "YulFunctionCall",
																"src": "17168:71:13"
															},
															"nativeSrc": "17168:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "17168:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17293:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "17293:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17306:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17306:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17317:2:13",
																				"nodeType": "YulLiteral",
																				"src": "17317:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17302:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17302:3:13"
																		},
																		"nativeSrc": "17302:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17302:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17249:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "17249:43:13"
																},
																"nativeSrc": "17249:72:13",
																"nodeType": "YulFunctionCall",
																"src": "17249:72:13"
															},
															"nativeSrc": "17249:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "17249:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "17375:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "17375:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17388:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17388:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17399:2:13",
																				"nodeType": "YulLiteral",
																				"src": "17399:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17384:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17384:3:13"
																		},
																		"nativeSrc": "17384:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17384:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17331:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "17331:43:13"
																},
																"nativeSrc": "17331:72:13",
																"nodeType": "YulFunctionCall",
																"src": "17331:72:13"
															},
															"nativeSrc": "17331:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "17331:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "16968:442:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17078:9:13",
														"nodeType": "YulTypedName",
														"src": "17078:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "17090:6:13",
														"nodeType": "YulTypedName",
														"src": "17090:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17098:6:13",
														"nodeType": "YulTypedName",
														"src": "17098:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17106:6:13",
														"nodeType": "YulTypedName",
														"src": "17106:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17117:4:13",
														"nodeType": "YulTypedName",
														"src": "17117:4:13",
														"type": ""
													}
												],
												"src": "16968:442:13"
											},
											{
												"body": {
													"nativeSrc": "17522:75:13",
													"nodeType": "YulBlock",
													"src": "17522:75:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17544:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "17544:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17552:1:13",
																				"nodeType": "YulLiteral",
																				"src": "17552:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17540:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17540:3:13"
																		},
																		"nativeSrc": "17540:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17540:14:13"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "17556:33:13",
																		"nodeType": "YulLiteral",
																		"src": "17556:33:13",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17533:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17533:6:13"
																},
																"nativeSrc": "17533:57:13",
																"nodeType": "YulFunctionCall",
																"src": "17533:57:13"
															},
															"nativeSrc": "17533:57:13",
															"nodeType": "YulExpressionStatement",
															"src": "17533:57:13"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "17416:181:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17514:6:13",
														"nodeType": "YulTypedName",
														"src": "17514:6:13",
														"type": ""
													}
												],
												"src": "17416:181:13"
											},
											{
												"body": {
													"nativeSrc": "17749:220:13",
													"nodeType": "YulBlock",
													"src": "17749:220:13",
													"statements": [
														{
															"nativeSrc": "17759:74:13",
															"nodeType": "YulAssignment",
															"src": "17759:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17825:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "17825:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17830:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17830:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17766:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "17766:58:13"
																},
																"nativeSrc": "17766:67:13",
																"nodeType": "YulFunctionCall",
																"src": "17766:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17759:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17759:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17931:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "17931:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "17842:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "17842:88:13"
																},
																"nativeSrc": "17842:93:13",
																"nodeType": "YulFunctionCall",
																"src": "17842:93:13"
															},
															"nativeSrc": "17842:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "17842:93:13"
														},
														{
															"nativeSrc": "17944:19:13",
															"nodeType": "YulAssignment",
															"src": "17944:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17955:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "17955:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17960:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17960:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17951:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17951:3:13"
																},
																"nativeSrc": "17951:12:13",
																"nodeType": "YulFunctionCall",
																"src": "17951:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17944:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17944:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17603:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17737:3:13",
														"nodeType": "YulTypedName",
														"src": "17737:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17745:3:13",
														"nodeType": "YulTypedName",
														"src": "17745:3:13",
														"type": ""
													}
												],
												"src": "17603:366:13"
											},
											{
												"body": {
													"nativeSrc": "18146:248:13",
													"nodeType": "YulBlock",
													"src": "18146:248:13",
													"statements": [
														{
															"nativeSrc": "18156:26:13",
															"nodeType": "YulAssignment",
															"src": "18156:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18168:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "18168:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18179:2:13",
																		"nodeType": "YulLiteral",
																		"src": "18179:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18164:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18164:3:13"
																},
																"nativeSrc": "18164:18:13",
																"nodeType": "YulFunctionCall",
																"src": "18164:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18156:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "18156:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18203:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "18203:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18214:1:13",
																				"nodeType": "YulLiteral",
																				"src": "18214:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18199:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18199:3:13"
																		},
																		"nativeSrc": "18199:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18199:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18222:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "18222:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18228:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "18228:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18218:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18218:3:13"
																		},
																		"nativeSrc": "18218:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18218:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18192:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18192:6:13"
																},
																"nativeSrc": "18192:47:13",
																"nodeType": "YulFunctionCall",
																"src": "18192:47:13"
															},
															"nativeSrc": "18192:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "18192:47:13"
														},
														{
															"nativeSrc": "18248:139:13",
															"nodeType": "YulAssignment",
															"src": "18248:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18382:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "18382:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18256:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "18256:124:13"
																},
																"nativeSrc": "18256:131:13",
																"nodeType": "YulFunctionCall",
																"src": "18256:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18248:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "18248:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17975:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18126:9:13",
														"nodeType": "YulTypedName",
														"src": "18126:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18141:4:13",
														"nodeType": "YulTypedName",
														"src": "18141:4:13",
														"type": ""
													}
												],
												"src": "17975:419:13"
											},
											{
												"body": {
													"nativeSrc": "18526:206:13",
													"nodeType": "YulBlock",
													"src": "18526:206:13",
													"statements": [
														{
															"nativeSrc": "18536:26:13",
															"nodeType": "YulAssignment",
															"src": "18536:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18548:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "18548:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18559:2:13",
																		"nodeType": "YulLiteral",
																		"src": "18559:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18544:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18544:3:13"
																},
																"nativeSrc": "18544:18:13",
																"nodeType": "YulFunctionCall",
																"src": "18544:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18536:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "18536:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18616:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "18616:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18629:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "18629:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18640:1:13",
																				"nodeType": "YulLiteral",
																				"src": "18640:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18625:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18625:3:13"
																		},
																		"nativeSrc": "18625:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18625:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18572:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "18572:43:13"
																},
																"nativeSrc": "18572:71:13",
																"nodeType": "YulFunctionCall",
																"src": "18572:71:13"
															},
															"nativeSrc": "18572:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "18572:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18697:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "18697:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18710:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "18710:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18721:2:13",
																				"nodeType": "YulLiteral",
																				"src": "18721:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18706:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18706:3:13"
																		},
																		"nativeSrc": "18706:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18706:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18653:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "18653:43:13"
																},
																"nativeSrc": "18653:72:13",
																"nodeType": "YulFunctionCall",
																"src": "18653:72:13"
															},
															"nativeSrc": "18653:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "18653:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "18400:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18490:9:13",
														"nodeType": "YulTypedName",
														"src": "18490:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18502:6:13",
														"nodeType": "YulTypedName",
														"src": "18502:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18510:6:13",
														"nodeType": "YulTypedName",
														"src": "18510:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18521:4:13",
														"nodeType": "YulTypedName",
														"src": "18521:4:13",
														"type": ""
													}
												],
												"src": "18400:332:13"
											},
											{
												"body": {
													"nativeSrc": "18892:288:13",
													"nodeType": "YulBlock",
													"src": "18892:288:13",
													"statements": [
														{
															"nativeSrc": "18902:26:13",
															"nodeType": "YulAssignment",
															"src": "18902:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18914:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "18914:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18925:2:13",
																		"nodeType": "YulLiteral",
																		"src": "18925:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18910:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18910:3:13"
																},
																"nativeSrc": "18910:18:13",
																"nodeType": "YulFunctionCall",
																"src": "18910:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18902:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "18902:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18982:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "18982:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18995:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "18995:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19006:1:13",
																				"nodeType": "YulLiteral",
																				"src": "19006:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18991:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18991:3:13"
																		},
																		"nativeSrc": "18991:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18991:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18938:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "18938:43:13"
																},
																"nativeSrc": "18938:71:13",
																"nodeType": "YulFunctionCall",
																"src": "18938:71:13"
															},
															"nativeSrc": "18938:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "18938:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19063:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19063:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19076:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "19076:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19087:2:13",
																				"nodeType": "YulLiteral",
																				"src": "19087:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19072:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19072:3:13"
																		},
																		"nativeSrc": "19072:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19072:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19019:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "19019:43:13"
																},
																"nativeSrc": "19019:72:13",
																"nodeType": "YulFunctionCall",
																"src": "19019:72:13"
															},
															"nativeSrc": "19019:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "19019:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "19145:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19145:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19158:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "19158:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19169:2:13",
																				"nodeType": "YulLiteral",
																				"src": "19169:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19154:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19154:3:13"
																		},
																		"nativeSrc": "19154:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19154:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19101:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "19101:43:13"
																},
																"nativeSrc": "19101:72:13",
																"nodeType": "YulFunctionCall",
																"src": "19101:72:13"
															},
															"nativeSrc": "19101:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "19101:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "18738:442:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18848:9:13",
														"nodeType": "YulTypedName",
														"src": "18848:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "18860:6:13",
														"nodeType": "YulTypedName",
														"src": "18860:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18868:6:13",
														"nodeType": "YulTypedName",
														"src": "18868:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18876:6:13",
														"nodeType": "YulTypedName",
														"src": "18876:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18887:4:13",
														"nodeType": "YulTypedName",
														"src": "18887:4:13",
														"type": ""
													}
												],
												"src": "18738:442:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_Vault_$1587_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_Vault_$1587_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_Vault_$1587_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_Vault_$1587__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_Vault_$1587_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_IERC20_$1032_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$1032_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$1032_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$1032__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$1032_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_b0625f87e31dc518e790285a825bb3c4cd66fc859c380f7e244181f8081e3f92(memPtr) {\n\n        mstore(add(memPtr, 0), \"Collateralization ratio must be \")\n\n        mstore(add(memPtr, 32), \"at least 100%\")\n\n    }\n\n    function abi_encode_t_stringliteral_b0625f87e31dc518e790285a825bb3c4cd66fc859c380f7e244181f8081e3f92_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_b0625f87e31dc518e790285a825bb3c4cd66fc859c380f7e244181f8081e3f92(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b0625f87e31dc518e790285a825bb3c4cd66fc859c380f7e244181f8081e3f92__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b0625f87e31dc518e790285a825bb3c4cd66fc859c380f7e244181f8081e3f92_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be > 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_969d0e7bdc9f60900822ca06581f62f1488479b8fc44dc0279e23a50719ed79d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount exceeds debt\")\n\n    }\n\n    function abi_encode_t_stringliteral_969d0e7bdc9f60900822ca06581f62f1488479b8fc44dc0279e23a50719ed79d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_969d0e7bdc9f60900822ca06581f62f1488479b8fc44dc0279e23a50719ed79d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_969d0e7bdc9f60900822ca06581f62f1488479b8fc44dc0279e23a50719ed79d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_969d0e7bdc9f60900822ca06581f62f1488479b8fc44dc0279e23a50719ed79d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_5978e55655ae94e38fa7726ce96ce1eb90620fc9a937aeb007bc6487f417e4de(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient collateral balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_5978e55655ae94e38fa7726ce96ce1eb90620fc9a937aeb007bc6487f417e4de_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_5978e55655ae94e38fa7726ce96ce1eb90620fc9a937aeb007bc6487f417e4de(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5978e55655ae94e38fa7726ce96ce1eb90620fc9a937aeb007bc6487f417e4de__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5978e55655ae94e38fa7726ce96ce1eb90620fc9a937aeb007bc6487f417e4de_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_59f034818b0329044bc3dd8d1236d7e23aa7fbe805dec217b13e45ed2e126a55(memPtr) {\n\n        mstore(add(memPtr, 0), \"Withdrawal would breach collater\")\n\n        mstore(add(memPtr, 32), \"alization ratio\")\n\n    }\n\n    function abi_encode_t_stringliteral_59f034818b0329044bc3dd8d1236d7e23aa7fbe805dec217b13e45ed2e126a55_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_59f034818b0329044bc3dd8d1236d7e23aa7fbe805dec217b13e45ed2e126a55(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_59f034818b0329044bc3dd8d1236d7e23aa7fbe805dec217b13e45ed2e126a55__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_59f034818b0329044bc3dd8d1236d7e23aa7fbe805dec217b13e45ed2e126a55_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5821c66d801abd0f067bed9f888f52bbd0ec900df9f86f6117638508d1a7ebba(memPtr) {\n\n        mstore(add(memPtr, 0), \"No vault exists for user\")\n\n    }\n\n    function abi_encode_t_stringliteral_5821c66d801abd0f067bed9f888f52bbd0ec900df9f86f6117638508d1a7ebba_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_5821c66d801abd0f067bed9f888f52bbd0ec900df9f86f6117638508d1a7ebba(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5821c66d801abd0f067bed9f888f52bbd0ec900df9f86f6117638508d1a7ebba__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5821c66d801abd0f067bed9f888f52bbd0ec900df9f86f6117638508d1a7ebba_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_0e36ef5e15ed9013dd7607096cd93e0b2ef988dfde5f216aa728191847127f83(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient collateral to mint \")\n\n        mstore(add(memPtr, 32), \"that amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_0e36ef5e15ed9013dd7607096cd93e0b2ef988dfde5f216aa728191847127f83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_0e36ef5e15ed9013dd7607096cd93e0b2ef988dfde5f216aa728191847127f83(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0e36ef5e15ed9013dd7607096cd93e0b2ef988dfde5f216aa728191847127f83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0e36ef5e15ed9013dd7607096cd93e0b2ef988dfde5f216aa728191847127f83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1601": [
									{
										"length": 32,
										"start": 3145
									},
									{
										"length": 32,
										"start": 3273
									},
									{
										"length": 32,
										"start": 5605
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xBAD4A01F GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xBAD4A01F EQ PUSH2 0x3B1 JUMPI DUP1 PUSH4 0xBFA244FE EQ PUSH2 0x3CD JUMPI DUP1 PUSH4 0xDCAF9C44 EQ PUSH2 0x3E9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0xE1D5E571 EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x467 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0xA1BF2840 EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0xA622EE7C EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0xB2016BD4 EQ PUSH2 0x393 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x4798EB21 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x6112FE2E EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2BD JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x607EC70 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0x11005B07 EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1E9 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x1CE1 JUMP JUMPDEST PUSH2 0x483 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x173 PUSH2 0x4DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x180 SWAP2 SWAP1 PUSH2 0x1D7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x1DF6 JUMP JUMPDEST PUSH2 0x56A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0x1E4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0x1E67 JUMP JUMPDEST PUSH2 0x58C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0x1EA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F1 PUSH2 0x5A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x1EA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x221 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x1EBA JUMP JUMPDEST PUSH2 0x5AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22E SWAP2 SWAP1 PUSH2 0x1E4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH2 0x5D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x1F25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x1CE1 JUMP JUMPDEST PUSH2 0x5E0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x1CE1 JUMP JUMPDEST PUSH2 0x760 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x1E67 JUMP JUMPDEST PUSH2 0xAD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x1EA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C5 PUSH2 0xB15 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CF PUSH2 0xB28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x1F4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2ED PUSH2 0xB50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x1D7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x1E67 JUMP JUMPDEST PUSH2 0xBE0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x1EA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x1E67 JUMP JUMPDEST PUSH2 0xBF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x1FC1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x378 SWAP2 SWAP1 PUSH2 0x1DF6 JUMP JUMPDEST PUSH2 0xC25 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38A SWAP2 SWAP1 PUSH2 0x1E4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39B PUSH2 0xC47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A8 SWAP2 SWAP1 PUSH2 0x1FFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0x1CE1 JUMP JUMPDEST PUSH2 0xC6B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E2 SWAP2 SWAP1 PUSH2 0x1CE1 JUMP JUMPDEST PUSH2 0xDBB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F1 PUSH2 0xF7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FE SWAP2 SWAP1 PUSH2 0x1EA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x421 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41C SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST PUSH2 0xF84 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42E SWAP2 SWAP1 PUSH2 0x1EA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x451 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44C SWAP2 SWAP1 PUSH2 0x1E67 JUMP JUMPDEST PUSH2 0x1006 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45E SWAP2 SWAP1 PUSH2 0x1EA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x481 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47C SWAP2 SWAP1 PUSH2 0x1E67 JUMP JUMPDEST PUSH2 0x10D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x48B PUSH2 0x115B JUMP JUMPDEST PUSH2 0x2710 DUP2 LT ISZERO PUSH2 0x4D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C7 SWAP1 PUSH2 0x20C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xA DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4E9 SWAP1 PUSH2 0x210C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x515 SWAP1 PUSH2 0x210C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x560 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x537 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x560 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x543 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x574 PUSH2 0x11E2 JUMP JUMPDEST SWAP1 POP PUSH2 0x581 DUP2 DUP6 DUP6 PUSH2 0x11E9 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x5B4 PUSH2 0x11E2 JUMP JUMPDEST SWAP1 POP PUSH2 0x5C1 DUP6 DUP3 DUP6 PUSH2 0x11FB JUMP JUMPDEST PUSH2 0x5CC DUP6 DUP6 DUP6 PUSH2 0x128E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5E8 PUSH2 0x137E JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x62A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x621 SWAP1 PUSH2 0x2186 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x6AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A1 SWAP1 PUSH2 0x21EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x6F6 SWAP2 SWAP1 PUSH2 0x2239 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x707 CALLER DUP3 PUSH2 0x13CD JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE46E4414FB02A244A8932C7EC11C904DDF0313B8403A267C5E583CB565B473AF DUP3 PUSH1 0x40 MLOAD PUSH2 0x74D SWAP2 SWAP1 PUSH2 0x1EA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x75D PUSH2 0x144C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x768 PUSH2 0x137E JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x7AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A1 SWAP1 PUSH2 0x2186 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x82A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x821 SWAP1 PUSH2 0x22B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x874 SWAP2 SWAP1 PUSH2 0x2239 JUMP JUMPDEST SWAP1 POP PUSH2 0x8BE CALLER DUP3 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x1456 JUMP JUMPDEST PUSH2 0x8FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F4 SWAP1 PUSH2 0x2344 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA04 SWAP1 PUSH2 0x23AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF3FEF3A3 CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA48 SWAP3 SWAP2 SWAP1 PUSH2 0x23CA JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA5F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA71 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC30FCFBCAAC9E0DEFFA719714EAA82396FF506A0D0D0EEBE170830177288715D DUP5 PUSH1 0x40 MLOAD PUSH2 0xABB SWAP2 SWAP1 PUSH2 0x1EA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0xACD PUSH2 0x144C JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB1D PUSH2 0x115B JUMP JUMPDEST PUSH2 0xB26 PUSH0 PUSH2 0x148F JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xB5F SWAP1 PUSH2 0x210C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB8B SWAP1 PUSH2 0x210C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBD6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBAD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBD6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBB9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xC2F PUSH2 0x11E2 JUMP JUMPDEST SWAP1 POP PUSH2 0xC3C DUP2 DUP6 DUP6 PUSH2 0x128E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0xC73 PUSH2 0x137E JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xCB5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCAC SWAP1 PUSH2 0x2186 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xCBF CALLER PUSH2 0x1552 JUMP JUMPDEST SWAP1 POP PUSH2 0xD0E CALLER DUP3 DUP5 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1719 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD5A SWAP2 SWAP1 PUSH2 0x23F1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD7243F6F8212D5188FD054141CF6EA89CFC0D91FACB8C3AFE2F88A1358480142 DUP4 PUSH1 0x40 MLOAD PUSH2 0xDA7 SWAP2 SWAP1 PUSH2 0x1EA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0xDB8 PUSH2 0x144C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xDC3 PUSH2 0x137E JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xE05 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDFC SWAP1 PUSH2 0x2186 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xE4F SWAP2 SWAP1 PUSH2 0x23F1 JUMP JUMPDEST SWAP1 POP PUSH2 0xE99 CALLER PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP4 PUSH2 0x1456 JUMP JUMPDEST PUSH2 0xED8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xECF SWAP1 PUSH2 0x2494 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xF24 CALLER DUP4 PUSH2 0x179B JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3F1AE0A6113FF787F6445396E9EC4E9D0F6E1A0F05A9A856206F72F9623A2E9F DUP4 PUSH1 0x40 MLOAD PUSH2 0xF6A SWAP2 SWAP1 PUSH2 0x1EA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0xF7B PUSH2 0x144C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x8 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x1078 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 POP POP PUSH2 0x10D2 JUMP JUMPDEST DUP1 PUSH2 0x2710 PUSH1 0x7 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x10C4 SWAP2 SWAP1 PUSH2 0x24B2 JUMP JUMPDEST PUSH2 0x10CE SWAP2 SWAP1 PUSH2 0x2520 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10DF PUSH2 0x115B JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x114F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1146 SWAP2 SWAP1 PUSH2 0x1F4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1158 DUP2 PUSH2 0x148F JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1163 PUSH2 0x11E2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1181 PUSH2 0xB28 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11E0 JUMPI PUSH2 0x11A4 PUSH2 0x11E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D7 SWAP2 SWAP1 PUSH2 0x1F4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x11F6 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x181A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1206 DUP5 DUP5 PUSH2 0xF84 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x1288 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1279 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1270 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2550 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1287 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x181A JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12FE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12F5 SWAP2 SWAP1 PUSH2 0x1F4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x136E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1365 SWAP2 SWAP1 PUSH2 0x1F4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1379 DUP4 DUP4 DUP4 PUSH2 0x19E9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x13C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13BA SWAP1 PUSH2 0x25CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x143D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1434 SWAP2 SWAP1 PUSH2 0x1F4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1448 DUP3 PUSH0 DUP4 PUSH2 0x19E9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SUB PUSH2 0x1467 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1488 JUMP JUMPDEST PUSH1 0xA SLOAD DUP3 PUSH2 0x1475 SWAP2 SWAP1 PUSH2 0x24B2 JUMP JUMPDEST PUSH2 0x2710 DUP5 PUSH2 0x1483 SWAP2 SWAP1 PUSH2 0x24B2 JUMP JUMPDEST LT ISZERO SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x9 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16B5 JUMPI PUSH0 PUSH32 0x0 ADDRESS PUSH1 0x40 MLOAD PUSH2 0x1611 SWAP1 PUSH2 0x1C9D JUMP JUMPDEST PUSH2 0x161C SWAP3 SWAP2 SWAP1 PUSH2 0x25ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x1635 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP SWAP1 POP DUP1 PUSH1 0x9 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x9 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1795 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x174E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2614 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1C02 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x180B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1802 SWAP2 SWAP1 PUSH2 0x1F4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1816 PUSH0 DUP4 DUP4 PUSH2 0x19E9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x188A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1881 SWAP2 SWAP1 PUSH2 0x1F4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18FA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18F1 SWAP2 SWAP1 PUSH2 0x1F4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x19E3 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x19DA SWAP2 SWAP1 PUSH2 0x1EA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A39 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1A2D SWAP2 SWAP1 PUSH2 0x23F1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1B07 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1AC2 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AB9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2550 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B4E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1B98 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1BF5 SWAP2 SWAP1 PUSH2 0x1EA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1C21 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x1C3A JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1C55 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1C97 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C8E SWAP2 SWAP1 PUSH2 0x1F4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xB18 DUP1 PUSH2 0x264A DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CC0 DUP2 PUSH2 0x1CAE JUMP JUMPDEST DUP2 EQ PUSH2 0x1CCA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CDB DUP2 PUSH2 0x1CB7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CF6 JUMPI PUSH2 0x1CF5 PUSH2 0x1CAA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D03 DUP5 DUP3 DUP6 ADD PUSH2 0x1CCD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D4E DUP3 PUSH2 0x1D0C JUMP JUMPDEST PUSH2 0x1D58 DUP2 DUP6 PUSH2 0x1D16 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D68 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D26 JUMP JUMPDEST PUSH2 0x1D71 DUP2 PUSH2 0x1D34 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D94 DUP2 DUP5 PUSH2 0x1D44 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DC5 DUP3 PUSH2 0x1D9C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DD5 DUP2 PUSH2 0x1DBB JUMP JUMPDEST DUP2 EQ PUSH2 0x1DDF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DF0 DUP2 PUSH2 0x1DCC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E0C JUMPI PUSH2 0x1E0B PUSH2 0x1CAA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E19 DUP6 DUP3 DUP7 ADD PUSH2 0x1DE2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E2A DUP6 DUP3 DUP7 ADD PUSH2 0x1CCD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E48 DUP2 PUSH2 0x1E34 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E61 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E3F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E7C JUMPI PUSH2 0x1E7B PUSH2 0x1CAA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E89 DUP5 DUP3 DUP6 ADD PUSH2 0x1DE2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E9B DUP2 PUSH2 0x1CAE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EB4 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E92 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1ED1 JUMPI PUSH2 0x1ED0 PUSH2 0x1CAA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EDE DUP7 DUP3 DUP8 ADD PUSH2 0x1DE2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1EEF DUP7 DUP3 DUP8 ADD PUSH2 0x1DE2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F00 DUP7 DUP3 DUP8 ADD PUSH2 0x1CCD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F1F DUP2 PUSH2 0x1F0A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F38 PUSH0 DUP4 ADD DUP5 PUSH2 0x1F16 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F47 DUP2 PUSH2 0x1DBB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F60 PUSH0 DUP4 ADD DUP5 PUSH2 0x1F3E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F89 PUSH2 0x1F84 PUSH2 0x1F7F DUP5 PUSH2 0x1D9C JUMP JUMPDEST PUSH2 0x1F66 JUMP JUMPDEST PUSH2 0x1D9C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1F9A DUP3 PUSH2 0x1F6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FAB DUP3 PUSH2 0x1F90 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FBB DUP2 PUSH2 0x1FA1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FD4 PUSH0 DUP4 ADD DUP5 PUSH2 0x1FB2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FE4 DUP3 PUSH2 0x1F90 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FF4 DUP2 PUSH2 0x1FDA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x200D PUSH0 DUP4 ADD DUP5 PUSH2 0x1FEB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2029 JUMPI PUSH2 0x2028 PUSH2 0x1CAA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2036 DUP6 DUP3 DUP7 ADD PUSH2 0x1DE2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2047 DUP6 DUP3 DUP7 ADD PUSH2 0x1DE2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6C6C61746572616C697A6174696F6E20726174696F206D75737420626520 PUSH0 DUP3 ADD MSTORE PUSH32 0x6174206C65617374203130302500000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20AB PUSH1 0x2D DUP4 PUSH2 0x1D16 JUMP JUMPDEST SWAP2 POP PUSH2 0x20B6 DUP3 PUSH2 0x2051 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20D8 DUP2 PUSH2 0x209F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2123 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2136 JUMPI PUSH2 0x2135 PUSH2 0x20DF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D757374206265203E20300000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2170 PUSH1 0x12 DUP4 PUSH2 0x1D16 JUMP JUMPDEST SWAP2 POP PUSH2 0x217B DUP3 PUSH2 0x213C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x219D DUP2 PUSH2 0x2164 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E742065786365656473206465627400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21D8 PUSH1 0x13 DUP4 PUSH2 0x1D16 JUMP JUMPDEST SWAP2 POP PUSH2 0x21E3 DUP3 PUSH2 0x21A4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2205 DUP2 PUSH2 0x21CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2243 DUP3 PUSH2 0x1CAE JUMP JUMPDEST SWAP2 POP PUSH2 0x224E DUP4 PUSH2 0x1CAE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2266 JUMPI PUSH2 0x2265 PUSH2 0x220C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420636F6C6C61746572616C2062616C616E636500 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x22A0 PUSH1 0x1F DUP4 PUSH2 0x1D16 JUMP JUMPDEST SWAP2 POP PUSH2 0x22AB DUP3 PUSH2 0x226C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22CD DUP2 PUSH2 0x2294 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5769746864726177616C20776F756C642062726561636820636F6C6C61746572 PUSH0 DUP3 ADD MSTORE PUSH32 0x616C697A6174696F6E20726174696F0000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x232E PUSH1 0x2F DUP4 PUSH2 0x1D16 JUMP JUMPDEST SWAP2 POP PUSH2 0x2339 DUP3 PUSH2 0x22D4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x235B DUP2 PUSH2 0x2322 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F207661756C742065786973747320666F7220757365720000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2396 PUSH1 0x18 DUP4 PUSH2 0x1D16 JUMP JUMPDEST SWAP2 POP PUSH2 0x23A1 DUP3 PUSH2 0x2362 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23C3 DUP2 PUSH2 0x238A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x23DD PUSH0 DUP4 ADD DUP6 PUSH2 0x1F3E JUMP JUMPDEST PUSH2 0x23EA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E92 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x23FB DUP3 PUSH2 0x1CAE JUMP JUMPDEST SWAP2 POP PUSH2 0x2406 DUP4 PUSH2 0x1CAE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x241E JUMPI PUSH2 0x241D PUSH2 0x220C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420636F6C6C61746572616C20746F206D696E7420 PUSH0 DUP3 ADD MSTORE PUSH32 0x7468617420616D6F756E74000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x247E PUSH1 0x2B DUP4 PUSH2 0x1D16 JUMP JUMPDEST SWAP2 POP PUSH2 0x2489 DUP3 PUSH2 0x2424 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24AB DUP2 PUSH2 0x2472 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x24BC DUP3 PUSH2 0x1CAE JUMP JUMPDEST SWAP2 POP PUSH2 0x24C7 DUP4 PUSH2 0x1CAE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x24D5 DUP2 PUSH2 0x1CAE JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x24EC JUMPI PUSH2 0x24EB PUSH2 0x220C JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x252A DUP3 PUSH2 0x1CAE JUMP JUMPDEST SWAP2 POP PUSH2 0x2535 DUP4 PUSH2 0x1CAE JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2545 JUMPI PUSH2 0x2544 PUSH2 0x24F3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2563 PUSH0 DUP4 ADD DUP7 PUSH2 0x1F3E JUMP JUMPDEST PUSH2 0x2570 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1E92 JUMP JUMPDEST PUSH2 0x257D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1E92 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25B9 PUSH1 0x1F DUP4 PUSH2 0x1D16 JUMP JUMPDEST SWAP2 POP PUSH2 0x25C4 DUP3 PUSH2 0x2585 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x25E6 DUP2 PUSH2 0x25AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2600 PUSH0 DUP4 ADD DUP6 PUSH2 0x1F3E JUMP JUMPDEST PUSH2 0x260D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F3E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2627 PUSH0 DUP4 ADD DUP7 PUSH2 0x1F3E JUMP JUMPDEST PUSH2 0x2634 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1F3E JUMP JUMPDEST PUSH2 0x2641 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1E92 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xB18 CODESIZE SUB DUP1 PUSH2 0xB18 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x27A JUMP JUMPDEST DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x2C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1 DUP2 PUSH2 0x15B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x120 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x117 SWAP1 PUSH2 0x33A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP PUSH2 0x358 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x249 DUP3 PUSH2 0x220 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x259 DUP2 PUSH2 0x23F JUMP JUMPDEST DUP2 EQ PUSH2 0x263 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x274 DUP2 PUSH2 0x250 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x290 JUMPI PUSH2 0x28F PUSH2 0x21C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x29D DUP6 DUP3 DUP7 ADD PUSH2 0x266 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2AE DUP6 DUP3 DUP7 ADD PUSH2 0x266 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C1 DUP2 PUSH2 0x23F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2DA PUSH0 DUP4 ADD DUP5 PUSH2 0x2B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E20616464726573730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x324 PUSH1 0x15 DUP4 PUSH2 0x2E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x32F DUP3 PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x351 DUP2 PUSH2 0x318 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x79A PUSH2 0x37E PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x13C ADD MSTORE DUP2 DUP2 PUSH2 0x161 ADD MSTORE PUSH2 0x28F ADD MSTORE PUSH2 0x79A PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0xB2016BD4 EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0xB69EF8A8 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0xE4 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x6C PUSH2 0x100 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x76 PUSH2 0x113 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x94 PUSH2 0x13A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x5F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB2 PUSH2 0x15E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x624 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x66B JUMP JUMPDEST PUSH2 0x1FC JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0x6C0 JUMP JUMPDEST PUSH2 0x280 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x108 PUSH2 0x2D7 JUMP JUMPDEST PUSH2 0x111 PUSH0 PUSH2 0x35E JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x57F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D3 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x712 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x2D7 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x274 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x27D DUP2 PUSH2 0x35E JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x288 PUSH2 0x2D7 JUMP JUMPDEST PUSH2 0x2D3 DUP3 DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x41F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x49E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2FD PUSH2 0x113 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x35C JUMPI PUSH2 0x320 PUSH2 0x49E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x499 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x452 SWAP3 SWAP2 SWAP1 PUSH2 0x73D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x4A5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x4C4 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x4DD JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x4F8 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x53A JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x531 SWAP2 SWAP1 PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x569 DUP3 PUSH2 0x540 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x579 DUP2 PUSH2 0x55F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x592 PUSH0 DUP4 ADD DUP5 PUSH2 0x570 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5BB PUSH2 0x5B6 PUSH2 0x5B1 DUP5 PUSH2 0x540 JUMP JUMPDEST PUSH2 0x598 JUMP JUMPDEST PUSH2 0x540 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5CC DUP3 PUSH2 0x5A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5DD DUP3 PUSH2 0x5C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5ED DUP2 PUSH2 0x5D3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x606 PUSH0 DUP4 ADD DUP5 PUSH2 0x5E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x61E DUP2 PUSH2 0x60C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x637 PUSH0 DUP4 ADD DUP5 PUSH2 0x615 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x64A DUP2 PUSH2 0x55F JUMP JUMPDEST DUP2 EQ PUSH2 0x654 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x665 DUP2 PUSH2 0x641 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x680 JUMPI PUSH2 0x67F PUSH2 0x63D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x68D DUP5 DUP3 DUP6 ADD PUSH2 0x657 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x69F DUP2 PUSH2 0x60C JUMP JUMPDEST DUP2 EQ PUSH2 0x6A9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6BA DUP2 PUSH2 0x696 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6D6 JUMPI PUSH2 0x6D5 PUSH2 0x63D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6E3 DUP6 DUP3 DUP7 ADD PUSH2 0x657 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x6F4 DUP6 DUP3 DUP7 ADD PUSH2 0x6AC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x70C DUP2 PUSH2 0x696 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x727 JUMPI PUSH2 0x726 PUSH2 0x63D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x734 DUP5 DUP3 DUP6 ADD PUSH2 0x6FE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x750 PUSH0 DUP4 ADD DUP6 PUSH2 0x570 JUMP JUMPDEST PUSH2 0x75D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x615 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 NOT DUP8 MSTORE8 0xC4 0xD4 PUSH31 0xAA95C0862639943FDA4CE251FCBE9FFE29421DA0C40B3FD0C264736F6C6343 STOP ADDMOD SAR STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0xCD469E468E4F8A82FF466F7E348B5A291029F5C651F271 0xD4 0xD 0xB3 DUP11 0xD DUP13 0x29 EXTDELEGATECALL PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "1857:5962:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7607:210;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1779:89:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2292:46:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6325:333:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4928:722;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3004:116:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2169:52:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2402:39;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2027:39:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4358:415;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5807:459;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2602:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7262:264:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7607:210:12;1531:13:0;:11;:13::i;:::-;7712:5:12::1;7700:8;:17;;7692:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;7802:8;7777:22;:33;;;;7607:210:::0;:::o;1779:89:6:-;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2292:46:12:-;;;;;;;;;;;;;;;;;:::o;2849:97:6:-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;2707:82::-;2756:5;2780:2;2773:9;;2707:82;:::o;6325:333:12:-;2261:21:5;:19;:21::i;:::-;6414:1:12::1;6405:6;:10;6397:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;6483:6;6456:11;:23;6468:10;6456:23;;;;;;;;;;;;;;;;:33;;6448:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;6559:6;6532:11;:23;6544:10;6532:23;;;;;;;;;;;;;;;;:33;;;;;;;:::i;:::-;;;;;;;;6575:25;6581:10;6593:6;6575:5;:25::i;:::-;6632:10;6615:36;;;6644:6;6615:36;;;;;;:::i;:::-;;;;;;;;2303:20:5::0;:18;:20::i;:::-;6325:333:12;:::o;4928:722::-;2261:21:5;:19;:21::i;:::-;5021:1:12::1;5012:6;:10;5004:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;5096:6;5063:17;:29;5081:10;5063:29;;;;;;;;;;;;;;;;:39;;5055:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;5157:21;5213:6;5181:17;:29;5199:10;5181:29;;;;;;;;;;;;;;;;:38;;;;:::i;:::-;5157:62;;5237:75;5261:10;5273:13;5288:11;:23;5300:10;5288:23;;;;;;;;;;;;;;;;5237;:75::i;:::-;5229:135;;;;;;;;;;;;:::i;:::-;;;;;;;;;5415:13;5383:17;:29;5401:10;5383:29;;;;;;;;;;;;;;;:45;;;;5438:11;5452:6;:18;5459:10;5452:18;;;;;;;;;;;;;;;;;;;;;;;;;5438:32;;5514:1;5488:28;;5496:5;5488:28;;::::0;5480:65:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;5555:5;:14;;;5570:10;5582:6;5555:34;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5624:10;5604:39;;;5636:6;5604:39;;;;;;:::i;:::-;;;;;;;;4994:656;;2303:20:5::0;:18;:20::i;:::-;4928:722:12;:::o;3004:116:6:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1981:93:6:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;2169:52:12:-;;;;;;;;;;;;;;;;;:::o;2402:39::-;;;;;;;;;;;;;;;;;;;;;;:::o;3315:178:6:-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;2027:39:12:-;;;:::o;4358:415::-;2261:21:5;:19;:21::i;:::-;4450:1:12::1;4441:6;:10;4433:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;4484:11;4498:21;4508:10;4498:9;:21::i;:::-;4484:35;;4595:68;4628:10;4648:5;4656:6;4595:15;:32;;;;:68;;;;;;:::i;:::-;4706:6;4673:17;:29;4691:10;4673:29;;;;;;;;;;;;;;;;:39;;;;;;;:::i;:::-;;;;;;;;4747:10;4727:39;;;4759:6;4727:39;;;;;;:::i;:::-;;;;;;;;4423:350;2303:20:5::0;:18;:20::i;:::-;4358:415:12;:::o;5807:459::-;2261:21:5;:19;:21::i;:::-;5896:1:12::1;5887:6;:10;5879:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;5930:15;5974:6;5948:11;:23;5960:10;5948:23;;;;;;;;;;;;;;;;:32;;;;:::i;:::-;5930:50;;5998:75;6022:10;6034:17;:29;6052:10;6034:29;;;;;;;;;;;;;;;;6065:7;5998:23;:75::i;:::-;5990:131;;;;;;;;;;;;:::i;:::-;;;;;;;;;6166:7;6140:11;:23;6152:10;6140:23;;;;;;;;;;;;;;;:33;;;;6183:25;6189:10;6201:6;6183:5;:25::i;:::-;6240:10;6223:36;;;6252:6;6223:36;;;;;;:::i;:::-;;;;;;;;5869:397;2303:20:5::0;:18;:20::i;:::-;5807:459:12;:::o;2602:37::-;;;;:::o;3551:140:6:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;7262:264:12:-;7338:7;7357:12;7372:11;:17;7384:4;7372:17;;;;;;;;;;;;;;;;7357:32;;7411:1;7403:4;:9;7399:64;;7435:17;7428:24;;;;;7399:64;7515:4;7506:5;7480:17;:23;7498:4;7480:23;;;;;;;;;;;;;;;;:31;;;;:::i;:::-;7479:40;;;;:::i;:::-;7472:47;;;7262:264;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;656:96:10:-;709:7;735:10;728:17;;656:96;:::o;8726:128:6:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:476::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10599:17;10580:16;:36;10576:309;;;10655:5;10636:16;:24;10632:130;;;10714:7;10723:16;10741:5;10687:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10632:130;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10576:309;10504:387;10415:476;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;2336:287:5:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;7984:206:6:-;8073:1;8054:21;;:7;:21;;;8050:89;;8125:1;8098:30;;;;;;;;;;;:::i;:::-;;;;;;;;8050:89;8148:35;8156:7;8173:1;8177:5;8148:7;:35::i;:::-;7984:206;;:::o;2629:209:5:-;1716:1;2809:7;:22;;;;2629:209::o;6836:264:12:-;6946:4;6977:1;6966:7;:12;6962:54;;7001:4;6994:11;;;;6962:54;7070:22;;7060:7;:32;;;;:::i;:::-;7049:5;7033:13;:21;;;;:::i;:::-;7032:61;;7025:68;;6836:264;;;;;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;3935:273:12:-;3986:5;4040:1;4007:35;;4015:6;:12;4022:4;4015:12;;;;;;;;;;;;;;;;;;;;;;;;;4007:35;;;4003:170;;4058:14;4093:15;4119:4;4075:50;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;4058:67;;4154:8;4139:6;:12;4146:4;4139:12;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;4044:129;4003:170;4189:6;:12;4196:4;4189:12;;;;;;;;;;;;;;;;;;;;;;;;;4182:19;;3935:273;;;:::o;1618:188:9:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;7458:208:6:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;9701:432::-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7686:720:9:-;7766:18;7794:19;7932:4;7929:1;7922:4;7916:11;7909:4;7903;7899:15;7896:1;7889:5;7882;7877:60;7989:7;7979:176;;8033:4;8027:11;8078:16;8075:1;8070:3;8055:40;8124:16;8119:3;8112:29;7979:176;8182:16;8168:30;;8232:1;8226:8;8211:23;;7848:396;8272:1;8258:10;:15;:68;;8325:1;8310:11;:16;;8258:68;;;8306:1;8284:5;8276:26;;;:31;8258:68;8254:146;;;8382:5;8349:40;;;;;;;;;;;:::i;:::-;;;;;;;;8254:146;7756:650;;7686:720;;:::o;-1:-1:-1:-;;;;;;;;:::o;88:117:13:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:99::-;1077:6;1111:5;1105:12;1095:22;;1025:99;;;:::o;1130:169::-;1214:11;1248:6;1243:3;1236:19;1288:4;1283:3;1279:14;1264:29;;1130:169;;;;:::o;1305:139::-;1394:6;1389:3;1384;1378:23;1435:1;1426:6;1421:3;1417:16;1410:27;1305:139;;;:::o;1450:102::-;1491:6;1542:2;1538:7;1533:2;1526:5;1522:14;1518:28;1508:38;;1450:102;;;:::o;1558:377::-;1646:3;1674:39;1707:5;1674:39;:::i;:::-;1729:71;1793:6;1788:3;1729:71;:::i;:::-;1722:78;;1809:65;1867:6;1862:3;1855:4;1848:5;1844:16;1809:65;:::i;:::-;1899:29;1921:6;1899:29;:::i;:::-;1894:3;1890:39;1883:46;;1650:285;1558:377;;;;:::o;1941:313::-;2054:4;2092:2;2081:9;2077:18;2069:26;;2141:9;2135:4;2131:20;2127:1;2116:9;2112:17;2105:47;2169:78;2242:4;2233:6;2169:78;:::i;:::-;2161:86;;1941:313;;;;:::o;2260:126::-;2297:7;2337:42;2330:5;2326:54;2315:65;;2260:126;;;:::o;2392:96::-;2429:7;2458:24;2476:5;2458:24;:::i;:::-;2447:35;;2392:96;;;:::o;2494:122::-;2567:24;2585:5;2567:24;:::i;:::-;2560:5;2557:35;2547:63;;2606:1;2603;2596:12;2547:63;2494:122;:::o;2622:139::-;2668:5;2706:6;2693:20;2684:29;;2722:33;2749:5;2722:33;:::i;:::-;2622:139;;;;:::o;2767:474::-;2835:6;2843;2892:2;2880:9;2871:7;2867:23;2863:32;2860:119;;;2898:79;;:::i;:::-;2860:119;3018:1;3043:53;3088:7;3079:6;3068:9;3064:22;3043:53;:::i;:::-;3033:63;;2989:117;3145:2;3171:53;3216:7;3207:6;3196:9;3192:22;3171:53;:::i;:::-;3161:63;;3116:118;2767:474;;;;;:::o;3247:90::-;3281:7;3324:5;3317:13;3310:21;3299:32;;3247:90;;;:::o;3343:109::-;3424:21;3439:5;3424:21;:::i;:::-;3419:3;3412:34;3343:109;;:::o;3458:210::-;3545:4;3583:2;3572:9;3568:18;3560:26;;3596:65;3658:1;3647:9;3643:17;3634:6;3596:65;:::i;:::-;3458:210;;;;:::o;3674:329::-;3733:6;3782:2;3770:9;3761:7;3757:23;3753:32;3750:119;;;3788:79;;:::i;:::-;3750:119;3908:1;3933:53;3978:7;3969:6;3958:9;3954:22;3933:53;:::i;:::-;3923:63;;3879:117;3674:329;;;;:::o;4009:118::-;4096:24;4114:5;4096:24;:::i;:::-;4091:3;4084:37;4009:118;;:::o;4133:222::-;4226:4;4264:2;4253:9;4249:18;4241:26;;4277:71;4345:1;4334:9;4330:17;4321:6;4277:71;:::i;:::-;4133:222;;;;:::o;4361:619::-;4438:6;4446;4454;4503:2;4491:9;4482:7;4478:23;4474:32;4471:119;;;4509:79;;:::i;:::-;4471:119;4629:1;4654:53;4699:7;4690:6;4679:9;4675:22;4654:53;:::i;:::-;4644:63;;4600:117;4756:2;4782:53;4827:7;4818:6;4807:9;4803:22;4782:53;:::i;:::-;4772:63;;4727:118;4884:2;4910:53;4955:7;4946:6;4935:9;4931:22;4910:53;:::i;:::-;4900:63;;4855:118;4361:619;;;;;:::o;4986:86::-;5021:7;5061:4;5054:5;5050:16;5039:27;;4986:86;;;:::o;5078:112::-;5161:22;5177:5;5161:22;:::i;:::-;5156:3;5149:35;5078:112;;:::o;5196:214::-;5285:4;5323:2;5312:9;5308:18;5300:26;;5336:67;5400:1;5389:9;5385:17;5376:6;5336:67;:::i;:::-;5196:214;;;;:::o;5416:118::-;5503:24;5521:5;5503:24;:::i;:::-;5498:3;5491:37;5416:118;;:::o;5540:222::-;5633:4;5671:2;5660:9;5656:18;5648:26;;5684:71;5752:1;5741:9;5737:17;5728:6;5684:71;:::i;:::-;5540:222;;;;:::o;5768:60::-;5796:3;5817:5;5810:12;;5768:60;;;:::o;5834:142::-;5884:9;5917:53;5935:34;5944:24;5962:5;5944:24;:::i;:::-;5935:34;:::i;:::-;5917:53;:::i;:::-;5904:66;;5834:142;;;:::o;5982:126::-;6032:9;6065:37;6096:5;6065:37;:::i;:::-;6052:50;;5982:126;;;:::o;6114:140::-;6178:9;6211:37;6242:5;6211:37;:::i;:::-;6198:50;;6114:140;;;:::o;6260:159::-;6361:51;6406:5;6361:51;:::i;:::-;6356:3;6349:64;6260:159;;:::o;6425:250::-;6532:4;6570:2;6559:9;6555:18;6547:26;;6583:85;6665:1;6654:9;6650:17;6641:6;6583:85;:::i;:::-;6425:250;;;;:::o;6681:141::-;6746:9;6779:37;6810:5;6779:37;:::i;:::-;6766:50;;6681:141;;;:::o;6828:161::-;6930:52;6976:5;6930:52;:::i;:::-;6925:3;6918:65;6828:161;;:::o;6995:252::-;7103:4;7141:2;7130:9;7126:18;7118:26;;7154:86;7237:1;7226:9;7222:17;7213:6;7154:86;:::i;:::-;6995:252;;;;:::o;7253:474::-;7321:6;7329;7378:2;7366:9;7357:7;7353:23;7349:32;7346:119;;;7384:79;;:::i;:::-;7346:119;7504:1;7529:53;7574:7;7565:6;7554:9;7550:22;7529:53;:::i;:::-;7519:63;;7475:117;7631:2;7657:53;7702:7;7693:6;7682:9;7678:22;7657:53;:::i;:::-;7647:63;;7602:118;7253:474;;;;;:::o;7733:232::-;7873:34;7869:1;7861:6;7857:14;7850:58;7942:15;7937:2;7929:6;7925:15;7918:40;7733:232;:::o;7971:366::-;8113:3;8134:67;8198:2;8193:3;8134:67;:::i;:::-;8127:74;;8210:93;8299:3;8210:93;:::i;:::-;8328:2;8323:3;8319:12;8312:19;;7971:366;;;:::o;8343:419::-;8509:4;8547:2;8536:9;8532:18;8524:26;;8596:9;8590:4;8586:20;8582:1;8571:9;8567:17;8560:47;8624:131;8750:4;8624:131;:::i;:::-;8616:139;;8343:419;;;:::o;8768:180::-;8816:77;8813:1;8806:88;8913:4;8910:1;8903:15;8937:4;8934:1;8927:15;8954:320;8998:6;9035:1;9029:4;9025:12;9015:22;;9082:1;9076:4;9072:12;9103:18;9093:81;;9159:4;9151:6;9147:17;9137:27;;9093:81;9221:2;9213:6;9210:14;9190:18;9187:38;9184:84;;9240:18;;:::i;:::-;9184:84;9005:269;8954:320;;;:::o;9280:168::-;9420:20;9416:1;9408:6;9404:14;9397:44;9280:168;:::o;9454:366::-;9596:3;9617:67;9681:2;9676:3;9617:67;:::i;:::-;9610:74;;9693:93;9782:3;9693:93;:::i;:::-;9811:2;9806:3;9802:12;9795:19;;9454:366;;;:::o;9826:419::-;9992:4;10030:2;10019:9;10015:18;10007:26;;10079:9;10073:4;10069:20;10065:1;10054:9;10050:17;10043:47;10107:131;10233:4;10107:131;:::i;:::-;10099:139;;9826:419;;;:::o;10251:169::-;10391:21;10387:1;10379:6;10375:14;10368:45;10251:169;:::o;10426:366::-;10568:3;10589:67;10653:2;10648:3;10589:67;:::i;:::-;10582:74;;10665:93;10754:3;10665:93;:::i;:::-;10783:2;10778:3;10774:12;10767:19;;10426:366;;;:::o;10798:419::-;10964:4;11002:2;10991:9;10987:18;10979:26;;11051:9;11045:4;11041:20;11037:1;11026:9;11022:17;11015:47;11079:131;11205:4;11079:131;:::i;:::-;11071:139;;10798:419;;;:::o;11223:180::-;11271:77;11268:1;11261:88;11368:4;11365:1;11358:15;11392:4;11389:1;11382:15;11409:194;11449:4;11469:20;11487:1;11469:20;:::i;:::-;11464:25;;11503:20;11521:1;11503:20;:::i;:::-;11498:25;;11547:1;11544;11540:9;11532:17;;11571:1;11565:4;11562:11;11559:37;;;11576:18;;:::i;:::-;11559:37;11409:194;;;;:::o;11609:181::-;11749:33;11745:1;11737:6;11733:14;11726:57;11609:181;:::o;11796:366::-;11938:3;11959:67;12023:2;12018:3;11959:67;:::i;:::-;11952:74;;12035:93;12124:3;12035:93;:::i;:::-;12153:2;12148:3;12144:12;12137:19;;11796:366;;;:::o;12168:419::-;12334:4;12372:2;12361:9;12357:18;12349:26;;12421:9;12415:4;12411:20;12407:1;12396:9;12392:17;12385:47;12449:131;12575:4;12449:131;:::i;:::-;12441:139;;12168:419;;;:::o;12593:234::-;12733:34;12729:1;12721:6;12717:14;12710:58;12802:17;12797:2;12789:6;12785:15;12778:42;12593:234;:::o;12833:366::-;12975:3;12996:67;13060:2;13055:3;12996:67;:::i;:::-;12989:74;;13072:93;13161:3;13072:93;:::i;:::-;13190:2;13185:3;13181:12;13174:19;;12833:366;;;:::o;13205:419::-;13371:4;13409:2;13398:9;13394:18;13386:26;;13458:9;13452:4;13448:20;13444:1;13433:9;13429:17;13422:47;13486:131;13612:4;13486:131;:::i;:::-;13478:139;;13205:419;;;:::o;13630:174::-;13770:26;13766:1;13758:6;13754:14;13747:50;13630:174;:::o;13810:366::-;13952:3;13973:67;14037:2;14032:3;13973:67;:::i;:::-;13966:74;;14049:93;14138:3;14049:93;:::i;:::-;14167:2;14162:3;14158:12;14151:19;;13810:366;;;:::o;14182:419::-;14348:4;14386:2;14375:9;14371:18;14363:26;;14435:9;14429:4;14425:20;14421:1;14410:9;14406:17;14399:47;14463:131;14589:4;14463:131;:::i;:::-;14455:139;;14182:419;;;:::o;14607:332::-;14728:4;14766:2;14755:9;14751:18;14743:26;;14779:71;14847:1;14836:9;14832:17;14823:6;14779:71;:::i;:::-;14860:72;14928:2;14917:9;14913:18;14904:6;14860:72;:::i;:::-;14607:332;;;;;:::o;14945:191::-;14985:3;15004:20;15022:1;15004:20;:::i;:::-;14999:25;;15038:20;15056:1;15038:20;:::i;:::-;15033:25;;15081:1;15078;15074:9;15067:16;;15102:3;15099:1;15096:10;15093:36;;;15109:18;;:::i;:::-;15093:36;14945:191;;;;:::o;15142:230::-;15282:34;15278:1;15270:6;15266:14;15259:58;15351:13;15346:2;15338:6;15334:15;15327:38;15142:230;:::o;15378:366::-;15520:3;15541:67;15605:2;15600:3;15541:67;:::i;:::-;15534:74;;15617:93;15706:3;15617:93;:::i;:::-;15735:2;15730:3;15726:12;15719:19;;15378:366;;;:::o;15750:419::-;15916:4;15954:2;15943:9;15939:18;15931:26;;16003:9;15997:4;15993:20;15989:1;15978:9;15974:17;15967:47;16031:131;16157:4;16031:131;:::i;:::-;16023:139;;15750:419;;;:::o;16175:410::-;16215:7;16238:20;16256:1;16238:20;:::i;:::-;16233:25;;16272:20;16290:1;16272:20;:::i;:::-;16267:25;;16327:1;16324;16320:9;16349:30;16367:11;16349:30;:::i;:::-;16338:41;;16528:1;16519:7;16515:15;16512:1;16509:22;16489:1;16482:9;16462:83;16439:139;;16558:18;;:::i;:::-;16439:139;16223:362;16175:410;;;;:::o;16591:180::-;16639:77;16636:1;16629:88;16736:4;16733:1;16726:15;16760:4;16757:1;16750:15;16777:185;16817:1;16834:20;16852:1;16834:20;:::i;:::-;16829:25;;16868:20;16886:1;16868:20;:::i;:::-;16863:25;;16907:1;16897:35;;16912:18;;:::i;:::-;16897:35;16954:1;16951;16947:9;16942:14;;16777:185;;;;:::o;16968:442::-;17117:4;17155:2;17144:9;17140:18;17132:26;;17168:71;17236:1;17225:9;17221:17;17212:6;17168:71;:::i;:::-;17249:72;17317:2;17306:9;17302:18;17293:6;17249:72;:::i;:::-;17331;17399:2;17388:9;17384:18;17375:6;17331:72;:::i;:::-;16968:442;;;;;;:::o;17416:181::-;17556:33;17552:1;17544:6;17540:14;17533:57;17416:181;:::o;17603:366::-;17745:3;17766:67;17830:2;17825:3;17766:67;:::i;:::-;17759:74;;17842:93;17931:3;17842:93;:::i;:::-;17960:2;17955:3;17951:12;17944:19;;17603:366;;;:::o;17975:419::-;18141:4;18179:2;18168:9;18164:18;18156:26;;18228:9;18222:4;18218:20;18214:1;18203:9;18199:17;18192:47;18256:131;18382:4;18256:131;:::i;:::-;18248:139;;17975:419;;;:::o;18400:332::-;18521:4;18559:2;18548:9;18544:18;18536:26;;18572:71;18640:1;18629:9;18625:17;18616:6;18572:71;:::i;:::-;18653:72;18721:2;18710:9;18706:18;18697:6;18653:72;:::i;:::-;18400:332;;;;;:::o;18738:442::-;18887:4;18925:2;18914:9;18910:18;18902:26;;18938:71;19006:1;18995:9;18991:17;18982:6;18938:71;:::i;:::-;19019:72;19087:2;19076:9;19072:18;19063:6;19019:72;:::i;:::-;19101;19169:2;19158:9;19154:18;19145:6;19101:72;:::i;:::-;18738:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2539000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2939",
								"burnStableCoin(uint256)": "infinite",
								"collateralBalance(address)": "2869",
								"collateralToken()": "infinite",
								"collateralizationRatio()": "2491",
								"debtBalance(address)": "2892",
								"decimals()": "383",
								"depositCollateral(uint256)": "infinite",
								"getUserCollateralizationRatio(address)": "infinite",
								"mintStableCoin(uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2538",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2544",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"updateCollateralizationRatio(uint256)": "infinite",
								"vaults(address)": "infinite",
								"withdrawCollateral(uint256)": "infinite"
							},
							"internal": {
								"_getVault(address)": "infinite",
								"_isCollateralSufficient(address,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1857,
									"end": 7819,
									"name": "PUSH",
									"source": 12,
									"value": "A0"
								},
								{
									"begin": 1857,
									"end": 7819,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1857,
									"end": 7819,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3332,
									"end": 3847,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 3332,
									"end": 3847,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3332,
									"end": 3847,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3332,
									"end": 3847,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3332,
									"end": 3847,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3332,
									"end": 3847,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3332,
									"end": 3847,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3332,
									"end": 3847,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 3332,
									"end": 3847,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3332,
									"end": 3847,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3332,
									"end": 3847,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3332,
									"end": 3847,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3332,
									"end": 3847,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3332,
									"end": 3847,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 3332,
									"end": 3847,
									"name": "CODESIZE",
									"source": 12
								},
								{
									"begin": 3332,
									"end": 3847,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 3332,
									"end": 3847,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3332,
									"end": 3847,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 3332,
									"end": 3847,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3332,
									"end": 3847,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 3332,
									"end": 3847,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3332,
									"end": 3847,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3332,
									"end": 3847,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3332,
									"end": 3847,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3332,
									"end": 3847,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3332,
									"end": 3847,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3332,
									"end": 3847,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3332,
									"end": 3847,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3332,
									"end": 3847,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 3332,
									"end": 3847,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3332,
									"end": 3847,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3332,
									"end": 3847,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 3332,
									"end": 3847,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3332,
									"end": 3847,
									"name": "tag",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 3332,
									"end": 3847,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3529,
									"end": 3539,
									"name": "CALLER",
									"source": 12
								},
								{
									"begin": 3499,
									"end": 3503,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3505,
									"end": 3511,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3591,
									"end": 3592,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3563,
									"end": 3593,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3563,
									"end": 3593,
									"modifierDepth": 2,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3563,
									"end": 3579,
									"modifierDepth": 2,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3563,
									"end": 3593,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3563,
									"end": 3593,
									"modifierDepth": 2,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3563,
									"end": 3593,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 3555,
									"end": 3630,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3555,
									"end": 3630,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3555,
									"end": 3630,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3555,
									"end": 3630,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3555,
									"end": 3630,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3555,
									"end": 3630,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3555,
									"end": 3630,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3555,
									"end": 3630,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 3555,
									"end": 3630,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3555,
									"end": 3630,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 3555,
									"end": 3630,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3555,
									"end": 3630,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 3555,
									"end": 3630,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3555,
									"end": 3630,
									"modifierDepth": 2,
									"name": "tag",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 3555,
									"end": 3630,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3555,
									"end": 3630,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3555,
									"end": 3630,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3555,
									"end": 3630,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3555,
									"end": 3630,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3555,
									"end": 3630,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 3555,
									"end": 3630,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3555,
									"end": 3630,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 3555,
									"end": 3630,
									"modifierDepth": 2,
									"name": "tag",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3555,
									"end": 3630,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3675,
									"end": 3680,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "2710"
								},
								{
									"begin": 3648,
									"end": 3671,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3648,
									"end": 3680,
									"modifierDepth": 2,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 3648,
									"end": 3680,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3640,
									"end": 3730,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 3640,
									"end": 3730,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3640,
									"end": 3730,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3640,
									"end": 3730,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3640,
									"end": 3730,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3640,
									"end": 3730,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3640,
									"end": 3730,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3640,
									"end": 3730,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 3640,
									"end": 3730,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3640,
									"end": 3730,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 3640,
									"end": 3730,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3640,
									"end": 3730,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 3640,
									"end": 3730,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3640,
									"end": 3730,
									"modifierDepth": 2,
									"name": "tag",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 3640,
									"end": 3730,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3640,
									"end": 3730,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3640,
									"end": 3730,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3640,
									"end": 3730,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3640,
									"end": 3730,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3640,
									"end": 3730,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 3640,
									"end": 3730,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3640,
									"end": 3730,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 3640,
									"end": 3730,
									"modifierDepth": 2,
									"name": "tag",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 3640,
									"end": 3730,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3765,
									"end": 3781,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3740,
									"end": 3782,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3740,
									"end": 3782,
									"modifierDepth": 2,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3740,
									"end": 3782,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 3740,
									"end": 3782,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3740,
									"end": 3782,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3740,
									"end": 3782,
									"modifierDepth": 2,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3740,
									"end": 3782,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3740,
									"end": 3782,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3740,
									"end": 3782,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3740,
									"end": 3782,
									"modifierDepth": 2,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3817,
									"end": 3840,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3792,
									"end": 3814,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 12,
									"value": "A"
								},
								{
									"begin": 3792,
									"end": 3840,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3792,
									"end": 3840,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3792,
									"end": 3840,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 3792,
									"end": 3840,
									"modifierDepth": 2,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3332,
									"end": 3847,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3332,
									"end": 3847,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3332,
									"end": 3847,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3332,
									"end": 3847,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1857,
									"end": 7819,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 1857,
									"end": 7819,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "78"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 13,
									"value": "78"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "83"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 13,
									"value": "83"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "86"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 13,
									"value": "86"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "87"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 13,
									"value": "87"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "89"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 13,
									"value": "89"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 1322,
									"name": "tag",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 1205,
									"end": 1322,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1314,
									"end": 1315,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1311,
									"end": 1312,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1304,
									"end": 1316,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1328,
									"end": 1445,
									"name": "tag",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 1328,
									"end": 1445,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1437,
									"end": 1438,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1434,
									"end": 1435,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1427,
									"end": 1439,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1451,
									"end": 1553,
									"name": "tag",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1451,
									"end": 1553,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1492,
									"end": 1498,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1543,
									"end": 1545,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 1539,
									"end": 1546,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 1534,
									"end": 1536,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 1527,
									"end": 1532,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1523,
									"end": 1537,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1519,
									"end": 1547,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1509,
									"end": 1547,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1509,
									"end": 1547,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1451,
									"end": 1553,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1451,
									"end": 1553,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1451,
									"end": 1553,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1451,
									"end": 1553,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1559,
									"end": 1739,
									"name": "tag",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 1559,
									"end": 1739,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1607,
									"end": 1684,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1604,
									"end": 1605,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1597,
									"end": 1685,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1704,
									"end": 1708,
									"name": "PUSH",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 1701,
									"end": 1702,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 1694,
									"end": 1709,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1728,
									"end": 1732,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1725,
									"end": 1726,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1718,
									"end": 1733,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1745,
									"end": 2026,
									"name": "tag",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 1745,
									"end": 2026,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1828,
									"end": 1855,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "95"
								},
								{
									"begin": 1850,
									"end": 1854,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1828,
									"end": 1855,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1828,
									"end": 1855,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1828,
									"end": 1855,
									"name": "tag",
									"source": 13,
									"value": "95"
								},
								{
									"begin": 1828,
									"end": 1855,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1820,
									"end": 1826,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1816,
									"end": 1856,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1958,
									"end": 1964,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1946,
									"end": 1956,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1943,
									"end": 1965,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 1922,
									"end": 1940,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1910,
									"end": 1920,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1907,
									"end": 1941,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 1904,
									"end": 1966,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 1901,
									"end": 1989,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1901,
									"end": 1989,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "96"
								},
								{
									"begin": 1901,
									"end": 1989,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1969,
									"end": 1987,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "97"
								},
								{
									"begin": 1969,
									"end": 1987,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 1969,
									"end": 1987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1969,
									"end": 1987,
									"name": "tag",
									"source": 13,
									"value": "97"
								},
								{
									"begin": 1969,
									"end": 1987,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1901,
									"end": 1989,
									"name": "tag",
									"source": 13,
									"value": "96"
								},
								{
									"begin": 1901,
									"end": 1989,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2009,
									"end": 2019,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 2005,
									"end": 2007,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1998,
									"end": 2020,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1788,
									"end": 2026,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1745,
									"end": 2026,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1745,
									"end": 2026,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1745,
									"end": 2026,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2032,
									"end": 2161,
									"name": "tag",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 2032,
									"end": 2161,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2066,
									"end": 2072,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2093,
									"end": 2113,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "99"
								},
								{
									"begin": 2093,
									"end": 2113,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 2093,
									"end": 2113,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2093,
									"end": 2113,
									"name": "tag",
									"source": 13,
									"value": "99"
								},
								{
									"begin": 2093,
									"end": 2113,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2083,
									"end": 2113,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2083,
									"end": 2113,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2122,
									"end": 2155,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 2150,
									"end": 2154,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2142,
									"end": 2148,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2122,
									"end": 2155,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 2122,
									"end": 2155,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2122,
									"end": 2155,
									"name": "tag",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 2122,
									"end": 2155,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2032,
									"end": 2161,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2032,
									"end": 2161,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2032,
									"end": 2161,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2032,
									"end": 2161,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2167,
									"end": 2475,
									"name": "tag",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 2167,
									"end": 2475,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2229,
									"end": 2233,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2319,
									"end": 2337,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2311,
									"end": 2317,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2308,
									"end": 2338,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 2305,
									"end": 2361,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2305,
									"end": 2361,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "102"
								},
								{
									"begin": 2305,
									"end": 2361,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2341,
									"end": 2359,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "103"
								},
								{
									"begin": 2341,
									"end": 2359,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 2341,
									"end": 2359,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2341,
									"end": 2359,
									"name": "tag",
									"source": 13,
									"value": "103"
								},
								{
									"begin": 2341,
									"end": 2359,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2305,
									"end": 2361,
									"name": "tag",
									"source": 13,
									"value": "102"
								},
								{
									"begin": 2305,
									"end": 2361,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2379,
									"end": 2408,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "104"
								},
								{
									"begin": 2401,
									"end": 2407,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2379,
									"end": 2408,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 2379,
									"end": 2408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2379,
									"end": 2408,
									"name": "tag",
									"source": 13,
									"value": "104"
								},
								{
									"begin": 2379,
									"end": 2408,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2371,
									"end": 2408,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2371,
									"end": 2408,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2463,
									"end": 2467,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2457,
									"end": 2461,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2453,
									"end": 2468,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2445,
									"end": 2468,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2445,
									"end": 2468,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2167,
									"end": 2475,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2167,
									"end": 2475,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2167,
									"end": 2475,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2167,
									"end": 2475,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2481,
									"end": 2620,
									"name": "tag",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 2481,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2570,
									"end": 2576,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2565,
									"end": 2568,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2560,
									"end": 2563,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2554,
									"end": 2577,
									"name": "MCOPY",
									"source": 13
								},
								{
									"begin": 2611,
									"end": 2612,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2602,
									"end": 2608,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2597,
									"end": 2600,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2593,
									"end": 2609,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2586,
									"end": 2613,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2481,
									"end": 2620,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2481,
									"end": 2620,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2481,
									"end": 2620,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2481,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2626,
									"end": 3060,
									"name": "tag",
									"source": 13,
									"value": "46"
								},
								{
									"begin": 2626,
									"end": 3060,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2715,
									"end": 2720,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2740,
									"end": 2806,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "107"
								},
								{
									"begin": 2756,
									"end": 2805,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "108"
								},
								{
									"begin": 2798,
									"end": 2804,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2756,
									"end": 2805,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 2756,
									"end": 2805,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2756,
									"end": 2805,
									"name": "tag",
									"source": 13,
									"value": "108"
								},
								{
									"begin": 2756,
									"end": 2805,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2740,
									"end": 2806,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 2740,
									"end": 2806,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2740,
									"end": 2806,
									"name": "tag",
									"source": 13,
									"value": "107"
								},
								{
									"begin": 2740,
									"end": 2806,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2731,
									"end": 2806,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2731,
									"end": 2806,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2829,
									"end": 2835,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2822,
									"end": 2827,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2815,
									"end": 2836,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2867,
									"end": 2871,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2860,
									"end": 2865,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2856,
									"end": 2872,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2905,
									"end": 2908,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2896,
									"end": 2902,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2891,
									"end": 2894,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2887,
									"end": 2903,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2884,
									"end": 2909,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 2881,
									"end": 2993,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2881,
									"end": 2993,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "109"
								},
								{
									"begin": 2881,
									"end": 2993,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2912,
									"end": 2991,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "110"
								},
								{
									"begin": 2912,
									"end": 2991,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 2912,
									"end": 2991,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2912,
									"end": 2991,
									"name": "tag",
									"source": 13,
									"value": "110"
								},
								{
									"begin": 2912,
									"end": 2991,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2881,
									"end": 2993,
									"name": "tag",
									"source": 13,
									"value": "109"
								},
								{
									"begin": 2881,
									"end": 2993,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3002,
									"end": 3054,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "111"
								},
								{
									"begin": 3047,
									"end": 3053,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3042,
									"end": 3045,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3037,
									"end": 3040,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 3002,
									"end": 3054,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 3002,
									"end": 3054,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3002,
									"end": 3054,
									"name": "tag",
									"source": 13,
									"value": "111"
								},
								{
									"begin": 3002,
									"end": 3054,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2721,
									"end": 3060,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2626,
									"end": 3060,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 2626,
									"end": 3060,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2626,
									"end": 3060,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2626,
									"end": 3060,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2626,
									"end": 3060,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2626,
									"end": 3060,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3080,
									"end": 3435,
									"name": "tag",
									"source": 13,
									"value": "47"
								},
								{
									"begin": 3080,
									"end": 3435,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3147,
									"end": 3152,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3196,
									"end": 3199,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3189,
									"end": 3193,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 3181,
									"end": 3187,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3177,
									"end": 3194,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3173,
									"end": 3200,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 3163,
									"end": 3285,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "113"
								},
								{
									"begin": 3163,
									"end": 3285,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3204,
									"end": 3283,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "114"
								},
								{
									"begin": 3204,
									"end": 3283,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 3204,
									"end": 3283,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3204,
									"end": 3283,
									"name": "tag",
									"source": 13,
									"value": "114"
								},
								{
									"begin": 3204,
									"end": 3283,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3163,
									"end": 3285,
									"name": "tag",
									"source": 13,
									"value": "113"
								},
								{
									"begin": 3163,
									"end": 3285,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3314,
									"end": 3320,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3308,
									"end": 3321,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 3339,
									"end": 3429,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "115"
								},
								{
									"begin": 3425,
									"end": 3428,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3417,
									"end": 3423,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3410,
									"end": 3414,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3402,
									"end": 3408,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 3398,
									"end": 3415,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3339,
									"end": 3429,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "46"
								},
								{
									"begin": 3339,
									"end": 3429,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3339,
									"end": 3429,
									"name": "tag",
									"source": 13,
									"value": "115"
								},
								{
									"begin": 3339,
									"end": 3429,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3330,
									"end": 3429,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3330,
									"end": 3429,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3153,
									"end": 3435,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3080,
									"end": 3435,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 3080,
									"end": 3435,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3080,
									"end": 3435,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3080,
									"end": 3435,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3080,
									"end": 3435,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3441,
									"end": 4607,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 3441,
									"end": 4607,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3558,
									"end": 3564,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3566,
									"end": 3572,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3574,
									"end": 3580,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3582,
									"end": 3588,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3631,
									"end": 3634,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 3619,
									"end": 3628,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 3610,
									"end": 3617,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 3606,
									"end": 3629,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 3602,
									"end": 3635,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 3599,
									"end": 3719,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3599,
									"end": 3719,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "117"
								},
								{
									"begin": 3599,
									"end": 3719,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3638,
									"end": 3717,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "118"
								},
								{
									"begin": 3638,
									"end": 3717,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 3638,
									"end": 3717,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3638,
									"end": 3717,
									"name": "tag",
									"source": 13,
									"value": "118"
								},
								{
									"begin": 3638,
									"end": 3717,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3599,
									"end": 3719,
									"name": "tag",
									"source": 13,
									"value": "117"
								},
								{
									"begin": 3599,
									"end": 3719,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3758,
									"end": 3759,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3783,
									"end": 3847,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "119"
								},
								{
									"begin": 3839,
									"end": 3846,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 3830,
									"end": 3836,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3819,
									"end": 3828,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 3815,
									"end": 3837,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3783,
									"end": 3847,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 3783,
									"end": 3847,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3783,
									"end": 3847,
									"name": "tag",
									"source": 13,
									"value": "119"
								},
								{
									"begin": 3783,
									"end": 3847,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3773,
									"end": 3847,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 3773,
									"end": 3847,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3729,
									"end": 3857,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3896,
									"end": 3898,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3922,
									"end": 3986,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "120"
								},
								{
									"begin": 3978,
									"end": 3985,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 3969,
									"end": 3975,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3958,
									"end": 3967,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 3954,
									"end": 3976,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3922,
									"end": 3986,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 3922,
									"end": 3986,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3922,
									"end": 3986,
									"name": "tag",
									"source": 13,
									"value": "120"
								},
								{
									"begin": 3922,
									"end": 3986,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3912,
									"end": 3986,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 3912,
									"end": 3986,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3867,
									"end": 3996,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4056,
									"end": 4058,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 4045,
									"end": 4054,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 4041,
									"end": 4059,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4035,
									"end": 4060,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 4087,
									"end": 4105,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4079,
									"end": 4085,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4076,
									"end": 4106,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 4073,
									"end": 4190,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 4073,
									"end": 4190,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "121"
								},
								{
									"begin": 4073,
									"end": 4190,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4109,
									"end": 4188,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "122"
								},
								{
									"begin": 4109,
									"end": 4188,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 4109,
									"end": 4188,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4109,
									"end": 4188,
									"name": "tag",
									"source": 13,
									"value": "122"
								},
								{
									"begin": 4109,
									"end": 4188,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4073,
									"end": 4190,
									"name": "tag",
									"source": 13,
									"value": "121"
								},
								{
									"begin": 4073,
									"end": 4190,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4214,
									"end": 4288,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "123"
								},
								{
									"begin": 4280,
									"end": 4287,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 4271,
									"end": 4277,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4260,
									"end": 4269,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 4256,
									"end": 4278,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4214,
									"end": 4288,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "47"
								},
								{
									"begin": 4214,
									"end": 4288,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4214,
									"end": 4288,
									"name": "tag",
									"source": 13,
									"value": "123"
								},
								{
									"begin": 4214,
									"end": 4288,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4204,
									"end": 4288,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 4204,
									"end": 4288,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4006,
									"end": 4298,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4358,
									"end": 4360,
									"name": "PUSH",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 4347,
									"end": 4356,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 4343,
									"end": 4361,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4337,
									"end": 4362,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 4389,
									"end": 4407,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4381,
									"end": 4387,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4378,
									"end": 4408,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 4375,
									"end": 4492,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 4375,
									"end": 4492,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "124"
								},
								{
									"begin": 4375,
									"end": 4492,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4411,
									"end": 4490,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "125"
								},
								{
									"begin": 4411,
									"end": 4490,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 4411,
									"end": 4490,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4411,
									"end": 4490,
									"name": "tag",
									"source": 13,
									"value": "125"
								},
								{
									"begin": 4411,
									"end": 4490,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4375,
									"end": 4492,
									"name": "tag",
									"source": 13,
									"value": "124"
								},
								{
									"begin": 4375,
									"end": 4492,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4516,
									"end": 4590,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "126"
								},
								{
									"begin": 4582,
									"end": 4589,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 4573,
									"end": 4579,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4562,
									"end": 4571,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 4558,
									"end": 4580,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4516,
									"end": 4590,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "47"
								},
								{
									"begin": 4516,
									"end": 4590,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4516,
									"end": 4590,
									"name": "tag",
									"source": 13,
									"value": "126"
								},
								{
									"begin": 4516,
									"end": 4590,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4506,
									"end": 4590,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4506,
									"end": 4590,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4308,
									"end": 4600,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3441,
									"end": 4607,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 3441,
									"end": 4607,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 3441,
									"end": 4607,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3441,
									"end": 4607,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 3441,
									"end": 4607,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3441,
									"end": 4607,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 3441,
									"end": 4607,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3441,
									"end": 4607,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4613,
									"end": 4712,
									"name": "tag",
									"source": 13,
									"value": "48"
								},
								{
									"begin": 4613,
									"end": 4712,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4665,
									"end": 4671,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4699,
									"end": 4704,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4693,
									"end": 4705,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 4683,
									"end": 4705,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4683,
									"end": 4705,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4613,
									"end": 4712,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4613,
									"end": 4712,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4613,
									"end": 4712,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4613,
									"end": 4712,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4718,
									"end": 4898,
									"name": "tag",
									"source": 13,
									"value": "49"
								},
								{
									"begin": 4718,
									"end": 4898,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4766,
									"end": 4843,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4763,
									"end": 4764,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4756,
									"end": 4844,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 4863,
									"end": 4867,
									"name": "PUSH",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 4860,
									"end": 4861,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 4853,
									"end": 4868,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 4887,
									"end": 4891,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 4884,
									"end": 4885,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4877,
									"end": 4892,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 4904,
									"end": 5224,
									"name": "tag",
									"source": 13,
									"value": "50"
								},
								{
									"begin": 4904,
									"end": 5224,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4948,
									"end": 4954,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4985,
									"end": 4986,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 4979,
									"end": 4983,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4975,
									"end": 4987,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 4965,
									"end": 4987,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4965,
									"end": 4987,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5032,
									"end": 5033,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 5026,
									"end": 5030,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5022,
									"end": 5034,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 5053,
									"end": 5071,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 5043,
									"end": 5124,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "130"
								},
								{
									"begin": 5043,
									"end": 5124,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5109,
									"end": 5113,
									"name": "PUSH",
									"source": 13,
									"value": "7F"
								},
								{
									"begin": 5101,
									"end": 5107,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5097,
									"end": 5114,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 5087,
									"end": 5114,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5087,
									"end": 5114,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5043,
									"end": 5124,
									"name": "tag",
									"source": 13,
									"value": "130"
								},
								{
									"begin": 5043,
									"end": 5124,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5171,
									"end": 5173,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 5163,
									"end": 5169,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5160,
									"end": 5174,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 5140,
									"end": 5158,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5137,
									"end": 5175,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 5134,
									"end": 5218,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "131"
								},
								{
									"begin": 5134,
									"end": 5218,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5190,
									"end": 5208,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "132"
								},
								{
									"begin": 5190,
									"end": 5208,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "49"
								},
								{
									"begin": 5190,
									"end": 5208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5190,
									"end": 5208,
									"name": "tag",
									"source": 13,
									"value": "132"
								},
								{
									"begin": 5190,
									"end": 5208,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5134,
									"end": 5218,
									"name": "tag",
									"source": 13,
									"value": "131"
								},
								{
									"begin": 5134,
									"end": 5218,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4955,
									"end": 5224,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4904,
									"end": 5224,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4904,
									"end": 5224,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4904,
									"end": 5224,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4904,
									"end": 5224,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5230,
									"end": 5371,
									"name": "tag",
									"source": 13,
									"value": "51"
								},
								{
									"begin": 5230,
									"end": 5371,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5279,
									"end": 5283,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5302,
									"end": 5305,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5294,
									"end": 5305,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5294,
									"end": 5305,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5325,
									"end": 5328,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5322,
									"end": 5323,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5315,
									"end": 5329,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 5359,
									"end": 5363,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 5356,
									"end": 5357,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5346,
									"end": 5364,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": 5338,
									"end": 5364,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5338,
									"end": 5364,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5230,
									"end": 5371,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5230,
									"end": 5371,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5230,
									"end": 5371,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5230,
									"end": 5371,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5377,
									"end": 5470,
									"name": "tag",
									"source": 13,
									"value": "52"
								},
								{
									"begin": 5377,
									"end": 5470,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5414,
									"end": 5420,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5461,
									"end": 5463,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 5456,
									"end": 5458,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 5449,
									"end": 5454,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5445,
									"end": 5459,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5441,
									"end": 5464,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 5431,
									"end": 5464,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5431,
									"end": 5464,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5377,
									"end": 5470,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5377,
									"end": 5470,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5377,
									"end": 5470,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5377,
									"end": 5470,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5476,
									"end": 5583,
									"name": "tag",
									"source": 13,
									"value": "53"
								},
								{
									"begin": 5476,
									"end": 5583,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5520,
									"end": 5528,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5570,
									"end": 5575,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5564,
									"end": 5568,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5560,
									"end": 5576,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 5539,
									"end": 5576,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5539,
									"end": 5576,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5476,
									"end": 5583,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 5476,
									"end": 5583,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5476,
									"end": 5583,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5476,
									"end": 5583,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5476,
									"end": 5583,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5589,
									"end": 5982,
									"name": "tag",
									"source": 13,
									"value": "54"
								},
								{
									"begin": 5589,
									"end": 5982,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5658,
									"end": 5664,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5708,
									"end": 5709,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 5696,
									"end": 5706,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5692,
									"end": 5710,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 5731,
									"end": 5828,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "137"
								},
								{
									"begin": 5761,
									"end": 5827,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5750,
									"end": 5759,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5731,
									"end": 5828,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "53"
								},
								{
									"begin": 5731,
									"end": 5828,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5731,
									"end": 5828,
									"name": "tag",
									"source": 13,
									"value": "137"
								},
								{
									"begin": 5731,
									"end": 5828,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5849,
									"end": 5888,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "138"
								},
								{
									"begin": 5879,
									"end": 5887,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 5868,
									"end": 5877,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5849,
									"end": 5888,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "53"
								},
								{
									"begin": 5849,
									"end": 5888,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5849,
									"end": 5888,
									"name": "tag",
									"source": 13,
									"value": "138"
								},
								{
									"begin": 5849,
									"end": 5888,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5837,
									"end": 5888,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 5837,
									"end": 5888,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5921,
									"end": 5925,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 5917,
									"end": 5926,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 5910,
									"end": 5915,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5906,
									"end": 5927,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 5897,
									"end": 5927,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 5897,
									"end": 5927,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5970,
									"end": 5974,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 5960,
									"end": 5968,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 5956,
									"end": 5975,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 5949,
									"end": 5954,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5946,
									"end": 5976,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 5936,
									"end": 5976,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 5936,
									"end": 5976,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5665,
									"end": 5982,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5665,
									"end": 5982,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5589,
									"end": 5982,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 5589,
									"end": 5982,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 5589,
									"end": 5982,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5589,
									"end": 5982,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5589,
									"end": 5982,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5589,
									"end": 5982,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5988,
									"end": 6048,
									"name": "tag",
									"source": 13,
									"value": "55"
								},
								{
									"begin": 5988,
									"end": 6048,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6016,
									"end": 6019,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6037,
									"end": 6042,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6030,
									"end": 6042,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6030,
									"end": 6042,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5988,
									"end": 6048,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5988,
									"end": 6048,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5988,
									"end": 6048,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5988,
									"end": 6048,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6054,
									"end": 6196,
									"name": "tag",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 6054,
									"end": 6196,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6104,
									"end": 6113,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6137,
									"end": 6190,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "141"
								},
								{
									"begin": 6155,
									"end": 6189,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "142"
								},
								{
									"begin": 6164,
									"end": 6188,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "143"
								},
								{
									"begin": 6182,
									"end": 6187,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6164,
									"end": 6188,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 6164,
									"end": 6188,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6164,
									"end": 6188,
									"name": "tag",
									"source": 13,
									"value": "143"
								},
								{
									"begin": 6164,
									"end": 6188,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6155,
									"end": 6189,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "55"
								},
								{
									"begin": 6155,
									"end": 6189,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6155,
									"end": 6189,
									"name": "tag",
									"source": 13,
									"value": "142"
								},
								{
									"begin": 6155,
									"end": 6189,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6137,
									"end": 6190,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 6137,
									"end": 6190,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6137,
									"end": 6190,
									"name": "tag",
									"source": 13,
									"value": "141"
								},
								{
									"begin": 6137,
									"end": 6190,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6124,
									"end": 6190,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6124,
									"end": 6190,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6054,
									"end": 6196,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 6054,
									"end": 6196,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6054,
									"end": 6196,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6054,
									"end": 6196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6202,
									"end": 6277,
									"name": "tag",
									"source": 13,
									"value": "57"
								},
								{
									"begin": 6202,
									"end": 6277,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6245,
									"end": 6248,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6266,
									"end": 6271,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6259,
									"end": 6271,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6259,
									"end": 6271,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6202,
									"end": 6277,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 6202,
									"end": 6277,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6202,
									"end": 6277,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6202,
									"end": 6277,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6283,
									"end": 6552,
									"name": "tag",
									"source": 13,
									"value": "58"
								},
								{
									"begin": 6283,
									"end": 6552,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6393,
									"end": 6432,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "146"
								},
								{
									"begin": 6424,
									"end": 6431,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 6393,
									"end": 6432,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 6393,
									"end": 6432,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6393,
									"end": 6432,
									"name": "tag",
									"source": 13,
									"value": "146"
								},
								{
									"begin": 6393,
									"end": 6432,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6454,
									"end": 6545,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "147"
								},
								{
									"begin": 6503,
									"end": 6544,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "148"
								},
								{
									"begin": 6527,
									"end": 6543,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6503,
									"end": 6544,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "57"
								},
								{
									"begin": 6503,
									"end": 6544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6503,
									"end": 6544,
									"name": "tag",
									"source": 13,
									"value": "148"
								},
								{
									"begin": 6503,
									"end": 6544,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6495,
									"end": 6501,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6488,
									"end": 6492,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6482,
									"end": 6493,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 6454,
									"end": 6545,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "54"
								},
								{
									"begin": 6454,
									"end": 6545,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6454,
									"end": 6545,
									"name": "tag",
									"source": 13,
									"value": "147"
								},
								{
									"begin": 6454,
									"end": 6545,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6448,
									"end": 6452,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6441,
									"end": 6546,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 6359,
									"end": 6552,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6283,
									"end": 6552,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6283,
									"end": 6552,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6283,
									"end": 6552,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6283,
									"end": 6552,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6558,
									"end": 6631,
									"name": "tag",
									"source": 13,
									"value": "59"
								},
								{
									"begin": 6558,
									"end": 6631,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6603,
									"end": 6606,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6624,
									"end": 6625,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6617,
									"end": 6625,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6617,
									"end": 6625,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6558,
									"end": 6631,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6558,
									"end": 6631,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6637,
									"end": 6826,
									"name": "tag",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 6637,
									"end": 6826,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6714,
									"end": 6746,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "151"
								},
								{
									"begin": 6714,
									"end": 6746,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "59"
								},
								{
									"begin": 6714,
									"end": 6746,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6714,
									"end": 6746,
									"name": "tag",
									"source": 13,
									"value": "151"
								},
								{
									"begin": 6714,
									"end": 6746,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6755,
									"end": 6820,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "152"
								},
								{
									"begin": 6813,
									"end": 6819,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6805,
									"end": 6811,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6799,
									"end": 6803,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6755,
									"end": 6820,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "58"
								},
								{
									"begin": 6755,
									"end": 6820,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6755,
									"end": 6820,
									"name": "tag",
									"source": 13,
									"value": "152"
								},
								{
									"begin": 6755,
									"end": 6820,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6690,
									"end": 6826,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6637,
									"end": 6826,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6637,
									"end": 6826,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6637,
									"end": 6826,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6832,
									"end": 7018,
									"name": "tag",
									"source": 13,
									"value": "61"
								},
								{
									"begin": 6832,
									"end": 7018,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6892,
									"end": 7012,
									"name": "tag",
									"source": 13,
									"value": "154"
								},
								{
									"begin": 6892,
									"end": 7012,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6909,
									"end": 6912,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6902,
									"end": 6907,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6899,
									"end": 6913,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 6892,
									"end": 7012,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 6892,
									"end": 7012,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "156"
								},
								{
									"begin": 6892,
									"end": 7012,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 6963,
									"end": 7002,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "157"
								},
								{
									"begin": 7000,
									"end": 7001,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6993,
									"end": 6998,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6963,
									"end": 7002,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 6963,
									"end": 7002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6963,
									"end": 7002,
									"name": "tag",
									"source": 13,
									"value": "157"
								},
								{
									"begin": 6963,
									"end": 7002,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6936,
									"end": 6937,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 6929,
									"end": 6934,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6916,
									"end": 6938,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6916,
									"end": 6938,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6892,
									"end": 7012,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "154"
								},
								{
									"begin": 6892,
									"end": 7012,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6892,
									"end": 7012,
									"name": "tag",
									"source": 13,
									"value": "156"
								},
								{
									"begin": 6892,
									"end": 7012,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6832,
									"end": 7018,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6832,
									"end": 7018,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6832,
									"end": 7018,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7024,
									"end": 7567,
									"name": "tag",
									"source": 13,
									"value": "62"
								},
								{
									"begin": 7024,
									"end": 7567,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7125,
									"end": 7127,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 7120,
									"end": 7123,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7117,
									"end": 7128,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 7114,
									"end": 7560,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 7114,
									"end": 7560,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "159"
								},
								{
									"begin": 7114,
									"end": 7560,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 7159,
									"end": 7197,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "160"
								},
								{
									"begin": 7191,
									"end": 7196,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 7159,
									"end": 7197,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "51"
								},
								{
									"begin": 7159,
									"end": 7197,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7159,
									"end": 7197,
									"name": "tag",
									"source": 13,
									"value": "160"
								},
								{
									"begin": 7159,
									"end": 7197,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7243,
									"end": 7272,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "161"
								},
								{
									"begin": 7261,
									"end": 7271,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 7243,
									"end": 7272,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "52"
								},
								{
									"begin": 7243,
									"end": 7272,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7243,
									"end": 7272,
									"name": "tag",
									"source": 13,
									"value": "161"
								},
								{
									"begin": 7243,
									"end": 7272,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7233,
									"end": 7241,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 7229,
									"end": 7273,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7426,
									"end": 7428,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 7414,
									"end": 7424,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 7411,
									"end": 7429,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 7408,
									"end": 7457,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 7408,
									"end": 7457,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "162"
								},
								{
									"begin": 7408,
									"end": 7457,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 7447,
									"end": 7455,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 7432,
									"end": 7455,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7432,
									"end": 7455,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7408,
									"end": 7457,
									"name": "tag",
									"source": 13,
									"value": "162"
								},
								{
									"begin": 7408,
									"end": 7457,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7470,
									"end": 7550,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "163"
								},
								{
									"begin": 7526,
									"end": 7548,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "164"
								},
								{
									"begin": 7544,
									"end": 7547,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 7526,
									"end": 7548,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "52"
								},
								{
									"begin": 7526,
									"end": 7548,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7526,
									"end": 7548,
									"name": "tag",
									"source": 13,
									"value": "164"
								},
								{
									"begin": 7526,
									"end": 7548,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7516,
									"end": 7524,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 7512,
									"end": 7549,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7499,
									"end": 7510,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7470,
									"end": 7550,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "61"
								},
								{
									"begin": 7470,
									"end": 7550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7470,
									"end": 7550,
									"name": "tag",
									"source": 13,
									"value": "163"
								},
								{
									"begin": 7470,
									"end": 7550,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7129,
									"end": 7560,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7129,
									"end": 7560,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7114,
									"end": 7560,
									"name": "tag",
									"source": 13,
									"value": "159"
								},
								{
									"begin": 7114,
									"end": 7560,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7024,
									"end": 7567,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7024,
									"end": 7567,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7024,
									"end": 7567,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7024,
									"end": 7567,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7573,
									"end": 7690,
									"name": "tag",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 7573,
									"end": 7690,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7627,
									"end": 7635,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7677,
									"end": 7682,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7671,
									"end": 7675,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7667,
									"end": 7683,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 7646,
									"end": 7683,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7646,
									"end": 7683,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7573,
									"end": 7690,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 7573,
									"end": 7690,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7573,
									"end": 7690,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7573,
									"end": 7690,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7573,
									"end": 7690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7696,
									"end": 7865,
									"name": "tag",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 7696,
									"end": 7865,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7740,
									"end": 7746,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7773,
									"end": 7824,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "167"
								},
								{
									"begin": 7821,
									"end": 7822,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7817,
									"end": 7823,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 7809,
									"end": 7814,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 7806,
									"end": 7807,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 7802,
									"end": 7815,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 7773,
									"end": 7824,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 7773,
									"end": 7824,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7773,
									"end": 7824,
									"name": "tag",
									"source": 13,
									"value": "167"
								},
								{
									"begin": 7773,
									"end": 7824,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7769,
									"end": 7825,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 7854,
									"end": 7858,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 7848,
									"end": 7852,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 7844,
									"end": 7859,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 7834,
									"end": 7859,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7834,
									"end": 7859,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7747,
									"end": 7865,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7696,
									"end": 7865,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 7696,
									"end": 7865,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7696,
									"end": 7865,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7696,
									"end": 7865,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7696,
									"end": 7865,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7870,
									"end": 8165,
									"name": "tag",
									"source": 13,
									"value": "65"
								},
								{
									"begin": 7870,
									"end": 8165,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7946,
									"end": 7950,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 8092,
									"end": 8121,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "169"
								},
								{
									"begin": 8117,
									"end": 8120,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 8111,
									"end": 8115,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 8092,
									"end": 8121,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 8092,
									"end": 8121,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8092,
									"end": 8121,
									"name": "tag",
									"source": 13,
									"value": "169"
								},
								{
									"begin": 8092,
									"end": 8121,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8084,
									"end": 8121,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 8084,
									"end": 8121,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8154,
									"end": 8157,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8151,
									"end": 8152,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 8147,
									"end": 8158,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 8141,
									"end": 8145,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8138,
									"end": 8159,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 8130,
									"end": 8159,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 8130,
									"end": 8159,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7870,
									"end": 8165,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 7870,
									"end": 8165,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7870,
									"end": 8165,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7870,
									"end": 8165,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7870,
									"end": 8165,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8170,
									"end": 9565,
									"name": "tag",
									"source": 13,
									"value": "10"
								},
								{
									"begin": 8170,
									"end": 9565,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8287,
									"end": 8324,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "171"
								},
								{
									"begin": 8320,
									"end": 8323,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8287,
									"end": 8324,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "48"
								},
								{
									"begin": 8287,
									"end": 8324,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8287,
									"end": 8324,
									"name": "tag",
									"source": 13,
									"value": "171"
								},
								{
									"begin": 8287,
									"end": 8324,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8389,
									"end": 8407,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8381,
									"end": 8387,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8378,
									"end": 8408,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 8375,
									"end": 8431,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 8375,
									"end": 8431,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "172"
								},
								{
									"begin": 8375,
									"end": 8431,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8411,
									"end": 8429,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "173"
								},
								{
									"begin": 8411,
									"end": 8429,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 8411,
									"end": 8429,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8411,
									"end": 8429,
									"name": "tag",
									"source": 13,
									"value": "173"
								},
								{
									"begin": 8411,
									"end": 8429,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8375,
									"end": 8431,
									"name": "tag",
									"source": 13,
									"value": "172"
								},
								{
									"begin": 8375,
									"end": 8431,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8455,
									"end": 8493,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "174"
								},
								{
									"begin": 8487,
									"end": 8491,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8481,
									"end": 8492,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 8455,
									"end": 8493,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "50"
								},
								{
									"begin": 8455,
									"end": 8493,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8455,
									"end": 8493,
									"name": "tag",
									"source": 13,
									"value": "174"
								},
								{
									"begin": 8455,
									"end": 8493,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8540,
									"end": 8607,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "175"
								},
								{
									"begin": 8600,
									"end": 8606,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8592,
									"end": 8598,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8586,
									"end": 8590,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 8540,
									"end": 8607,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "62"
								},
								{
									"begin": 8540,
									"end": 8607,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8540,
									"end": 8607,
									"name": "tag",
									"source": 13,
									"value": "175"
								},
								{
									"begin": 8540,
									"end": 8607,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8634,
									"end": 8635,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 8658,
									"end": 8662,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 8645,
									"end": 8662,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 8645,
									"end": 8662,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8690,
									"end": 8692,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 8682,
									"end": 8688,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 8679,
									"end": 8693,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 8707,
									"end": 8708,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 8702,
									"end": 9320,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8702,
									"end": 9320,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 8702,
									"end": 9320,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "177"
								},
								{
									"begin": 8702,
									"end": 9320,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 9364,
									"end": 9365,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 9381,
									"end": 9387,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 9378,
									"end": 9455,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 9378,
									"end": 9455,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "178"
								},
								{
									"begin": 9378,
									"end": 9455,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 9430,
									"end": 9439,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9425,
									"end": 9428,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 9421,
									"end": 9440,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 9415,
									"end": 9441,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 9406,
									"end": 9441,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 9406,
									"end": 9441,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9378,
									"end": 9455,
									"name": "tag",
									"source": 13,
									"value": "178"
								},
								{
									"begin": 9378,
									"end": 9455,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9481,
									"end": 9548,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "179"
								},
								{
									"begin": 9541,
									"end": 9547,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 9534,
									"end": 9539,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9481,
									"end": 9548,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "65"
								},
								{
									"begin": 9481,
									"end": 9548,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9481,
									"end": 9548,
									"name": "tag",
									"source": 13,
									"value": "179"
								},
								{
									"begin": 9481,
									"end": 9548,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9475,
									"end": 9479,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 9468,
									"end": 9549,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 9337,
									"end": 9559,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8672,
									"end": 9559,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "176"
								},
								{
									"begin": 8672,
									"end": 9559,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8702,
									"end": 9320,
									"name": "tag",
									"source": 13,
									"value": "177"
								},
								{
									"begin": 8702,
									"end": 9320,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8754,
									"end": 8758,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 8750,
									"end": 8759,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 8742,
									"end": 8748,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 8738,
									"end": 8760,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 8788,
									"end": 8825,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "180"
								},
								{
									"begin": 8820,
									"end": 8824,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 8788,
									"end": 8825,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "51"
								},
								{
									"begin": 8788,
									"end": 8825,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8788,
									"end": 8825,
									"name": "tag",
									"source": 13,
									"value": "180"
								},
								{
									"begin": 8788,
									"end": 8825,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8847,
									"end": 8848,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 8861,
									"end": 9069,
									"name": "tag",
									"source": 13,
									"value": "181"
								},
								{
									"begin": 8861,
									"end": 9069,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8875,
									"end": 8882,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8872,
									"end": 8873,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8869,
									"end": 8883,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 8861,
									"end": 9069,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 8861,
									"end": 9069,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "183"
								},
								{
									"begin": 8861,
									"end": 9069,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8954,
									"end": 8963,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 8949,
									"end": 8952,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 8945,
									"end": 8964,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 8939,
									"end": 8965,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 8931,
									"end": 8937,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8924,
									"end": 8966,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 9005,
									"end": 9006,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 8997,
									"end": 9003,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8993,
									"end": 9007,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 8983,
									"end": 9007,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 8983,
									"end": 9007,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9052,
									"end": 9054,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 9041,
									"end": 9050,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 9037,
									"end": 9055,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 9024,
									"end": 9055,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 9024,
									"end": 9055,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8898,
									"end": 8902,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 8895,
									"end": 8896,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8891,
									"end": 8903,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 8886,
									"end": 8903,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 8886,
									"end": 8903,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8861,
									"end": 9069,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "181"
								},
								{
									"begin": 8861,
									"end": 9069,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8861,
									"end": 9069,
									"name": "tag",
									"source": 13,
									"value": "183"
								},
								{
									"begin": 8861,
									"end": 9069,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9097,
									"end": 9103,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 9088,
									"end": 9095,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 9085,
									"end": 9104,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 9082,
									"end": 9261,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 9082,
									"end": 9261,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "184"
								},
								{
									"begin": 9082,
									"end": 9261,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 9155,
									"end": 9164,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 9150,
									"end": 9153,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 9146,
									"end": 9165,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 9140,
									"end": 9166,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 9198,
									"end": 9246,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "185"
								},
								{
									"begin": 9240,
									"end": 9244,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 9232,
									"end": 9238,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 9228,
									"end": 9245,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 9217,
									"end": 9226,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9198,
									"end": 9246,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 9198,
									"end": 9246,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9198,
									"end": 9246,
									"name": "tag",
									"source": 13,
									"value": "185"
								},
								{
									"begin": 9198,
									"end": 9246,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9190,
									"end": 9196,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 9183,
									"end": 9247,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 9105,
									"end": 9261,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9082,
									"end": 9261,
									"name": "tag",
									"source": 13,
									"value": "184"
								},
								{
									"begin": 9082,
									"end": 9261,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9307,
									"end": 9308,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 9303,
									"end": 9304,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 9295,
									"end": 9301,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 9291,
									"end": 9305,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 9287,
									"end": 9309,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 9281,
									"end": 9285,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 9274,
									"end": 9310,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 8709,
									"end": 9320,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8709,
									"end": 9320,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8709,
									"end": 9320,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8672,
									"end": 9559,
									"name": "tag",
									"source": 13,
									"value": "176"
								},
								{
									"begin": 8672,
									"end": 9559,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8672,
									"end": 9559,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8262,
									"end": 9565,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8262,
									"end": 9565,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8262,
									"end": 9565,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8170,
									"end": 9565,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8170,
									"end": 9565,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8170,
									"end": 9565,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9571,
									"end": 9689,
									"name": "tag",
									"source": 13,
									"value": "66"
								},
								{
									"begin": 9571,
									"end": 9689,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9658,
									"end": 9682,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "187"
								},
								{
									"begin": 9676,
									"end": 9681,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 9658,
									"end": 9682,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 9658,
									"end": 9682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9658,
									"end": 9682,
									"name": "tag",
									"source": 13,
									"value": "187"
								},
								{
									"begin": 9658,
									"end": 9682,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9653,
									"end": 9656,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9646,
									"end": 9683,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 9571,
									"end": 9689,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9571,
									"end": 9689,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9571,
									"end": 9689,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9695,
									"end": 9917,
									"name": "tag",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 9695,
									"end": 9917,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9788,
									"end": 9792,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 9826,
									"end": 9828,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 9815,
									"end": 9824,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9811,
									"end": 9829,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 9803,
									"end": 9829,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 9803,
									"end": 9829,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9839,
									"end": 9910,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "189"
								},
								{
									"begin": 9907,
									"end": 9908,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 9896,
									"end": 9905,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 9892,
									"end": 9909,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 9883,
									"end": 9889,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 9839,
									"end": 9910,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "66"
								},
								{
									"begin": 9839,
									"end": 9910,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9839,
									"end": 9910,
									"name": "tag",
									"source": 13,
									"value": "189"
								},
								{
									"begin": 9839,
									"end": 9910,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9695,
									"end": 9917,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 9695,
									"end": 9917,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 9695,
									"end": 9917,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9695,
									"end": 9917,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9695,
									"end": 9917,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9923,
									"end": 10092,
									"name": "tag",
									"source": 13,
									"value": "67"
								},
								{
									"begin": 9923,
									"end": 10092,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10007,
									"end": 10018,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 10041,
									"end": 10047,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 10036,
									"end": 10039,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 10029,
									"end": 10048,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 10081,
									"end": 10085,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 10076,
									"end": 10079,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 10072,
									"end": 10086,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 10057,
									"end": 10086,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 10057,
									"end": 10086,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9923,
									"end": 10092,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 9923,
									"end": 10092,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 9923,
									"end": 10092,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9923,
									"end": 10092,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9923,
									"end": 10092,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10098,
									"end": 10280,
									"name": "tag",
									"source": 13,
									"value": "68"
								},
								{
									"begin": 10098,
									"end": 10280,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10238,
									"end": 10272,
									"name": "PUSH",
									"source": 13,
									"value": "496E76616C696420636F6C6C61746572616C20746F6B656E2061646472657373"
								},
								{
									"begin": 10234,
									"end": 10235,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 10226,
									"end": 10232,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 10222,
									"end": 10236,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 10215,
									"end": 10273,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 10098,
									"end": 10280,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10098,
									"end": 10280,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10286,
									"end": 10652,
									"name": "tag",
									"source": 13,
									"value": "69"
								},
								{
									"begin": 10286,
									"end": 10652,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10428,
									"end": 10431,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 10449,
									"end": 10516,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "193"
								},
								{
									"begin": 10513,
									"end": 10515,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 10508,
									"end": 10511,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 10449,
									"end": 10516,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "67"
								},
								{
									"begin": 10449,
									"end": 10516,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10449,
									"end": 10516,
									"name": "tag",
									"source": 13,
									"value": "193"
								},
								{
									"begin": 10449,
									"end": 10516,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10442,
									"end": 10516,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 10442,
									"end": 10516,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10525,
									"end": 10618,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "194"
								},
								{
									"begin": 10614,
									"end": 10617,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 10525,
									"end": 10618,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "68"
								},
								{
									"begin": 10525,
									"end": 10618,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10525,
									"end": 10618,
									"name": "tag",
									"source": 13,
									"value": "194"
								},
								{
									"begin": 10525,
									"end": 10618,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10643,
									"end": 10645,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 10638,
									"end": 10641,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 10634,
									"end": 10646,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 10627,
									"end": 10646,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 10627,
									"end": 10646,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10286,
									"end": 10652,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 10286,
									"end": 10652,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 10286,
									"end": 10652,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10286,
									"end": 10652,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10658,
									"end": 11077,
									"name": "tag",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 10658,
									"end": 11077,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10824,
									"end": 10828,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 10862,
									"end": 10864,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 10851,
									"end": 10860,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 10847,
									"end": 10865,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 10839,
									"end": 10865,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 10839,
									"end": 10865,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10911,
									"end": 10920,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 10905,
									"end": 10909,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 10901,
									"end": 10921,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 10897,
									"end": 10898,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 10886,
									"end": 10895,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 10882,
									"end": 10899,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 10875,
									"end": 10922,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 10939,
									"end": 11070,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "196"
								},
								{
									"begin": 11065,
									"end": 11069,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 10939,
									"end": 11070,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "69"
								},
								{
									"begin": 10939,
									"end": 11070,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10939,
									"end": 11070,
									"name": "tag",
									"source": 13,
									"value": "196"
								},
								{
									"begin": 10939,
									"end": 11070,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10931,
									"end": 11070,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 10931,
									"end": 11070,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10658,
									"end": 11077,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 10658,
									"end": 11077,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 10658,
									"end": 11077,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10658,
									"end": 11077,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11083,
									"end": 11315,
									"name": "tag",
									"source": 13,
									"value": "70"
								},
								{
									"begin": 11083,
									"end": 11315,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11223,
									"end": 11257,
									"name": "PUSH",
									"source": 13,
									"value": "436F6C6C61746572616C697A6174696F6E20726174696F206D75737420626520"
								},
								{
									"begin": 11219,
									"end": 11220,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 11211,
									"end": 11217,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 11207,
									"end": 11221,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 11200,
									"end": 11258,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 11292,
									"end": 11307,
									"name": "PUSH",
									"source": 13,
									"value": "6174206C65617374203130302500000000000000000000000000000000000000"
								},
								{
									"begin": 11287,
									"end": 11289,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 11279,
									"end": 11285,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 11275,
									"end": 11290,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 11268,
									"end": 11308,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 11083,
									"end": 11315,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11083,
									"end": 11315,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11321,
									"end": 11687,
									"name": "tag",
									"source": 13,
									"value": "71"
								},
								{
									"begin": 11321,
									"end": 11687,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11463,
									"end": 11466,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 11484,
									"end": 11551,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "199"
								},
								{
									"begin": 11548,
									"end": 11550,
									"name": "PUSH",
									"source": 13,
									"value": "2D"
								},
								{
									"begin": 11543,
									"end": 11546,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 11484,
									"end": 11551,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "67"
								},
								{
									"begin": 11484,
									"end": 11551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11484,
									"end": 11551,
									"name": "tag",
									"source": 13,
									"value": "199"
								},
								{
									"begin": 11484,
									"end": 11551,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11477,
									"end": 11551,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 11477,
									"end": 11551,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11560,
									"end": 11653,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "200"
								},
								{
									"begin": 11649,
									"end": 11652,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 11560,
									"end": 11653,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "70"
								},
								{
									"begin": 11560,
									"end": 11653,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11560,
									"end": 11653,
									"name": "tag",
									"source": 13,
									"value": "200"
								},
								{
									"begin": 11560,
									"end": 11653,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11678,
									"end": 11680,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 11673,
									"end": 11676,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 11669,
									"end": 11681,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 11662,
									"end": 11681,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 11662,
									"end": 11681,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11321,
									"end": 11687,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 11321,
									"end": 11687,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 11321,
									"end": 11687,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11321,
									"end": 11687,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11693,
									"end": 12112,
									"name": "tag",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 11693,
									"end": 12112,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11859,
									"end": 11863,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 11897,
									"end": 11899,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 11886,
									"end": 11895,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 11882,
									"end": 11900,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 11874,
									"end": 11900,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 11874,
									"end": 11900,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11946,
									"end": 11955,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 11940,
									"end": 11944,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 11936,
									"end": 11956,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 11932,
									"end": 11933,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 11921,
									"end": 11930,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 11917,
									"end": 11934,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 11910,
									"end": 11957,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 11974,
									"end": 12105,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "202"
								},
								{
									"begin": 12100,
									"end": 12104,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 11974,
									"end": 12105,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "71"
								},
								{
									"begin": 11974,
									"end": 12105,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11974,
									"end": 12105,
									"name": "tag",
									"source": 13,
									"value": "202"
								},
								{
									"begin": 11974,
									"end": 12105,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11966,
									"end": 12105,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 11966,
									"end": 12105,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11693,
									"end": 12112,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 11693,
									"end": 12112,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 11693,
									"end": 12112,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11693,
									"end": 12112,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1857,
									"end": 7819,
									"name": "tag",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 1857,
									"end": 7819,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1857,
									"end": 7819,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 1857,
									"end": 7819,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1857,
									"end": 7819,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1857,
									"end": 7819,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1857,
									"end": 7819,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1857,
									"end": 7819,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 1857,
									"end": 7819,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1857,
									"end": 7819,
									"name": "ASSIGNIMMUTABLE",
									"source": 12,
									"value": "1601"
								},
								{
									"begin": 1857,
									"end": 7819,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1857,
									"end": 7819,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1857,
									"end": 7819,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122076cd469e468e4f8a82ff466f7e348b5a291029f5c651f271d40db38a0d8c29f964736f6c634300081d0033",
									".code": [
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH",
											"source": 12,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH",
											"source": 12,
											"value": "BAD4A01F"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH",
											"source": 12,
											"value": "BAD4A01F"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH",
											"source": 12,
											"value": "BFA244FE"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH",
											"source": 12,
											"value": "DCAF9C44"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH",
											"source": 12,
											"value": "DD62ED3E"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH",
											"source": 12,
											"value": "E1D5E571"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH",
											"source": 12,
											"value": "F2FDE38B"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "tag",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH",
											"source": 12,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH",
											"source": 12,
											"value": "95D89B41"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH",
											"source": 12,
											"value": "A1BF2840"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH",
											"source": 12,
											"value": "A622EE7C"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH",
											"source": 12,
											"value": "A9059CBB"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH",
											"source": 12,
											"value": "B2016BD4"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH",
											"source": 12,
											"value": "23B872DD"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH",
											"source": 12,
											"value": "23B872DD"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH",
											"source": 12,
											"value": "313CE567"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH",
											"source": 12,
											"value": "4798EB21"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH",
											"source": 12,
											"value": "6112FE2E"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH",
											"source": 12,
											"value": "70A08231"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH",
											"source": 12,
											"value": "715018A6"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "tag",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH",
											"source": 12,
											"value": "607EC70"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH",
											"source": 12,
											"value": "6FDDE03"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH",
											"source": 12,
											"value": "95EA7B3"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH",
											"source": 12,
											"value": "11005B07"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH",
											"source": 12,
											"value": "18160DDD"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1857,
											"end": 7819,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7607,
											"end": 7817,
											"name": "tag",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 7607,
											"end": 7817,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7607,
											"end": 7817,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 7607,
											"end": 7817,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7607,
											"end": 7817,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7607,
											"end": 7817,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 7607,
											"end": 7817,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7607,
											"end": 7817,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7607,
											"end": 7817,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7607,
											"end": 7817,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7607,
											"end": 7817,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 7607,
											"end": 7817,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7607,
											"end": 7817,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7607,
											"end": 7817,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 7607,
											"end": 7817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7607,
											"end": 7817,
											"name": "tag",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 7607,
											"end": 7817,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7607,
											"end": 7817,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 7607,
											"end": 7817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7607,
											"end": 7817,
											"name": "tag",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 7607,
											"end": 7817,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7607,
											"end": 7817,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "tag",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 2292,
											"end": 2338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "tag",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 2292,
											"end": 2338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "tag",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 2292,
											"end": 2338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "tag",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 6325,
											"end": 6658,
											"name": "tag",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 6325,
											"end": 6658,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6325,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 6325,
											"end": 6658,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6325,
											"end": 6658,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6325,
											"end": 6658,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 6325,
											"end": 6658,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6325,
											"end": 6658,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6325,
											"end": 6658,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6325,
											"end": 6658,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6325,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 6325,
											"end": 6658,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6325,
											"end": 6658,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6325,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 6325,
											"end": 6658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6325,
											"end": 6658,
											"name": "tag",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 6325,
											"end": 6658,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6325,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 6325,
											"end": 6658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6325,
											"end": 6658,
											"name": "tag",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 6325,
											"end": 6658,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6325,
											"end": 6658,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 4928,
											"end": 5650,
											"name": "tag",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 4928,
											"end": 5650,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4928,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 4928,
											"end": 5650,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4928,
											"end": 5650,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4928,
											"end": 5650,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 4928,
											"end": 5650,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4928,
											"end": 5650,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4928,
											"end": 5650,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4928,
											"end": 5650,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4928,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 4928,
											"end": 5650,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4928,
											"end": 5650,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4928,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 4928,
											"end": 5650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4928,
											"end": 5650,
											"name": "tag",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 4928,
											"end": 5650,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4928,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 4928,
											"end": 5650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4928,
											"end": 5650,
											"name": "tag",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 4928,
											"end": 5650,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4928,
											"end": 5650,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "tag",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 2169,
											"end": 2221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "tag",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 2169,
											"end": 2221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "tag",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 2169,
											"end": 2221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "tag",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "tag",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 2402,
											"end": 2441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "tag",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 2402,
											"end": 2441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "tag",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 2402,
											"end": 2441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "tag",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2027,
											"end": 2066,
											"name": "tag",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 2027,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2027,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 2027,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 2027,
											"end": 2066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2027,
											"end": 2066,
											"name": "tag",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 2027,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2027,
											"end": 2066,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2027,
											"end": 2066,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2027,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 2027,
											"end": 2066,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2027,
											"end": 2066,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2027,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 2027,
											"end": 2066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2027,
											"end": 2066,
											"name": "tag",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 2027,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2027,
											"end": 2066,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2027,
											"end": 2066,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2027,
											"end": 2066,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2027,
											"end": 2066,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2027,
											"end": 2066,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2027,
											"end": 2066,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2027,
											"end": 2066,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 4358,
											"end": 4773,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4358,
											"end": 4773,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4358,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 4358,
											"end": 4773,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4358,
											"end": 4773,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4358,
											"end": 4773,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 4358,
											"end": 4773,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4358,
											"end": 4773,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4358,
											"end": 4773,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4358,
											"end": 4773,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4358,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 4358,
											"end": 4773,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4358,
											"end": 4773,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4358,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 4358,
											"end": 4773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4358,
											"end": 4773,
											"name": "tag",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 4358,
											"end": 4773,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4358,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 4358,
											"end": 4773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4358,
											"end": 4773,
											"name": "tag",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 4358,
											"end": 4773,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4358,
											"end": 4773,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 5807,
											"end": 6266,
											"name": "tag",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 5807,
											"end": 6266,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5807,
											"end": 6266,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 5807,
											"end": 6266,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5807,
											"end": 6266,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5807,
											"end": 6266,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 5807,
											"end": 6266,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5807,
											"end": 6266,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5807,
											"end": 6266,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5807,
											"end": 6266,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5807,
											"end": 6266,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 5807,
											"end": 6266,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5807,
											"end": 6266,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5807,
											"end": 6266,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 5807,
											"end": 6266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5807,
											"end": 6266,
											"name": "tag",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 5807,
											"end": 6266,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5807,
											"end": 6266,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 5807,
											"end": 6266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5807,
											"end": 6266,
											"name": "tag",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 5807,
											"end": 6266,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5807,
											"end": 6266,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 2602,
											"end": 2639,
											"name": "tag",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 2602,
											"end": 2639,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2602,
											"end": 2639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 2602,
											"end": 2639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "104"
										},
										{
											"begin": 2602,
											"end": 2639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2602,
											"end": 2639,
											"name": "tag",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 2602,
											"end": 2639,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2602,
											"end": 2639,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2602,
											"end": 2639,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2602,
											"end": 2639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "105"
										},
										{
											"begin": 2602,
											"end": 2639,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2602,
											"end": 2639,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2602,
											"end": 2639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 2602,
											"end": 2639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2602,
											"end": 2639,
											"name": "tag",
											"source": 12,
											"value": "105"
										},
										{
											"begin": 2602,
											"end": 2639,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2602,
											"end": 2639,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2602,
											"end": 2639,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2602,
											"end": 2639,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2602,
											"end": 2639,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2602,
											"end": 2639,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2602,
											"end": 2639,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2602,
											"end": 2639,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7526,
											"name": "tag",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7262,
											"end": 7526,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7262,
											"end": 7526,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 7262,
											"end": 7526,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7262,
											"end": 7526,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7262,
											"end": 7526,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 7262,
											"end": 7526,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7262,
											"end": 7526,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7262,
											"end": 7526,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7262,
											"end": 7526,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7262,
											"end": 7526,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 7262,
											"end": 7526,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7262,
											"end": 7526,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7262,
											"end": 7526,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 7262,
											"end": 7526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7262,
											"end": 7526,
											"name": "tag",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 7262,
											"end": 7526,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7262,
											"end": 7526,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 7262,
											"end": 7526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7262,
											"end": 7526,
											"name": "tag",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 7262,
											"end": 7526,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7262,
											"end": 7526,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7262,
											"end": 7526,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7262,
											"end": 7526,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 7262,
											"end": 7526,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7262,
											"end": 7526,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7262,
											"end": 7526,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 7262,
											"end": 7526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7262,
											"end": 7526,
											"name": "tag",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 7262,
											"end": 7526,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7262,
											"end": 7526,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7262,
											"end": 7526,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7262,
											"end": 7526,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7262,
											"end": 7526,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7262,
											"end": 7526,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7262,
											"end": 7526,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7262,
											"end": 7526,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 7607,
											"end": 7817,
											"name": "tag",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 7607,
											"end": 7817,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7712,
											"end": 7717,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2710"
										},
										{
											"begin": 7700,
											"end": 7708,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7700,
											"end": 7717,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 7700,
											"end": 7717,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7692,
											"end": 7767,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 7692,
											"end": 7767,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7692,
											"end": 7767,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7692,
											"end": 7767,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7692,
											"end": 7767,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7692,
											"end": 7767,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7692,
											"end": 7767,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7692,
											"end": 7767,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7692,
											"end": 7767,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7692,
											"end": 7767,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 7692,
											"end": 7767,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7692,
											"end": 7767,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 7692,
											"end": 7767,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7692,
											"end": 7767,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 7692,
											"end": 7767,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7692,
											"end": 7767,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7692,
											"end": 7767,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7692,
											"end": 7767,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7692,
											"end": 7767,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7692,
											"end": 7767,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7692,
											"end": 7767,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7692,
											"end": 7767,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7692,
											"end": 7767,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 7692,
											"end": 7767,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7802,
											"end": 7810,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7777,
											"end": 7799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 7777,
											"end": 7810,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7777,
											"end": 7810,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7777,
											"end": 7810,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 7777,
											"end": 7810,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7607,
											"end": 7817,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7607,
											"end": 7817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "tag",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2292,
											"end": 2338,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2292,
											"end": 2338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6325,
											"end": 6658,
											"name": "tag",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 6325,
											"end": 6658,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6414,
											"end": 6415,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6405,
											"end": 6411,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6405,
											"end": 6415,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 6397,
											"end": 6438,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 6397,
											"end": 6438,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6397,
											"end": 6438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6397,
											"end": 6438,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6397,
											"end": 6438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6397,
											"end": 6438,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6397,
											"end": 6438,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6397,
											"end": 6438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6397,
											"end": 6438,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6397,
											"end": 6438,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 6397,
											"end": 6438,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6397,
											"end": 6438,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 6397,
											"end": 6438,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6397,
											"end": 6438,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 6397,
											"end": 6438,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6397,
											"end": 6438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6397,
											"end": 6438,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6397,
											"end": 6438,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6397,
											"end": 6438,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6397,
											"end": 6438,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6397,
											"end": 6438,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6397,
											"end": 6438,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6397,
											"end": 6438,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 6397,
											"end": 6438,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6483,
											"end": 6489,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6456,
											"end": 6467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 6456,
											"end": 6479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6468,
											"end": 6478,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 6456,
											"end": 6479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6456,
											"end": 6479,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6456,
											"end": 6479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6456,
											"end": 6479,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6456,
											"end": 6479,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6456,
											"end": 6479,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6456,
											"end": 6479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6456,
											"end": 6479,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6456,
											"end": 6479,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6456,
											"end": 6479,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6456,
											"end": 6479,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6456,
											"end": 6479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6456,
											"end": 6479,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6456,
											"end": 6479,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6456,
											"end": 6479,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 6456,
											"end": 6479,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6456,
											"end": 6489,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 6456,
											"end": 6489,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6448,
											"end": 6513,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 6448,
											"end": 6513,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6448,
											"end": 6513,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6448,
											"end": 6513,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6448,
											"end": 6513,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6448,
											"end": 6513,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6448,
											"end": 6513,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6448,
											"end": 6513,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6448,
											"end": 6513,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6448,
											"end": 6513,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 6448,
											"end": 6513,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6448,
											"end": 6513,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 6448,
											"end": 6513,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6448,
											"end": 6513,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 6448,
											"end": 6513,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6448,
											"end": 6513,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6448,
											"end": 6513,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6448,
											"end": 6513,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6448,
											"end": 6513,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6448,
											"end": 6513,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6448,
											"end": 6513,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6448,
											"end": 6513,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6448,
											"end": 6513,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 6448,
											"end": 6513,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6559,
											"end": 6565,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6532,
											"end": 6543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 6532,
											"end": 6555,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6544,
											"end": 6554,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 6532,
											"end": 6555,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6532,
											"end": 6555,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6532,
											"end": 6555,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6532,
											"end": 6555,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6532,
											"end": 6555,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6532,
											"end": 6555,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6532,
											"end": 6555,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6532,
											"end": 6555,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6532,
											"end": 6555,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6532,
											"end": 6555,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6532,
											"end": 6555,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6532,
											"end": 6555,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6532,
											"end": 6555,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6532,
											"end": 6555,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6532,
											"end": 6555,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 6532,
											"end": 6555,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6532,
											"end": 6565,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6532,
											"end": 6565,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6532,
											"end": 6565,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6532,
											"end": 6565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 6532,
											"end": 6565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6532,
											"end": 6565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6532,
											"end": 6565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 6532,
											"end": 6565,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6532,
											"end": 6565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 6532,
											"end": 6565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6532,
											"end": 6565,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6532,
											"end": 6565,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6532,
											"end": 6565,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6532,
											"end": 6565,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6532,
											"end": 6565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6532,
											"end": 6565,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 6532,
											"end": 6565,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6575,
											"end": 6600,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 6581,
											"end": 6591,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 6593,
											"end": 6599,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6575,
											"end": 6580,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 6575,
											"end": 6600,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6575,
											"end": 6600,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 6575,
											"end": 6600,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6632,
											"end": 6642,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 6615,
											"end": 6651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6615,
											"end": 6651,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6615,
											"end": 6651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "E46E4414FB02A244A8932C7EC11C904DDF0313B8403A267C5E583CB565B473AF"
										},
										{
											"begin": 6644,
											"end": 6650,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6615,
											"end": 6651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6615,
											"end": 6651,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6615,
											"end": 6651,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 6615,
											"end": 6651,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6615,
											"end": 6651,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6615,
											"end": 6651,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 6615,
											"end": 6651,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6615,
											"end": 6651,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 6615,
											"end": 6651,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6615,
											"end": 6651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6615,
											"end": 6651,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6615,
											"end": 6651,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6615,
											"end": 6651,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6615,
											"end": 6651,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6615,
											"end": 6651,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6615,
											"end": 6651,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6325,
											"end": 6658,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6325,
											"end": 6658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4928,
											"end": 5650,
											"name": "tag",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 4928,
											"end": 5650,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5021,
											"end": 5022,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5012,
											"end": 5018,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5012,
											"end": 5022,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 5004,
											"end": 5045,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5004,
											"end": 5045,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5004,
											"end": 5045,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5004,
											"end": 5045,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 5004,
											"end": 5045,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 5004,
											"end": 5045,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 5004,
											"end": 5045,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5004,
											"end": 5045,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5004,
											"end": 5045,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 5004,
											"end": 5045,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5096,
											"end": 5102,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5063,
											"end": 5080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 5063,
											"end": 5092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5081,
											"end": 5091,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 5063,
											"end": 5092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5063,
											"end": 5092,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5063,
											"end": 5092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5063,
											"end": 5092,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5063,
											"end": 5092,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5063,
											"end": 5092,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5063,
											"end": 5092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5063,
											"end": 5092,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5063,
											"end": 5092,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5063,
											"end": 5092,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5063,
											"end": 5092,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5063,
											"end": 5092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5063,
											"end": 5092,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5063,
											"end": 5092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5063,
											"end": 5092,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5063,
											"end": 5092,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5063,
											"end": 5102,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 5063,
											"end": 5102,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5055,
											"end": 5138,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 5055,
											"end": 5138,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5055,
											"end": 5138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5055,
											"end": 5138,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5055,
											"end": 5138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5055,
											"end": 5138,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5055,
											"end": 5138,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5055,
											"end": 5138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5055,
											"end": 5138,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5055,
											"end": 5138,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 5055,
											"end": 5138,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5055,
											"end": 5138,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 5055,
											"end": 5138,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5055,
											"end": 5138,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 5055,
											"end": 5138,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5055,
											"end": 5138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5055,
											"end": 5138,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5055,
											"end": 5138,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5055,
											"end": 5138,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5055,
											"end": 5138,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5055,
											"end": 5138,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5055,
											"end": 5138,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5055,
											"end": 5138,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 5055,
											"end": 5138,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5157,
											"end": 5178,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5213,
											"end": 5219,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5181,
											"end": 5198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 5181,
											"end": 5210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5199,
											"end": 5209,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 5181,
											"end": 5210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5181,
											"end": 5210,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5181,
											"end": 5210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5181,
											"end": 5210,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5181,
											"end": 5210,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5181,
											"end": 5210,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5181,
											"end": 5210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5181,
											"end": 5210,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5181,
											"end": 5210,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5181,
											"end": 5210,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5181,
											"end": 5210,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5181,
											"end": 5210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5181,
											"end": 5210,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5181,
											"end": 5210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5181,
											"end": 5210,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5181,
											"end": 5210,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5181,
											"end": 5219,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 5181,
											"end": 5219,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5181,
											"end": 5219,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5181,
											"end": 5219,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 5181,
											"end": 5219,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5181,
											"end": 5219,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 5181,
											"end": 5219,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5157,
											"end": 5219,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5157,
											"end": 5219,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5237,
											"end": 5312,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 5261,
											"end": 5271,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 5273,
											"end": 5286,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5288,
											"end": 5299,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 5288,
											"end": 5311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5300,
											"end": 5310,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 5288,
											"end": 5311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5288,
											"end": 5311,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5288,
											"end": 5311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5288,
											"end": 5311,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5288,
											"end": 5311,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5288,
											"end": 5311,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5288,
											"end": 5311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5288,
											"end": 5311,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5288,
											"end": 5311,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5288,
											"end": 5311,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5288,
											"end": 5311,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5288,
											"end": 5311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5288,
											"end": 5311,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5288,
											"end": 5311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5288,
											"end": 5311,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5288,
											"end": 5311,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5237,
											"end": 5260,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 5237,
											"end": 5312,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5237,
											"end": 5312,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 5237,
											"end": 5312,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5364,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 5229,
											"end": 5364,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5229,
											"end": 5364,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5229,
											"end": 5364,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5364,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5229,
											"end": 5364,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5364,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 5229,
											"end": 5364,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5364,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 5229,
											"end": 5364,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5364,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 5229,
											"end": 5364,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5229,
											"end": 5364,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5364,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5364,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5364,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5364,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5364,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5229,
											"end": 5364,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 5229,
											"end": 5364,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5415,
											"end": 5428,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5383,
											"end": 5400,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 5383,
											"end": 5412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5401,
											"end": 5411,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 5383,
											"end": 5412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5383,
											"end": 5412,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5383,
											"end": 5412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5383,
											"end": 5412,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5383,
											"end": 5412,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5383,
											"end": 5412,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5383,
											"end": 5412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5383,
											"end": 5412,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5383,
											"end": 5412,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5383,
											"end": 5412,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5383,
											"end": 5412,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5383,
											"end": 5412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5383,
											"end": 5412,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5383,
											"end": 5412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5383,
											"end": 5412,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5383,
											"end": 5428,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5383,
											"end": 5428,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5383,
											"end": 5428,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 5383,
											"end": 5428,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5438,
											"end": 5449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5452,
											"end": 5458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 5452,
											"end": 5470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5459,
											"end": 5469,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 5452,
											"end": 5470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5452,
											"end": 5470,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5452,
											"end": 5470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5452,
											"end": 5470,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5452,
											"end": 5470,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5452,
											"end": 5470,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5452,
											"end": 5470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5452,
											"end": 5470,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5452,
											"end": 5470,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5452,
											"end": 5470,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5452,
											"end": 5470,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5452,
											"end": 5470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5452,
											"end": 5470,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5452,
											"end": 5470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5452,
											"end": 5470,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5452,
											"end": 5470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5452,
											"end": 5470,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5452,
											"end": 5470,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5452,
											"end": 5470,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5452,
											"end": 5470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 5452,
											"end": 5470,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 5452,
											"end": 5470,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5452,
											"end": 5470,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 5452,
											"end": 5470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5452,
											"end": 5470,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5438,
											"end": 5470,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5438,
											"end": 5470,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5514,
											"end": 5515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5488,
											"end": 5516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5488,
											"end": 5516,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5496,
											"end": 5501,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5488,
											"end": 5516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5488,
											"end": 5516,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5488,
											"end": 5516,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5480,
											"end": 5545,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 5480,
											"end": 5545,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5480,
											"end": 5545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5480,
											"end": 5545,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5480,
											"end": 5545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5480,
											"end": 5545,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5480,
											"end": 5545,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5480,
											"end": 5545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5480,
											"end": 5545,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5480,
											"end": 5545,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 5480,
											"end": 5545,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5480,
											"end": 5545,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 5480,
											"end": 5545,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5480,
											"end": 5545,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 5480,
											"end": 5545,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5480,
											"end": 5545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5480,
											"end": 5545,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5480,
											"end": 5545,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5480,
											"end": 5545,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5480,
											"end": 5545,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5480,
											"end": 5545,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5480,
											"end": 5545,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5480,
											"end": 5545,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 5480,
											"end": 5545,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5555,
											"end": 5560,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5555,
											"end": 5569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5555,
											"end": 5569,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5555,
											"end": 5569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "F3FEF3A3"
										},
										{
											"begin": 5570,
											"end": 5580,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 5582,
											"end": 5588,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 5555,
											"end": 5589,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5555,
											"end": 5589,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5624,
											"end": 5634,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 5604,
											"end": 5643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5604,
											"end": 5643,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5604,
											"end": 5643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "C30FCFBCAAC9E0DEFFA719714EAA82396FF506A0D0D0EEBE170830177288715D"
										},
										{
											"begin": 5636,
											"end": 5642,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5604,
											"end": 5643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5604,
											"end": 5643,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5604,
											"end": 5643,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 5604,
											"end": 5643,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5604,
											"end": 5643,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5604,
											"end": 5643,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 5604,
											"end": 5643,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5604,
											"end": 5643,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 5604,
											"end": 5643,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5604,
											"end": 5643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5604,
											"end": 5643,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5604,
											"end": 5643,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5604,
											"end": 5643,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5604,
											"end": 5643,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5604,
											"end": 5643,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5604,
											"end": 5643,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 4994,
											"end": 5650,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4994,
											"end": 5650,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4928,
											"end": 5650,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4928,
											"end": 5650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "tag",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2169,
											"end": 2221,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2169,
											"end": 2221,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "tag",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2402,
											"end": 2441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2027,
											"end": 2066,
											"name": "tag",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 2027,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2027,
											"end": 2066,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1601"
										},
										{
											"begin": 2027,
											"end": 2066,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2027,
											"end": 2066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4358,
											"end": 4773,
											"name": "tag",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 4358,
											"end": 4773,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4450,
											"end": 4451,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4441,
											"end": 4447,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4441,
											"end": 4451,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4433,
											"end": 4474,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 4433,
											"end": 4474,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4433,
											"end": 4474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4433,
											"end": 4474,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4433,
											"end": 4474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4433,
											"end": 4474,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4433,
											"end": 4474,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4433,
											"end": 4474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4433,
											"end": 4474,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4433,
											"end": 4474,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 4433,
											"end": 4474,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4433,
											"end": 4474,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 4433,
											"end": 4474,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4433,
											"end": 4474,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 4433,
											"end": 4474,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4433,
											"end": 4474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4433,
											"end": 4474,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4433,
											"end": 4474,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4433,
											"end": 4474,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4433,
											"end": 4474,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4433,
											"end": 4474,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4433,
											"end": 4474,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4433,
											"end": 4474,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 4433,
											"end": 4474,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4484,
											"end": 4495,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4519,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 4508,
											"end": 4518,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 4498,
											"end": 4507,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 4498,
											"end": 4519,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4498,
											"end": 4519,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 4498,
											"end": 4519,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4484,
											"end": 4519,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4484,
											"end": 4519,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4595,
											"end": 4663,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 4628,
											"end": 4638,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 4648,
											"end": 4653,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4656,
											"end": 4662,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4595,
											"end": 4610,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1601"
										},
										{
											"begin": 4595,
											"end": 4627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4595,
											"end": 4627,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4595,
											"end": 4627,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 4595,
											"end": 4627,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4595,
											"end": 4663,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4595,
											"end": 4663,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4595,
											"end": 4663,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4595,
											"end": 4663,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4595,
											"end": 4663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4595,
											"end": 4663,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4595,
											"end": 4663,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4595,
											"end": 4663,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 4595,
											"end": 4663,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4706,
											"end": 4712,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4673,
											"end": 4690,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 4673,
											"end": 4702,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4691,
											"end": 4701,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 4673,
											"end": 4702,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4673,
											"end": 4702,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4673,
											"end": 4702,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4673,
											"end": 4702,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4673,
											"end": 4702,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4673,
											"end": 4702,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4673,
											"end": 4702,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4673,
											"end": 4702,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4673,
											"end": 4702,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4673,
											"end": 4702,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4673,
											"end": 4702,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4673,
											"end": 4702,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4673,
											"end": 4702,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4673,
											"end": 4702,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4673,
											"end": 4702,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4673,
											"end": 4702,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4673,
											"end": 4712,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4673,
											"end": 4712,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4673,
											"end": 4712,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4673,
											"end": 4712,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 4673,
											"end": 4712,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4673,
											"end": 4712,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4673,
											"end": 4712,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 4673,
											"end": 4712,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4673,
											"end": 4712,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 4673,
											"end": 4712,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4673,
											"end": 4712,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4673,
											"end": 4712,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4673,
											"end": 4712,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4673,
											"end": 4712,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4673,
											"end": 4712,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4673,
											"end": 4712,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4673,
											"end": 4712,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4747,
											"end": 4757,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "D7243F6F8212D5188FD054141CF6EA89CFC0D91FACB8C3AFE2F88A1358480142"
										},
										{
											"begin": 4759,
											"end": 4765,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 4727,
											"end": 4766,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4727,
											"end": 4766,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 4423,
											"end": 4773,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4358,
											"end": 4773,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4358,
											"end": 4773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5807,
											"end": 6266,
											"name": "tag",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 5807,
											"end": 6266,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5896,
											"end": 5897,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5887,
											"end": 5893,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5887,
											"end": 5897,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5879,
											"end": 5920,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 5879,
											"end": 5920,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5879,
											"end": 5920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5879,
											"end": 5920,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5879,
											"end": 5920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5879,
											"end": 5920,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5879,
											"end": 5920,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5879,
											"end": 5920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5879,
											"end": 5920,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5879,
											"end": 5920,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 5879,
											"end": 5920,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5879,
											"end": 5920,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 5879,
											"end": 5920,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5879,
											"end": 5920,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 5879,
											"end": 5920,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5879,
											"end": 5920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5879,
											"end": 5920,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5879,
											"end": 5920,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5879,
											"end": 5920,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5879,
											"end": 5920,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5879,
											"end": 5920,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5879,
											"end": 5920,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5879,
											"end": 5920,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 5879,
											"end": 5920,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5930,
											"end": 5945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5974,
											"end": 5980,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5948,
											"end": 5959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 5948,
											"end": 5971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5960,
											"end": 5970,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 5948,
											"end": 5971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5948,
											"end": 5971,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5948,
											"end": 5971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5948,
											"end": 5971,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5948,
											"end": 5971,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5948,
											"end": 5971,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5948,
											"end": 5971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5948,
											"end": 5971,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5948,
											"end": 5971,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5948,
											"end": 5971,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5948,
											"end": 5971,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5948,
											"end": 5971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5948,
											"end": 5971,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5948,
											"end": 5971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5948,
											"end": 5971,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5948,
											"end": 5971,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5948,
											"end": 5980,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 5948,
											"end": 5980,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5948,
											"end": 5980,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5948,
											"end": 5980,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 5948,
											"end": 5980,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5948,
											"end": 5980,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 5948,
											"end": 5980,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5930,
											"end": 5980,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5930,
											"end": 5980,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5998,
											"end": 6073,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 6022,
											"end": 6032,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 6034,
											"end": 6051,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 6034,
											"end": 6063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6052,
											"end": 6062,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 6034,
											"end": 6063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6063,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6034,
											"end": 6063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6063,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6034,
											"end": 6063,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6034,
											"end": 6063,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6034,
											"end": 6063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6063,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6034,
											"end": 6063,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6034,
											"end": 6063,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6034,
											"end": 6063,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6034,
											"end": 6063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6063,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6034,
											"end": 6063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6063,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 6034,
											"end": 6063,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6065,
											"end": 6072,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5998,
											"end": 6021,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 5998,
											"end": 6073,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5998,
											"end": 6073,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 5998,
											"end": 6073,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5990,
											"end": 6121,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 5990,
											"end": 6121,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5990,
											"end": 6121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5990,
											"end": 6121,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5990,
											"end": 6121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5990,
											"end": 6121,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5990,
											"end": 6121,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5990,
											"end": 6121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5990,
											"end": 6121,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5990,
											"end": 6121,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 5990,
											"end": 6121,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5990,
											"end": 6121,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 5990,
											"end": 6121,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5990,
											"end": 6121,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 5990,
											"end": 6121,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5990,
											"end": 6121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5990,
											"end": 6121,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5990,
											"end": 6121,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5990,
											"end": 6121,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5990,
											"end": 6121,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5990,
											"end": 6121,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5990,
											"end": 6121,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5990,
											"end": 6121,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 5990,
											"end": 6121,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6166,
											"end": 6173,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6140,
											"end": 6151,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 6140,
											"end": 6163,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6152,
											"end": 6162,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 6140,
											"end": 6163,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6140,
											"end": 6163,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6140,
											"end": 6163,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6140,
											"end": 6163,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6140,
											"end": 6163,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6140,
											"end": 6163,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6140,
											"end": 6163,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6140,
											"end": 6163,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6140,
											"end": 6163,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6140,
											"end": 6163,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6140,
											"end": 6163,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6140,
											"end": 6163,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6140,
											"end": 6163,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6140,
											"end": 6163,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6140,
											"end": 6163,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 6140,
											"end": 6173,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6140,
											"end": 6173,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6140,
											"end": 6173,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 6140,
											"end": 6173,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6183,
											"end": 6208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 6189,
											"end": 6199,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 6201,
											"end": 6207,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6183,
											"end": 6188,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 6183,
											"end": 6208,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6183,
											"end": 6208,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 6183,
											"end": 6208,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6240,
											"end": 6250,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 6223,
											"end": 6259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6223,
											"end": 6259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6223,
											"end": 6259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3F1AE0A6113FF787F6445396E9EC4E9D0F6E1A0F05A9A856206F72F9623A2E9F"
										},
										{
											"begin": 6252,
											"end": 6258,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6223,
											"end": 6259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6223,
											"end": 6259,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6223,
											"end": 6259,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 6223,
											"end": 6259,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6223,
											"end": 6259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6223,
											"end": 6259,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 6223,
											"end": 6259,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6223,
											"end": 6259,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 6223,
											"end": 6259,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6223,
											"end": 6259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6223,
											"end": 6259,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6223,
											"end": 6259,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6223,
											"end": 6259,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6223,
											"end": 6259,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6223,
											"end": 6259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6223,
											"end": 6259,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 5869,
											"end": 6266,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5807,
											"end": 6266,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5807,
											"end": 6266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2602,
											"end": 2639,
											"name": "tag",
											"source": 12,
											"value": "104"
										},
										{
											"begin": 2602,
											"end": 2639,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2602,
											"end": 2639,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 2602,
											"end": 2639,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2602,
											"end": 2639,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2602,
											"end": 2639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7526,
											"name": "tag",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 7262,
											"end": 7526,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7338,
											"end": 7345,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7357,
											"end": 7369,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7372,
											"end": 7383,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7384,
											"end": 7388,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 7372,
											"end": 7389,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7357,
											"end": 7389,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7357,
											"end": 7389,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7411,
											"end": 7412,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7403,
											"end": 7407,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7403,
											"end": 7412,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7399,
											"end": 7463,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 7399,
											"end": 7463,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7435,
											"end": 7452,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7428,
											"end": 7452,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7428,
											"end": 7452,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7428,
											"end": 7452,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7428,
											"end": 7452,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "230"
										},
										{
											"begin": 7428,
											"end": 7452,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7399,
											"end": 7463,
											"name": "tag",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 7399,
											"end": 7463,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7515,
											"end": 7519,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7506,
											"end": 7511,
											"name": "PUSH",
											"source": 12,
											"value": "2710"
										},
										{
											"begin": 7480,
											"end": 7497,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 7480,
											"end": 7503,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7498,
											"end": 7502,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7480,
											"end": 7503,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7480,
											"end": 7503,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7480,
											"end": 7503,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7480,
											"end": 7503,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7480,
											"end": 7503,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7480,
											"end": 7503,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7480,
											"end": 7503,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7480,
											"end": 7503,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7480,
											"end": 7503,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7480,
											"end": 7503,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7480,
											"end": 7503,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7480,
											"end": 7503,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7480,
											"end": 7503,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7480,
											"end": 7503,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7480,
											"end": 7503,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 7480,
											"end": 7503,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7480,
											"end": 7511,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 7480,
											"end": 7511,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7480,
											"end": 7511,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7480,
											"end": 7511,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 7480,
											"end": 7511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7480,
											"end": 7511,
											"name": "tag",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 7480,
											"end": 7511,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7479,
											"end": 7519,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 7479,
											"end": 7519,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7479,
											"end": 7519,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7479,
											"end": 7519,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 7479,
											"end": 7519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7479,
											"end": 7519,
											"name": "tag",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 7479,
											"end": 7519,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7472,
											"end": 7519,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7472,
											"end": 7519,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7472,
											"end": 7519,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7262,
											"end": 7526,
											"name": "tag",
											"source": 12,
											"value": "230"
										},
										{
											"begin": 7262,
											"end": 7526,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7262,
											"end": 7526,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7262,
											"end": 7526,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7262,
											"end": 7526,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7262,
											"end": 7526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10599,
											"end": 10616,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10655,
											"end": 10660,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10636,
											"end": 10652,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10636,
											"end": 10660,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10714,
											"end": 10721,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10723,
											"end": 10739,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10741,
											"end": 10746,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 6,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 10687,
											"end": 10747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 10812,
											"end": 10817,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10819,
											"end": 10826,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10847,
											"end": 10852,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10828,
											"end": 10852,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10854,
											"end": 10859,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10803,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 10803,
											"end": 10860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10504,
											"end": 10891,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10415,
											"end": 10891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 6,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 6,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8073,
											"end": 8074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8054,
											"end": 8061,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8125,
											"end": 8126,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 6,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 8098,
											"end": 8128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 8156,
											"end": 8163,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8173,
											"end": 8174,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8177,
											"end": 8182,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8148,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 8148,
											"end": 8183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7984,
											"end": 8190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6836,
											"end": 7100,
											"name": "tag",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 6836,
											"end": 7100,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6946,
											"end": 6950,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6977,
											"end": 6978,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6966,
											"end": 6973,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6966,
											"end": 6978,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6962,
											"end": 7016,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 6962,
											"end": 7016,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7001,
											"end": 7005,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 6994,
											"end": 7005,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6994,
											"end": 7005,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6994,
											"end": 7005,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 6994,
											"end": 7005,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6962,
											"end": 7016,
											"name": "tag",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 6962,
											"end": 7016,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7070,
											"end": 7092,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 7070,
											"end": 7092,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7060,
											"end": 7067,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7060,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 7060,
											"end": 7092,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7060,
											"end": 7092,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7060,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 7060,
											"end": 7092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7060,
											"end": 7092,
											"name": "tag",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 7060,
											"end": 7092,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7049,
											"end": 7054,
											"name": "PUSH",
											"source": 12,
											"value": "2710"
										},
										{
											"begin": 7033,
											"end": 7046,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7033,
											"end": 7054,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 7033,
											"end": 7054,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7033,
											"end": 7054,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7033,
											"end": 7054,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 7033,
											"end": 7054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7033,
											"end": 7054,
											"name": "tag",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 7033,
											"end": 7054,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7032,
											"end": 7093,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 7032,
											"end": 7093,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7025,
											"end": 7093,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7025,
											"end": 7093,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6836,
											"end": 7100,
											"name": "tag",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 6836,
											"end": 7100,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6836,
											"end": 7100,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 6836,
											"end": 7100,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6836,
											"end": 7100,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6836,
											"end": 7100,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6836,
											"end": 7100,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6836,
											"end": 7100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4208,
											"name": "tag",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 3935,
											"end": 4208,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3986,
											"end": 3991,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4041,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4007,
											"end": 4042,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4007,
											"end": 4042,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4015,
											"end": 4021,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 4015,
											"end": 4027,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4022,
											"end": 4026,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4015,
											"end": 4027,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4015,
											"end": 4027,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4015,
											"end": 4027,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4015,
											"end": 4027,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4015,
											"end": 4027,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4015,
											"end": 4027,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4015,
											"end": 4027,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4015,
											"end": 4027,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4015,
											"end": 4027,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4015,
											"end": 4027,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4015,
											"end": 4027,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4015,
											"end": 4027,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4015,
											"end": 4027,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4015,
											"end": 4027,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4015,
											"end": 4027,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4015,
											"end": 4027,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4015,
											"end": 4027,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4015,
											"end": 4027,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4015,
											"end": 4027,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4015,
											"end": 4027,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 4015,
											"end": 4027,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 4015,
											"end": 4027,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4015,
											"end": 4027,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 4015,
											"end": 4027,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4015,
											"end": 4027,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4007,
											"end": 4042,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4007,
											"end": 4042,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4007,
											"end": 4042,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4003,
											"end": 4173,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 4003,
											"end": 4173,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4058,
											"end": 4072,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4093,
											"end": 4108,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1601"
										},
										{
											"begin": 4119,
											"end": 4123,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 4075,
											"end": 4125,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4075,
											"end": 4125,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4075,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 4075,
											"end": 4125,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4075,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 4075,
											"end": 4125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4075,
											"end": 4125,
											"name": "tag",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 4075,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4075,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 4075,
											"end": 4125,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4075,
											"end": 4125,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4075,
											"end": 4125,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4075,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 4075,
											"end": 4125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4075,
											"end": 4125,
											"name": "tag",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 4075,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4075,
											"end": 4125,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4075,
											"end": 4125,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4075,
											"end": 4125,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4075,
											"end": 4125,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4075,
											"end": 4125,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4075,
											"end": 4125,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4075,
											"end": 4125,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4075,
											"end": 4125,
											"name": "CREATE",
											"source": 12
										},
										{
											"begin": 4075,
											"end": 4125,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4075,
											"end": 4125,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4075,
											"end": 4125,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4075,
											"end": 4125,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4075,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 4075,
											"end": 4125,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4075,
											"end": 4125,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 4075,
											"end": 4125,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4075,
											"end": 4125,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4075,
											"end": 4125,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 4075,
											"end": 4125,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 4075,
											"end": 4125,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4075,
											"end": 4125,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4075,
											"end": 4125,
											"name": "tag",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 4075,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4075,
											"end": 4125,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4058,
											"end": 4125,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4058,
											"end": 4125,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4154,
											"end": 4162,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4139,
											"end": 4145,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 4139,
											"end": 4151,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4146,
											"end": 4150,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4139,
											"end": 4151,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4139,
											"end": 4151,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4139,
											"end": 4151,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4139,
											"end": 4151,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4139,
											"end": 4151,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4139,
											"end": 4151,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4139,
											"end": 4151,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4139,
											"end": 4151,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4139,
											"end": 4151,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4139,
											"end": 4151,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4139,
											"end": 4151,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4139,
											"end": 4151,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4139,
											"end": 4151,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4139,
											"end": 4151,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4151,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4139,
											"end": 4151,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4162,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 4139,
											"end": 4162,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 4139,
											"end": 4162,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4139,
											"end": 4162,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4139,
											"end": 4162,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4139,
											"end": 4162,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4139,
											"end": 4162,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 4139,
											"end": 4162,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 4139,
											"end": 4162,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4139,
											"end": 4162,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4139,
											"end": 4162,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4139,
											"end": 4162,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4139,
											"end": 4162,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4139,
											"end": 4162,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 4139,
											"end": 4162,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 4139,
											"end": 4162,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4139,
											"end": 4162,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4139,
											"end": 4162,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4044,
											"end": 4173,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4003,
											"end": 4173,
											"name": "tag",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 4003,
											"end": 4173,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4189,
											"end": 4195,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 4189,
											"end": 4201,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4196,
											"end": 4200,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4189,
											"end": 4201,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4189,
											"end": 4201,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4189,
											"end": 4201,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4189,
											"end": 4201,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4189,
											"end": 4201,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4189,
											"end": 4201,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4189,
											"end": 4201,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4189,
											"end": 4201,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4189,
											"end": 4201,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4189,
											"end": 4201,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4189,
											"end": 4201,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4189,
											"end": 4201,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4189,
											"end": 4201,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4189,
											"end": 4201,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4189,
											"end": 4201,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4189,
											"end": 4201,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4189,
											"end": 4201,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4189,
											"end": 4201,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4189,
											"end": 4201,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4189,
											"end": 4201,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 4189,
											"end": 4201,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 4189,
											"end": 4201,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4189,
											"end": 4201,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 4189,
											"end": 4201,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4189,
											"end": 4201,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4182,
											"end": 4201,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4182,
											"end": 4201,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3935,
											"end": 4208,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3935,
											"end": 4208,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3935,
											"end": 4208,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3935,
											"end": 4208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1760,
											"end": 1765,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1718,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 1718,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7547,
											"end": 7548,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 6,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 7572,
											"end": 7604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "tag",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 7624,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "tag",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7458,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 6,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 6,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 6,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 6,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 6,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "tag",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7766,
											"end": 7784,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7794,
											"end": 7813,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7932,
											"end": 7936,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7929,
											"end": 7930,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7922,
											"end": 7926,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7916,
											"end": 7927,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7909,
											"end": 7913,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7903,
											"end": 7907,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7896,
											"end": 7897,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7889,
											"end": 7894,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 7882,
											"end": 7887,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 7877,
											"end": 7937,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 7989,
											"end": 7996,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8033,
											"end": 8037,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8027,
											"end": 8038,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8078,
											"end": 8094,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 8075,
											"end": 8076,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8070,
											"end": 8073,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8055,
											"end": 8095,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8140,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 8119,
											"end": 8122,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "tag",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8182,
											"end": 8198,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 8168,
											"end": 8198,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8168,
											"end": 8198,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8232,
											"end": 8233,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8226,
											"end": 8234,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8211,
											"end": 8234,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8211,
											"end": 8234,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7848,
											"end": 8244,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8272,
											"end": 8273,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8258,
											"end": 8268,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8258,
											"end": 8273,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8325,
											"end": 8326,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 8310,
											"end": 8321,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8310,
											"end": 8326,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 8310,
											"end": 8326,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "tag",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8306,
											"end": 8307,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8284,
											"end": 8289,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 8276,
											"end": 8307,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "tag",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8382,
											"end": 8387,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 9,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 8349,
											"end": 8389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "tag",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7756,
											"end": 8406,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7756,
											"end": 8406,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7686,
											"end": 8406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "283"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH #[$]",
											"source": -1,
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [$]",
											"source": -1,
											"value": "0000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "tag",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1077,
											"end": 1083,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1111,
											"end": 1116,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1105,
											"end": 1117,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1095,
											"end": 1117,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1095,
											"end": 1117,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1025,
											"end": 1124,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1025,
											"end": 1124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1130,
											"end": 1299,
											"name": "tag",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 1130,
											"end": 1299,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1214,
											"end": 1225,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1243,
											"end": 1246,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1236,
											"end": 1255,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1288,
											"end": 1292,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1283,
											"end": 1286,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1279,
											"end": 1293,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1264,
											"end": 1293,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1264,
											"end": 1293,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1130,
											"end": 1299,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1130,
											"end": 1299,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1130,
											"end": 1299,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1130,
											"end": 1299,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1130,
											"end": 1299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1444,
											"name": "tag",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 1305,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1394,
											"end": 1400,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1389,
											"end": 1392,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1384,
											"end": 1387,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1378,
											"end": 1401,
											"name": "MCOPY",
											"source": 13
										},
										{
											"begin": 1435,
											"end": 1436,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1426,
											"end": 1432,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1421,
											"end": 1424,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1417,
											"end": 1433,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1410,
											"end": 1437,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1444,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1444,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1444,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1450,
											"end": 1552,
											"name": "tag",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 1450,
											"end": 1552,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1491,
											"end": 1497,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1542,
											"end": 1544,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1538,
											"end": 1545,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1533,
											"end": 1535,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1526,
											"end": 1531,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1522,
											"end": 1536,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1546,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1508,
											"end": 1546,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1508,
											"end": 1546,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1450,
											"end": 1552,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1450,
											"end": 1552,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1450,
											"end": 1552,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1450,
											"end": 1552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1558,
											"end": 1935,
											"name": "tag",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 1558,
											"end": 1935,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1646,
											"end": 1649,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1674,
											"end": 1713,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 1707,
											"end": 1712,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1674,
											"end": 1713,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 1674,
											"end": 1713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1674,
											"end": 1713,
											"name": "tag",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 1674,
											"end": 1713,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1729,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 1793,
											"end": 1799,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1788,
											"end": 1791,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1729,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 1729,
											"end": 1800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1729,
											"end": 1800,
											"name": "tag",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 1729,
											"end": 1800,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1722,
											"end": 1800,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1722,
											"end": 1800,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1809,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 1867,
											"end": 1873,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1862,
											"end": 1865,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1855,
											"end": 1859,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1848,
											"end": 1853,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1844,
											"end": 1860,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1809,
											"end": 1874,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 1809,
											"end": 1874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1809,
											"end": 1874,
											"name": "tag",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 1809,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1899,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 1921,
											"end": 1927,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1899,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 1899,
											"end": 1928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1899,
											"end": 1928,
											"name": "tag",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 1899,
											"end": 1928,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1894,
											"end": 1897,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1890,
											"end": 1929,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1883,
											"end": 1929,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1883,
											"end": 1929,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1650,
											"end": 1935,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1558,
											"end": 1935,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1558,
											"end": 1935,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1558,
											"end": 1935,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1558,
											"end": 1935,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1558,
											"end": 1935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1941,
											"end": 2254,
											"name": "tag",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 1941,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2054,
											"end": 2058,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2092,
											"end": 2094,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2081,
											"end": 2090,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2077,
											"end": 2095,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2069,
											"end": 2095,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2069,
											"end": 2095,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2141,
											"end": 2150,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2135,
											"end": 2139,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2131,
											"end": 2151,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2127,
											"end": 2128,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2116,
											"end": 2125,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2112,
											"end": 2129,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2105,
											"end": 2152,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2169,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 2242,
											"end": 2246,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2233,
											"end": 2239,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2169,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 2169,
											"end": 2247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2169,
											"end": 2247,
											"name": "tag",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 2169,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2247,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2161,
											"end": 2247,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1941,
											"end": 2254,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1941,
											"end": 2254,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1941,
											"end": 2254,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1941,
											"end": 2254,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1941,
											"end": 2254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2260,
											"end": 2386,
											"name": "tag",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 2260,
											"end": 2386,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2297,
											"end": 2304,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2379,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2330,
											"end": 2335,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2326,
											"end": 2380,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2315,
											"end": 2380,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2315,
											"end": 2380,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2260,
											"end": 2386,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2260,
											"end": 2386,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2260,
											"end": 2386,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2260,
											"end": 2386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2392,
											"end": 2488,
											"name": "tag",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 2392,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2429,
											"end": 2436,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2458,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 2476,
											"end": 2481,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2458,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 2458,
											"end": 2482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2458,
											"end": 2482,
											"name": "tag",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 2458,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2447,
											"end": 2482,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2447,
											"end": 2482,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2392,
											"end": 2488,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2392,
											"end": 2488,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2392,
											"end": 2488,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2392,
											"end": 2488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2494,
											"end": 2616,
											"name": "tag",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 2494,
											"end": 2616,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2567,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 2585,
											"end": 2590,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2567,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 2567,
											"end": 2591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2567,
											"end": 2591,
											"name": "tag",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 2567,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2560,
											"end": 2565,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2557,
											"end": 2592,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2547,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 2547,
											"end": 2610,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2606,
											"end": 2607,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2603,
											"end": 2604,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2596,
											"end": 2608,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2547,
											"end": 2610,
											"name": "tag",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 2547,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2494,
											"end": 2616,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2494,
											"end": 2616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2622,
											"end": 2761,
											"name": "tag",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 2622,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2668,
											"end": 2673,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2706,
											"end": 2712,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2693,
											"end": 2713,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2684,
											"end": 2713,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2684,
											"end": 2713,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2722,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 2749,
											"end": 2754,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2722,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 2722,
											"end": 2755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2722,
											"end": 2755,
											"name": "tag",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 2722,
											"end": 2755,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2622,
											"end": 2761,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2622,
											"end": 2761,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2622,
											"end": 2761,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2622,
											"end": 2761,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2622,
											"end": 2761,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2767,
											"end": 3241,
											"name": "tag",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 2767,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2835,
											"end": 2841,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2849,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2892,
											"end": 2894,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2880,
											"end": 2889,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2871,
											"end": 2878,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2867,
											"end": 2890,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2863,
											"end": 2895,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2860,
											"end": 2979,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2860,
											"end": 2979,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 2860,
											"end": 2979,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2898,
											"end": 2977,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 2898,
											"end": 2977,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 2898,
											"end": 2977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2898,
											"end": 2977,
											"name": "tag",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 2898,
											"end": 2977,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2860,
											"end": 2979,
											"name": "tag",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 2860,
											"end": 2979,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3018,
											"end": 3019,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3043,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 3088,
											"end": 3095,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3079,
											"end": 3085,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3064,
											"end": 3086,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3043,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 3043,
											"end": 3096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3043,
											"end": 3096,
											"name": "tag",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 3043,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3033,
											"end": 3096,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3033,
											"end": 3096,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2989,
											"end": 3106,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3145,
											"end": 3147,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3171,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 3216,
											"end": 3223,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3207,
											"end": 3213,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3196,
											"end": 3205,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3192,
											"end": 3214,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3171,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 3171,
											"end": 3224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3171,
											"end": 3224,
											"name": "tag",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 3171,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3161,
											"end": 3224,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3161,
											"end": 3224,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3116,
											"end": 3234,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2767,
											"end": 3241,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2767,
											"end": 3241,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2767,
											"end": 3241,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2767,
											"end": 3241,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2767,
											"end": 3241,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2767,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3247,
											"end": 3337,
											"name": "tag",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 3247,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3281,
											"end": 3288,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3329,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3317,
											"end": 3330,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3310,
											"end": 3331,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3299,
											"end": 3331,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3299,
											"end": 3331,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3247,
											"end": 3337,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3247,
											"end": 3337,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3247,
											"end": 3337,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3247,
											"end": 3337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3343,
											"end": 3452,
											"name": "tag",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 3343,
											"end": 3452,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3424,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 3439,
											"end": 3444,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3424,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 3424,
											"end": 3445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3424,
											"end": 3445,
											"name": "tag",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 3424,
											"end": 3445,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3419,
											"end": 3422,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3412,
											"end": 3446,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3343,
											"end": 3452,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3343,
											"end": 3452,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3343,
											"end": 3452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3458,
											"end": 3668,
											"name": "tag",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 3458,
											"end": 3668,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3545,
											"end": 3549,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3585,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3572,
											"end": 3581,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3568,
											"end": 3586,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3560,
											"end": 3586,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3560,
											"end": 3586,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3596,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 3658,
											"end": 3659,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3647,
											"end": 3656,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3643,
											"end": 3660,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3634,
											"end": 3640,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3596,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 3596,
											"end": 3661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3596,
											"end": 3661,
											"name": "tag",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 3596,
											"end": 3661,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3458,
											"end": 3668,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3458,
											"end": 3668,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3458,
											"end": 3668,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3458,
											"end": 3668,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3458,
											"end": 3668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3674,
											"end": 4003,
											"name": "tag",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 3674,
											"end": 4003,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3733,
											"end": 3739,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3782,
											"end": 3784,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3770,
											"end": 3779,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3761,
											"end": 3768,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3757,
											"end": 3780,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3753,
											"end": 3785,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3750,
											"end": 3869,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3750,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 3750,
											"end": 3869,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3788,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 3788,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 3788,
											"end": 3867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3788,
											"end": 3867,
											"name": "tag",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 3788,
											"end": 3867,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3750,
											"end": 3869,
											"name": "tag",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 3750,
											"end": 3869,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3908,
											"end": 3909,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3933,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 3978,
											"end": 3985,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3969,
											"end": 3975,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3958,
											"end": 3967,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3954,
											"end": 3976,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3933,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 3933,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3933,
											"end": 3986,
											"name": "tag",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 3933,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3923,
											"end": 3986,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3923,
											"end": 3986,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3879,
											"end": 3996,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3674,
											"end": 4003,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3674,
											"end": 4003,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3674,
											"end": 4003,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3674,
											"end": 4003,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3674,
											"end": 4003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4009,
											"end": 4127,
											"name": "tag",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 4009,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4096,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 4114,
											"end": 4119,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4096,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 4096,
											"end": 4120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4096,
											"end": 4120,
											"name": "tag",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 4096,
											"end": 4120,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4091,
											"end": 4094,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4084,
											"end": 4121,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4009,
											"end": 4127,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4009,
											"end": 4127,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4009,
											"end": 4127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4133,
											"end": 4355,
											"name": "tag",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 4133,
											"end": 4355,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4226,
											"end": 4230,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4264,
											"end": 4266,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4253,
											"end": 4262,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4249,
											"end": 4267,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4241,
											"end": 4267,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4241,
											"end": 4267,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4277,
											"end": 4348,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 4345,
											"end": 4346,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4334,
											"end": 4343,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4330,
											"end": 4347,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4321,
											"end": 4327,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4277,
											"end": 4348,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 4277,
											"end": 4348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4277,
											"end": 4348,
											"name": "tag",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 4277,
											"end": 4348,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4133,
											"end": 4355,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4133,
											"end": 4355,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4133,
											"end": 4355,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4133,
											"end": 4355,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4133,
											"end": 4355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4361,
											"end": 4980,
											"name": "tag",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 4361,
											"end": 4980,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4438,
											"end": 4444,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4446,
											"end": 4452,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4454,
											"end": 4460,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4503,
											"end": 4505,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4491,
											"end": 4500,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4482,
											"end": 4489,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4478,
											"end": 4501,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4474,
											"end": 4506,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4471,
											"end": 4590,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4471,
											"end": 4590,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 4471,
											"end": 4590,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4509,
											"end": 4588,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 4509,
											"end": 4588,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 4509,
											"end": 4588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4509,
											"end": 4588,
											"name": "tag",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 4509,
											"end": 4588,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4471,
											"end": 4590,
											"name": "tag",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 4471,
											"end": 4590,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4629,
											"end": 4630,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4654,
											"end": 4707,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 4699,
											"end": 4706,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4690,
											"end": 4696,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4679,
											"end": 4688,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4675,
											"end": 4697,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4654,
											"end": 4707,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 4654,
											"end": 4707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4654,
											"end": 4707,
											"name": "tag",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 4654,
											"end": 4707,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4644,
											"end": 4707,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4644,
											"end": 4707,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4600,
											"end": 4717,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4756,
											"end": 4758,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4782,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 4827,
											"end": 4834,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4818,
											"end": 4824,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4807,
											"end": 4816,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4803,
											"end": 4825,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4782,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 4782,
											"end": 4835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4782,
											"end": 4835,
											"name": "tag",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 4782,
											"end": 4835,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4772,
											"end": 4835,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4772,
											"end": 4835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4727,
											"end": 4845,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4886,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4910,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 4955,
											"end": 4962,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4946,
											"end": 4952,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4935,
											"end": 4944,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4931,
											"end": 4953,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4910,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 4910,
											"end": 4963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4910,
											"end": 4963,
											"name": "tag",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 4910,
											"end": 4963,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4900,
											"end": 4963,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4900,
											"end": 4963,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4855,
											"end": 4973,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4361,
											"end": 4980,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4361,
											"end": 4980,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4361,
											"end": 4980,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4361,
											"end": 4980,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4361,
											"end": 4980,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4361,
											"end": 4980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4986,
											"end": 5072,
											"name": "tag",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 4986,
											"end": 5072,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5021,
											"end": 5028,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5061,
											"end": 5065,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 5054,
											"end": 5059,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5050,
											"end": 5066,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5039,
											"end": 5066,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5039,
											"end": 5066,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4986,
											"end": 5072,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4986,
											"end": 5072,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4986,
											"end": 5072,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4986,
											"end": 5072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5078,
											"end": 5190,
											"name": "tag",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 5078,
											"end": 5190,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5161,
											"end": 5183,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 5177,
											"end": 5182,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5161,
											"end": 5183,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 5161,
											"end": 5183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5161,
											"end": 5183,
											"name": "tag",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 5161,
											"end": 5183,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5156,
											"end": 5159,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5149,
											"end": 5184,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5078,
											"end": 5190,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5078,
											"end": 5190,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5078,
											"end": 5190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5196,
											"end": 5410,
											"name": "tag",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5196,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5285,
											"end": 5289,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5323,
											"end": 5325,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5312,
											"end": 5321,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5308,
											"end": 5326,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5300,
											"end": 5326,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5300,
											"end": 5326,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5336,
											"end": 5403,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 5400,
											"end": 5401,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5389,
											"end": 5398,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5385,
											"end": 5402,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5376,
											"end": 5382,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5336,
											"end": 5403,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 5336,
											"end": 5403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5336,
											"end": 5403,
											"name": "tag",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 5336,
											"end": 5403,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5196,
											"end": 5410,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5196,
											"end": 5410,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5196,
											"end": 5410,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5196,
											"end": 5410,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5196,
											"end": 5410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "tag",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 5521,
											"end": 5526,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 5503,
											"end": 5527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "tag",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5491,
											"end": 5528,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5416,
											"end": 5534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "tag",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5633,
											"end": 5637,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5671,
											"end": 5673,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5656,
											"end": 5674,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5648,
											"end": 5674,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5648,
											"end": 5674,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 5752,
											"end": 5753,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5741,
											"end": 5750,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5737,
											"end": 5754,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5728,
											"end": 5734,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 5684,
											"end": 5755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "tag",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5540,
											"end": 5762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5768,
											"end": 5828,
											"name": "tag",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 5768,
											"end": 5828,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5796,
											"end": 5799,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5817,
											"end": 5822,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5810,
											"end": 5822,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5810,
											"end": 5822,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5768,
											"end": 5828,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5768,
											"end": 5828,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5768,
											"end": 5828,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5768,
											"end": 5828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5834,
											"end": 5976,
											"name": "tag",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 5834,
											"end": 5976,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5884,
											"end": 5893,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5917,
											"end": 5970,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 5935,
											"end": 5969,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 5944,
											"end": 5968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 5962,
											"end": 5967,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5944,
											"end": 5968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 5944,
											"end": 5968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5944,
											"end": 5968,
											"name": "tag",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 5944,
											"end": 5968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5935,
											"end": 5969,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 5935,
											"end": 5969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5935,
											"end": 5969,
											"name": "tag",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 5935,
											"end": 5969,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5917,
											"end": 5970,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 5917,
											"end": 5970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5917,
											"end": 5970,
											"name": "tag",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 5917,
											"end": 5970,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5904,
											"end": 5970,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5904,
											"end": 5970,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5834,
											"end": 5976,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5834,
											"end": 5976,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5834,
											"end": 5976,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5834,
											"end": 5976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5982,
											"end": 6108,
											"name": "tag",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 5982,
											"end": 6108,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6032,
											"end": 6041,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6065,
											"end": 6102,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 6096,
											"end": 6101,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6065,
											"end": 6102,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 6065,
											"end": 6102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6065,
											"end": 6102,
											"name": "tag",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 6065,
											"end": 6102,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6052,
											"end": 6102,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6052,
											"end": 6102,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5982,
											"end": 6108,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5982,
											"end": 6108,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5982,
											"end": 6108,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5982,
											"end": 6108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6114,
											"end": 6254,
											"name": "tag",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 6114,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6178,
											"end": 6187,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6211,
											"end": 6248,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 6242,
											"end": 6247,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6211,
											"end": 6248,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 6211,
											"end": 6248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6211,
											"end": 6248,
											"name": "tag",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 6211,
											"end": 6248,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6198,
											"end": 6248,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6198,
											"end": 6248,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6114,
											"end": 6254,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6114,
											"end": 6254,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6114,
											"end": 6254,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6114,
											"end": 6254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6260,
											"end": 6419,
											"name": "tag",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 6260,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6361,
											"end": 6412,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 6406,
											"end": 6411,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6361,
											"end": 6412,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 6361,
											"end": 6412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6361,
											"end": 6412,
											"name": "tag",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 6361,
											"end": 6412,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6356,
											"end": 6359,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6349,
											"end": 6413,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6260,
											"end": 6419,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6260,
											"end": 6419,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6260,
											"end": 6419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6425,
											"end": 6675,
											"name": "tag",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 6425,
											"end": 6675,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6532,
											"end": 6536,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6572,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6559,
											"end": 6568,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6555,
											"end": 6573,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6547,
											"end": 6573,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6547,
											"end": 6573,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6583,
											"end": 6668,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 6665,
											"end": 6666,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6654,
											"end": 6663,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6650,
											"end": 6667,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6641,
											"end": 6647,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6583,
											"end": 6668,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 6583,
											"end": 6668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6583,
											"end": 6668,
											"name": "tag",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 6583,
											"end": 6668,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6425,
											"end": 6675,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6425,
											"end": 6675,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6425,
											"end": 6675,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6425,
											"end": 6675,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6425,
											"end": 6675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6681,
											"end": 6822,
											"name": "tag",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 6681,
											"end": 6822,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6746,
											"end": 6755,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6779,
											"end": 6816,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 6810,
											"end": 6815,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6779,
											"end": 6816,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 6779,
											"end": 6816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6779,
											"end": 6816,
											"name": "tag",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 6779,
											"end": 6816,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6766,
											"end": 6816,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6766,
											"end": 6816,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6681,
											"end": 6822,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6681,
											"end": 6822,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6681,
											"end": 6822,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6681,
											"end": 6822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6828,
											"end": 6989,
											"name": "tag",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 6828,
											"end": 6989,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6930,
											"end": 6982,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 6976,
											"end": 6981,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6930,
											"end": 6982,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 6930,
											"end": 6982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6930,
											"end": 6982,
											"name": "tag",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 6930,
											"end": 6982,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6925,
											"end": 6928,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6918,
											"end": 6983,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6828,
											"end": 6989,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6828,
											"end": 6989,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6828,
											"end": 6989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6995,
											"end": 7247,
											"name": "tag",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 6995,
											"end": 7247,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7103,
											"end": 7107,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7141,
											"end": 7143,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7130,
											"end": 7139,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7126,
											"end": 7144,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7118,
											"end": 7144,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7118,
											"end": 7144,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7154,
											"end": 7240,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 7237,
											"end": 7238,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7226,
											"end": 7235,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7222,
											"end": 7239,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7213,
											"end": 7219,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7154,
											"end": 7240,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 7154,
											"end": 7240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7154,
											"end": 7240,
											"name": "tag",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 7154,
											"end": 7240,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6995,
											"end": 7247,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6995,
											"end": 7247,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6995,
											"end": 7247,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6995,
											"end": 7247,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6995,
											"end": 7247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7253,
											"end": 7727,
											"name": "tag",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 7253,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7321,
											"end": 7327,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7329,
											"end": 7335,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7378,
											"end": 7380,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7366,
											"end": 7375,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7357,
											"end": 7364,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7353,
											"end": 7376,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7349,
											"end": 7381,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 7346,
											"end": 7465,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7346,
											"end": 7465,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 7346,
											"end": 7465,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7384,
											"end": 7463,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 7384,
											"end": 7463,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 7384,
											"end": 7463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7384,
											"end": 7463,
											"name": "tag",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 7384,
											"end": 7463,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7346,
											"end": 7465,
											"name": "tag",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 7346,
											"end": 7465,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7504,
											"end": 7505,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7529,
											"end": 7582,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 7574,
											"end": 7581,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7565,
											"end": 7571,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7554,
											"end": 7563,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7550,
											"end": 7572,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7529,
											"end": 7582,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 7529,
											"end": 7582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7529,
											"end": 7582,
											"name": "tag",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 7529,
											"end": 7582,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7519,
											"end": 7582,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7519,
											"end": 7582,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7475,
											"end": 7592,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7631,
											"end": 7633,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7657,
											"end": 7710,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 7702,
											"end": 7709,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7693,
											"end": 7699,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7682,
											"end": 7691,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7678,
											"end": 7700,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7657,
											"end": 7710,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 7657,
											"end": 7710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7657,
											"end": 7710,
											"name": "tag",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 7657,
											"end": 7710,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7647,
											"end": 7710,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7647,
											"end": 7710,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7602,
											"end": 7720,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7253,
											"end": 7727,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7253,
											"end": 7727,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7253,
											"end": 7727,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7253,
											"end": 7727,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7253,
											"end": 7727,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7253,
											"end": 7727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7733,
											"end": 7965,
											"name": "tag",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 7733,
											"end": 7965,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7873,
											"end": 7907,
											"name": "PUSH",
											"source": 13,
											"value": "436F6C6C61746572616C697A6174696F6E20726174696F206D75737420626520"
										},
										{
											"begin": 7869,
											"end": 7870,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7861,
											"end": 7867,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7857,
											"end": 7871,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7850,
											"end": 7908,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7942,
											"end": 7957,
											"name": "PUSH",
											"source": 13,
											"value": "6174206C65617374203130302500000000000000000000000000000000000000"
										},
										{
											"begin": 7937,
											"end": 7939,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7929,
											"end": 7935,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7925,
											"end": 7940,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7918,
											"end": 7958,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7733,
											"end": 7965,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7733,
											"end": 7965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8337,
											"name": "tag",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 7971,
											"end": 8337,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8113,
											"end": 8116,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8134,
											"end": 8201,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 8198,
											"end": 8200,
											"name": "PUSH",
											"source": 13,
											"value": "2D"
										},
										{
											"begin": 8193,
											"end": 8196,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8134,
											"end": 8201,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 8134,
											"end": 8201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8134,
											"end": 8201,
											"name": "tag",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 8134,
											"end": 8201,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8127,
											"end": 8201,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8127,
											"end": 8201,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8210,
											"end": 8303,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 8299,
											"end": 8302,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8210,
											"end": 8303,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 8210,
											"end": 8303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8210,
											"end": 8303,
											"name": "tag",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 8210,
											"end": 8303,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8328,
											"end": 8330,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8323,
											"end": 8326,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8319,
											"end": 8331,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8312,
											"end": 8331,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8312,
											"end": 8331,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8337,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8337,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8337,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 8337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8343,
											"end": 8762,
											"name": "tag",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 8343,
											"end": 8762,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8509,
											"end": 8513,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8547,
											"end": 8549,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8536,
											"end": 8545,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8532,
											"end": 8550,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8524,
											"end": 8550,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8524,
											"end": 8550,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8596,
											"end": 8605,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8590,
											"end": 8594,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8586,
											"end": 8606,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8582,
											"end": 8583,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8571,
											"end": 8580,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8567,
											"end": 8584,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8560,
											"end": 8607,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8624,
											"end": 8755,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 8750,
											"end": 8754,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8624,
											"end": 8755,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 8624,
											"end": 8755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8624,
											"end": 8755,
											"name": "tag",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 8624,
											"end": 8755,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8616,
											"end": 8755,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8616,
											"end": 8755,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8343,
											"end": 8762,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8343,
											"end": 8762,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8343,
											"end": 8762,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8343,
											"end": 8762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8768,
											"end": 8948,
											"name": "tag",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 8768,
											"end": 8948,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8816,
											"end": 8893,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8813,
											"end": 8814,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8806,
											"end": 8894,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8913,
											"end": 8917,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 8910,
											"end": 8911,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8903,
											"end": 8918,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8937,
											"end": 8941,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8934,
											"end": 8935,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8927,
											"end": 8942,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8954,
											"end": 9274,
											"name": "tag",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 8954,
											"end": 9274,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8998,
											"end": 9004,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9035,
											"end": 9036,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 9029,
											"end": 9033,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9025,
											"end": 9037,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 9015,
											"end": 9037,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9015,
											"end": 9037,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9082,
											"end": 9083,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 9076,
											"end": 9080,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9072,
											"end": 9084,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9103,
											"end": 9121,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9093,
											"end": 9174,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "463"
										},
										{
											"begin": 9093,
											"end": 9174,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9159,
											"end": 9163,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 9151,
											"end": 9157,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9147,
											"end": 9164,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9137,
											"end": 9164,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9137,
											"end": 9164,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9093,
											"end": 9174,
											"name": "tag",
											"source": 13,
											"value": "463"
										},
										{
											"begin": 9093,
											"end": 9174,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9221,
											"end": 9223,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9213,
											"end": 9219,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9210,
											"end": 9224,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 9190,
											"end": 9208,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9187,
											"end": 9225,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9184,
											"end": 9268,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 9184,
											"end": 9268,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9240,
											"end": 9258,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 9240,
											"end": 9258,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 9240,
											"end": 9258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9240,
											"end": 9258,
											"name": "tag",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 9240,
											"end": 9258,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9184,
											"end": 9268,
											"name": "tag",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 9184,
											"end": 9268,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9005,
											"end": 9274,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8954,
											"end": 9274,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8954,
											"end": 9274,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8954,
											"end": 9274,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8954,
											"end": 9274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9280,
											"end": 9448,
											"name": "tag",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 9280,
											"end": 9448,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9420,
											"end": 9440,
											"name": "PUSH",
											"source": 13,
											"value": "416D6F756E74206D757374206265203E20300000000000000000000000000000"
										},
										{
											"begin": 9416,
											"end": 9417,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9408,
											"end": 9414,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9404,
											"end": 9418,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9397,
											"end": 9441,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9280,
											"end": 9448,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9280,
											"end": 9448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9454,
											"end": 9820,
											"name": "tag",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 9454,
											"end": 9820,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9596,
											"end": 9599,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9617,
											"end": 9684,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 9681,
											"end": 9683,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 9676,
											"end": 9679,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9617,
											"end": 9684,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 9617,
											"end": 9684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9617,
											"end": 9684,
											"name": "tag",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 9617,
											"end": 9684,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9610,
											"end": 9684,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9610,
											"end": 9684,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9693,
											"end": 9786,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 9782,
											"end": 9785,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9693,
											"end": 9786,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 9693,
											"end": 9786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9693,
											"end": 9786,
											"name": "tag",
											"source": 13,
											"value": "469"
										},
										{
											"begin": 9693,
											"end": 9786,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9811,
											"end": 9813,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9806,
											"end": 9809,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9802,
											"end": 9814,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9795,
											"end": 9814,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9795,
											"end": 9814,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9454,
											"end": 9820,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9454,
											"end": 9820,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9454,
											"end": 9820,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9454,
											"end": 9820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9826,
											"end": 10245,
											"name": "tag",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 9826,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9992,
											"end": 9996,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10030,
											"end": 10032,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10019,
											"end": 10028,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10015,
											"end": 10033,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10007,
											"end": 10033,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10007,
											"end": 10033,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10079,
											"end": 10088,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10073,
											"end": 10077,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10069,
											"end": 10089,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10065,
											"end": 10066,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10054,
											"end": 10063,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10050,
											"end": 10067,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10043,
											"end": 10090,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10107,
											"end": 10238,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 10233,
											"end": 10237,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10107,
											"end": 10238,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 10107,
											"end": 10238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10107,
											"end": 10238,
											"name": "tag",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 10107,
											"end": 10238,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10099,
											"end": 10238,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10099,
											"end": 10238,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9826,
											"end": 10245,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9826,
											"end": 10245,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9826,
											"end": 10245,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9826,
											"end": 10245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10251,
											"end": 10420,
											"name": "tag",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 10251,
											"end": 10420,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10391,
											"end": 10412,
											"name": "PUSH",
											"source": 13,
											"value": "416D6F756E742065786365656473206465627400000000000000000000000000"
										},
										{
											"begin": 10387,
											"end": 10388,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10379,
											"end": 10385,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10375,
											"end": 10389,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10368,
											"end": 10413,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10251,
											"end": 10420,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10251,
											"end": 10420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10426,
											"end": 10792,
											"name": "tag",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 10426,
											"end": 10792,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10568,
											"end": 10571,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10589,
											"end": 10656,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 10653,
											"end": 10655,
											"name": "PUSH",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 10648,
											"end": 10651,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10589,
											"end": 10656,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 10589,
											"end": 10656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10589,
											"end": 10656,
											"name": "tag",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 10589,
											"end": 10656,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10582,
											"end": 10656,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10582,
											"end": 10656,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10665,
											"end": 10758,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 10754,
											"end": 10757,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10665,
											"end": 10758,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 10665,
											"end": 10758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10665,
											"end": 10758,
											"name": "tag",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 10665,
											"end": 10758,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10783,
											"end": 10785,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10778,
											"end": 10781,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10774,
											"end": 10786,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10767,
											"end": 10786,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10767,
											"end": 10786,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10426,
											"end": 10792,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10426,
											"end": 10792,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10426,
											"end": 10792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10426,
											"end": 10792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10798,
											"end": 11217,
											"name": "tag",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 10798,
											"end": 11217,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10964,
											"end": 10968,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11002,
											"end": 11004,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10991,
											"end": 11000,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10987,
											"end": 11005,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10979,
											"end": 11005,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10979,
											"end": 11005,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11051,
											"end": 11060,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11045,
											"end": 11049,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11041,
											"end": 11061,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11037,
											"end": 11038,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11026,
											"end": 11035,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11022,
											"end": 11039,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11015,
											"end": 11062,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11079,
											"end": 11210,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 11205,
											"end": 11209,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11079,
											"end": 11210,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 11079,
											"end": 11210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11079,
											"end": 11210,
											"name": "tag",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 11079,
											"end": 11210,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11071,
											"end": 11210,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11071,
											"end": 11210,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10798,
											"end": 11217,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10798,
											"end": 11217,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10798,
											"end": 11217,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10798,
											"end": 11217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11223,
											"end": 11403,
											"name": "tag",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 11223,
											"end": 11403,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11271,
											"end": 11348,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11268,
											"end": 11269,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11261,
											"end": 11349,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11368,
											"end": 11372,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 11365,
											"end": 11366,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 11358,
											"end": 11373,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11392,
											"end": 11396,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 11389,
											"end": 11390,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11382,
											"end": 11397,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 11409,
											"end": 11603,
											"name": "tag",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 11409,
											"end": 11603,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11449,
											"end": 11453,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11469,
											"end": 11489,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 11487,
											"end": 11488,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11469,
											"end": 11489,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 11469,
											"end": 11489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11469,
											"end": 11489,
											"name": "tag",
											"source": 13,
											"value": "480"
										},
										{
											"begin": 11469,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11464,
											"end": 11489,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11464,
											"end": 11489,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11503,
											"end": 11523,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 11521,
											"end": 11522,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11503,
											"end": 11523,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 11503,
											"end": 11523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11503,
											"end": 11523,
											"name": "tag",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 11503,
											"end": 11523,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11498,
											"end": 11523,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11498,
											"end": 11523,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11547,
											"end": 11548,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11544,
											"end": 11545,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11540,
											"end": 11549,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11532,
											"end": 11549,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11532,
											"end": 11549,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11571,
											"end": 11572,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11565,
											"end": 11569,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11562,
											"end": 11573,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 11559,
											"end": 11596,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11559,
											"end": 11596,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 11559,
											"end": 11596,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11576,
											"end": 11594,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 11576,
											"end": 11594,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 11576,
											"end": 11594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11576,
											"end": 11594,
											"name": "tag",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 11576,
											"end": 11594,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11559,
											"end": 11596,
											"name": "tag",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 11559,
											"end": 11596,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11409,
											"end": 11603,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11409,
											"end": 11603,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11409,
											"end": 11603,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11409,
											"end": 11603,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11409,
											"end": 11603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11609,
											"end": 11790,
											"name": "tag",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 11609,
											"end": 11790,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11749,
											"end": 11782,
											"name": "PUSH",
											"source": 13,
											"value": "496E73756666696369656E7420636F6C6C61746572616C2062616C616E636500"
										},
										{
											"begin": 11745,
											"end": 11746,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11737,
											"end": 11743,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11733,
											"end": 11747,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11726,
											"end": 11783,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11609,
											"end": 11790,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11609,
											"end": 11790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11796,
											"end": 12162,
											"name": "tag",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 11796,
											"end": 12162,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11938,
											"end": 11941,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11959,
											"end": 12026,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 12023,
											"end": 12025,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 12018,
											"end": 12021,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11959,
											"end": 12026,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 11959,
											"end": 12026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11959,
											"end": 12026,
											"name": "tag",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 11959,
											"end": 12026,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11952,
											"end": 12026,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11952,
											"end": 12026,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12035,
											"end": 12128,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 12124,
											"end": 12127,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12035,
											"end": 12128,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 12035,
											"end": 12128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12035,
											"end": 12128,
											"name": "tag",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 12035,
											"end": 12128,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12153,
											"end": 12155,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12148,
											"end": 12151,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12144,
											"end": 12156,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12137,
											"end": 12156,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12137,
											"end": 12156,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11796,
											"end": 12162,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11796,
											"end": 12162,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11796,
											"end": 12162,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11796,
											"end": 12162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12168,
											"end": 12587,
											"name": "tag",
											"source": 13,
											"value": "169"
										},
										{
											"begin": 12168,
											"end": 12587,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12334,
											"end": 12338,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12372,
											"end": 12374,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12361,
											"end": 12370,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12357,
											"end": 12375,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12349,
											"end": 12375,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12349,
											"end": 12375,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12421,
											"end": 12430,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12415,
											"end": 12419,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12411,
											"end": 12431,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12407,
											"end": 12408,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12396,
											"end": 12405,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12392,
											"end": 12409,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12385,
											"end": 12432,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12449,
											"end": 12580,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 12575,
											"end": 12579,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12449,
											"end": 12580,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 12449,
											"end": 12580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12449,
											"end": 12580,
											"name": "tag",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 12449,
											"end": 12580,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12441,
											"end": 12580,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12441,
											"end": 12580,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12168,
											"end": 12587,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12168,
											"end": 12587,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12168,
											"end": 12587,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12168,
											"end": 12587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12593,
											"end": 12827,
											"name": "tag",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 12593,
											"end": 12827,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12733,
											"end": 12767,
											"name": "PUSH",
											"source": 13,
											"value": "5769746864726177616C20776F756C642062726561636820636F6C6C61746572"
										},
										{
											"begin": 12729,
											"end": 12730,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12721,
											"end": 12727,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12717,
											"end": 12731,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12710,
											"end": 12768,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12802,
											"end": 12819,
											"name": "PUSH",
											"source": 13,
											"value": "616C697A6174696F6E20726174696F0000000000000000000000000000000000"
										},
										{
											"begin": 12797,
											"end": 12799,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12789,
											"end": 12795,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12785,
											"end": 12800,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12778,
											"end": 12820,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12593,
											"end": 12827,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12593,
											"end": 12827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12833,
											"end": 13199,
											"name": "tag",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 12833,
											"end": 13199,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12975,
											"end": 12978,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12996,
											"end": 13063,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 13060,
											"end": 13062,
											"name": "PUSH",
											"source": 13,
											"value": "2F"
										},
										{
											"begin": 13055,
											"end": 13058,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12996,
											"end": 13063,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 12996,
											"end": 13063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12996,
											"end": 13063,
											"name": "tag",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 12996,
											"end": 13063,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12989,
											"end": 13063,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12989,
											"end": 13063,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13072,
											"end": 13165,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 13161,
											"end": 13164,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13072,
											"end": 13165,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 13072,
											"end": 13165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13072,
											"end": 13165,
											"name": "tag",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 13072,
											"end": 13165,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13190,
											"end": 13192,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 13185,
											"end": 13188,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13181,
											"end": 13193,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13174,
											"end": 13193,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13174,
											"end": 13193,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12833,
											"end": 13199,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12833,
											"end": 13199,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12833,
											"end": 13199,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12833,
											"end": 13199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13205,
											"end": 13624,
											"name": "tag",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 13205,
											"end": 13624,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13371,
											"end": 13375,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13409,
											"end": 13411,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13398,
											"end": 13407,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13394,
											"end": 13412,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13386,
											"end": 13412,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13386,
											"end": 13412,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13458,
											"end": 13467,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13452,
											"end": 13456,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13448,
											"end": 13468,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 13444,
											"end": 13445,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13433,
											"end": 13442,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13429,
											"end": 13446,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13422,
											"end": 13469,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13486,
											"end": 13617,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 13612,
											"end": 13616,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13486,
											"end": 13617,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 13486,
											"end": 13617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13486,
											"end": 13617,
											"name": "tag",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 13486,
											"end": 13617,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13478,
											"end": 13617,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13478,
											"end": 13617,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13205,
											"end": 13624,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13205,
											"end": 13624,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13205,
											"end": 13624,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13205,
											"end": 13624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13630,
											"end": 13804,
											"name": "tag",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 13630,
											"end": 13804,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13770,
											"end": 13796,
											"name": "PUSH",
											"source": 13,
											"value": "4E6F207661756C742065786973747320666F7220757365720000000000000000"
										},
										{
											"begin": 13766,
											"end": 13767,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13758,
											"end": 13764,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13754,
											"end": 13768,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13747,
											"end": 13797,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13630,
											"end": 13804,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13630,
											"end": 13804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13810,
											"end": 14176,
											"name": "tag",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 13810,
											"end": 14176,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13952,
											"end": 13955,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13973,
											"end": 14040,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 14037,
											"end": 14039,
											"name": "PUSH",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 14032,
											"end": 14035,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13973,
											"end": 14040,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 13973,
											"end": 14040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13973,
											"end": 14040,
											"name": "tag",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 13973,
											"end": 14040,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13966,
											"end": 14040,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13966,
											"end": 14040,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14049,
											"end": 14142,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 14138,
											"end": 14141,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14049,
											"end": 14142,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 14049,
											"end": 14142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14049,
											"end": 14142,
											"name": "tag",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 14049,
											"end": 14142,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14167,
											"end": 14169,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14162,
											"end": 14165,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14158,
											"end": 14170,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14151,
											"end": 14170,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14151,
											"end": 14170,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13810,
											"end": 14176,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13810,
											"end": 14176,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13810,
											"end": 14176,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13810,
											"end": 14176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14182,
											"end": 14601,
											"name": "tag",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 14182,
											"end": 14601,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14348,
											"end": 14352,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14386,
											"end": 14388,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14375,
											"end": 14384,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14371,
											"end": 14389,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14363,
											"end": 14389,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14363,
											"end": 14389,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14435,
											"end": 14444,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14429,
											"end": 14433,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14425,
											"end": 14445,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 14421,
											"end": 14422,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14410,
											"end": 14419,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14406,
											"end": 14423,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14399,
											"end": 14446,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14463,
											"end": 14594,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 14589,
											"end": 14593,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14463,
											"end": 14594,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 14463,
											"end": 14594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14463,
											"end": 14594,
											"name": "tag",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 14463,
											"end": 14594,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14455,
											"end": 14594,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14455,
											"end": 14594,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14182,
											"end": 14601,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14182,
											"end": 14601,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14182,
											"end": 14601,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14182,
											"end": 14601,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14607,
											"end": 14939,
											"name": "tag",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 14607,
											"end": 14939,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14728,
											"end": 14732,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14766,
											"end": 14768,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14755,
											"end": 14764,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14751,
											"end": 14769,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14743,
											"end": 14769,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14743,
											"end": 14769,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14779,
											"end": 14850,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "503"
										},
										{
											"begin": 14847,
											"end": 14848,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14836,
											"end": 14845,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14832,
											"end": 14849,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14823,
											"end": 14829,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 14779,
											"end": 14850,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 14779,
											"end": 14850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14779,
											"end": 14850,
											"name": "tag",
											"source": 13,
											"value": "503"
										},
										{
											"begin": 14779,
											"end": 14850,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14860,
											"end": 14932,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "504"
										},
										{
											"begin": 14928,
											"end": 14930,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14917,
											"end": 14926,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14913,
											"end": 14931,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14904,
											"end": 14910,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14860,
											"end": 14932,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 14860,
											"end": 14932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14860,
											"end": 14932,
											"name": "tag",
											"source": 13,
											"value": "504"
										},
										{
											"begin": 14860,
											"end": 14932,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14607,
											"end": 14939,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 14607,
											"end": 14939,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14607,
											"end": 14939,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14607,
											"end": 14939,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14607,
											"end": 14939,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14607,
											"end": 14939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14945,
											"end": 15136,
											"name": "tag",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 14945,
											"end": 15136,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14985,
											"end": 14988,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15004,
											"end": 15024,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 15022,
											"end": 15023,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15004,
											"end": 15024,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 15004,
											"end": 15024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15004,
											"end": 15024,
											"name": "tag",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 15004,
											"end": 15024,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14999,
											"end": 15024,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14999,
											"end": 15024,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15038,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "507"
										},
										{
											"begin": 15056,
											"end": 15057,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15038,
											"end": 15058,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 15038,
											"end": 15058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15038,
											"end": 15058,
											"name": "tag",
											"source": 13,
											"value": "507"
										},
										{
											"begin": 15038,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15033,
											"end": 15058,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15033,
											"end": 15058,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15081,
											"end": 15082,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15078,
											"end": 15079,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15074,
											"end": 15083,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15067,
											"end": 15083,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15067,
											"end": 15083,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15102,
											"end": 15105,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 15099,
											"end": 15100,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15096,
											"end": 15106,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 15093,
											"end": 15129,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 15093,
											"end": 15129,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "508"
										},
										{
											"begin": 15093,
											"end": 15129,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 15109,
											"end": 15127,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "509"
										},
										{
											"begin": 15109,
											"end": 15127,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 15109,
											"end": 15127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15109,
											"end": 15127,
											"name": "tag",
											"source": 13,
											"value": "509"
										},
										{
											"begin": 15109,
											"end": 15127,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15093,
											"end": 15129,
											"name": "tag",
											"source": 13,
											"value": "508"
										},
										{
											"begin": 15093,
											"end": 15129,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14945,
											"end": 15136,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14945,
											"end": 15136,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14945,
											"end": 15136,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14945,
											"end": 15136,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14945,
											"end": 15136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15142,
											"end": 15372,
											"name": "tag",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 15142,
											"end": 15372,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15282,
											"end": 15316,
											"name": "PUSH",
											"source": 13,
											"value": "496E73756666696369656E7420636F6C6C61746572616C20746F206D696E7420"
										},
										{
											"begin": 15278,
											"end": 15279,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15270,
											"end": 15276,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15266,
											"end": 15280,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15259,
											"end": 15317,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15351,
											"end": 15364,
											"name": "PUSH",
											"source": 13,
											"value": "7468617420616D6F756E74000000000000000000000000000000000000000000"
										},
										{
											"begin": 15346,
											"end": 15348,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15338,
											"end": 15344,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15334,
											"end": 15349,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15327,
											"end": 15365,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15142,
											"end": 15372,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15142,
											"end": 15372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15378,
											"end": 15744,
											"name": "tag",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 15378,
											"end": 15744,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15520,
											"end": 15523,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15541,
											"end": 15608,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 15605,
											"end": 15607,
											"name": "PUSH",
											"source": 13,
											"value": "2B"
										},
										{
											"begin": 15600,
											"end": 15603,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15541,
											"end": 15608,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 15541,
											"end": 15608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15541,
											"end": 15608,
											"name": "tag",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 15541,
											"end": 15608,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15534,
											"end": 15608,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15534,
											"end": 15608,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15617,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 15706,
											"end": 15709,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15617,
											"end": 15710,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 15617,
											"end": 15710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15617,
											"end": 15710,
											"name": "tag",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 15617,
											"end": 15710,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15735,
											"end": 15737,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 15730,
											"end": 15733,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15726,
											"end": 15738,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15719,
											"end": 15738,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15719,
											"end": 15738,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15378,
											"end": 15744,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15378,
											"end": 15744,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15378,
											"end": 15744,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15378,
											"end": 15744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15750,
											"end": 16169,
											"name": "tag",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 15750,
											"end": 16169,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15916,
											"end": 15920,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15954,
											"end": 15956,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15943,
											"end": 15952,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15939,
											"end": 15957,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15931,
											"end": 15957,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15931,
											"end": 15957,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16003,
											"end": 16012,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15997,
											"end": 16001,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15993,
											"end": 16013,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 15989,
											"end": 15990,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15978,
											"end": 15987,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15974,
											"end": 15991,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15967,
											"end": 16014,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16031,
											"end": 16162,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 16157,
											"end": 16161,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16031,
											"end": 16162,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 16031,
											"end": 16162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16031,
											"end": 16162,
											"name": "tag",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 16031,
											"end": 16162,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16023,
											"end": 16162,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16023,
											"end": 16162,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15750,
											"end": 16169,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15750,
											"end": 16169,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15750,
											"end": 16169,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15750,
											"end": 16169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16175,
											"end": 16585,
											"name": "tag",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 16175,
											"end": 16585,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16215,
											"end": 16222,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16238,
											"end": 16258,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 16256,
											"end": 16257,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16238,
											"end": 16258,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 16238,
											"end": 16258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16238,
											"end": 16258,
											"name": "tag",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 16238,
											"end": 16258,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16233,
											"end": 16258,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16233,
											"end": 16258,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16272,
											"end": 16292,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 16290,
											"end": 16291,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16272,
											"end": 16292,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 16272,
											"end": 16292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16272,
											"end": 16292,
											"name": "tag",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 16272,
											"end": 16292,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16267,
											"end": 16292,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16267,
											"end": 16292,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16327,
											"end": 16328,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16324,
											"end": 16325,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16320,
											"end": 16329,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 16349,
											"end": 16379,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "519"
										},
										{
											"begin": 16367,
											"end": 16378,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16349,
											"end": 16379,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 16349,
											"end": 16379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16349,
											"end": 16379,
											"name": "tag",
											"source": 13,
											"value": "519"
										},
										{
											"begin": 16349,
											"end": 16379,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16338,
											"end": 16379,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16338,
											"end": 16379,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16528,
											"end": 16529,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16519,
											"end": 16526,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16515,
											"end": 16530,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 16512,
											"end": 16513,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 16509,
											"end": 16531,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 16489,
											"end": 16490,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16482,
											"end": 16491,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 16462,
											"end": 16545,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 16439,
											"end": 16578,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "520"
										},
										{
											"begin": 16439,
											"end": 16578,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 16558,
											"end": 16576,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 16558,
											"end": 16576,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 16558,
											"end": 16576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16558,
											"end": 16576,
											"name": "tag",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 16558,
											"end": 16576,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16439,
											"end": 16578,
											"name": "tag",
											"source": 13,
											"value": "520"
										},
										{
											"begin": 16439,
											"end": 16578,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16223,
											"end": 16585,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16175,
											"end": 16585,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16175,
											"end": 16585,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16175,
											"end": 16585,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16175,
											"end": 16585,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16175,
											"end": 16585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16591,
											"end": 16771,
											"name": "tag",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 16591,
											"end": 16771,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16639,
											"end": 16716,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16636,
											"end": 16637,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16629,
											"end": 16717,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16736,
											"end": 16740,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 16733,
											"end": 16734,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 16726,
											"end": 16741,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16760,
											"end": 16764,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 16757,
											"end": 16758,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16750,
											"end": 16765,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 16777,
											"end": 16962,
											"name": "tag",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 16777,
											"end": 16962,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16817,
											"end": 16818,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16834,
											"end": 16854,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "524"
										},
										{
											"begin": 16852,
											"end": 16853,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16834,
											"end": 16854,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 16834,
											"end": 16854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16834,
											"end": 16854,
											"name": "tag",
											"source": 13,
											"value": "524"
										},
										{
											"begin": 16834,
											"end": 16854,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16829,
											"end": 16854,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16829,
											"end": 16854,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16868,
											"end": 16888,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 16886,
											"end": 16887,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16868,
											"end": 16888,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 16868,
											"end": 16888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16868,
											"end": 16888,
											"name": "tag",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 16868,
											"end": 16888,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16863,
											"end": 16888,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16863,
											"end": 16888,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16907,
											"end": 16908,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16897,
											"end": 16932,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 16897,
											"end": 16932,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 16912,
											"end": 16930,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "527"
										},
										{
											"begin": 16912,
											"end": 16930,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 16912,
											"end": 16930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16912,
											"end": 16930,
											"name": "tag",
											"source": 13,
											"value": "527"
										},
										{
											"begin": 16912,
											"end": 16930,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16897,
											"end": 16932,
											"name": "tag",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 16897,
											"end": 16932,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16954,
											"end": 16955,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16951,
											"end": 16952,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16947,
											"end": 16956,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 16942,
											"end": 16956,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16942,
											"end": 16956,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16777,
											"end": 16962,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16777,
											"end": 16962,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16777,
											"end": 16962,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16777,
											"end": 16962,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16777,
											"end": 16962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16968,
											"end": 17410,
											"name": "tag",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 16968,
											"end": 17410,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17117,
											"end": 17121,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17155,
											"end": 17157,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 17144,
											"end": 17153,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17140,
											"end": 17158,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17132,
											"end": 17158,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17132,
											"end": 17158,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17168,
											"end": 17239,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "529"
										},
										{
											"begin": 17236,
											"end": 17237,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17225,
											"end": 17234,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17221,
											"end": 17238,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17212,
											"end": 17218,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 17168,
											"end": 17239,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 17168,
											"end": 17239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17168,
											"end": 17239,
											"name": "tag",
											"source": 13,
											"value": "529"
										},
										{
											"begin": 17168,
											"end": 17239,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17249,
											"end": 17321,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "530"
										},
										{
											"begin": 17317,
											"end": 17319,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17306,
											"end": 17315,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17302,
											"end": 17320,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17293,
											"end": 17299,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 17249,
											"end": 17321,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 17249,
											"end": 17321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17249,
											"end": 17321,
											"name": "tag",
											"source": 13,
											"value": "530"
										},
										{
											"begin": 17249,
											"end": 17321,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17331,
											"end": 17403,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 17399,
											"end": 17401,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 17388,
											"end": 17397,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17384,
											"end": 17402,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17375,
											"end": 17381,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 17331,
											"end": 17403,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 17331,
											"end": 17403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17331,
											"end": 17403,
											"name": "tag",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 17331,
											"end": 17403,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16968,
											"end": 17410,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 16968,
											"end": 17410,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 16968,
											"end": 17410,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16968,
											"end": 17410,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16968,
											"end": 17410,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16968,
											"end": 17410,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16968,
											"end": 17410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17416,
											"end": 17597,
											"name": "tag",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 17416,
											"end": 17597,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17556,
											"end": 17589,
											"name": "PUSH",
											"source": 13,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 17552,
											"end": 17553,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17544,
											"end": 17550,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17540,
											"end": 17554,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17533,
											"end": 17590,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17416,
											"end": 17597,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17416,
											"end": 17597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17603,
											"end": 17969,
											"name": "tag",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 17603,
											"end": 17969,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17745,
											"end": 17748,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17766,
											"end": 17833,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 17830,
											"end": 17832,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 17825,
											"end": 17828,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17766,
											"end": 17833,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 17766,
											"end": 17833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17766,
											"end": 17833,
											"name": "tag",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 17766,
											"end": 17833,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17759,
											"end": 17833,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17759,
											"end": 17833,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17842,
											"end": 17935,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 17931,
											"end": 17934,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17842,
											"end": 17935,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 17842,
											"end": 17935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17842,
											"end": 17935,
											"name": "tag",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 17842,
											"end": 17935,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17960,
											"end": 17962,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17955,
											"end": 17958,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17951,
											"end": 17963,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17944,
											"end": 17963,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17944,
											"end": 17963,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17603,
											"end": 17969,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17603,
											"end": 17969,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17603,
											"end": 17969,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17603,
											"end": 17969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17975,
											"end": 18394,
											"name": "tag",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 17975,
											"end": 18394,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18141,
											"end": 18145,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18179,
											"end": 18181,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18168,
											"end": 18177,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18164,
											"end": 18182,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18156,
											"end": 18182,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18156,
											"end": 18182,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18228,
											"end": 18237,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18222,
											"end": 18226,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18218,
											"end": 18238,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 18214,
											"end": 18215,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18203,
											"end": 18212,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18199,
											"end": 18216,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18192,
											"end": 18239,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18256,
											"end": 18387,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "537"
										},
										{
											"begin": 18382,
											"end": 18386,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18256,
											"end": 18387,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 18256,
											"end": 18387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18256,
											"end": 18387,
											"name": "tag",
											"source": 13,
											"value": "537"
										},
										{
											"begin": 18256,
											"end": 18387,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18248,
											"end": 18387,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18248,
											"end": 18387,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17975,
											"end": 18394,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17975,
											"end": 18394,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17975,
											"end": 18394,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17975,
											"end": 18394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18400,
											"end": 18732,
											"name": "tag",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 18400,
											"end": 18732,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18521,
											"end": 18525,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18559,
											"end": 18561,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 18548,
											"end": 18557,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18544,
											"end": 18562,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18536,
											"end": 18562,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18536,
											"end": 18562,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18572,
											"end": 18643,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "539"
										},
										{
											"begin": 18640,
											"end": 18641,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18629,
											"end": 18638,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18625,
											"end": 18642,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18616,
											"end": 18622,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 18572,
											"end": 18643,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 18572,
											"end": 18643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18572,
											"end": 18643,
											"name": "tag",
											"source": 13,
											"value": "539"
										},
										{
											"begin": 18572,
											"end": 18643,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18653,
											"end": 18725,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 18721,
											"end": 18723,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18710,
											"end": 18719,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18706,
											"end": 18724,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18697,
											"end": 18703,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 18653,
											"end": 18725,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 18653,
											"end": 18725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18653,
											"end": 18725,
											"name": "tag",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 18653,
											"end": 18725,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18400,
											"end": 18732,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 18400,
											"end": 18732,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18400,
											"end": 18732,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18400,
											"end": 18732,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18400,
											"end": 18732,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18400,
											"end": 18732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18738,
											"end": 19180,
											"name": "tag",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 18738,
											"end": 19180,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18887,
											"end": 18891,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18925,
											"end": 18927,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 18914,
											"end": 18923,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18910,
											"end": 18928,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18902,
											"end": 18928,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18902,
											"end": 18928,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18938,
											"end": 19009,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "542"
										},
										{
											"begin": 19006,
											"end": 19007,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18995,
											"end": 19004,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18991,
											"end": 19008,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18982,
											"end": 18988,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 18938,
											"end": 19009,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 18938,
											"end": 19009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18938,
											"end": 19009,
											"name": "tag",
											"source": 13,
											"value": "542"
										},
										{
											"begin": 18938,
											"end": 19009,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19019,
											"end": 19091,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "543"
										},
										{
											"begin": 19087,
											"end": 19089,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19076,
											"end": 19085,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19072,
											"end": 19090,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19063,
											"end": 19069,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 19019,
											"end": 19091,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 19019,
											"end": 19091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19019,
											"end": 19091,
											"name": "tag",
											"source": 13,
											"value": "543"
										},
										{
											"begin": 19019,
											"end": 19091,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19101,
											"end": 19173,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 19169,
											"end": 19171,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 19158,
											"end": 19167,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19154,
											"end": 19172,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19145,
											"end": 19151,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 19101,
											"end": 19173,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 19101,
											"end": 19173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19101,
											"end": 19173,
											"name": "tag",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 19101,
											"end": 19173,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18738,
											"end": 19180,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 18738,
											"end": 19180,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 18738,
											"end": 19180,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18738,
											"end": 19180,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18738,
											"end": 19180,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18738,
											"end": 19180,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18738,
											"end": 19180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									],
									".data": {
										"0": {
											".code": [
												{
													"begin": 481,
													"end": 1503,
													"name": "PUSH",
													"source": 12,
													"value": "A0"
												},
												{
													"begin": 481,
													"end": 1503,
													"name": "PUSH",
													"source": 12,
													"value": "40"
												},
												{
													"begin": 481,
													"end": 1503,
													"name": "MSTORE",
													"source": 12
												},
												{
													"begin": 829,
													"end": 1032,
													"name": "CALLVALUE",
													"source": 12
												},
												{
													"begin": 829,
													"end": 1032,
													"name": "DUP1",
													"source": 12
												},
												{
													"begin": 829,
													"end": 1032,
													"name": "ISZERO",
													"source": 12
												},
												{
													"begin": 829,
													"end": 1032,
													"name": "PUSH [tag]",
													"source": 12,
													"value": "1"
												},
												{
													"begin": 829,
													"end": 1032,
													"name": "JUMPI",
													"source": 12
												},
												{
													"begin": 829,
													"end": 1032,
													"name": "PUSH",
													"source": 12,
													"value": "0"
												},
												{
													"begin": 829,
													"end": 1032,
													"name": "PUSH",
													"source": 12,
													"value": "0"
												},
												{
													"begin": 829,
													"end": 1032,
													"name": "REVERT",
													"source": 12
												},
												{
													"begin": 829,
													"end": 1032,
													"name": "tag",
													"source": 12,
													"value": "1"
												},
												{
													"begin": 829,
													"end": 1032,
													"name": "JUMPDEST",
													"source": 12
												},
												{
													"begin": 829,
													"end": 1032,
													"name": "POP",
													"source": 12
												},
												{
													"begin": 829,
													"end": 1032,
													"name": "PUSH",
													"source": 12,
													"value": "40"
												},
												{
													"begin": 829,
													"end": 1032,
													"name": "MLOAD",
													"source": 12
												},
												{
													"begin": 829,
													"end": 1032,
													"name": "PUSHSIZE",
													"source": 12
												},
												{
													"begin": 829,
													"end": 1032,
													"name": "CODESIZE",
													"source": 12
												},
												{
													"begin": 829,
													"end": 1032,
													"name": "SUB",
													"source": 12
												},
												{
													"begin": 829,
													"end": 1032,
													"name": "DUP1",
													"source": 12
												},
												{
													"begin": 829,
													"end": 1032,
													"name": "PUSHSIZE",
													"source": 12
												},
												{
													"begin": 829,
													"end": 1032,
													"name": "DUP4",
													"source": 12
												},
												{
													"begin": 829,
													"end": 1032,
													"name": "CODECOPY",
													"source": 12
												},
												{
													"begin": 829,
													"end": 1032,
													"name": "DUP2",
													"source": 12
												},
												{
													"begin": 829,
													"end": 1032,
													"name": "DUP2",
													"source": 12
												},
												{
													"begin": 829,
													"end": 1032,
													"name": "ADD",
													"source": 12
												},
												{
													"begin": 829,
													"end": 1032,
													"name": "PUSH",
													"source": 12,
													"value": "40"
												},
												{
													"begin": 829,
													"end": 1032,
													"name": "MSTORE",
													"source": 12
												},
												{
													"begin": 829,
													"end": 1032,
													"name": "DUP2",
													"source": 12
												},
												{
													"begin": 829,
													"end": 1032,
													"name": "ADD",
													"source": 12
												},
												{
													"begin": 829,
													"end": 1032,
													"name": "SWAP1",
													"source": 12
												},
												{
													"begin": 829,
													"end": 1032,
													"name": "PUSH [tag]",
													"source": 12,
													"value": "2"
												},
												{
													"begin": 829,
													"end": 1032,
													"name": "SWAP2",
													"source": 12
												},
												{
													"begin": 829,
													"end": 1032,
													"name": "SWAP1",
													"source": 12
												},
												{
													"begin": 829,
													"end": 1032,
													"name": "PUSH [tag]",
													"source": 12,
													"value": "3"
												},
												{
													"begin": 829,
													"end": 1032,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 12
												},
												{
													"begin": 829,
													"end": 1032,
													"name": "tag",
													"source": 12,
													"value": "2"
												},
												{
													"begin": 829,
													"end": 1032,
													"name": "JUMPDEST",
													"source": 12
												},
												{
													"begin": 891,
													"end": 897,
													"name": "DUP1",
													"source": 12
												},
												{
													"begin": 1297,
													"end": 1298,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 1273,
													"end": 1299,
													"name": "PUSH",
													"source": 0,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 1273,
													"end": 1299,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 1273,
													"end": 1285,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 1273,
													"end": 1299,
													"name": "PUSH",
													"source": 0,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 1273,
													"end": 1299,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 1273,
													"end": 1299,
													"name": "SUB",
													"source": 0
												},
												{
													"begin": 1269,
													"end": 1364,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "7"
												},
												{
													"begin": 1269,
													"end": 1364,
													"name": "JUMPI",
													"source": 0
												},
												{
													"begin": 1350,
													"end": 1351,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 1322,
													"end": 1353,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 1322,
													"end": 1353,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": 1322,
													"end": 1353,
													"name": "PUSH",
													"source": 0,
													"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 1322,
													"end": 1353,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 1322,
													"end": 1353,
													"name": "MSTORE",
													"source": 0
												},
												{
													"begin": 1322,
													"end": 1353,
													"name": "PUSH",
													"source": 0,
													"value": "4"
												},
												{
													"begin": 1322,
													"end": 1353,
													"name": "ADD",
													"source": 0
												},
												{
													"begin": 1322,
													"end": 1353,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "8"
												},
												{
													"begin": 1322,
													"end": 1353,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 1322,
													"end": 1353,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 1322,
													"end": 1353,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "9"
												},
												{
													"begin": 1322,
													"end": 1353,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 1322,
													"end": 1353,
													"name": "tag",
													"source": 0,
													"value": "8"
												},
												{
													"begin": 1322,
													"end": 1353,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 1322,
													"end": 1353,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 1322,
													"end": 1353,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": 1322,
													"end": 1353,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 1322,
													"end": 1353,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 1322,
													"end": 1353,
													"name": "SUB",
													"source": 0
												},
												{
													"begin": 1322,
													"end": 1353,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 1322,
													"end": 1353,
													"name": "REVERT",
													"source": 0
												},
												{
													"begin": 1269,
													"end": 1364,
													"name": "tag",
													"source": 0,
													"value": "7"
												},
												{
													"begin": 1269,
													"end": 1364,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 1373,
													"end": 1405,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "10"
												},
												{
													"begin": 1392,
													"end": 1404,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 1373,
													"end": 1391,
													"name": "PUSH [tag]",
													"source": 0,
													"value": "11"
												},
												{
													"begin": 1373,
													"end": 1391,
													"name": "PUSH",
													"source": 0,
													"value": "20"
												},
												{
													"begin": 1373,
													"end": 1391,
													"name": "SHL",
													"source": 0
												},
												{
													"begin": 1373,
													"end": 1405,
													"name": "PUSH",
													"source": 0,
													"value": "20"
												},
												{
													"begin": 1373,
													"end": 1405,
													"name": "SHR",
													"source": 0
												},
												{
													"begin": 1373,
													"end": 1405,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 1373,
													"end": 1405,
													"name": "tag",
													"source": 0,
													"value": "10"
												},
												{
													"begin": 1373,
													"end": 1405,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 1225,
													"end": 1412,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 945,
													"end": 946,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 12,
													"value": "0"
												},
												{
													"begin": 917,
													"end": 947,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 12,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 917,
													"end": 947,
													"modifierDepth": 1,
													"name": "AND",
													"source": 12
												},
												{
													"begin": 917,
													"end": 933,
													"modifierDepth": 1,
													"name": "DUP3",
													"source": 12
												},
												{
													"begin": 917,
													"end": 947,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 12,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 917,
													"end": 947,
													"modifierDepth": 1,
													"name": "AND",
													"source": 12
												},
												{
													"begin": 917,
													"end": 947,
													"name": "SUB",
													"source": 12
												},
												{
													"begin": 909,
													"end": 973,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 12,
													"value": "13"
												},
												{
													"begin": 909,
													"end": 973,
													"modifierDepth": 1,
													"name": "JUMPI",
													"source": 12
												},
												{
													"begin": 909,
													"end": 973,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 12,
													"value": "40"
												},
												{
													"begin": 909,
													"end": 973,
													"modifierDepth": 1,
													"name": "MLOAD",
													"source": 12
												},
												{
													"begin": 909,
													"end": 973,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 12,
													"value": "8C379A000000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 909,
													"end": 973,
													"modifierDepth": 1,
													"name": "DUP2",
													"source": 12
												},
												{
													"begin": 909,
													"end": 973,
													"modifierDepth": 1,
													"name": "MSTORE",
													"source": 12
												},
												{
													"begin": 909,
													"end": 973,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 12,
													"value": "4"
												},
												{
													"begin": 909,
													"end": 973,
													"modifierDepth": 1,
													"name": "ADD",
													"source": 12
												},
												{
													"begin": 909,
													"end": 973,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 12,
													"value": "14"
												},
												{
													"begin": 909,
													"end": 973,
													"modifierDepth": 1,
													"name": "SWAP1",
													"source": 12
												},
												{
													"begin": 909,
													"end": 973,
													"modifierDepth": 1,
													"name": "PUSH [tag]",
													"source": 12,
													"value": "15"
												},
												{
													"begin": 909,
													"end": 973,
													"jumpType": "[in]",
													"modifierDepth": 1,
													"name": "JUMP",
													"source": 12
												},
												{
													"begin": 909,
													"end": 973,
													"modifierDepth": 1,
													"name": "tag",
													"source": 12,
													"value": "14"
												},
												{
													"begin": 909,
													"end": 973,
													"modifierDepth": 1,
													"name": "JUMPDEST",
													"source": 12
												},
												{
													"begin": 909,
													"end": 973,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 12,
													"value": "40"
												},
												{
													"begin": 909,
													"end": 973,
													"modifierDepth": 1,
													"name": "MLOAD",
													"source": 12
												},
												{
													"begin": 909,
													"end": 973,
													"modifierDepth": 1,
													"name": "DUP1",
													"source": 12
												},
												{
													"begin": 909,
													"end": 973,
													"modifierDepth": 1,
													"name": "SWAP2",
													"source": 12
												},
												{
													"begin": 909,
													"end": 973,
													"modifierDepth": 1,
													"name": "SUB",
													"source": 12
												},
												{
													"begin": 909,
													"end": 973,
													"modifierDepth": 1,
													"name": "SWAP1",
													"source": 12
												},
												{
													"begin": 909,
													"end": 973,
													"modifierDepth": 1,
													"name": "REVERT",
													"source": 12
												},
												{
													"begin": 909,
													"end": 973,
													"modifierDepth": 1,
													"name": "tag",
													"source": 12,
													"value": "13"
												},
												{
													"begin": 909,
													"end": 973,
													"modifierDepth": 1,
													"name": "JUMPDEST",
													"source": 12
												},
												{
													"begin": 1008,
													"end": 1024,
													"modifierDepth": 1,
													"name": "DUP2",
													"source": 12
												},
												{
													"begin": 983,
													"end": 1025,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 12,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 983,
													"end": 1025,
													"modifierDepth": 1,
													"name": "AND",
													"source": 12
												},
												{
													"begin": 983,
													"end": 1025,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 12,
													"value": "80"
												},
												{
													"begin": 983,
													"end": 1025,
													"modifierDepth": 1,
													"name": "DUP2",
													"source": 12
												},
												{
													"begin": 983,
													"end": 1025,
													"modifierDepth": 1,
													"name": "PUSH",
													"source": 12,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 983,
													"end": 1025,
													"modifierDepth": 1,
													"name": "AND",
													"source": 12
												},
												{
													"begin": 983,
													"end": 1025,
													"modifierDepth": 1,
													"name": "DUP2",
													"source": 12
												},
												{
													"begin": 983,
													"end": 1025,
													"modifierDepth": 1,
													"name": "MSTORE",
													"source": 12
												},
												{
													"begin": 983,
													"end": 1025,
													"name": "POP",
													"source": 12
												},
												{
													"begin": 983,
													"end": 1025,
													"modifierDepth": 1,
													"name": "POP",
													"source": 12
												},
												{
													"begin": 829,
													"end": 1032,
													"name": "POP",
													"source": 12
												},
												{
													"begin": 829,
													"end": 1032,
													"name": "POP",
													"source": 12
												},
												{
													"begin": 481,
													"end": 1503,
													"name": "PUSH [tag]",
													"source": 12,
													"value": "16"
												},
												{
													"begin": 481,
													"end": 1503,
													"name": "JUMP",
													"source": 12
												},
												{
													"begin": 2912,
													"end": 3099,
													"name": "tag",
													"source": 0,
													"value": "11"
												},
												{
													"begin": 2912,
													"end": 3099,
													"name": "JUMPDEST",
													"source": 0
												},
												{
													"begin": 2985,
													"end": 3001,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "SLOAD",
													"source": 0
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "PUSH",
													"source": 0,
													"value": "100"
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "EXP",
													"source": 0
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "DIV",
													"source": 0
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "PUSH",
													"source": 0,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 3004,
													"end": 3010,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 2985,
													"end": 3010,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 2985,
													"end": 3010,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 3029,
													"end": 3037,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 3020,
													"end": 3026,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 3020,
													"end": 3026,
													"name": "PUSH",
													"source": 0,
													"value": "0"
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "PUSH",
													"source": 0,
													"value": "100"
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "EXP",
													"source": 0
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "SLOAD",
													"source": 0
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "PUSH",
													"source": 0,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "MUL",
													"source": 0
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "NOT",
													"source": 0
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "DUP4",
													"source": 0
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "PUSH",
													"source": 0,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "MUL",
													"source": 0
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "OR",
													"source": 0
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "SSTORE",
													"source": 0
												},
												{
													"begin": 3020,
													"end": 3037,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 3083,
													"end": 3091,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 3052,
													"end": 3092,
													"name": "PUSH",
													"source": 0,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 3052,
													"end": 3092,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 3073,
													"end": 3081,
													"name": "DUP2",
													"source": 0
												},
												{
													"begin": 3052,
													"end": 3092,
													"name": "PUSH",
													"source": 0,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 3052,
													"end": 3092,
													"name": "AND",
													"source": 0
												},
												{
													"begin": 3052,
													"end": 3092,
													"name": "PUSH",
													"source": 0,
													"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
												},
												{
													"begin": 3052,
													"end": 3092,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 3052,
													"end": 3092,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": 3052,
													"end": 3092,
													"name": "PUSH",
													"source": 0,
													"value": "40"
												},
												{
													"begin": 3052,
													"end": 3092,
													"name": "MLOAD",
													"source": 0
												},
												{
													"begin": 3052,
													"end": 3092,
													"name": "DUP1",
													"source": 0
												},
												{
													"begin": 3052,
													"end": 3092,
													"name": "SWAP2",
													"source": 0
												},
												{
													"begin": 3052,
													"end": 3092,
													"name": "SUB",
													"source": 0
												},
												{
													"begin": 3052,
													"end": 3092,
													"name": "SWAP1",
													"source": 0
												},
												{
													"begin": 3052,
													"end": 3092,
													"name": "LOG3",
													"source": 0
												},
												{
													"begin": 2975,
													"end": 3099,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 2912,
													"end": 3099,
													"name": "POP",
													"source": 0
												},
												{
													"begin": 2912,
													"end": 3099,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 0
												},
												{
													"begin": 88,
													"end": 205,
													"name": "tag",
													"source": 13,
													"value": "19"
												},
												{
													"begin": 88,
													"end": 205,
													"name": "JUMPDEST",
													"source": 13
												},
												{
													"begin": 197,
													"end": 198,
													"name": "PUSH",
													"source": 13,
													"value": "0"
												},
												{
													"begin": 194,
													"end": 195,
													"name": "PUSH",
													"source": 13,
													"value": "0"
												},
												{
													"begin": 187,
													"end": 199,
													"name": "REVERT",
													"source": 13
												},
												{
													"begin": 334,
													"end": 460,
													"name": "tag",
													"source": 13,
													"value": "21"
												},
												{
													"begin": 334,
													"end": 460,
													"name": "JUMPDEST",
													"source": 13
												},
												{
													"begin": 371,
													"end": 378,
													"name": "PUSH",
													"source": 13,
													"value": "0"
												},
												{
													"begin": 411,
													"end": 453,
													"name": "PUSH",
													"source": 13,
													"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
												},
												{
													"begin": 404,
													"end": 409,
													"name": "DUP3",
													"source": 13
												},
												{
													"begin": 400,
													"end": 454,
													"name": "AND",
													"source": 13
												},
												{
													"begin": 389,
													"end": 454,
													"name": "SWAP1",
													"source": 13
												},
												{
													"begin": 389,
													"end": 454,
													"name": "POP",
													"source": 13
												},
												{
													"begin": 334,
													"end": 460,
													"name": "SWAP2",
													"source": 13
												},
												{
													"begin": 334,
													"end": 460,
													"name": "SWAP1",
													"source": 13
												},
												{
													"begin": 334,
													"end": 460,
													"name": "POP",
													"source": 13
												},
												{
													"begin": 334,
													"end": 460,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 13
												},
												{
													"begin": 466,
													"end": 562,
													"name": "tag",
													"source": 13,
													"value": "22"
												},
												{
													"begin": 466,
													"end": 562,
													"name": "JUMPDEST",
													"source": 13
												},
												{
													"begin": 503,
													"end": 510,
													"name": "PUSH",
													"source": 13,
													"value": "0"
												},
												{
													"begin": 532,
													"end": 556,
													"name": "PUSH [tag]",
													"source": 13,
													"value": "35"
												},
												{
													"begin": 550,
													"end": 555,
													"name": "DUP3",
													"source": 13
												},
												{
													"begin": 532,
													"end": 556,
													"name": "PUSH [tag]",
													"source": 13,
													"value": "21"
												},
												{
													"begin": 532,
													"end": 556,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 13
												},
												{
													"begin": 532,
													"end": 556,
													"name": "tag",
													"source": 13,
													"value": "35"
												},
												{
													"begin": 532,
													"end": 556,
													"name": "JUMPDEST",
													"source": 13
												},
												{
													"begin": 521,
													"end": 556,
													"name": "SWAP1",
													"source": 13
												},
												{
													"begin": 521,
													"end": 556,
													"name": "POP",
													"source": 13
												},
												{
													"begin": 466,
													"end": 562,
													"name": "SWAP2",
													"source": 13
												},
												{
													"begin": 466,
													"end": 562,
													"name": "SWAP1",
													"source": 13
												},
												{
													"begin": 466,
													"end": 562,
													"name": "POP",
													"source": 13
												},
												{
													"begin": 466,
													"end": 562,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 13
												},
												{
													"begin": 568,
													"end": 690,
													"name": "tag",
													"source": 13,
													"value": "23"
												},
												{
													"begin": 568,
													"end": 690,
													"name": "JUMPDEST",
													"source": 13
												},
												{
													"begin": 641,
													"end": 665,
													"name": "PUSH [tag]",
													"source": 13,
													"value": "37"
												},
												{
													"begin": 659,
													"end": 664,
													"name": "DUP2",
													"source": 13
												},
												{
													"begin": 641,
													"end": 665,
													"name": "PUSH [tag]",
													"source": 13,
													"value": "22"
												},
												{
													"begin": 641,
													"end": 665,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 13
												},
												{
													"begin": 641,
													"end": 665,
													"name": "tag",
													"source": 13,
													"value": "37"
												},
												{
													"begin": 641,
													"end": 665,
													"name": "JUMPDEST",
													"source": 13
												},
												{
													"begin": 634,
													"end": 639,
													"name": "DUP2",
													"source": 13
												},
												{
													"begin": 631,
													"end": 666,
													"name": "EQ",
													"source": 13
												},
												{
													"begin": 621,
													"end": 684,
													"name": "PUSH [tag]",
													"source": 13,
													"value": "38"
												},
												{
													"begin": 621,
													"end": 684,
													"name": "JUMPI",
													"source": 13
												},
												{
													"begin": 680,
													"end": 681,
													"name": "PUSH",
													"source": 13,
													"value": "0"
												},
												{
													"begin": 677,
													"end": 678,
													"name": "PUSH",
													"source": 13,
													"value": "0"
												},
												{
													"begin": 670,
													"end": 682,
													"name": "REVERT",
													"source": 13
												},
												{
													"begin": 621,
													"end": 684,
													"name": "tag",
													"source": 13,
													"value": "38"
												},
												{
													"begin": 621,
													"end": 684,
													"name": "JUMPDEST",
													"source": 13
												},
												{
													"begin": 568,
													"end": 690,
													"name": "POP",
													"source": 13
												},
												{
													"begin": 568,
													"end": 690,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 13
												},
												{
													"begin": 696,
													"end": 839,
													"name": "tag",
													"source": 13,
													"value": "24"
												},
												{
													"begin": 696,
													"end": 839,
													"name": "JUMPDEST",
													"source": 13
												},
												{
													"begin": 753,
													"end": 758,
													"name": "PUSH",
													"source": 13,
													"value": "0"
												},
												{
													"begin": 784,
													"end": 790,
													"name": "DUP2",
													"source": 13
												},
												{
													"begin": 778,
													"end": 791,
													"name": "MLOAD",
													"source": 13
												},
												{
													"begin": 769,
													"end": 791,
													"name": "SWAP1",
													"source": 13
												},
												{
													"begin": 769,
													"end": 791,
													"name": "POP",
													"source": 13
												},
												{
													"begin": 800,
													"end": 833,
													"name": "PUSH [tag]",
													"source": 13,
													"value": "40"
												},
												{
													"begin": 827,
													"end": 832,
													"name": "DUP2",
													"source": 13
												},
												{
													"begin": 800,
													"end": 833,
													"name": "PUSH [tag]",
													"source": 13,
													"value": "23"
												},
												{
													"begin": 800,
													"end": 833,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 13
												},
												{
													"begin": 800,
													"end": 833,
													"name": "tag",
													"source": 13,
													"value": "40"
												},
												{
													"begin": 800,
													"end": 833,
													"name": "JUMPDEST",
													"source": 13
												},
												{
													"begin": 696,
													"end": 839,
													"name": "SWAP3",
													"source": 13
												},
												{
													"begin": 696,
													"end": 839,
													"name": "SWAP2",
													"source": 13
												},
												{
													"begin": 696,
													"end": 839,
													"name": "POP",
													"source": 13
												},
												{
													"begin": 696,
													"end": 839,
													"name": "POP",
													"source": 13
												},
												{
													"begin": 696,
													"end": 839,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 13
												},
												{
													"begin": 845,
													"end": 1352,
													"name": "tag",
													"source": 13,
													"value": "3"
												},
												{
													"begin": 845,
													"end": 1352,
													"name": "JUMPDEST",
													"source": 13
												},
												{
													"begin": 924,
													"end": 930,
													"name": "PUSH",
													"source": 13,
													"value": "0"
												},
												{
													"begin": 932,
													"end": 938,
													"name": "PUSH",
													"source": 13,
													"value": "0"
												},
												{
													"begin": 981,
													"end": 983,
													"name": "PUSH",
													"source": 13,
													"value": "40"
												},
												{
													"begin": 969,
													"end": 978,
													"name": "DUP4",
													"source": 13
												},
												{
													"begin": 960,
													"end": 967,
													"name": "DUP6",
													"source": 13
												},
												{
													"begin": 956,
													"end": 979,
													"name": "SUB",
													"source": 13
												},
												{
													"begin": 952,
													"end": 984,
													"name": "SLT",
													"source": 13
												},
												{
													"begin": 949,
													"end": 1068,
													"name": "ISZERO",
													"source": 13
												},
												{
													"begin": 949,
													"end": 1068,
													"name": "PUSH [tag]",
													"source": 13,
													"value": "42"
												},
												{
													"begin": 949,
													"end": 1068,
													"name": "JUMPI",
													"source": 13
												},
												{
													"begin": 987,
													"end": 1066,
													"name": "PUSH [tag]",
													"source": 13,
													"value": "43"
												},
												{
													"begin": 987,
													"end": 1066,
													"name": "PUSH [tag]",
													"source": 13,
													"value": "19"
												},
												{
													"begin": 987,
													"end": 1066,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 13
												},
												{
													"begin": 987,
													"end": 1066,
													"name": "tag",
													"source": 13,
													"value": "43"
												},
												{
													"begin": 987,
													"end": 1066,
													"name": "JUMPDEST",
													"source": 13
												},
												{
													"begin": 949,
													"end": 1068,
													"name": "tag",
													"source": 13,
													"value": "42"
												},
												{
													"begin": 949,
													"end": 1068,
													"name": "JUMPDEST",
													"source": 13
												},
												{
													"begin": 1107,
													"end": 1108,
													"name": "PUSH",
													"source": 13,
													"value": "0"
												},
												{
													"begin": 1132,
													"end": 1196,
													"name": "PUSH [tag]",
													"source": 13,
													"value": "44"
												},
												{
													"begin": 1188,
													"end": 1195,
													"name": "DUP6",
													"source": 13
												},
												{
													"begin": 1179,
													"end": 1185,
													"name": "DUP3",
													"source": 13
												},
												{
													"begin": 1168,
													"end": 1177,
													"name": "DUP7",
													"source": 13
												},
												{
													"begin": 1164,
													"end": 1186,
													"name": "ADD",
													"source": 13
												},
												{
													"begin": 1132,
													"end": 1196,
													"name": "PUSH [tag]",
													"source": 13,
													"value": "24"
												},
												{
													"begin": 1132,
													"end": 1196,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 13
												},
												{
													"begin": 1132,
													"end": 1196,
													"name": "tag",
													"source": 13,
													"value": "44"
												},
												{
													"begin": 1132,
													"end": 1196,
													"name": "JUMPDEST",
													"source": 13
												},
												{
													"begin": 1122,
													"end": 1196,
													"name": "SWAP3",
													"source": 13
												},
												{
													"begin": 1122,
													"end": 1196,
													"name": "POP",
													"source": 13
												},
												{
													"begin": 1078,
													"end": 1206,
													"name": "POP",
													"source": 13
												},
												{
													"begin": 1245,
													"end": 1247,
													"name": "PUSH",
													"source": 13,
													"value": "20"
												},
												{
													"begin": 1271,
													"end": 1335,
													"name": "PUSH [tag]",
													"source": 13,
													"value": "45"
												},
												{
													"begin": 1327,
													"end": 1334,
													"name": "DUP6",
													"source": 13
												},
												{
													"begin": 1318,
													"end": 1324,
													"name": "DUP3",
													"source": 13
												},
												{
													"begin": 1307,
													"end": 1316,
													"name": "DUP7",
													"source": 13
												},
												{
													"begin": 1303,
													"end": 1325,
													"name": "ADD",
													"source": 13
												},
												{
													"begin": 1271,
													"end": 1335,
													"name": "PUSH [tag]",
													"source": 13,
													"value": "24"
												},
												{
													"begin": 1271,
													"end": 1335,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 13
												},
												{
													"begin": 1271,
													"end": 1335,
													"name": "tag",
													"source": 13,
													"value": "45"
												},
												{
													"begin": 1271,
													"end": 1335,
													"name": "JUMPDEST",
													"source": 13
												},
												{
													"begin": 1261,
													"end": 1335,
													"name": "SWAP2",
													"source": 13
												},
												{
													"begin": 1261,
													"end": 1335,
													"name": "POP",
													"source": 13
												},
												{
													"begin": 1216,
													"end": 1345,
													"name": "POP",
													"source": 13
												},
												{
													"begin": 845,
													"end": 1352,
													"name": "SWAP3",
													"source": 13
												},
												{
													"begin": 845,
													"end": 1352,
													"name": "POP",
													"source": 13
												},
												{
													"begin": 845,
													"end": 1352,
													"name": "SWAP3",
													"source": 13
												},
												{
													"begin": 845,
													"end": 1352,
													"name": "SWAP1",
													"source": 13
												},
												{
													"begin": 845,
													"end": 1352,
													"name": "POP",
													"source": 13
												},
												{
													"begin": 845,
													"end": 1352,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 13
												},
												{
													"begin": 1358,
													"end": 1476,
													"name": "tag",
													"source": 13,
													"value": "25"
												},
												{
													"begin": 1358,
													"end": 1476,
													"name": "JUMPDEST",
													"source": 13
												},
												{
													"begin": 1445,
													"end": 1469,
													"name": "PUSH [tag]",
													"source": 13,
													"value": "47"
												},
												{
													"begin": 1463,
													"end": 1468,
													"name": "DUP2",
													"source": 13
												},
												{
													"begin": 1445,
													"end": 1469,
													"name": "PUSH [tag]",
													"source": 13,
													"value": "22"
												},
												{
													"begin": 1445,
													"end": 1469,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 13
												},
												{
													"begin": 1445,
													"end": 1469,
													"name": "tag",
													"source": 13,
													"value": "47"
												},
												{
													"begin": 1445,
													"end": 1469,
													"name": "JUMPDEST",
													"source": 13
												},
												{
													"begin": 1440,
													"end": 1443,
													"name": "DUP3",
													"source": 13
												},
												{
													"begin": 1433,
													"end": 1470,
													"name": "MSTORE",
													"source": 13
												},
												{
													"begin": 1358,
													"end": 1476,
													"name": "POP",
													"source": 13
												},
												{
													"begin": 1358,
													"end": 1476,
													"name": "POP",
													"source": 13
												},
												{
													"begin": 1358,
													"end": 1476,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 13
												},
												{
													"begin": 1482,
													"end": 1704,
													"name": "tag",
													"source": 13,
													"value": "9"
												},
												{
													"begin": 1482,
													"end": 1704,
													"name": "JUMPDEST",
													"source": 13
												},
												{
													"begin": 1575,
													"end": 1579,
													"name": "PUSH",
													"source": 13,
													"value": "0"
												},
												{
													"begin": 1613,
													"end": 1615,
													"name": "PUSH",
													"source": 13,
													"value": "20"
												},
												{
													"begin": 1602,
													"end": 1611,
													"name": "DUP3",
													"source": 13
												},
												{
													"begin": 1598,
													"end": 1616,
													"name": "ADD",
													"source": 13
												},
												{
													"begin": 1590,
													"end": 1616,
													"name": "SWAP1",
													"source": 13
												},
												{
													"begin": 1590,
													"end": 1616,
													"name": "POP",
													"source": 13
												},
												{
													"begin": 1626,
													"end": 1697,
													"name": "PUSH [tag]",
													"source": 13,
													"value": "49"
												},
												{
													"begin": 1694,
													"end": 1695,
													"name": "PUSH",
													"source": 13,
													"value": "0"
												},
												{
													"begin": 1683,
													"end": 1692,
													"name": "DUP4",
													"source": 13
												},
												{
													"begin": 1679,
													"end": 1696,
													"name": "ADD",
													"source": 13
												},
												{
													"begin": 1670,
													"end": 1676,
													"name": "DUP5",
													"source": 13
												},
												{
													"begin": 1626,
													"end": 1697,
													"name": "PUSH [tag]",
													"source": 13,
													"value": "25"
												},
												{
													"begin": 1626,
													"end": 1697,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 13
												},
												{
													"begin": 1626,
													"end": 1697,
													"name": "tag",
													"source": 13,
													"value": "49"
												},
												{
													"begin": 1626,
													"end": 1697,
													"name": "JUMPDEST",
													"source": 13
												},
												{
													"begin": 1482,
													"end": 1704,
													"name": "SWAP3",
													"source": 13
												},
												{
													"begin": 1482,
													"end": 1704,
													"name": "SWAP2",
													"source": 13
												},
												{
													"begin": 1482,
													"end": 1704,
													"name": "POP",
													"source": 13
												},
												{
													"begin": 1482,
													"end": 1704,
													"name": "POP",
													"source": 13
												},
												{
													"begin": 1482,
													"end": 1704,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 13
												},
												{
													"begin": 1710,
													"end": 1879,
													"name": "tag",
													"source": 13,
													"value": "26"
												},
												{
													"begin": 1710,
													"end": 1879,
													"name": "JUMPDEST",
													"source": 13
												},
												{
													"begin": 1794,
													"end": 1805,
													"name": "PUSH",
													"source": 13,
													"value": "0"
												},
												{
													"begin": 1828,
													"end": 1834,
													"name": "DUP3",
													"source": 13
												},
												{
													"begin": 1823,
													"end": 1826,
													"name": "DUP3",
													"source": 13
												},
												{
													"begin": 1816,
													"end": 1835,
													"name": "MSTORE",
													"source": 13
												},
												{
													"begin": 1868,
													"end": 1872,
													"name": "PUSH",
													"source": 13,
													"value": "20"
												},
												{
													"begin": 1863,
													"end": 1866,
													"name": "DUP3",
													"source": 13
												},
												{
													"begin": 1859,
													"end": 1873,
													"name": "ADD",
													"source": 13
												},
												{
													"begin": 1844,
													"end": 1873,
													"name": "SWAP1",
													"source": 13
												},
												{
													"begin": 1844,
													"end": 1873,
													"name": "POP",
													"source": 13
												},
												{
													"begin": 1710,
													"end": 1879,
													"name": "SWAP3",
													"source": 13
												},
												{
													"begin": 1710,
													"end": 1879,
													"name": "SWAP2",
													"source": 13
												},
												{
													"begin": 1710,
													"end": 1879,
													"name": "POP",
													"source": 13
												},
												{
													"begin": 1710,
													"end": 1879,
													"name": "POP",
													"source": 13
												},
												{
													"begin": 1710,
													"end": 1879,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 13
												},
												{
													"begin": 1885,
													"end": 2056,
													"name": "tag",
													"source": 13,
													"value": "27"
												},
												{
													"begin": 1885,
													"end": 2056,
													"name": "JUMPDEST",
													"source": 13
												},
												{
													"begin": 2025,
													"end": 2048,
													"name": "PUSH",
													"source": 13,
													"value": "496E76616C696420746F6B656E20616464726573730000000000000000000000"
												},
												{
													"begin": 2021,
													"end": 2022,
													"name": "PUSH",
													"source": 13,
													"value": "0"
												},
												{
													"begin": 2013,
													"end": 2019,
													"name": "DUP3",
													"source": 13
												},
												{
													"begin": 2009,
													"end": 2023,
													"name": "ADD",
													"source": 13
												},
												{
													"begin": 2002,
													"end": 2049,
													"name": "MSTORE",
													"source": 13
												},
												{
													"begin": 1885,
													"end": 2056,
													"name": "POP",
													"source": 13
												},
												{
													"begin": 1885,
													"end": 2056,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 13
												},
												{
													"begin": 2062,
													"end": 2428,
													"name": "tag",
													"source": 13,
													"value": "28"
												},
												{
													"begin": 2062,
													"end": 2428,
													"name": "JUMPDEST",
													"source": 13
												},
												{
													"begin": 2204,
													"end": 2207,
													"name": "PUSH",
													"source": 13,
													"value": "0"
												},
												{
													"begin": 2225,
													"end": 2292,
													"name": "PUSH [tag]",
													"source": 13,
													"value": "53"
												},
												{
													"begin": 2289,
													"end": 2291,
													"name": "PUSH",
													"source": 13,
													"value": "15"
												},
												{
													"begin": 2284,
													"end": 2287,
													"name": "DUP4",
													"source": 13
												},
												{
													"begin": 2225,
													"end": 2292,
													"name": "PUSH [tag]",
													"source": 13,
													"value": "26"
												},
												{
													"begin": 2225,
													"end": 2292,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 13
												},
												{
													"begin": 2225,
													"end": 2292,
													"name": "tag",
													"source": 13,
													"value": "53"
												},
												{
													"begin": 2225,
													"end": 2292,
													"name": "JUMPDEST",
													"source": 13
												},
												{
													"begin": 2218,
													"end": 2292,
													"name": "SWAP2",
													"source": 13
												},
												{
													"begin": 2218,
													"end": 2292,
													"name": "POP",
													"source": 13
												},
												{
													"begin": 2301,
													"end": 2394,
													"name": "PUSH [tag]",
													"source": 13,
													"value": "54"
												},
												{
													"begin": 2390,
													"end": 2393,
													"name": "DUP3",
													"source": 13
												},
												{
													"begin": 2301,
													"end": 2394,
													"name": "PUSH [tag]",
													"source": 13,
													"value": "27"
												},
												{
													"begin": 2301,
													"end": 2394,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 13
												},
												{
													"begin": 2301,
													"end": 2394,
													"name": "tag",
													"source": 13,
													"value": "54"
												},
												{
													"begin": 2301,
													"end": 2394,
													"name": "JUMPDEST",
													"source": 13
												},
												{
													"begin": 2419,
													"end": 2421,
													"name": "PUSH",
													"source": 13,
													"value": "20"
												},
												{
													"begin": 2414,
													"end": 2417,
													"name": "DUP3",
													"source": 13
												},
												{
													"begin": 2410,
													"end": 2422,
													"name": "ADD",
													"source": 13
												},
												{
													"begin": 2403,
													"end": 2422,
													"name": "SWAP1",
													"source": 13
												},
												{
													"begin": 2403,
													"end": 2422,
													"name": "POP",
													"source": 13
												},
												{
													"begin": 2062,
													"end": 2428,
													"name": "SWAP2",
													"source": 13
												},
												{
													"begin": 2062,
													"end": 2428,
													"name": "SWAP1",
													"source": 13
												},
												{
													"begin": 2062,
													"end": 2428,
													"name": "POP",
													"source": 13
												},
												{
													"begin": 2062,
													"end": 2428,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 13
												},
												{
													"begin": 2434,
													"end": 2853,
													"name": "tag",
													"source": 13,
													"value": "15"
												},
												{
													"begin": 2434,
													"end": 2853,
													"name": "JUMPDEST",
													"source": 13
												},
												{
													"begin": 2600,
													"end": 2604,
													"name": "PUSH",
													"source": 13,
													"value": "0"
												},
												{
													"begin": 2638,
													"end": 2640,
													"name": "PUSH",
													"source": 13,
													"value": "20"
												},
												{
													"begin": 2627,
													"end": 2636,
													"name": "DUP3",
													"source": 13
												},
												{
													"begin": 2623,
													"end": 2641,
													"name": "ADD",
													"source": 13
												},
												{
													"begin": 2615,
													"end": 2641,
													"name": "SWAP1",
													"source": 13
												},
												{
													"begin": 2615,
													"end": 2641,
													"name": "POP",
													"source": 13
												},
												{
													"begin": 2687,
													"end": 2696,
													"name": "DUP2",
													"source": 13
												},
												{
													"begin": 2681,
													"end": 2685,
													"name": "DUP2",
													"source": 13
												},
												{
													"begin": 2677,
													"end": 2697,
													"name": "SUB",
													"source": 13
												},
												{
													"begin": 2673,
													"end": 2674,
													"name": "PUSH",
													"source": 13,
													"value": "0"
												},
												{
													"begin": 2662,
													"end": 2671,
													"name": "DUP4",
													"source": 13
												},
												{
													"begin": 2658,
													"end": 2675,
													"name": "ADD",
													"source": 13
												},
												{
													"begin": 2651,
													"end": 2698,
													"name": "MSTORE",
													"source": 13
												},
												{
													"begin": 2715,
													"end": 2846,
													"name": "PUSH [tag]",
													"source": 13,
													"value": "56"
												},
												{
													"begin": 2841,
													"end": 2845,
													"name": "DUP2",
													"source": 13
												},
												{
													"begin": 2715,
													"end": 2846,
													"name": "PUSH [tag]",
													"source": 13,
													"value": "28"
												},
												{
													"begin": 2715,
													"end": 2846,
													"jumpType": "[in]",
													"name": "JUMP",
													"source": 13
												},
												{
													"begin": 2715,
													"end": 2846,
													"name": "tag",
													"source": 13,
													"value": "56"
												},
												{
													"begin": 2715,
													"end": 2846,
													"name": "JUMPDEST",
													"source": 13
												},
												{
													"begin": 2707,
													"end": 2846,
													"name": "SWAP1",
													"source": 13
												},
												{
													"begin": 2707,
													"end": 2846,
													"name": "POP",
													"source": 13
												},
												{
													"begin": 2434,
													"end": 2853,
													"name": "SWAP2",
													"source": 13
												},
												{
													"begin": 2434,
													"end": 2853,
													"name": "SWAP1",
													"source": 13
												},
												{
													"begin": 2434,
													"end": 2853,
													"name": "POP",
													"source": 13
												},
												{
													"begin": 2434,
													"end": 2853,
													"jumpType": "[out]",
													"name": "JUMP",
													"source": 13
												},
												{
													"begin": 481,
													"end": 1503,
													"name": "tag",
													"source": 12,
													"value": "16"
												},
												{
													"begin": 481,
													"end": 1503,
													"name": "JUMPDEST",
													"source": 12
												},
												{
													"begin": 481,
													"end": 1503,
													"name": "PUSH",
													"source": 12,
													"value": "80"
												},
												{
													"begin": 481,
													"end": 1503,
													"name": "MLOAD",
													"source": 12
												},
												{
													"begin": 481,
													"end": 1503,
													"name": "PUSH #[$]",
													"source": 12,
													"value": "0000000000000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 481,
													"end": 1503,
													"name": "PUSH [$]",
													"source": 12,
													"value": "0000000000000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 481,
													"end": 1503,
													"name": "PUSH",
													"source": 12,
													"value": "0"
												},
												{
													"begin": 481,
													"end": 1503,
													"name": "CODECOPY",
													"source": 12
												},
												{
													"begin": 481,
													"end": 1503,
													"name": "PUSH",
													"source": 12,
													"value": "0"
												},
												{
													"begin": 481,
													"end": 1503,
													"name": "ASSIGNIMMUTABLE",
													"source": 12,
													"value": "1525"
												},
												{
													"begin": 481,
													"end": 1503,
													"name": "PUSH #[$]",
													"source": 12,
													"value": "0000000000000000000000000000000000000000000000000000000000000000"
												},
												{
													"begin": 481,
													"end": 1503,
													"name": "PUSH",
													"source": 12,
													"value": "0"
												},
												{
													"begin": 481,
													"end": 1503,
													"name": "RETURN",
													"source": 12
												}
											],
											".data": {
												"0": {
													".auxdata": "a2646970667358221220c1198753c4d47eaa95c0862639943fda4ce251fcbe9ffe29421da0c40b3fd0c264736f6c634300081d0033",
													".code": [
														{
															"begin": 481,
															"end": 1503,
															"name": "PUSH",
															"source": 12,
															"value": "80"
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "PUSH",
															"source": 12,
															"value": "40"
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "MSTORE",
															"source": 12
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "CALLVALUE",
															"source": 12
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "DUP1",
															"source": 12
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "ISZERO",
															"source": 12
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "PUSH [tag]",
															"source": 12,
															"value": "1"
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "JUMPI",
															"source": 12
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "PUSH",
															"source": 12,
															"value": "0"
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "PUSH",
															"source": 12,
															"value": "0"
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "REVERT",
															"source": 12
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "tag",
															"source": 12,
															"value": "1"
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "JUMPDEST",
															"source": 12
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "POP",
															"source": 12
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "PUSH",
															"source": 12,
															"value": "4"
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "CALLDATASIZE",
															"source": 12
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "LT",
															"source": 12
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "PUSH [tag]",
															"source": 12,
															"value": "2"
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "JUMPI",
															"source": 12
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "PUSH",
															"source": 12,
															"value": "0"
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "CALLDATALOAD",
															"source": 12
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "PUSH",
															"source": 12,
															"value": "E0"
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "SHR",
															"source": 12
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "DUP1",
															"source": 12
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "PUSH",
															"source": 12,
															"value": "715018A6"
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "EQ",
															"source": 12
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "PUSH [tag]",
															"source": 12,
															"value": "3"
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "JUMPI",
															"source": 12
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "DUP1",
															"source": 12
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "PUSH",
															"source": 12,
															"value": "8DA5CB5B"
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "EQ",
															"source": 12
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "PUSH [tag]",
															"source": 12,
															"value": "4"
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "JUMPI",
															"source": 12
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "DUP1",
															"source": 12
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "PUSH",
															"source": 12,
															"value": "B2016BD4"
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "EQ",
															"source": 12
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "PUSH [tag]",
															"source": 12,
															"value": "5"
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "JUMPI",
															"source": 12
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "DUP1",
															"source": 12
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "PUSH",
															"source": 12,
															"value": "B69EF8A8"
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "EQ",
															"source": 12
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "PUSH [tag]",
															"source": 12,
															"value": "6"
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "JUMPI",
															"source": 12
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "DUP1",
															"source": 12
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "PUSH",
															"source": 12,
															"value": "F2FDE38B"
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "EQ",
															"source": 12
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "PUSH [tag]",
															"source": 12,
															"value": "7"
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "JUMPI",
															"source": 12
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "DUP1",
															"source": 12
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "PUSH",
															"source": 12,
															"value": "F3FEF3A3"
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "EQ",
															"source": 12
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "PUSH [tag]",
															"source": 12,
															"value": "8"
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "JUMPI",
															"source": 12
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "tag",
															"source": 12,
															"value": "2"
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "JUMPDEST",
															"source": 12
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "PUSH",
															"source": 12,
															"value": "0"
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "PUSH",
															"source": 12,
															"value": "0"
														},
														{
															"begin": 481,
															"end": 1503,
															"name": "REVERT",
															"source": 12
														},
														{
															"begin": 2293,
															"end": 2394,
															"name": "tag",
															"source": 0,
															"value": "3"
														},
														{
															"begin": 2293,
															"end": 2394,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 2293,
															"end": 2394,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "9"
														},
														{
															"begin": 2293,
															"end": 2394,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "10"
														},
														{
															"begin": 2293,
															"end": 2394,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 2293,
															"end": 2394,
															"name": "tag",
															"source": 0,
															"value": "9"
														},
														{
															"begin": 2293,
															"end": 2394,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 2293,
															"end": 2394,
															"name": "STOP",
															"source": 0
														},
														{
															"begin": 1638,
															"end": 1723,
															"name": "tag",
															"source": 0,
															"value": "4"
														},
														{
															"begin": 1638,
															"end": 1723,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 1638,
															"end": 1723,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "11"
														},
														{
															"begin": 1638,
															"end": 1723,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "12"
														},
														{
															"begin": 1638,
															"end": 1723,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 1638,
															"end": 1723,
															"name": "tag",
															"source": 0,
															"value": "11"
														},
														{
															"begin": 1638,
															"end": 1723,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 1638,
															"end": 1723,
															"name": "PUSH",
															"source": 0,
															"value": "40"
														},
														{
															"begin": 1638,
															"end": 1723,
															"name": "MLOAD",
															"source": 0
														},
														{
															"begin": 1638,
															"end": 1723,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "13"
														},
														{
															"begin": 1638,
															"end": 1723,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 1638,
															"end": 1723,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 1638,
															"end": 1723,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "14"
														},
														{
															"begin": 1638,
															"end": 1723,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 1638,
															"end": 1723,
															"name": "tag",
															"source": 0,
															"value": "13"
														},
														{
															"begin": 1638,
															"end": 1723,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 1638,
															"end": 1723,
															"name": "PUSH",
															"source": 0,
															"value": "40"
														},
														{
															"begin": 1638,
															"end": 1723,
															"name": "MLOAD",
															"source": 0
														},
														{
															"begin": 1638,
															"end": 1723,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 1638,
															"end": 1723,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 1638,
															"end": 1723,
															"name": "SUB",
															"source": 0
														},
														{
															"begin": 1638,
															"end": 1723,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 1638,
															"end": 1723,
															"name": "RETURN",
															"source": 0
														},
														{
															"begin": 550,
															"end": 589,
															"name": "tag",
															"source": 12,
															"value": "5"
														},
														{
															"begin": 550,
															"end": 589,
															"name": "JUMPDEST",
															"source": 12
														},
														{
															"begin": 550,
															"end": 589,
															"name": "PUSH [tag]",
															"source": 12,
															"value": "15"
														},
														{
															"begin": 550,
															"end": 589,
															"name": "PUSH [tag]",
															"source": 12,
															"value": "16"
														},
														{
															"begin": 550,
															"end": 589,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 12
														},
														{
															"begin": 550,
															"end": 589,
															"name": "tag",
															"source": 12,
															"value": "15"
														},
														{
															"begin": 550,
															"end": 589,
															"name": "JUMPDEST",
															"source": 12
														},
														{
															"begin": 550,
															"end": 589,
															"name": "PUSH",
															"source": 12,
															"value": "40"
														},
														{
															"begin": 550,
															"end": 589,
															"name": "MLOAD",
															"source": 12
														},
														{
															"begin": 550,
															"end": 589,
															"name": "PUSH [tag]",
															"source": 12,
															"value": "17"
														},
														{
															"begin": 550,
															"end": 589,
															"name": "SWAP2",
															"source": 12
														},
														{
															"begin": 550,
															"end": 589,
															"name": "SWAP1",
															"source": 12
														},
														{
															"begin": 550,
															"end": 589,
															"name": "PUSH [tag]",
															"source": 12,
															"value": "18"
														},
														{
															"begin": 550,
															"end": 589,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 12
														},
														{
															"begin": 550,
															"end": 589,
															"name": "tag",
															"source": 12,
															"value": "17"
														},
														{
															"begin": 550,
															"end": 589,
															"name": "JUMPDEST",
															"source": 12
														},
														{
															"begin": 550,
															"end": 589,
															"name": "PUSH",
															"source": 12,
															"value": "40"
														},
														{
															"begin": 550,
															"end": 589,
															"name": "MLOAD",
															"source": 12
														},
														{
															"begin": 550,
															"end": 589,
															"name": "DUP1",
															"source": 12
														},
														{
															"begin": 550,
															"end": 589,
															"name": "SWAP2",
															"source": 12
														},
														{
															"begin": 550,
															"end": 589,
															"name": "SUB",
															"source": 12
														},
														{
															"begin": 550,
															"end": 589,
															"name": "SWAP1",
															"source": 12
														},
														{
															"begin": 550,
															"end": 589,
															"name": "RETURN",
															"source": 12
														},
														{
															"begin": 1386,
															"end": 1501,
															"name": "tag",
															"source": 12,
															"value": "6"
														},
														{
															"begin": 1386,
															"end": 1501,
															"name": "JUMPDEST",
															"source": 12
														},
														{
															"begin": 1386,
															"end": 1501,
															"name": "PUSH [tag]",
															"source": 12,
															"value": "19"
														},
														{
															"begin": 1386,
															"end": 1501,
															"name": "PUSH [tag]",
															"source": 12,
															"value": "20"
														},
														{
															"begin": 1386,
															"end": 1501,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 12
														},
														{
															"begin": 1386,
															"end": 1501,
															"name": "tag",
															"source": 12,
															"value": "19"
														},
														{
															"begin": 1386,
															"end": 1501,
															"name": "JUMPDEST",
															"source": 12
														},
														{
															"begin": 1386,
															"end": 1501,
															"name": "PUSH",
															"source": 12,
															"value": "40"
														},
														{
															"begin": 1386,
															"end": 1501,
															"name": "MLOAD",
															"source": 12
														},
														{
															"begin": 1386,
															"end": 1501,
															"name": "PUSH [tag]",
															"source": 12,
															"value": "21"
														},
														{
															"begin": 1386,
															"end": 1501,
															"name": "SWAP2",
															"source": 12
														},
														{
															"begin": 1386,
															"end": 1501,
															"name": "SWAP1",
															"source": 12
														},
														{
															"begin": 1386,
															"end": 1501,
															"name": "PUSH [tag]",
															"source": 12,
															"value": "22"
														},
														{
															"begin": 1386,
															"end": 1501,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 12
														},
														{
															"begin": 1386,
															"end": 1501,
															"name": "tag",
															"source": 12,
															"value": "21"
														},
														{
															"begin": 1386,
															"end": 1501,
															"name": "JUMPDEST",
															"source": 12
														},
														{
															"begin": 1386,
															"end": 1501,
															"name": "PUSH",
															"source": 12,
															"value": "40"
														},
														{
															"begin": 1386,
															"end": 1501,
															"name": "MLOAD",
															"source": 12
														},
														{
															"begin": 1386,
															"end": 1501,
															"name": "DUP1",
															"source": 12
														},
														{
															"begin": 1386,
															"end": 1501,
															"name": "SWAP2",
															"source": 12
														},
														{
															"begin": 1386,
															"end": 1501,
															"name": "SUB",
															"source": 12
														},
														{
															"begin": 1386,
															"end": 1501,
															"name": "SWAP1",
															"source": 12
														},
														{
															"begin": 1386,
															"end": 1501,
															"name": "RETURN",
															"source": 12
														},
														{
															"begin": 2543,
															"end": 2758,
															"name": "tag",
															"source": 0,
															"value": "7"
														},
														{
															"begin": 2543,
															"end": 2758,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 2543,
															"end": 2758,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "23"
														},
														{
															"begin": 2543,
															"end": 2758,
															"name": "PUSH",
															"source": 0,
															"value": "4"
														},
														{
															"begin": 2543,
															"end": 2758,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 2543,
															"end": 2758,
															"name": "CALLDATASIZE",
															"source": 0
														},
														{
															"begin": 2543,
															"end": 2758,
															"name": "SUB",
															"source": 0
														},
														{
															"begin": 2543,
															"end": 2758,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 2543,
															"end": 2758,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 2543,
															"end": 2758,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 2543,
															"end": 2758,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "24"
														},
														{
															"begin": 2543,
															"end": 2758,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 2543,
															"end": 2758,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 2543,
															"end": 2758,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "25"
														},
														{
															"begin": 2543,
															"end": 2758,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 2543,
															"end": 2758,
															"name": "tag",
															"source": 0,
															"value": "24"
														},
														{
															"begin": 2543,
															"end": 2758,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 2543,
															"end": 2758,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "26"
														},
														{
															"begin": 2543,
															"end": 2758,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 2543,
															"end": 2758,
															"name": "tag",
															"source": 0,
															"value": "23"
														},
														{
															"begin": 2543,
															"end": 2758,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 2543,
															"end": 2758,
															"name": "STOP",
															"source": 0
														},
														{
															"begin": 1188,
															"end": 1310,
															"name": "tag",
															"source": 12,
															"value": "8"
														},
														{
															"begin": 1188,
															"end": 1310,
															"name": "JUMPDEST",
															"source": 12
														},
														{
															"begin": 1188,
															"end": 1310,
															"name": "PUSH [tag]",
															"source": 12,
															"value": "27"
														},
														{
															"begin": 1188,
															"end": 1310,
															"name": "PUSH",
															"source": 12,
															"value": "4"
														},
														{
															"begin": 1188,
															"end": 1310,
															"name": "DUP1",
															"source": 12
														},
														{
															"begin": 1188,
															"end": 1310,
															"name": "CALLDATASIZE",
															"source": 12
														},
														{
															"begin": 1188,
															"end": 1310,
															"name": "SUB",
															"source": 12
														},
														{
															"begin": 1188,
															"end": 1310,
															"name": "DUP2",
															"source": 12
														},
														{
															"begin": 1188,
															"end": 1310,
															"name": "ADD",
															"source": 12
														},
														{
															"begin": 1188,
															"end": 1310,
															"name": "SWAP1",
															"source": 12
														},
														{
															"begin": 1188,
															"end": 1310,
															"name": "PUSH [tag]",
															"source": 12,
															"value": "28"
														},
														{
															"begin": 1188,
															"end": 1310,
															"name": "SWAP2",
															"source": 12
														},
														{
															"begin": 1188,
															"end": 1310,
															"name": "SWAP1",
															"source": 12
														},
														{
															"begin": 1188,
															"end": 1310,
															"name": "PUSH [tag]",
															"source": 12,
															"value": "29"
														},
														{
															"begin": 1188,
															"end": 1310,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 12
														},
														{
															"begin": 1188,
															"end": 1310,
															"name": "tag",
															"source": 12,
															"value": "28"
														},
														{
															"begin": 1188,
															"end": 1310,
															"name": "JUMPDEST",
															"source": 12
														},
														{
															"begin": 1188,
															"end": 1310,
															"name": "PUSH [tag]",
															"source": 12,
															"value": "30"
														},
														{
															"begin": 1188,
															"end": 1310,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 12
														},
														{
															"begin": 1188,
															"end": 1310,
															"name": "tag",
															"source": 12,
															"value": "27"
														},
														{
															"begin": 1188,
															"end": 1310,
															"name": "JUMPDEST",
															"source": 12
														},
														{
															"begin": 1188,
															"end": 1310,
															"name": "STOP",
															"source": 12
														},
														{
															"begin": 2293,
															"end": 2394,
															"name": "tag",
															"source": 0,
															"value": "10"
														},
														{
															"begin": 2293,
															"end": 2394,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 1531,
															"end": 1544,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "32"
														},
														{
															"begin": 1531,
															"end": 1542,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "33"
														},
														{
															"begin": 1531,
															"end": 1544,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 1531,
															"end": 1544,
															"name": "tag",
															"source": 0,
															"value": "32"
														},
														{
															"begin": 1531,
															"end": 1544,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 2357,
															"end": 2387,
															"modifierDepth": 1,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "35"
														},
														{
															"begin": 2384,
															"end": 2385,
															"modifierDepth": 1,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 2357,
															"end": 2375,
															"modifierDepth": 1,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "36"
														},
														{
															"begin": 2357,
															"end": 2387,
															"jumpType": "[in]",
															"modifierDepth": 1,
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 2357,
															"end": 2387,
															"modifierDepth": 1,
															"name": "tag",
															"source": 0,
															"value": "35"
														},
														{
															"begin": 2357,
															"end": 2387,
															"modifierDepth": 1,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 2293,
															"end": 2394,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 1638,
															"end": 1723,
															"name": "tag",
															"source": 0,
															"value": "12"
														},
														{
															"begin": 1638,
															"end": 1723,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 1684,
															"end": 1691,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 1710,
															"end": 1716,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 1710,
															"end": 1716,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 1710,
															"end": 1716,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 1710,
															"end": 1716,
															"name": "SLOAD",
															"source": 0
														},
														{
															"begin": 1710,
															"end": 1716,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 1710,
															"end": 1716,
															"name": "PUSH",
															"source": 0,
															"value": "100"
														},
														{
															"begin": 1710,
															"end": 1716,
															"name": "EXP",
															"source": 0
														},
														{
															"begin": 1710,
															"end": 1716,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 1710,
															"end": 1716,
															"name": "DIV",
															"source": 0
														},
														{
															"begin": 1710,
															"end": 1716,
															"name": "PUSH",
															"source": 0,
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 1710,
															"end": 1716,
															"name": "AND",
															"source": 0
														},
														{
															"begin": 1703,
															"end": 1716,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 1703,
															"end": 1716,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 1638,
															"end": 1723,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 1638,
															"end": 1723,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 550,
															"end": 589,
															"name": "tag",
															"source": 12,
															"value": "16"
														},
														{
															"begin": 550,
															"end": 589,
															"name": "JUMPDEST",
															"source": 12
														},
														{
															"begin": 550,
															"end": 589,
															"name": "PUSHIMMUTABLE",
															"source": 12,
															"value": "1525"
														},
														{
															"begin": 550,
															"end": 589,
															"name": "DUP2",
															"source": 12
														},
														{
															"begin": 550,
															"end": 589,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 12
														},
														{
															"begin": 1386,
															"end": 1501,
															"name": "tag",
															"source": 12,
															"value": "20"
														},
														{
															"begin": 1386,
															"end": 1501,
															"name": "JUMPDEST",
															"source": 12
														},
														{
															"begin": 1428,
															"end": 1435,
															"name": "PUSH",
															"source": 12,
															"value": "0"
														},
														{
															"begin": 1454,
															"end": 1469,
															"name": "PUSHIMMUTABLE",
															"source": 12,
															"value": "1525"
														},
														{
															"begin": 1454,
															"end": 1479,
															"name": "PUSH",
															"source": 12,
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 1454,
															"end": 1479,
															"name": "AND",
															"source": 12
														},
														{
															"begin": 1454,
															"end": 1479,
															"name": "PUSH",
															"source": 12,
															"value": "70A08231"
														},
														{
															"begin": 1488,
															"end": 1492,
															"name": "ADDRESS",
															"source": 12
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "PUSH",
															"source": 12,
															"value": "40"
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "MLOAD",
															"source": 12
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "DUP3",
															"source": 12
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "PUSH",
															"source": 12,
															"value": "FFFFFFFF"
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "AND",
															"source": 12
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "PUSH",
															"source": 12,
															"value": "E0"
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "SHL",
															"source": 12
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "DUP2",
															"source": 12
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "MSTORE",
															"source": 12
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "PUSH",
															"source": 12,
															"value": "4"
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "ADD",
															"source": 12
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "PUSH [tag]",
															"source": 12,
															"value": "39"
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "SWAP2",
															"source": 12
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "SWAP1",
															"source": 12
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "PUSH [tag]",
															"source": 12,
															"value": "14"
														},
														{
															"begin": 1454,
															"end": 1494,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 12
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "tag",
															"source": 12,
															"value": "39"
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "JUMPDEST",
															"source": 12
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "PUSH",
															"source": 12,
															"value": "20"
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "PUSH",
															"source": 12,
															"value": "40"
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "MLOAD",
															"source": 12
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "DUP1",
															"source": 12
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "DUP4",
															"source": 12
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "SUB",
															"source": 12
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "DUP2",
															"source": 12
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "DUP7",
															"source": 12
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "GAS",
															"source": 12
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "STATICCALL",
															"source": 12
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "ISZERO",
															"source": 12
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "DUP1",
															"source": 12
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "ISZERO",
															"source": 12
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "PUSH [tag]",
															"source": 12,
															"value": "41"
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "JUMPI",
															"source": 12
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "RETURNDATASIZE",
															"source": 12
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "PUSH",
															"source": 12,
															"value": "0"
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "PUSH",
															"source": 12,
															"value": "0"
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "RETURNDATACOPY",
															"source": 12
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "RETURNDATASIZE",
															"source": 12
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "PUSH",
															"source": 12,
															"value": "0"
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "REVERT",
															"source": 12
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "tag",
															"source": 12,
															"value": "41"
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "JUMPDEST",
															"source": 12
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "POP",
															"source": 12
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "POP",
															"source": 12
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "POP",
															"source": 12
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "POP",
															"source": 12
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "PUSH",
															"source": 12,
															"value": "40"
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "MLOAD",
															"source": 12
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "RETURNDATASIZE",
															"source": 12
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "PUSH",
															"source": 12,
															"value": "1F"
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "NOT",
															"source": 12
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "PUSH",
															"source": 12,
															"value": "1F"
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "DUP3",
															"source": 12
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "ADD",
															"source": 12
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "AND",
															"source": 12
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "DUP3",
															"source": 12
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "ADD",
															"source": 12
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "DUP1",
															"source": 12
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "PUSH",
															"source": 12,
															"value": "40"
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "MSTORE",
															"source": 12
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "POP",
															"source": 12
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "DUP2",
															"source": 12
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "ADD",
															"source": 12
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "SWAP1",
															"source": 12
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "PUSH [tag]",
															"source": 12,
															"value": "42"
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "SWAP2",
															"source": 12
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "SWAP1",
															"source": 12
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "PUSH [tag]",
															"source": 12,
															"value": "43"
														},
														{
															"begin": 1454,
															"end": 1494,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 12
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "tag",
															"source": 12,
															"value": "42"
														},
														{
															"begin": 1454,
															"end": 1494,
															"name": "JUMPDEST",
															"source": 12
														},
														{
															"begin": 1447,
															"end": 1494,
															"name": "SWAP1",
															"source": 12
														},
														{
															"begin": 1447,
															"end": 1494,
															"name": "POP",
															"source": 12
														},
														{
															"begin": 1386,
															"end": 1501,
															"name": "SWAP1",
															"source": 12
														},
														{
															"begin": 1386,
															"end": 1501,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 12
														},
														{
															"begin": 2543,
															"end": 2758,
															"name": "tag",
															"source": 0,
															"value": "26"
														},
														{
															"begin": 2543,
															"end": 2758,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 1531,
															"end": 1544,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "45"
														},
														{
															"begin": 1531,
															"end": 1542,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "33"
														},
														{
															"begin": 1531,
															"end": 1544,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 1531,
															"end": 1544,
															"name": "tag",
															"source": 0,
															"value": "45"
														},
														{
															"begin": 1531,
															"end": 1544,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 2647,
															"end": 2648,
															"modifierDepth": 1,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 2627,
															"end": 2649,
															"modifierDepth": 1,
															"name": "PUSH",
															"source": 0,
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 2627,
															"end": 2649,
															"modifierDepth": 1,
															"name": "AND",
															"source": 0
														},
														{
															"begin": 2627,
															"end": 2635,
															"modifierDepth": 1,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 2627,
															"end": 2649,
															"modifierDepth": 1,
															"name": "PUSH",
															"source": 0,
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 2627,
															"end": 2649,
															"modifierDepth": 1,
															"name": "AND",
															"source": 0
														},
														{
															"begin": 2627,
															"end": 2649,
															"name": "SUB",
															"source": 0
														},
														{
															"begin": 2623,
															"end": 2714,
															"modifierDepth": 1,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "47"
														},
														{
															"begin": 2623,
															"end": 2714,
															"modifierDepth": 1,
															"name": "JUMPI",
															"source": 0
														},
														{
															"begin": 2700,
															"end": 2701,
															"modifierDepth": 1,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 2672,
															"end": 2703,
															"modifierDepth": 1,
															"name": "PUSH",
															"source": 0,
															"value": "40"
														},
														{
															"begin": 2672,
															"end": 2703,
															"modifierDepth": 1,
															"name": "MLOAD",
															"source": 0
														},
														{
															"begin": 2672,
															"end": 2703,
															"modifierDepth": 1,
															"name": "PUSH",
															"source": 0,
															"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
														},
														{
															"begin": 2672,
															"end": 2703,
															"modifierDepth": 1,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 2672,
															"end": 2703,
															"modifierDepth": 1,
															"name": "MSTORE",
															"source": 0
														},
														{
															"begin": 2672,
															"end": 2703,
															"modifierDepth": 1,
															"name": "PUSH",
															"source": 0,
															"value": "4"
														},
														{
															"begin": 2672,
															"end": 2703,
															"modifierDepth": 1,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 2672,
															"end": 2703,
															"modifierDepth": 1,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "48"
														},
														{
															"begin": 2672,
															"end": 2703,
															"modifierDepth": 1,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 2672,
															"end": 2703,
															"modifierDepth": 1,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 2672,
															"end": 2703,
															"modifierDepth": 1,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "14"
														},
														{
															"begin": 2672,
															"end": 2703,
															"jumpType": "[in]",
															"modifierDepth": 1,
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 2672,
															"end": 2703,
															"modifierDepth": 1,
															"name": "tag",
															"source": 0,
															"value": "48"
														},
														{
															"begin": 2672,
															"end": 2703,
															"modifierDepth": 1,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 2672,
															"end": 2703,
															"modifierDepth": 1,
															"name": "PUSH",
															"source": 0,
															"value": "40"
														},
														{
															"begin": 2672,
															"end": 2703,
															"modifierDepth": 1,
															"name": "MLOAD",
															"source": 0
														},
														{
															"begin": 2672,
															"end": 2703,
															"modifierDepth": 1,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 2672,
															"end": 2703,
															"modifierDepth": 1,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 2672,
															"end": 2703,
															"modifierDepth": 1,
															"name": "SUB",
															"source": 0
														},
														{
															"begin": 2672,
															"end": 2703,
															"modifierDepth": 1,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 2672,
															"end": 2703,
															"modifierDepth": 1,
															"name": "REVERT",
															"source": 0
														},
														{
															"begin": 2623,
															"end": 2714,
															"modifierDepth": 1,
															"name": "tag",
															"source": 0,
															"value": "47"
														},
														{
															"begin": 2623,
															"end": 2714,
															"modifierDepth": 1,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 2723,
															"end": 2751,
															"modifierDepth": 1,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "49"
														},
														{
															"begin": 2742,
															"end": 2750,
															"modifierDepth": 1,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 2723,
															"end": 2741,
															"modifierDepth": 1,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "36"
														},
														{
															"begin": 2723,
															"end": 2751,
															"jumpType": "[in]",
															"modifierDepth": 1,
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 2723,
															"end": 2751,
															"modifierDepth": 1,
															"name": "tag",
															"source": 0,
															"value": "49"
														},
														{
															"begin": 2723,
															"end": 2751,
															"modifierDepth": 1,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 2543,
															"end": 2758,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 2543,
															"end": 2758,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 1188,
															"end": 1310,
															"name": "tag",
															"source": 12,
															"value": "30"
														},
														{
															"begin": 1188,
															"end": 1310,
															"name": "JUMPDEST",
															"source": 12
														},
														{
															"begin": 1531,
															"end": 1544,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "51"
														},
														{
															"begin": 1531,
															"end": 1542,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "33"
														},
														{
															"begin": 1531,
															"end": 1544,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 1531,
															"end": 1544,
															"name": "tag",
															"source": 0,
															"value": "51"
														},
														{
															"begin": 1531,
															"end": 1544,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 1263,
															"end": 1303,
															"modifierDepth": 1,
															"name": "PUSH [tag]",
															"source": 12,
															"value": "53"
														},
														{
															"begin": 1292,
															"end": 1294,
															"modifierDepth": 1,
															"name": "DUP3",
															"source": 12
														},
														{
															"begin": 1296,
															"end": 1302,
															"modifierDepth": 1,
															"name": "DUP3",
															"source": 12
														},
														{
															"begin": 1263,
															"end": 1278,
															"modifierDepth": 1,
															"name": "PUSHIMMUTABLE",
															"source": 12,
															"value": "1525"
														},
														{
															"begin": 1263,
															"end": 1291,
															"modifierDepth": 1,
															"name": "PUSH",
															"source": 12,
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 1263,
															"end": 1291,
															"modifierDepth": 1,
															"name": "AND",
															"source": 12
														},
														{
															"begin": 1263,
															"end": 1291,
															"modifierDepth": 1,
															"name": "PUSH [tag]",
															"source": 12,
															"value": "54"
														},
														{
															"begin": 1263,
															"end": 1291,
															"modifierDepth": 1,
															"name": "SWAP1",
															"source": 12
														},
														{
															"begin": 1263,
															"end": 1303,
															"modifierDepth": 1,
															"name": "SWAP3",
															"source": 12
														},
														{
															"begin": 1263,
															"end": 1303,
															"modifierDepth": 1,
															"name": "SWAP2",
															"source": 12
														},
														{
															"begin": 1263,
															"end": 1303,
															"modifierDepth": 1,
															"name": "SWAP1",
															"source": 12
														},
														{
															"begin": 1263,
															"end": 1303,
															"modifierDepth": 1,
															"name": "PUSH",
															"source": 12,
															"value": "FFFFFFFF"
														},
														{
															"begin": 1263,
															"end": 1303,
															"modifierDepth": 1,
															"name": "AND",
															"source": 12
														},
														{
															"begin": 1263,
															"end": 1303,
															"jumpType": "[in]",
															"modifierDepth": 1,
															"name": "JUMP",
															"source": 12
														},
														{
															"begin": 1263,
															"end": 1303,
															"modifierDepth": 1,
															"name": "tag",
															"source": 12,
															"value": "53"
														},
														{
															"begin": 1263,
															"end": 1303,
															"modifierDepth": 1,
															"name": "JUMPDEST",
															"source": 12
														},
														{
															"begin": 1188,
															"end": 1310,
															"name": "POP",
															"source": 12
														},
														{
															"begin": 1188,
															"end": 1310,
															"name": "POP",
															"source": 12
														},
														{
															"begin": 1188,
															"end": 1310,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 12
														},
														{
															"begin": 1796,
															"end": 1958,
															"name": "tag",
															"source": 0,
															"value": "33"
														},
														{
															"begin": 1796,
															"end": 1958,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 1866,
															"end": 1878,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "56"
														},
														{
															"begin": 1866,
															"end": 1876,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "57"
														},
														{
															"begin": 1866,
															"end": 1878,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 1866,
															"end": 1878,
															"name": "tag",
															"source": 0,
															"value": "56"
														},
														{
															"begin": 1866,
															"end": 1878,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 1855,
															"end": 1878,
															"name": "PUSH",
															"source": 0,
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 1855,
															"end": 1878,
															"name": "AND",
															"source": 0
														},
														{
															"begin": 1855,
															"end": 1862,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "58"
														},
														{
															"begin": 1855,
															"end": 1860,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "12"
														},
														{
															"begin": 1855,
															"end": 1862,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 1855,
															"end": 1862,
															"name": "tag",
															"source": 0,
															"value": "58"
														},
														{
															"begin": 1855,
															"end": 1862,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 1855,
															"end": 1878,
															"name": "PUSH",
															"source": 0,
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 1855,
															"end": 1878,
															"name": "AND",
															"source": 0
														},
														{
															"begin": 1855,
															"end": 1878,
															"name": "EQ",
															"source": 0
														},
														{
															"begin": 1851,
															"end": 1952,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "59"
														},
														{
															"begin": 1851,
															"end": 1952,
															"name": "JUMPI",
															"source": 0
														},
														{
															"begin": 1928,
															"end": 1940,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "60"
														},
														{
															"begin": 1928,
															"end": 1938,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "57"
														},
														{
															"begin": 1928,
															"end": 1940,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 1928,
															"end": 1940,
															"name": "tag",
															"source": 0,
															"value": "60"
														},
														{
															"begin": 1928,
															"end": 1940,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 1901,
															"end": 1941,
															"name": "PUSH",
															"source": 0,
															"value": "40"
														},
														{
															"begin": 1901,
															"end": 1941,
															"name": "MLOAD",
															"source": 0
														},
														{
															"begin": 1901,
															"end": 1941,
															"name": "PUSH",
															"source": 0,
															"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
														},
														{
															"begin": 1901,
															"end": 1941,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 1901,
															"end": 1941,
															"name": "MSTORE",
															"source": 0
														},
														{
															"begin": 1901,
															"end": 1941,
															"name": "PUSH",
															"source": 0,
															"value": "4"
														},
														{
															"begin": 1901,
															"end": 1941,
															"name": "ADD",
															"source": 0
														},
														{
															"begin": 1901,
															"end": 1941,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "61"
														},
														{
															"begin": 1901,
															"end": 1941,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 1901,
															"end": 1941,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 1901,
															"end": 1941,
															"name": "PUSH [tag]",
															"source": 0,
															"value": "14"
														},
														{
															"begin": 1901,
															"end": 1941,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 1901,
															"end": 1941,
															"name": "tag",
															"source": 0,
															"value": "61"
														},
														{
															"begin": 1901,
															"end": 1941,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 1901,
															"end": 1941,
															"name": "PUSH",
															"source": 0,
															"value": "40"
														},
														{
															"begin": 1901,
															"end": 1941,
															"name": "MLOAD",
															"source": 0
														},
														{
															"begin": 1901,
															"end": 1941,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 1901,
															"end": 1941,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 1901,
															"end": 1941,
															"name": "SUB",
															"source": 0
														},
														{
															"begin": 1901,
															"end": 1941,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 1901,
															"end": 1941,
															"name": "REVERT",
															"source": 0
														},
														{
															"begin": 1851,
															"end": 1952,
															"name": "tag",
															"source": 0,
															"value": "59"
														},
														{
															"begin": 1851,
															"end": 1952,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 1796,
															"end": 1958,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 2912,
															"end": 3099,
															"name": "tag",
															"source": 0,
															"value": "36"
														},
														{
															"begin": 2912,
															"end": 3099,
															"name": "JUMPDEST",
															"source": 0
														},
														{
															"begin": 2985,
															"end": 3001,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 3004,
															"end": 3010,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 3004,
															"end": 3010,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 3004,
															"end": 3010,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 3004,
															"end": 3010,
															"name": "SLOAD",
															"source": 0
														},
														{
															"begin": 3004,
															"end": 3010,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 3004,
															"end": 3010,
															"name": "PUSH",
															"source": 0,
															"value": "100"
														},
														{
															"begin": 3004,
															"end": 3010,
															"name": "EXP",
															"source": 0
														},
														{
															"begin": 3004,
															"end": 3010,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 3004,
															"end": 3010,
															"name": "DIV",
															"source": 0
														},
														{
															"begin": 3004,
															"end": 3010,
															"name": "PUSH",
															"source": 0,
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 3004,
															"end": 3010,
															"name": "AND",
															"source": 0
														},
														{
															"begin": 2985,
															"end": 3010,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 2985,
															"end": 3010,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 3029,
															"end": 3037,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 3020,
															"end": 3026,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 3020,
															"end": 3026,
															"name": "PUSH",
															"source": 0,
															"value": "0"
														},
														{
															"begin": 3020,
															"end": 3037,
															"name": "PUSH",
															"source": 0,
															"value": "100"
														},
														{
															"begin": 3020,
															"end": 3037,
															"name": "EXP",
															"source": 0
														},
														{
															"begin": 3020,
															"end": 3037,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 3020,
															"end": 3037,
															"name": "SLOAD",
															"source": 0
														},
														{
															"begin": 3020,
															"end": 3037,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 3020,
															"end": 3037,
															"name": "PUSH",
															"source": 0,
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 3020,
															"end": 3037,
															"name": "MUL",
															"source": 0
														},
														{
															"begin": 3020,
															"end": 3037,
															"name": "NOT",
															"source": 0
														},
														{
															"begin": 3020,
															"end": 3037,
															"name": "AND",
															"source": 0
														},
														{
															"begin": 3020,
															"end": 3037,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 3020,
															"end": 3037,
															"name": "DUP4",
															"source": 0
														},
														{
															"begin": 3020,
															"end": 3037,
															"name": "PUSH",
															"source": 0,
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 3020,
															"end": 3037,
															"name": "AND",
															"source": 0
														},
														{
															"begin": 3020,
															"end": 3037,
															"name": "MUL",
															"source": 0
														},
														{
															"begin": 3020,
															"end": 3037,
															"name": "OR",
															"source": 0
														},
														{
															"begin": 3020,
															"end": 3037,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 3020,
															"end": 3037,
															"name": "SSTORE",
															"source": 0
														},
														{
															"begin": 3020,
															"end": 3037,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 3083,
															"end": 3091,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 3052,
															"end": 3092,
															"name": "PUSH",
															"source": 0,
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 3052,
															"end": 3092,
															"name": "AND",
															"source": 0
														},
														{
															"begin": 3073,
															"end": 3081,
															"name": "DUP2",
															"source": 0
														},
														{
															"begin": 3052,
															"end": 3092,
															"name": "PUSH",
															"source": 0,
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 3052,
															"end": 3092,
															"name": "AND",
															"source": 0
														},
														{
															"begin": 3052,
															"end": 3092,
															"name": "PUSH",
															"source": 0,
															"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
														},
														{
															"begin": 3052,
															"end": 3092,
															"name": "PUSH",
															"source": 0,
															"value": "40"
														},
														{
															"begin": 3052,
															"end": 3092,
															"name": "MLOAD",
															"source": 0
														},
														{
															"begin": 3052,
															"end": 3092,
															"name": "PUSH",
															"source": 0,
															"value": "40"
														},
														{
															"begin": 3052,
															"end": 3092,
															"name": "MLOAD",
															"source": 0
														},
														{
															"begin": 3052,
															"end": 3092,
															"name": "DUP1",
															"source": 0
														},
														{
															"begin": 3052,
															"end": 3092,
															"name": "SWAP2",
															"source": 0
														},
														{
															"begin": 3052,
															"end": 3092,
															"name": "SUB",
															"source": 0
														},
														{
															"begin": 3052,
															"end": 3092,
															"name": "SWAP1",
															"source": 0
														},
														{
															"begin": 3052,
															"end": 3092,
															"name": "LOG3",
															"source": 0
														},
														{
															"begin": 2975,
															"end": 3099,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 2912,
															"end": 3099,
															"name": "POP",
															"source": 0
														},
														{
															"begin": 2912,
															"end": 3099,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 0
														},
														{
															"begin": 1219,
															"end": 1379,
															"name": "tag",
															"source": 9,
															"value": "54"
														},
														{
															"begin": 1219,
															"end": 1379,
															"name": "JUMPDEST",
															"source": 9
														},
														{
															"begin": 1301,
															"end": 1372,
															"name": "PUSH [tag]",
															"source": 9,
															"value": "64"
														},
														{
															"begin": 1321,
															"end": 1326,
															"name": "DUP4",
															"source": 9
														},
														{
															"begin": 1343,
															"end": 1348,
															"name": "DUP5",
															"source": 9
														},
														{
															"begin": 1343,
															"end": 1357,
															"name": "PUSH",
															"source": 9,
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 1343,
															"end": 1357,
															"name": "AND",
															"source": 9
														},
														{
															"begin": 1343,
															"end": 1357,
															"name": "PUSH",
															"source": 9,
															"value": "A9059CBB"
														},
														{
															"begin": 1360,
															"end": 1362,
															"name": "DUP6",
															"source": 9
														},
														{
															"begin": 1364,
															"end": 1369,
															"name": "DUP6",
															"source": 9
														},
														{
															"begin": 1328,
															"end": 1371,
															"name": "PUSH",
															"source": 9,
															"value": "40"
														},
														{
															"begin": 1328,
															"end": 1371,
															"name": "MLOAD",
															"source": 9
														},
														{
															"begin": 1328,
															"end": 1371,
															"name": "PUSH",
															"source": 9,
															"value": "24"
														},
														{
															"begin": 1328,
															"end": 1371,
															"name": "ADD",
															"source": 9
														},
														{
															"begin": 1328,
															"end": 1371,
															"name": "PUSH [tag]",
															"source": 9,
															"value": "65"
														},
														{
															"begin": 1328,
															"end": 1371,
															"name": "SWAP3",
															"source": 9
														},
														{
															"begin": 1328,
															"end": 1371,
															"name": "SWAP2",
															"source": 9
														},
														{
															"begin": 1328,
															"end": 1371,
															"name": "SWAP1",
															"source": 9
														},
														{
															"begin": 1328,
															"end": 1371,
															"name": "PUSH [tag]",
															"source": 9,
															"value": "66"
														},
														{
															"begin": 1328,
															"end": 1371,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 9
														},
														{
															"begin": 1328,
															"end": 1371,
															"name": "tag",
															"source": 9,
															"value": "65"
														},
														{
															"begin": 1328,
															"end": 1371,
															"name": "JUMPDEST",
															"source": 9
														},
														{
															"begin": 1328,
															"end": 1371,
															"name": "PUSH",
															"source": 9,
															"value": "40"
														},
														{
															"begin": 1328,
															"end": 1371,
															"name": "MLOAD",
															"source": 9
														},
														{
															"begin": 1328,
															"end": 1371,
															"name": "PUSH",
															"source": 9,
															"value": "20"
														},
														{
															"begin": 1328,
															"end": 1371,
															"name": "DUP2",
															"source": 9
														},
														{
															"begin": 1328,
															"end": 1371,
															"name": "DUP4",
															"source": 9
														},
														{
															"begin": 1328,
															"end": 1371,
															"name": "SUB",
															"source": 9
														},
														{
															"begin": 1328,
															"end": 1371,
															"name": "SUB",
															"source": 9
														},
														{
															"begin": 1328,
															"end": 1371,
															"name": "DUP2",
															"source": 9
														},
														{
															"begin": 1328,
															"end": 1371,
															"name": "MSTORE",
															"source": 9
														},
														{
															"begin": 1328,
															"end": 1371,
															"name": "SWAP1",
															"source": 9
														},
														{
															"begin": 1328,
															"end": 1371,
															"name": "PUSH",
															"source": 9,
															"value": "40"
														},
														{
															"begin": 1328,
															"end": 1371,
															"name": "MSTORE",
															"source": 9
														},
														{
															"begin": 1328,
															"end": 1371,
															"name": "SWAP2",
															"source": 9
														},
														{
															"begin": 1328,
															"end": 1371,
															"name": "POP",
															"source": 9
														},
														{
															"begin": 1328,
															"end": 1371,
															"name": "PUSH",
															"source": 9,
															"value": "E0"
														},
														{
															"begin": 1328,
															"end": 1371,
															"name": "SHL",
															"source": 9
														},
														{
															"begin": 1328,
															"end": 1371,
															"name": "PUSH",
															"source": 9,
															"value": "20"
														},
														{
															"begin": 1328,
															"end": 1371,
															"name": "DUP3",
															"source": 9
														},
														{
															"begin": 1328,
															"end": 1371,
															"name": "ADD",
															"source": 9
														},
														{
															"begin": 1328,
															"end": 1371,
															"name": "DUP1",
															"source": 9
														},
														{
															"begin": 1328,
															"end": 1371,
															"name": "MLOAD",
															"source": 9
														},
														{
															"begin": 1328,
															"end": 1371,
															"name": "PUSH",
															"source": 9,
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 1328,
															"end": 1371,
															"name": "DUP4",
															"source": 9
														},
														{
															"begin": 1328,
															"end": 1371,
															"name": "DUP2",
															"source": 9
														},
														{
															"begin": 1328,
															"end": 1371,
															"name": "DUP4",
															"source": 9
														},
														{
															"begin": 1328,
															"end": 1371,
															"name": "AND",
															"source": 9
														},
														{
															"begin": 1328,
															"end": 1371,
															"name": "OR",
															"source": 9
														},
														{
															"begin": 1328,
															"end": 1371,
															"name": "DUP4",
															"source": 9
														},
														{
															"begin": 1328,
															"end": 1371,
															"name": "MSTORE",
															"source": 9
														},
														{
															"begin": 1328,
															"end": 1371,
															"name": "POP",
															"source": 9
														},
														{
															"begin": 1328,
															"end": 1371,
															"name": "POP",
															"source": 9
														},
														{
															"begin": 1328,
															"end": 1371,
															"name": "POP",
															"source": 9
														},
														{
															"begin": 1328,
															"end": 1371,
															"name": "POP",
															"source": 9
														},
														{
															"begin": 1301,
															"end": 1320,
															"name": "PUSH [tag]",
															"source": 9,
															"value": "67"
														},
														{
															"begin": 1301,
															"end": 1372,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 9
														},
														{
															"begin": 1301,
															"end": 1372,
															"name": "tag",
															"source": 9,
															"value": "64"
														},
														{
															"begin": 1301,
															"end": 1372,
															"name": "JUMPDEST",
															"source": 9
														},
														{
															"begin": 1219,
															"end": 1379,
															"name": "POP",
															"source": 9
														},
														{
															"begin": 1219,
															"end": 1379,
															"name": "POP",
															"source": 9
														},
														{
															"begin": 1219,
															"end": 1379,
															"name": "POP",
															"source": 9
														},
														{
															"begin": 1219,
															"end": 1379,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 9
														},
														{
															"begin": 656,
															"end": 752,
															"name": "tag",
															"source": 10,
															"value": "57"
														},
														{
															"begin": 656,
															"end": 752,
															"name": "JUMPDEST",
															"source": 10
														},
														{
															"begin": 709,
															"end": 716,
															"name": "PUSH",
															"source": 10,
															"value": "0"
														},
														{
															"begin": 735,
															"end": 745,
															"name": "CALLER",
															"source": 10
														},
														{
															"begin": 728,
															"end": 745,
															"name": "SWAP1",
															"source": 10
														},
														{
															"begin": 728,
															"end": 745,
															"name": "POP",
															"source": 10
														},
														{
															"begin": 656,
															"end": 752,
															"name": "SWAP1",
															"source": 10
														},
														{
															"begin": 656,
															"end": 752,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 10
														},
														{
															"begin": 7686,
															"end": 8406,
															"name": "tag",
															"source": 9,
															"value": "67"
														},
														{
															"begin": 7686,
															"end": 8406,
															"name": "JUMPDEST",
															"source": 9
														},
														{
															"begin": 7766,
															"end": 7784,
															"name": "PUSH",
															"source": 9,
															"value": "0"
														},
														{
															"begin": 7794,
															"end": 7813,
															"name": "PUSH",
															"source": 9,
															"value": "0"
														},
														{
															"begin": 7932,
															"end": 7936,
															"name": "PUSH",
															"source": 9,
															"value": "20"
														},
														{
															"begin": 7929,
															"end": 7930,
															"name": "PUSH",
															"source": 9,
															"value": "0"
														},
														{
															"begin": 7922,
															"end": 7926,
															"name": "DUP5",
															"source": 9
														},
														{
															"begin": 7916,
															"end": 7927,
															"name": "MLOAD",
															"source": 9
														},
														{
															"begin": 7909,
															"end": 7913,
															"name": "PUSH",
															"source": 9,
															"value": "20"
														},
														{
															"begin": 7903,
															"end": 7907,
															"name": "DUP7",
															"source": 9
														},
														{
															"begin": 7899,
															"end": 7914,
															"name": "ADD",
															"source": 9
														},
														{
															"begin": 7896,
															"end": 7897,
															"name": "PUSH",
															"source": 9,
															"value": "0"
														},
														{
															"begin": 7889,
															"end": 7894,
															"name": "DUP9",
															"source": 9
														},
														{
															"begin": 7882,
															"end": 7887,
															"name": "GAS",
															"source": 9
														},
														{
															"begin": 7877,
															"end": 7937,
															"name": "CALL",
															"source": 9
														},
														{
															"begin": 7989,
															"end": 7996,
															"name": "DUP1",
															"source": 9
														},
														{
															"begin": 7979,
															"end": 8155,
															"name": "PUSH [tag]",
															"source": 9,
															"value": "70"
														},
														{
															"begin": 7979,
															"end": 8155,
															"name": "JUMPI",
															"source": 9
														},
														{
															"begin": 8033,
															"end": 8037,
															"name": "PUSH",
															"source": 9,
															"value": "40"
														},
														{
															"begin": 8027,
															"end": 8038,
															"name": "MLOAD",
															"source": 9
														},
														{
															"begin": 8078,
															"end": 8094,
															"name": "RETURNDATASIZE",
															"source": 9
														},
														{
															"begin": 8075,
															"end": 8076,
															"name": "PUSH",
															"source": 9,
															"value": "0"
														},
														{
															"begin": 8070,
															"end": 8073,
															"name": "DUP3",
															"source": 9
														},
														{
															"begin": 8055,
															"end": 8095,
															"name": "RETURNDATACOPY",
															"source": 9
														},
														{
															"begin": 8124,
															"end": 8140,
															"name": "RETURNDATASIZE",
															"source": 9
														},
														{
															"begin": 8119,
															"end": 8122,
															"name": "DUP2",
															"source": 9
														},
														{
															"begin": 8112,
															"end": 8141,
															"name": "REVERT",
															"source": 9
														},
														{
															"begin": 7979,
															"end": 8155,
															"name": "tag",
															"source": 9,
															"value": "70"
														},
														{
															"begin": 7979,
															"end": 8155,
															"name": "JUMPDEST",
															"source": 9
														},
														{
															"begin": 8182,
															"end": 8198,
															"name": "RETURNDATASIZE",
															"source": 9
														},
														{
															"begin": 8168,
															"end": 8198,
															"name": "SWAP3",
															"source": 9
														},
														{
															"begin": 8168,
															"end": 8198,
															"name": "POP",
															"source": 9
														},
														{
															"begin": 8232,
															"end": 8233,
															"name": "PUSH",
															"source": 9,
															"value": "0"
														},
														{
															"begin": 8226,
															"end": 8234,
															"name": "MLOAD",
															"source": 9
														},
														{
															"begin": 8211,
															"end": 8234,
															"name": "SWAP2",
															"source": 9
														},
														{
															"begin": 8211,
															"end": 8234,
															"name": "POP",
															"source": 9
														},
														{
															"begin": 7848,
															"end": 8244,
															"name": "POP",
															"source": 9
														},
														{
															"begin": 8272,
															"end": 8273,
															"name": "PUSH",
															"source": 9,
															"value": "0"
														},
														{
															"begin": 8258,
															"end": 8268,
															"name": "DUP3",
															"source": 9
														},
														{
															"begin": 8258,
															"end": 8273,
															"name": "EQ",
															"source": 9
														},
														{
															"begin": 8258,
															"end": 8326,
															"name": "PUSH [tag]",
															"source": 9,
															"value": "71"
														},
														{
															"begin": 8258,
															"end": 8326,
															"name": "JUMPI",
															"source": 9
														},
														{
															"begin": 8325,
															"end": 8326,
															"name": "PUSH",
															"source": 9,
															"value": "1"
														},
														{
															"begin": 8310,
															"end": 8321,
															"name": "DUP2",
															"source": 9
														},
														{
															"begin": 8310,
															"end": 8326,
															"name": "EQ",
															"source": 9
														},
														{
															"begin": 8310,
															"end": 8326,
															"name": "ISZERO",
															"source": 9
														},
														{
															"begin": 8258,
															"end": 8326,
															"name": "PUSH [tag]",
															"source": 9,
															"value": "72"
														},
														{
															"begin": 8258,
															"end": 8326,
															"name": "JUMP",
															"source": 9
														},
														{
															"begin": 8258,
															"end": 8326,
															"name": "tag",
															"source": 9,
															"value": "71"
														},
														{
															"begin": 8258,
															"end": 8326,
															"name": "JUMPDEST",
															"source": 9
														},
														{
															"begin": 8306,
															"end": 8307,
															"name": "PUSH",
															"source": 9,
															"value": "0"
														},
														{
															"begin": 8284,
															"end": 8289,
															"name": "DUP5",
															"source": 9
														},
														{
															"begin": 8276,
															"end": 8302,
															"name": "PUSH",
															"source": 9,
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 8276,
															"end": 8302,
															"name": "AND",
															"source": 9
														},
														{
															"begin": 8276,
															"end": 8302,
															"name": "EXTCODESIZE",
															"source": 9
														},
														{
															"begin": 8276,
															"end": 8307,
															"name": "EQ",
															"source": 9
														},
														{
															"begin": 8258,
															"end": 8326,
															"name": "tag",
															"source": 9,
															"value": "72"
														},
														{
															"begin": 8258,
															"end": 8326,
															"name": "JUMPDEST",
															"source": 9
														},
														{
															"begin": 8254,
															"end": 8400,
															"name": "ISZERO",
															"source": 9
														},
														{
															"begin": 8254,
															"end": 8400,
															"name": "PUSH [tag]",
															"source": 9,
															"value": "73"
														},
														{
															"begin": 8254,
															"end": 8400,
															"name": "JUMPI",
															"source": 9
														},
														{
															"begin": 8382,
															"end": 8387,
															"name": "DUP4",
															"source": 9
														},
														{
															"begin": 8349,
															"end": 8389,
															"name": "PUSH",
															"source": 9,
															"value": "40"
														},
														{
															"begin": 8349,
															"end": 8389,
															"name": "MLOAD",
															"source": 9
														},
														{
															"begin": 8349,
															"end": 8389,
															"name": "PUSH",
															"source": 9,
															"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
														},
														{
															"begin": 8349,
															"end": 8389,
															"name": "DUP2",
															"source": 9
														},
														{
															"begin": 8349,
															"end": 8389,
															"name": "MSTORE",
															"source": 9
														},
														{
															"begin": 8349,
															"end": 8389,
															"name": "PUSH",
															"source": 9,
															"value": "4"
														},
														{
															"begin": 8349,
															"end": 8389,
															"name": "ADD",
															"source": 9
														},
														{
															"begin": 8349,
															"end": 8389,
															"name": "PUSH [tag]",
															"source": 9,
															"value": "74"
														},
														{
															"begin": 8349,
															"end": 8389,
															"name": "SWAP2",
															"source": 9
														},
														{
															"begin": 8349,
															"end": 8389,
															"name": "SWAP1",
															"source": 9
														},
														{
															"begin": 8349,
															"end": 8389,
															"name": "PUSH [tag]",
															"source": 9,
															"value": "14"
														},
														{
															"begin": 8349,
															"end": 8389,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 9
														},
														{
															"begin": 8349,
															"end": 8389,
															"name": "tag",
															"source": 9,
															"value": "74"
														},
														{
															"begin": 8349,
															"end": 8389,
															"name": "JUMPDEST",
															"source": 9
														},
														{
															"begin": 8349,
															"end": 8389,
															"name": "PUSH",
															"source": 9,
															"value": "40"
														},
														{
															"begin": 8349,
															"end": 8389,
															"name": "MLOAD",
															"source": 9
														},
														{
															"begin": 8349,
															"end": 8389,
															"name": "DUP1",
															"source": 9
														},
														{
															"begin": 8349,
															"end": 8389,
															"name": "SWAP2",
															"source": 9
														},
														{
															"begin": 8349,
															"end": 8389,
															"name": "SUB",
															"source": 9
														},
														{
															"begin": 8349,
															"end": 8389,
															"name": "SWAP1",
															"source": 9
														},
														{
															"begin": 8349,
															"end": 8389,
															"name": "REVERT",
															"source": 9
														},
														{
															"begin": 8254,
															"end": 8400,
															"name": "tag",
															"source": 9,
															"value": "73"
														},
														{
															"begin": 8254,
															"end": 8400,
															"name": "JUMPDEST",
															"source": 9
														},
														{
															"begin": 7756,
															"end": 8406,
															"name": "POP",
															"source": 9
														},
														{
															"begin": 7756,
															"end": 8406,
															"name": "POP",
															"source": 9
														},
														{
															"begin": 7686,
															"end": 8406,
															"name": "POP",
															"source": 9
														},
														{
															"begin": 7686,
															"end": 8406,
															"name": "POP",
															"source": 9
														},
														{
															"begin": 7686,
															"end": 8406,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 9
														},
														{
															"begin": 7,
															"end": 133,
															"name": "tag",
															"source": 13,
															"value": "75"
														},
														{
															"begin": 7,
															"end": 133,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 44,
															"end": 51,
															"name": "PUSH",
															"source": 13,
															"value": "0"
														},
														{
															"begin": 84,
															"end": 126,
															"name": "PUSH",
															"source": 13,
															"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
														},
														{
															"begin": 77,
															"end": 82,
															"name": "DUP3",
															"source": 13
														},
														{
															"begin": 73,
															"end": 127,
															"name": "AND",
															"source": 13
														},
														{
															"begin": 62,
															"end": 127,
															"name": "SWAP1",
															"source": 13
														},
														{
															"begin": 62,
															"end": 127,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 7,
															"end": 133,
															"name": "SWAP2",
															"source": 13
														},
														{
															"begin": 7,
															"end": 133,
															"name": "SWAP1",
															"source": 13
														},
														{
															"begin": 7,
															"end": 133,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 7,
															"end": 133,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 13
														},
														{
															"begin": 139,
															"end": 235,
															"name": "tag",
															"source": 13,
															"value": "76"
														},
														{
															"begin": 139,
															"end": 235,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 176,
															"end": 183,
															"name": "PUSH",
															"source": 13,
															"value": "0"
														},
														{
															"begin": 205,
															"end": 229,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "96"
														},
														{
															"begin": 223,
															"end": 228,
															"name": "DUP3",
															"source": 13
														},
														{
															"begin": 205,
															"end": 229,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "75"
														},
														{
															"begin": 205,
															"end": 229,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 13
														},
														{
															"begin": 205,
															"end": 229,
															"name": "tag",
															"source": 13,
															"value": "96"
														},
														{
															"begin": 205,
															"end": 229,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 194,
															"end": 229,
															"name": "SWAP1",
															"source": 13
														},
														{
															"begin": 194,
															"end": 229,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 139,
															"end": 235,
															"name": "SWAP2",
															"source": 13
														},
														{
															"begin": 139,
															"end": 235,
															"name": "SWAP1",
															"source": 13
														},
														{
															"begin": 139,
															"end": 235,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 139,
															"end": 235,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 13
														},
														{
															"begin": 241,
															"end": 359,
															"name": "tag",
															"source": 13,
															"value": "77"
														},
														{
															"begin": 241,
															"end": 359,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 328,
															"end": 352,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "98"
														},
														{
															"begin": 346,
															"end": 351,
															"name": "DUP2",
															"source": 13
														},
														{
															"begin": 328,
															"end": 352,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "76"
														},
														{
															"begin": 328,
															"end": 352,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 13
														},
														{
															"begin": 328,
															"end": 352,
															"name": "tag",
															"source": 13,
															"value": "98"
														},
														{
															"begin": 328,
															"end": 352,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 323,
															"end": 326,
															"name": "DUP3",
															"source": 13
														},
														{
															"begin": 316,
															"end": 353,
															"name": "MSTORE",
															"source": 13
														},
														{
															"begin": 241,
															"end": 359,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 241,
															"end": 359,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 241,
															"end": 359,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 13
														},
														{
															"begin": 365,
															"end": 587,
															"name": "tag",
															"source": 13,
															"value": "14"
														},
														{
															"begin": 365,
															"end": 587,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 458,
															"end": 462,
															"name": "PUSH",
															"source": 13,
															"value": "0"
														},
														{
															"begin": 496,
															"end": 498,
															"name": "PUSH",
															"source": 13,
															"value": "20"
														},
														{
															"begin": 485,
															"end": 494,
															"name": "DUP3",
															"source": 13
														},
														{
															"begin": 481,
															"end": 499,
															"name": "ADD",
															"source": 13
														},
														{
															"begin": 473,
															"end": 499,
															"name": "SWAP1",
															"source": 13
														},
														{
															"begin": 473,
															"end": 499,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 509,
															"end": 580,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "100"
														},
														{
															"begin": 577,
															"end": 578,
															"name": "PUSH",
															"source": 13,
															"value": "0"
														},
														{
															"begin": 566,
															"end": 575,
															"name": "DUP4",
															"source": 13
														},
														{
															"begin": 562,
															"end": 579,
															"name": "ADD",
															"source": 13
														},
														{
															"begin": 553,
															"end": 559,
															"name": "DUP5",
															"source": 13
														},
														{
															"begin": 509,
															"end": 580,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "77"
														},
														{
															"begin": 509,
															"end": 580,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 13
														},
														{
															"begin": 509,
															"end": 580,
															"name": "tag",
															"source": 13,
															"value": "100"
														},
														{
															"begin": 509,
															"end": 580,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 365,
															"end": 587,
															"name": "SWAP3",
															"source": 13
														},
														{
															"begin": 365,
															"end": 587,
															"name": "SWAP2",
															"source": 13
														},
														{
															"begin": 365,
															"end": 587,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 365,
															"end": 587,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 365,
															"end": 587,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 13
														},
														{
															"begin": 593,
															"end": 653,
															"name": "tag",
															"source": 13,
															"value": "78"
														},
														{
															"begin": 593,
															"end": 653,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 621,
															"end": 624,
															"name": "PUSH",
															"source": 13,
															"value": "0"
														},
														{
															"begin": 642,
															"end": 647,
															"name": "DUP2",
															"source": 13
														},
														{
															"begin": 635,
															"end": 647,
															"name": "SWAP1",
															"source": 13
														},
														{
															"begin": 635,
															"end": 647,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 593,
															"end": 653,
															"name": "SWAP2",
															"source": 13
														},
														{
															"begin": 593,
															"end": 653,
															"name": "SWAP1",
															"source": 13
														},
														{
															"begin": 593,
															"end": 653,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 593,
															"end": 653,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 13
														},
														{
															"begin": 659,
															"end": 801,
															"name": "tag",
															"source": 13,
															"value": "79"
														},
														{
															"begin": 659,
															"end": 801,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 709,
															"end": 718,
															"name": "PUSH",
															"source": 13,
															"value": "0"
														},
														{
															"begin": 742,
															"end": 795,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "103"
														},
														{
															"begin": 760,
															"end": 794,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "104"
														},
														{
															"begin": 769,
															"end": 793,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "105"
														},
														{
															"begin": 787,
															"end": 792,
															"name": "DUP5",
															"source": 13
														},
														{
															"begin": 769,
															"end": 793,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "75"
														},
														{
															"begin": 769,
															"end": 793,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 13
														},
														{
															"begin": 769,
															"end": 793,
															"name": "tag",
															"source": 13,
															"value": "105"
														},
														{
															"begin": 769,
															"end": 793,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 760,
															"end": 794,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "78"
														},
														{
															"begin": 760,
															"end": 794,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 13
														},
														{
															"begin": 760,
															"end": 794,
															"name": "tag",
															"source": 13,
															"value": "104"
														},
														{
															"begin": 760,
															"end": 794,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 742,
															"end": 795,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "75"
														},
														{
															"begin": 742,
															"end": 795,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 13
														},
														{
															"begin": 742,
															"end": 795,
															"name": "tag",
															"source": 13,
															"value": "103"
														},
														{
															"begin": 742,
															"end": 795,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 729,
															"end": 795,
															"name": "SWAP1",
															"source": 13
														},
														{
															"begin": 729,
															"end": 795,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 659,
															"end": 801,
															"name": "SWAP2",
															"source": 13
														},
														{
															"begin": 659,
															"end": 801,
															"name": "SWAP1",
															"source": 13
														},
														{
															"begin": 659,
															"end": 801,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 659,
															"end": 801,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 13
														},
														{
															"begin": 807,
															"end": 933,
															"name": "tag",
															"source": 13,
															"value": "80"
														},
														{
															"begin": 807,
															"end": 933,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 857,
															"end": 866,
															"name": "PUSH",
															"source": 13,
															"value": "0"
														},
														{
															"begin": 890,
															"end": 927,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "107"
														},
														{
															"begin": 921,
															"end": 926,
															"name": "DUP3",
															"source": 13
														},
														{
															"begin": 890,
															"end": 927,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "79"
														},
														{
															"begin": 890,
															"end": 927,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 13
														},
														{
															"begin": 890,
															"end": 927,
															"name": "tag",
															"source": 13,
															"value": "107"
														},
														{
															"begin": 890,
															"end": 927,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 877,
															"end": 927,
															"name": "SWAP1",
															"source": 13
														},
														{
															"begin": 877,
															"end": 927,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 807,
															"end": 933,
															"name": "SWAP2",
															"source": 13
														},
														{
															"begin": 807,
															"end": 933,
															"name": "SWAP1",
															"source": 13
														},
														{
															"begin": 807,
															"end": 933,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 807,
															"end": 933,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 13
														},
														{
															"begin": 939,
															"end": 1080,
															"name": "tag",
															"source": 13,
															"value": "81"
														},
														{
															"begin": 939,
															"end": 1080,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 1004,
															"end": 1013,
															"name": "PUSH",
															"source": 13,
															"value": "0"
														},
														{
															"begin": 1037,
															"end": 1074,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "109"
														},
														{
															"begin": 1068,
															"end": 1073,
															"name": "DUP3",
															"source": 13
														},
														{
															"begin": 1037,
															"end": 1074,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "80"
														},
														{
															"begin": 1037,
															"end": 1074,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 13
														},
														{
															"begin": 1037,
															"end": 1074,
															"name": "tag",
															"source": 13,
															"value": "109"
														},
														{
															"begin": 1037,
															"end": 1074,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 1024,
															"end": 1074,
															"name": "SWAP1",
															"source": 13
														},
														{
															"begin": 1024,
															"end": 1074,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 939,
															"end": 1080,
															"name": "SWAP2",
															"source": 13
														},
														{
															"begin": 939,
															"end": 1080,
															"name": "SWAP1",
															"source": 13
														},
														{
															"begin": 939,
															"end": 1080,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 939,
															"end": 1080,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 13
														},
														{
															"begin": 1086,
															"end": 1247,
															"name": "tag",
															"source": 13,
															"value": "82"
														},
														{
															"begin": 1086,
															"end": 1247,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 1188,
															"end": 1240,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "111"
														},
														{
															"begin": 1234,
															"end": 1239,
															"name": "DUP2",
															"source": 13
														},
														{
															"begin": 1188,
															"end": 1240,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "81"
														},
														{
															"begin": 1188,
															"end": 1240,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 13
														},
														{
															"begin": 1188,
															"end": 1240,
															"name": "tag",
															"source": 13,
															"value": "111"
														},
														{
															"begin": 1188,
															"end": 1240,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 1183,
															"end": 1186,
															"name": "DUP3",
															"source": 13
														},
														{
															"begin": 1176,
															"end": 1241,
															"name": "MSTORE",
															"source": 13
														},
														{
															"begin": 1086,
															"end": 1247,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 1086,
															"end": 1247,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 1086,
															"end": 1247,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 13
														},
														{
															"begin": 1253,
															"end": 1505,
															"name": "tag",
															"source": 13,
															"value": "18"
														},
														{
															"begin": 1253,
															"end": 1505,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 1361,
															"end": 1365,
															"name": "PUSH",
															"source": 13,
															"value": "0"
														},
														{
															"begin": 1399,
															"end": 1401,
															"name": "PUSH",
															"source": 13,
															"value": "20"
														},
														{
															"begin": 1388,
															"end": 1397,
															"name": "DUP3",
															"source": 13
														},
														{
															"begin": 1384,
															"end": 1402,
															"name": "ADD",
															"source": 13
														},
														{
															"begin": 1376,
															"end": 1402,
															"name": "SWAP1",
															"source": 13
														},
														{
															"begin": 1376,
															"end": 1402,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 1412,
															"end": 1498,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "113"
														},
														{
															"begin": 1495,
															"end": 1496,
															"name": "PUSH",
															"source": 13,
															"value": "0"
														},
														{
															"begin": 1484,
															"end": 1493,
															"name": "DUP4",
															"source": 13
														},
														{
															"begin": 1480,
															"end": 1497,
															"name": "ADD",
															"source": 13
														},
														{
															"begin": 1471,
															"end": 1477,
															"name": "DUP5",
															"source": 13
														},
														{
															"begin": 1412,
															"end": 1498,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "82"
														},
														{
															"begin": 1412,
															"end": 1498,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 13
														},
														{
															"begin": 1412,
															"end": 1498,
															"name": "tag",
															"source": 13,
															"value": "113"
														},
														{
															"begin": 1412,
															"end": 1498,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 1253,
															"end": 1505,
															"name": "SWAP3",
															"source": 13
														},
														{
															"begin": 1253,
															"end": 1505,
															"name": "SWAP2",
															"source": 13
														},
														{
															"begin": 1253,
															"end": 1505,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 1253,
															"end": 1505,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 1253,
															"end": 1505,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 13
														},
														{
															"begin": 1511,
															"end": 1588,
															"name": "tag",
															"source": 13,
															"value": "83"
														},
														{
															"begin": 1511,
															"end": 1588,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 1548,
															"end": 1555,
															"name": "PUSH",
															"source": 13,
															"value": "0"
														},
														{
															"begin": 1577,
															"end": 1582,
															"name": "DUP2",
															"source": 13
														},
														{
															"begin": 1566,
															"end": 1582,
															"name": "SWAP1",
															"source": 13
														},
														{
															"begin": 1566,
															"end": 1582,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 1511,
															"end": 1588,
															"name": "SWAP2",
															"source": 13
														},
														{
															"begin": 1511,
															"end": 1588,
															"name": "SWAP1",
															"source": 13
														},
														{
															"begin": 1511,
															"end": 1588,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 1511,
															"end": 1588,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 13
														},
														{
															"begin": 1594,
															"end": 1712,
															"name": "tag",
															"source": 13,
															"value": "84"
														},
														{
															"begin": 1594,
															"end": 1712,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 1681,
															"end": 1705,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "116"
														},
														{
															"begin": 1699,
															"end": 1704,
															"name": "DUP2",
															"source": 13
														},
														{
															"begin": 1681,
															"end": 1705,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "83"
														},
														{
															"begin": 1681,
															"end": 1705,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 13
														},
														{
															"begin": 1681,
															"end": 1705,
															"name": "tag",
															"source": 13,
															"value": "116"
														},
														{
															"begin": 1681,
															"end": 1705,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 1676,
															"end": 1679,
															"name": "DUP3",
															"source": 13
														},
														{
															"begin": 1669,
															"end": 1706,
															"name": "MSTORE",
															"source": 13
														},
														{
															"begin": 1594,
															"end": 1712,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 1594,
															"end": 1712,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 1594,
															"end": 1712,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 13
														},
														{
															"begin": 1718,
															"end": 1940,
															"name": "tag",
															"source": 13,
															"value": "22"
														},
														{
															"begin": 1718,
															"end": 1940,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 1811,
															"end": 1815,
															"name": "PUSH",
															"source": 13,
															"value": "0"
														},
														{
															"begin": 1849,
															"end": 1851,
															"name": "PUSH",
															"source": 13,
															"value": "20"
														},
														{
															"begin": 1838,
															"end": 1847,
															"name": "DUP3",
															"source": 13
														},
														{
															"begin": 1834,
															"end": 1852,
															"name": "ADD",
															"source": 13
														},
														{
															"begin": 1826,
															"end": 1852,
															"name": "SWAP1",
															"source": 13
														},
														{
															"begin": 1826,
															"end": 1852,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 1862,
															"end": 1933,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "118"
														},
														{
															"begin": 1930,
															"end": 1931,
															"name": "PUSH",
															"source": 13,
															"value": "0"
														},
														{
															"begin": 1919,
															"end": 1928,
															"name": "DUP4",
															"source": 13
														},
														{
															"begin": 1915,
															"end": 1932,
															"name": "ADD",
															"source": 13
														},
														{
															"begin": 1906,
															"end": 1912,
															"name": "DUP5",
															"source": 13
														},
														{
															"begin": 1862,
															"end": 1933,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "84"
														},
														{
															"begin": 1862,
															"end": 1933,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 13
														},
														{
															"begin": 1862,
															"end": 1933,
															"name": "tag",
															"source": 13,
															"value": "118"
														},
														{
															"begin": 1862,
															"end": 1933,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 1718,
															"end": 1940,
															"name": "SWAP3",
															"source": 13
														},
														{
															"begin": 1718,
															"end": 1940,
															"name": "SWAP2",
															"source": 13
														},
														{
															"begin": 1718,
															"end": 1940,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 1718,
															"end": 1940,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 1718,
															"end": 1940,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 13
														},
														{
															"begin": 2027,
															"end": 2144,
															"name": "tag",
															"source": 13,
															"value": "86"
														},
														{
															"begin": 2027,
															"end": 2144,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 2136,
															"end": 2137,
															"name": "PUSH",
															"source": 13,
															"value": "0"
														},
														{
															"begin": 2133,
															"end": 2134,
															"name": "PUSH",
															"source": 13,
															"value": "0"
														},
														{
															"begin": 2126,
															"end": 2138,
															"name": "REVERT",
															"source": 13
														},
														{
															"begin": 2273,
															"end": 2395,
															"name": "tag",
															"source": 13,
															"value": "88"
														},
														{
															"begin": 2273,
															"end": 2395,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 2346,
															"end": 2370,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "123"
														},
														{
															"begin": 2364,
															"end": 2369,
															"name": "DUP2",
															"source": 13
														},
														{
															"begin": 2346,
															"end": 2370,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "76"
														},
														{
															"begin": 2346,
															"end": 2370,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 13
														},
														{
															"begin": 2346,
															"end": 2370,
															"name": "tag",
															"source": 13,
															"value": "123"
														},
														{
															"begin": 2346,
															"end": 2370,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 2339,
															"end": 2344,
															"name": "DUP2",
															"source": 13
														},
														{
															"begin": 2336,
															"end": 2371,
															"name": "EQ",
															"source": 13
														},
														{
															"begin": 2326,
															"end": 2389,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "124"
														},
														{
															"begin": 2326,
															"end": 2389,
															"name": "JUMPI",
															"source": 13
														},
														{
															"begin": 2385,
															"end": 2386,
															"name": "PUSH",
															"source": 13,
															"value": "0"
														},
														{
															"begin": 2382,
															"end": 2383,
															"name": "PUSH",
															"source": 13,
															"value": "0"
														},
														{
															"begin": 2375,
															"end": 2387,
															"name": "REVERT",
															"source": 13
														},
														{
															"begin": 2326,
															"end": 2389,
															"name": "tag",
															"source": 13,
															"value": "124"
														},
														{
															"begin": 2326,
															"end": 2389,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 2273,
															"end": 2395,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 2273,
															"end": 2395,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 13
														},
														{
															"begin": 2401,
															"end": 2540,
															"name": "tag",
															"source": 13,
															"value": "89"
														},
														{
															"begin": 2401,
															"end": 2540,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 2447,
															"end": 2452,
															"name": "PUSH",
															"source": 13,
															"value": "0"
														},
														{
															"begin": 2485,
															"end": 2491,
															"name": "DUP2",
															"source": 13
														},
														{
															"begin": 2472,
															"end": 2492,
															"name": "CALLDATALOAD",
															"source": 13
														},
														{
															"begin": 2463,
															"end": 2492,
															"name": "SWAP1",
															"source": 13
														},
														{
															"begin": 2463,
															"end": 2492,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 2501,
															"end": 2534,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "126"
														},
														{
															"begin": 2528,
															"end": 2533,
															"name": "DUP2",
															"source": 13
														},
														{
															"begin": 2501,
															"end": 2534,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "88"
														},
														{
															"begin": 2501,
															"end": 2534,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 13
														},
														{
															"begin": 2501,
															"end": 2534,
															"name": "tag",
															"source": 13,
															"value": "126"
														},
														{
															"begin": 2501,
															"end": 2534,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 2401,
															"end": 2540,
															"name": "SWAP3",
															"source": 13
														},
														{
															"begin": 2401,
															"end": 2540,
															"name": "SWAP2",
															"source": 13
														},
														{
															"begin": 2401,
															"end": 2540,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 2401,
															"end": 2540,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 2401,
															"end": 2540,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 13
														},
														{
															"begin": 2546,
															"end": 2875,
															"name": "tag",
															"source": 13,
															"value": "25"
														},
														{
															"begin": 2546,
															"end": 2875,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 2605,
															"end": 2611,
															"name": "PUSH",
															"source": 13,
															"value": "0"
														},
														{
															"begin": 2654,
															"end": 2656,
															"name": "PUSH",
															"source": 13,
															"value": "20"
														},
														{
															"begin": 2642,
															"end": 2651,
															"name": "DUP3",
															"source": 13
														},
														{
															"begin": 2633,
															"end": 2640,
															"name": "DUP5",
															"source": 13
														},
														{
															"begin": 2629,
															"end": 2652,
															"name": "SUB",
															"source": 13
														},
														{
															"begin": 2625,
															"end": 2657,
															"name": "SLT",
															"source": 13
														},
														{
															"begin": 2622,
															"end": 2741,
															"name": "ISZERO",
															"source": 13
														},
														{
															"begin": 2622,
															"end": 2741,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "128"
														},
														{
															"begin": 2622,
															"end": 2741,
															"name": "JUMPI",
															"source": 13
														},
														{
															"begin": 2660,
															"end": 2739,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "129"
														},
														{
															"begin": 2660,
															"end": 2739,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "86"
														},
														{
															"begin": 2660,
															"end": 2739,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 13
														},
														{
															"begin": 2660,
															"end": 2739,
															"name": "tag",
															"source": 13,
															"value": "129"
														},
														{
															"begin": 2660,
															"end": 2739,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 2622,
															"end": 2741,
															"name": "tag",
															"source": 13,
															"value": "128"
														},
														{
															"begin": 2622,
															"end": 2741,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 2780,
															"end": 2781,
															"name": "PUSH",
															"source": 13,
															"value": "0"
														},
														{
															"begin": 2805,
															"end": 2858,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "130"
														},
														{
															"begin": 2850,
															"end": 2857,
															"name": "DUP5",
															"source": 13
														},
														{
															"begin": 2841,
															"end": 2847,
															"name": "DUP3",
															"source": 13
														},
														{
															"begin": 2830,
															"end": 2839,
															"name": "DUP6",
															"source": 13
														},
														{
															"begin": 2826,
															"end": 2848,
															"name": "ADD",
															"source": 13
														},
														{
															"begin": 2805,
															"end": 2858,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "89"
														},
														{
															"begin": 2805,
															"end": 2858,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 13
														},
														{
															"begin": 2805,
															"end": 2858,
															"name": "tag",
															"source": 13,
															"value": "130"
														},
														{
															"begin": 2805,
															"end": 2858,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 2795,
															"end": 2858,
															"name": "SWAP2",
															"source": 13
														},
														{
															"begin": 2795,
															"end": 2858,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 2751,
															"end": 2868,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 2546,
															"end": 2875,
															"name": "SWAP3",
															"source": 13
														},
														{
															"begin": 2546,
															"end": 2875,
															"name": "SWAP2",
															"source": 13
														},
														{
															"begin": 2546,
															"end": 2875,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 2546,
															"end": 2875,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 2546,
															"end": 2875,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 13
														},
														{
															"begin": 2881,
															"end": 3003,
															"name": "tag",
															"source": 13,
															"value": "90"
														},
														{
															"begin": 2881,
															"end": 3003,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 2954,
															"end": 2978,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "132"
														},
														{
															"begin": 2972,
															"end": 2977,
															"name": "DUP2",
															"source": 13
														},
														{
															"begin": 2954,
															"end": 2978,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "83"
														},
														{
															"begin": 2954,
															"end": 2978,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 13
														},
														{
															"begin": 2954,
															"end": 2978,
															"name": "tag",
															"source": 13,
															"value": "132"
														},
														{
															"begin": 2954,
															"end": 2978,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 2947,
															"end": 2952,
															"name": "DUP2",
															"source": 13
														},
														{
															"begin": 2944,
															"end": 2979,
															"name": "EQ",
															"source": 13
														},
														{
															"begin": 2934,
															"end": 2997,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "133"
														},
														{
															"begin": 2934,
															"end": 2997,
															"name": "JUMPI",
															"source": 13
														},
														{
															"begin": 2993,
															"end": 2994,
															"name": "PUSH",
															"source": 13,
															"value": "0"
														},
														{
															"begin": 2990,
															"end": 2991,
															"name": "PUSH",
															"source": 13,
															"value": "0"
														},
														{
															"begin": 2983,
															"end": 2995,
															"name": "REVERT",
															"source": 13
														},
														{
															"begin": 2934,
															"end": 2997,
															"name": "tag",
															"source": 13,
															"value": "133"
														},
														{
															"begin": 2934,
															"end": 2997,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 2881,
															"end": 3003,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 2881,
															"end": 3003,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 13
														},
														{
															"begin": 3009,
															"end": 3148,
															"name": "tag",
															"source": 13,
															"value": "91"
														},
														{
															"begin": 3009,
															"end": 3148,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 3055,
															"end": 3060,
															"name": "PUSH",
															"source": 13,
															"value": "0"
														},
														{
															"begin": 3093,
															"end": 3099,
															"name": "DUP2",
															"source": 13
														},
														{
															"begin": 3080,
															"end": 3100,
															"name": "CALLDATALOAD",
															"source": 13
														},
														{
															"begin": 3071,
															"end": 3100,
															"name": "SWAP1",
															"source": 13
														},
														{
															"begin": 3071,
															"end": 3100,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 3109,
															"end": 3142,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "135"
														},
														{
															"begin": 3136,
															"end": 3141,
															"name": "DUP2",
															"source": 13
														},
														{
															"begin": 3109,
															"end": 3142,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "90"
														},
														{
															"begin": 3109,
															"end": 3142,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 13
														},
														{
															"begin": 3109,
															"end": 3142,
															"name": "tag",
															"source": 13,
															"value": "135"
														},
														{
															"begin": 3109,
															"end": 3142,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 3009,
															"end": 3148,
															"name": "SWAP3",
															"source": 13
														},
														{
															"begin": 3009,
															"end": 3148,
															"name": "SWAP2",
															"source": 13
														},
														{
															"begin": 3009,
															"end": 3148,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 3009,
															"end": 3148,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 3009,
															"end": 3148,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 13
														},
														{
															"begin": 3154,
															"end": 3628,
															"name": "tag",
															"source": 13,
															"value": "29"
														},
														{
															"begin": 3154,
															"end": 3628,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 3222,
															"end": 3228,
															"name": "PUSH",
															"source": 13,
															"value": "0"
														},
														{
															"begin": 3230,
															"end": 3236,
															"name": "PUSH",
															"source": 13,
															"value": "0"
														},
														{
															"begin": 3279,
															"end": 3281,
															"name": "PUSH",
															"source": 13,
															"value": "40"
														},
														{
															"begin": 3267,
															"end": 3276,
															"name": "DUP4",
															"source": 13
														},
														{
															"begin": 3258,
															"end": 3265,
															"name": "DUP6",
															"source": 13
														},
														{
															"begin": 3254,
															"end": 3277,
															"name": "SUB",
															"source": 13
														},
														{
															"begin": 3250,
															"end": 3282,
															"name": "SLT",
															"source": 13
														},
														{
															"begin": 3247,
															"end": 3366,
															"name": "ISZERO",
															"source": 13
														},
														{
															"begin": 3247,
															"end": 3366,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "137"
														},
														{
															"begin": 3247,
															"end": 3366,
															"name": "JUMPI",
															"source": 13
														},
														{
															"begin": 3285,
															"end": 3364,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "138"
														},
														{
															"begin": 3285,
															"end": 3364,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "86"
														},
														{
															"begin": 3285,
															"end": 3364,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 13
														},
														{
															"begin": 3285,
															"end": 3364,
															"name": "tag",
															"source": 13,
															"value": "138"
														},
														{
															"begin": 3285,
															"end": 3364,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 3247,
															"end": 3366,
															"name": "tag",
															"source": 13,
															"value": "137"
														},
														{
															"begin": 3247,
															"end": 3366,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 3405,
															"end": 3406,
															"name": "PUSH",
															"source": 13,
															"value": "0"
														},
														{
															"begin": 3430,
															"end": 3483,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "139"
														},
														{
															"begin": 3475,
															"end": 3482,
															"name": "DUP6",
															"source": 13
														},
														{
															"begin": 3466,
															"end": 3472,
															"name": "DUP3",
															"source": 13
														},
														{
															"begin": 3455,
															"end": 3464,
															"name": "DUP7",
															"source": 13
														},
														{
															"begin": 3451,
															"end": 3473,
															"name": "ADD",
															"source": 13
														},
														{
															"begin": 3430,
															"end": 3483,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "89"
														},
														{
															"begin": 3430,
															"end": 3483,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 13
														},
														{
															"begin": 3430,
															"end": 3483,
															"name": "tag",
															"source": 13,
															"value": "139"
														},
														{
															"begin": 3430,
															"end": 3483,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 3420,
															"end": 3483,
															"name": "SWAP3",
															"source": 13
														},
														{
															"begin": 3420,
															"end": 3483,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 3376,
															"end": 3493,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 3532,
															"end": 3534,
															"name": "PUSH",
															"source": 13,
															"value": "20"
														},
														{
															"begin": 3558,
															"end": 3611,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "140"
														},
														{
															"begin": 3603,
															"end": 3610,
															"name": "DUP6",
															"source": 13
														},
														{
															"begin": 3594,
															"end": 3600,
															"name": "DUP3",
															"source": 13
														},
														{
															"begin": 3583,
															"end": 3592,
															"name": "DUP7",
															"source": 13
														},
														{
															"begin": 3579,
															"end": 3601,
															"name": "ADD",
															"source": 13
														},
														{
															"begin": 3558,
															"end": 3611,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "91"
														},
														{
															"begin": 3558,
															"end": 3611,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 13
														},
														{
															"begin": 3558,
															"end": 3611,
															"name": "tag",
															"source": 13,
															"value": "140"
														},
														{
															"begin": 3558,
															"end": 3611,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 3548,
															"end": 3611,
															"name": "SWAP2",
															"source": 13
														},
														{
															"begin": 3548,
															"end": 3611,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 3503,
															"end": 3621,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 3154,
															"end": 3628,
															"name": "SWAP3",
															"source": 13
														},
														{
															"begin": 3154,
															"end": 3628,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 3154,
															"end": 3628,
															"name": "SWAP3",
															"source": 13
														},
														{
															"begin": 3154,
															"end": 3628,
															"name": "SWAP1",
															"source": 13
														},
														{
															"begin": 3154,
															"end": 3628,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 3154,
															"end": 3628,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 13
														},
														{
															"begin": 3634,
															"end": 3777,
															"name": "tag",
															"source": 13,
															"value": "92"
														},
														{
															"begin": 3634,
															"end": 3777,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 3691,
															"end": 3696,
															"name": "PUSH",
															"source": 13,
															"value": "0"
														},
														{
															"begin": 3722,
															"end": 3728,
															"name": "DUP2",
															"source": 13
														},
														{
															"begin": 3716,
															"end": 3729,
															"name": "MLOAD",
															"source": 13
														},
														{
															"begin": 3707,
															"end": 3729,
															"name": "SWAP1",
															"source": 13
														},
														{
															"begin": 3707,
															"end": 3729,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 3738,
															"end": 3771,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "142"
														},
														{
															"begin": 3765,
															"end": 3770,
															"name": "DUP2",
															"source": 13
														},
														{
															"begin": 3738,
															"end": 3771,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "90"
														},
														{
															"begin": 3738,
															"end": 3771,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 13
														},
														{
															"begin": 3738,
															"end": 3771,
															"name": "tag",
															"source": 13,
															"value": "142"
														},
														{
															"begin": 3738,
															"end": 3771,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 3634,
															"end": 3777,
															"name": "SWAP3",
															"source": 13
														},
														{
															"begin": 3634,
															"end": 3777,
															"name": "SWAP2",
															"source": 13
														},
														{
															"begin": 3634,
															"end": 3777,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 3634,
															"end": 3777,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 3634,
															"end": 3777,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 13
														},
														{
															"begin": 3783,
															"end": 4134,
															"name": "tag",
															"source": 13,
															"value": "43"
														},
														{
															"begin": 3783,
															"end": 4134,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 3853,
															"end": 3859,
															"name": "PUSH",
															"source": 13,
															"value": "0"
														},
														{
															"begin": 3902,
															"end": 3904,
															"name": "PUSH",
															"source": 13,
															"value": "20"
														},
														{
															"begin": 3890,
															"end": 3899,
															"name": "DUP3",
															"source": 13
														},
														{
															"begin": 3881,
															"end": 3888,
															"name": "DUP5",
															"source": 13
														},
														{
															"begin": 3877,
															"end": 3900,
															"name": "SUB",
															"source": 13
														},
														{
															"begin": 3873,
															"end": 3905,
															"name": "SLT",
															"source": 13
														},
														{
															"begin": 3870,
															"end": 3989,
															"name": "ISZERO",
															"source": 13
														},
														{
															"begin": 3870,
															"end": 3989,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "144"
														},
														{
															"begin": 3870,
															"end": 3989,
															"name": "JUMPI",
															"source": 13
														},
														{
															"begin": 3908,
															"end": 3987,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "145"
														},
														{
															"begin": 3908,
															"end": 3987,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "86"
														},
														{
															"begin": 3908,
															"end": 3987,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 13
														},
														{
															"begin": 3908,
															"end": 3987,
															"name": "tag",
															"source": 13,
															"value": "145"
														},
														{
															"begin": 3908,
															"end": 3987,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 3870,
															"end": 3989,
															"name": "tag",
															"source": 13,
															"value": "144"
														},
														{
															"begin": 3870,
															"end": 3989,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 4028,
															"end": 4029,
															"name": "PUSH",
															"source": 13,
															"value": "0"
														},
														{
															"begin": 4053,
															"end": 4117,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "146"
														},
														{
															"begin": 4109,
															"end": 4116,
															"name": "DUP5",
															"source": 13
														},
														{
															"begin": 4100,
															"end": 4106,
															"name": "DUP3",
															"source": 13
														},
														{
															"begin": 4089,
															"end": 4098,
															"name": "DUP6",
															"source": 13
														},
														{
															"begin": 4085,
															"end": 4107,
															"name": "ADD",
															"source": 13
														},
														{
															"begin": 4053,
															"end": 4117,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "92"
														},
														{
															"begin": 4053,
															"end": 4117,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 13
														},
														{
															"begin": 4053,
															"end": 4117,
															"name": "tag",
															"source": 13,
															"value": "146"
														},
														{
															"begin": 4053,
															"end": 4117,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 4043,
															"end": 4117,
															"name": "SWAP2",
															"source": 13
														},
														{
															"begin": 4043,
															"end": 4117,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 3999,
															"end": 4127,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 3783,
															"end": 4134,
															"name": "SWAP3",
															"source": 13
														},
														{
															"begin": 3783,
															"end": 4134,
															"name": "SWAP2",
															"source": 13
														},
														{
															"begin": 3783,
															"end": 4134,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 3783,
															"end": 4134,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 3783,
															"end": 4134,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 13
														},
														{
															"begin": 4140,
															"end": 4472,
															"name": "tag",
															"source": 13,
															"value": "66"
														},
														{
															"begin": 4140,
															"end": 4472,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 4261,
															"end": 4265,
															"name": "PUSH",
															"source": 13,
															"value": "0"
														},
														{
															"begin": 4299,
															"end": 4301,
															"name": "PUSH",
															"source": 13,
															"value": "40"
														},
														{
															"begin": 4288,
															"end": 4297,
															"name": "DUP3",
															"source": 13
														},
														{
															"begin": 4284,
															"end": 4302,
															"name": "ADD",
															"source": 13
														},
														{
															"begin": 4276,
															"end": 4302,
															"name": "SWAP1",
															"source": 13
														},
														{
															"begin": 4276,
															"end": 4302,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 4312,
															"end": 4383,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "148"
														},
														{
															"begin": 4380,
															"end": 4381,
															"name": "PUSH",
															"source": 13,
															"value": "0"
														},
														{
															"begin": 4369,
															"end": 4378,
															"name": "DUP4",
															"source": 13
														},
														{
															"begin": 4365,
															"end": 4382,
															"name": "ADD",
															"source": 13
														},
														{
															"begin": 4356,
															"end": 4362,
															"name": "DUP6",
															"source": 13
														},
														{
															"begin": 4312,
															"end": 4383,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "77"
														},
														{
															"begin": 4312,
															"end": 4383,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 13
														},
														{
															"begin": 4312,
															"end": 4383,
															"name": "tag",
															"source": 13,
															"value": "148"
														},
														{
															"begin": 4312,
															"end": 4383,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 4393,
															"end": 4465,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "149"
														},
														{
															"begin": 4461,
															"end": 4463,
															"name": "PUSH",
															"source": 13,
															"value": "20"
														},
														{
															"begin": 4450,
															"end": 4459,
															"name": "DUP4",
															"source": 13
														},
														{
															"begin": 4446,
															"end": 4464,
															"name": "ADD",
															"source": 13
														},
														{
															"begin": 4437,
															"end": 4443,
															"name": "DUP5",
															"source": 13
														},
														{
															"begin": 4393,
															"end": 4465,
															"name": "PUSH [tag]",
															"source": 13,
															"value": "84"
														},
														{
															"begin": 4393,
															"end": 4465,
															"jumpType": "[in]",
															"name": "JUMP",
															"source": 13
														},
														{
															"begin": 4393,
															"end": 4465,
															"name": "tag",
															"source": 13,
															"value": "149"
														},
														{
															"begin": 4393,
															"end": 4465,
															"name": "JUMPDEST",
															"source": 13
														},
														{
															"begin": 4140,
															"end": 4472,
															"name": "SWAP4",
															"source": 13
														},
														{
															"begin": 4140,
															"end": 4472,
															"name": "SWAP3",
															"source": 13
														},
														{
															"begin": 4140,
															"end": 4472,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 4140,
															"end": 4472,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 4140,
															"end": 4472,
															"name": "POP",
															"source": 13
														},
														{
															"begin": 4140,
															"end": 4472,
															"jumpType": "[out]",
															"name": "JUMP",
															"source": 13
														}
													]
												}
											}
										}
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"C/commingling .sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burnStableCoin(uint256)": "4798eb21",
							"collateralBalance(address)": "a1bf2840",
							"collateralToken()": "b2016bd4",
							"collateralizationRatio()": "dcaf9c44",
							"debtBalance(address)": "11005b07",
							"decimals()": "313ce567",
							"depositCollateral(uint256)": "bad4a01f",
							"getUserCollateralizationRatio(address)": "e1d5e571",
							"mintStableCoin(uint256)": "bfa244fe",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"updateCollateralizationRatio(uint256)": "0607ec70",
							"vaults(address)": "a622ee7c",
							"withdrawCollateral(uint256)": "6112fe2e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_collateralizationRatio\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CollateralDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CollateralWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StableCoinBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StableCoinMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnStableCoin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"collateralBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateralToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateralizationRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"debtBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserCollateralizationRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintStableCoin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newRatio\",\"type\":\"uint256\"}],\"name\":\"updateCollateralizationRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"vaults\",\"outputs\":[{\"internalType\":\"contract Vault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"params\":{\"_collateralToken\":\"Address of the collateral ERC20 token.\",\"_collateralizationRatio\":\"Required collateralization ratio in basis points (>= 10000 = 100%).\",\"name\":\"Name of the stable coin.\",\"symbol\":\"Symbol of the stable coin.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burnStableCoin(uint256)\":{\"notice\":\"Burn stable coins to repay debt.\"},\"constructor\":{\"notice\":\"Constructor sets the collateral token, initial collateralization ratio, and stable coin details.\"},\"depositCollateral(uint256)\":{\"notice\":\"Deposit collateral into your personal vault. The deposited amount is tracked and stored in a vault specific to you.\"},\"getUserCollateralizationRatio(address)\":{\"notice\":\"Returns the current collateralization ratio for a user (in basis points). If the user has no debt, returns the maximum uint256.\"},\"mintStableCoin(uint256)\":{\"notice\":\"Mint stable coins against your deposited collateral. Your debt increases, and new stable coins are minted to your account.\"},\"updateCollateralizationRatio(uint256)\":{\"notice\":\"Owner can update the required collateralization ratio.\"},\"withdrawCollateral(uint256)\":{\"notice\":\"Withdraw collateral from your vault. Allowed only if the remaining collateral keeps your position safely collateralized.\"}},\"notice\":\"CollateralizedStableCoin is an ERC20 token representing the stable coin. Users deposit a collateral ERC20 token into their own vault (preventing commingling), then mint stable coins up to a safe collateralization ratio. They can later burn stable coins (repay debt) and withdraw collateral provided their position remains safe.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"C/commingling .sol\":\"CollateralizedStableCoin\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"C/commingling .sol\":{\"keccak256\":\"0x0a358594de1d0fa157bca7497fba3823b55ffb61ffcb9ee0b5c273d11dac78ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0d2afefaf77bfa20737a3531680f8156853cf27697c096329fad555fdc0e273\",\"dweb:/ipfs/QmUM9MMHjyuq7b8U1LNC3XZ3kJRb8peUk5uGpW3Jr41A7c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 462,
								"contract": "C/commingling .sol:CollateralizedStableCoin",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 468,
								"contract": "C/commingling .sol:CollateralizedStableCoin",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 470,
								"contract": "C/commingling .sol:CollateralizedStableCoin",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 472,
								"contract": "C/commingling .sol:CollateralizedStableCoin",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 474,
								"contract": "C/commingling .sol:CollateralizedStableCoin",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "C/commingling .sol:CollateralizedStableCoin",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 385,
								"contract": "C/commingling .sol:CollateralizedStableCoin",
								"label": "_status",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1605,
								"contract": "C/commingling .sol:CollateralizedStableCoin",
								"label": "collateralBalance",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1609,
								"contract": "C/commingling .sol:CollateralizedStableCoin",
								"label": "debtBalance",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1614,
								"contract": "C/commingling .sol:CollateralizedStableCoin",
								"label": "vaults",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_contract(Vault)1587)"
							},
							{
								"astId": 1616,
								"contract": "C/commingling .sol:CollateralizedStableCoin",
								"label": "collateralizationRatio",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(Vault)1587": {
								"encoding": "inplace",
								"label": "contract Vault",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_contract(Vault)1587)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => contract Vault)",
								"numberOfBytes": "32",
								"value": "t_contract(Vault)1587"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"burnStableCoin(uint256)": {
								"notice": "Burn stable coins to repay debt."
							},
							"constructor": {
								"notice": "Constructor sets the collateral token, initial collateralization ratio, and stable coin details."
							},
							"depositCollateral(uint256)": {
								"notice": "Deposit collateral into your personal vault. The deposited amount is tracked and stored in a vault specific to you."
							},
							"getUserCollateralizationRatio(address)": {
								"notice": "Returns the current collateralization ratio for a user (in basis points). If the user has no debt, returns the maximum uint256."
							},
							"mintStableCoin(uint256)": {
								"notice": "Mint stable coins against your deposited collateral. Your debt increases, and new stable coins are minted to your account."
							},
							"updateCollateralizationRatio(uint256)": {
								"notice": "Owner can update the required collateralization ratio."
							},
							"withdrawCollateral(uint256)": {
								"notice": "Withdraw collateral from your vault. Allowed only if the remaining collateral keeps your position safely collateralized."
							}
						},
						"notice": "CollateralizedStableCoin is an ERC20 token representing the stable coin. Users deposit a collateral ERC20 token into their own vault (preventing commingling), then mint stable coins up to a safe collateralization ratio. They can later burn stable coins (repay debt) and withdraw collateral provided their position remains safe.",
						"version": 1
					}
				},
				"Vault": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_collateralToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner_",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "balance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "collateralToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"params": {
									"_collateralToken": "The address of the collateral ERC20 token.",
									"owner_": "The owner of the vault (set to the main contract)."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"C/commingling .sol\":481:1503  contract Vault is Ownable {... */\n  mstore(0x40, 0xa0)\n    /* \"C/commingling .sol\":829:1032  constructor(address _collateralToken, address owner_) Ownable(owner_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"C/commingling .sol\":891:897  owner_ */\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"C/commingling .sol\":945:946  0 */\n  0x00\n    /* \"C/commingling .sol\":917:947  _collateralToken != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"C/commingling .sol\":917:933  _collateralToken */\n  dup3\n    /* \"C/commingling .sol\":917:947  _collateralToken != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"C/commingling .sol\":909:973  require(_collateralToken != address(0), \"Invalid token address\") */\n  tag_13\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_14\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_13:\n    /* \"C/commingling .sol\":1008:1024  _collateralToken */\n  dup2\n    /* \"C/commingling .sol\":983:1025  collateralToken = IERC20(_collateralToken) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"C/commingling .sol\":829:1032  constructor(address _collateralToken, address owner_) Ownable(owner_) {... */\n  pop\n  pop\n    /* \"C/commingling .sol\":481:1503  contract Vault is Ownable {... */\n  jump(tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_19:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_21:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_22:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_35\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_21\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_23:\n    /* \"#utility.yul\":641:665   */\n  tag_37\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_22\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_38\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_38:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_24:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_40\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_23\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  0x00\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_43\n  tag_19\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":949:1068   */\ntag_42:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_44\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_24\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_45\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_24\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1358:1476   */\ntag_25:\n    /* \"#utility.yul\":1445:1469   */\n  tag_47\n    /* \"#utility.yul\":1463:1468   */\n  dup2\n    /* \"#utility.yul\":1445:1469   */\n  tag_22\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1440:1443   */\n  dup3\n    /* \"#utility.yul\":1433:1470   */\n  mstore\n    /* \"#utility.yul\":1358:1476   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1482:1704   */\ntag_9:\n    /* \"#utility.yul\":1575:1579   */\n  0x00\n    /* \"#utility.yul\":1613:1615   */\n  0x20\n    /* \"#utility.yul\":1602:1611   */\n  dup3\n    /* \"#utility.yul\":1598:1616   */\n  add\n    /* \"#utility.yul\":1590:1616   */\n  swap1\n  pop\n    /* \"#utility.yul\":1626:1697   */\n  tag_49\n    /* \"#utility.yul\":1694:1695   */\n  0x00\n    /* \"#utility.yul\":1683:1692   */\n  dup4\n    /* \"#utility.yul\":1679:1696   */\n  add\n    /* \"#utility.yul\":1670:1676   */\n  dup5\n    /* \"#utility.yul\":1626:1697   */\n  tag_25\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1482:1704   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1710:1879   */\ntag_26:\n    /* \"#utility.yul\":1794:1805   */\n  0x00\n    /* \"#utility.yul\":1828:1834   */\n  dup3\n    /* \"#utility.yul\":1823:1826   */\n  dup3\n    /* \"#utility.yul\":1816:1835   */\n  mstore\n    /* \"#utility.yul\":1868:1872   */\n  0x20\n    /* \"#utility.yul\":1863:1866   */\n  dup3\n    /* \"#utility.yul\":1859:1873   */\n  add\n    /* \"#utility.yul\":1844:1873   */\n  swap1\n  pop\n    /* \"#utility.yul\":1710:1879   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1885:2056   */\ntag_27:\n    /* \"#utility.yul\":2025:2048   */\n  0x496e76616c696420746f6b656e20616464726573730000000000000000000000\n    /* \"#utility.yul\":2021:2022   */\n  0x00\n    /* \"#utility.yul\":2013:2019   */\n  dup3\n    /* \"#utility.yul\":2009:2023   */\n  add\n    /* \"#utility.yul\":2002:2049   */\n  mstore\n    /* \"#utility.yul\":1885:2056   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2062:2428   */\ntag_28:\n    /* \"#utility.yul\":2204:2207   */\n  0x00\n    /* \"#utility.yul\":2225:2292   */\n  tag_53\n    /* \"#utility.yul\":2289:2291   */\n  0x15\n    /* \"#utility.yul\":2284:2287   */\n  dup4\n    /* \"#utility.yul\":2225:2292   */\n  tag_26\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":2218:2292   */\n  swap2\n  pop\n    /* \"#utility.yul\":2301:2394   */\n  tag_54\n    /* \"#utility.yul\":2390:2393   */\n  dup3\n    /* \"#utility.yul\":2301:2394   */\n  tag_27\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":2419:2421   */\n  0x20\n    /* \"#utility.yul\":2414:2417   */\n  dup3\n    /* \"#utility.yul\":2410:2422   */\n  add\n    /* \"#utility.yul\":2403:2422   */\n  swap1\n  pop\n    /* \"#utility.yul\":2062:2428   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2434:2853   */\ntag_15:\n    /* \"#utility.yul\":2600:2604   */\n  0x00\n    /* \"#utility.yul\":2638:2640   */\n  0x20\n    /* \"#utility.yul\":2627:2636   */\n  dup3\n    /* \"#utility.yul\":2623:2641   */\n  add\n    /* \"#utility.yul\":2615:2641   */\n  swap1\n  pop\n    /* \"#utility.yul\":2687:2696   */\n  dup2\n    /* \"#utility.yul\":2681:2685   */\n  dup2\n    /* \"#utility.yul\":2677:2697   */\n  sub\n    /* \"#utility.yul\":2673:2674   */\n  0x00\n    /* \"#utility.yul\":2662:2671   */\n  dup4\n    /* \"#utility.yul\":2658:2675   */\n  add\n    /* \"#utility.yul\":2651:2698   */\n  mstore\n    /* \"#utility.yul\":2715:2846   */\n  tag_56\n    /* \"#utility.yul\":2841:2845   */\n  dup2\n    /* \"#utility.yul\":2715:2846   */\n  tag_28\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":2707:2846   */\n  swap1\n  pop\n    /* \"#utility.yul\":2434:2853   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"C/commingling .sol\":481:1503  contract Vault is Ownable {... */\ntag_16:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x531478b608456d6cd277e16da5d4d5f38a3dd62f497fc533d273f6110185082c\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"C/commingling .sol\":481:1503  contract Vault is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xb2016bd4\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xb69ef8a8\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf3fef3a3\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_3:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"C/commingling .sol\":550:589  IERC20 public immutable collateralToken */\n    tag_5:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"C/commingling .sol\":1386:1501  function balance() external view returns (uint256) {... */\n    tag_6:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_7:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      stop\n        /* \"C/commingling .sol\":1188:1310  function withdraw(address to, uint256 amount) external onlyOwner {... */\n    tag_8:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_32\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_33\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_32:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_35\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_36\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_35:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_12:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"C/commingling .sol\":550:589  IERC20 public immutable collateralToken */\n    tag_16:\n      immutable(\"0x531478b608456d6cd277e16da5d4d5f38a3dd62f497fc533d273f6110185082c\")\n      dup2\n      jump\t// out\n        /* \"C/commingling .sol\":1386:1501  function balance() external view returns (uint256) {... */\n    tag_20:\n        /* \"C/commingling .sol\":1428:1435  uint256 */\n      0x00\n        /* \"C/commingling .sol\":1454:1469  collateralToken */\n      immutable(\"0x531478b608456d6cd277e16da5d4d5f38a3dd62f497fc533d273f6110185082c\")\n        /* \"C/commingling .sol\":1454:1479  collateralToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"C/commingling .sol\":1488:1492  this */\n      address\n        /* \"C/commingling .sol\":1454:1494  collateralToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_39\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_39:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_41\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_41:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n        /* \"C/commingling .sol\":1447:1494  return collateralToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"C/commingling .sol\":1386:1501  function balance() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_45\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_33\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_45:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_47\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_48\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_49\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_36\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_49:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"C/commingling .sol\":1188:1310  function withdraw(address to, uint256 amount) external onlyOwner {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_51\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_33\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_51:\n        /* \"C/commingling .sol\":1263:1303  collateralToken.safeTransfer(to, amount) */\n      tag_53\n        /* \"C/commingling .sol\":1292:1294  to */\n      dup3\n        /* \"C/commingling .sol\":1296:1302  amount */\n      dup3\n        /* \"C/commingling .sol\":1263:1278  collateralToken */\n      immutable(\"0x531478b608456d6cd277e16da5d4d5f38a3dd62f497fc533d273f6110185082c\")\n        /* \"C/commingling .sol\":1263:1291  collateralToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_54\n      swap1\n        /* \"C/commingling .sol\":1263:1303  collateralToken.safeTransfer(to, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_53:\n        /* \"C/commingling .sol\":1188:1310  function withdraw(address to, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_56\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_57\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_56:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_58\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_12\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_58:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_59\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_60\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_57\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_61\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_64\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1348  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1360:1362  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1364:1369  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_65\n      swap3\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_67\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_64:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7686:8406  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7766:7784  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7794:7813  uint256 returnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7932:7936  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7929:7930  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7922:7926  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7916:7927  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7909:7913  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7903:7907  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7899:7914  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7896:7897  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7889:7894  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7882:7887  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7877:7937  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7989:7996  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7979:8155  if iszero(success) {... */\n      tag_70\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8033:8037  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8027:8038  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8078:8094  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8075:8076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8070:8073  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8055:8095  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8124:8140  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8119:8122  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8112:8141  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7979:8155  if iszero(success) {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8182:8198  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8168:8198  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8232:8233  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8226:8234  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8211:8234  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7848:8244  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8272:8273  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8268  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8273  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_71\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8325:8326  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8321  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8326  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_72)\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8284:8289  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8276:8302  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8276:8307  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_72:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8254:8400  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_73\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8382:8387  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8349:8389  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_74\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8254:8400  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7756:8406  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7686:8406  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_75:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_76:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_96\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_75\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_77:\n        /* \"#utility.yul\":328:352   */\n      tag_98\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_76\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_14:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_100\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_77\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:653   */\n    tag_78:\n        /* \"#utility.yul\":621:624   */\n      0x00\n        /* \"#utility.yul\":642:647   */\n      dup2\n        /* \"#utility.yul\":635:647   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:653   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":659:801   */\n    tag_79:\n        /* \"#utility.yul\":709:718   */\n      0x00\n        /* \"#utility.yul\":742:795   */\n      tag_103\n        /* \"#utility.yul\":760:794   */\n      tag_104\n        /* \"#utility.yul\":769:793   */\n      tag_105\n        /* \"#utility.yul\":787:792   */\n      dup5\n        /* \"#utility.yul\":769:793   */\n      tag_75\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":760:794   */\n      tag_78\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":742:795   */\n      tag_75\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":729:795   */\n      swap1\n      pop\n        /* \"#utility.yul\":659:801   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":807:933   */\n    tag_80:\n        /* \"#utility.yul\":857:866   */\n      0x00\n        /* \"#utility.yul\":890:927   */\n      tag_107\n        /* \"#utility.yul\":921:926   */\n      dup3\n        /* \"#utility.yul\":890:927   */\n      tag_79\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":877:927   */\n      swap1\n      pop\n        /* \"#utility.yul\":807:933   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":939:1080   */\n    tag_81:\n        /* \"#utility.yul\":1004:1013   */\n      0x00\n        /* \"#utility.yul\":1037:1074   */\n      tag_109\n        /* \"#utility.yul\":1068:1073   */\n      dup3\n        /* \"#utility.yul\":1037:1074   */\n      tag_80\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":1024:1074   */\n      swap1\n      pop\n        /* \"#utility.yul\":939:1080   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1086:1247   */\n    tag_82:\n        /* \"#utility.yul\":1188:1240   */\n      tag_111\n        /* \"#utility.yul\":1234:1239   */\n      dup2\n        /* \"#utility.yul\":1188:1240   */\n      tag_81\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":1183:1186   */\n      dup3\n        /* \"#utility.yul\":1176:1241   */\n      mstore\n        /* \"#utility.yul\":1086:1247   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1253:1505   */\n    tag_18:\n        /* \"#utility.yul\":1361:1365   */\n      0x00\n        /* \"#utility.yul\":1399:1401   */\n      0x20\n        /* \"#utility.yul\":1388:1397   */\n      dup3\n        /* \"#utility.yul\":1384:1402   */\n      add\n        /* \"#utility.yul\":1376:1402   */\n      swap1\n      pop\n        /* \"#utility.yul\":1412:1498   */\n      tag_113\n        /* \"#utility.yul\":1495:1496   */\n      0x00\n        /* \"#utility.yul\":1484:1493   */\n      dup4\n        /* \"#utility.yul\":1480:1497   */\n      add\n        /* \"#utility.yul\":1471:1477   */\n      dup5\n        /* \"#utility.yul\":1412:1498   */\n      tag_82\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":1253:1505   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1511:1588   */\n    tag_83:\n        /* \"#utility.yul\":1548:1555   */\n      0x00\n        /* \"#utility.yul\":1577:1582   */\n      dup2\n        /* \"#utility.yul\":1566:1582   */\n      swap1\n      pop\n        /* \"#utility.yul\":1511:1588   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1594:1712   */\n    tag_84:\n        /* \"#utility.yul\":1681:1705   */\n      tag_116\n        /* \"#utility.yul\":1699:1704   */\n      dup2\n        /* \"#utility.yul\":1681:1705   */\n      tag_83\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":1676:1679   */\n      dup3\n        /* \"#utility.yul\":1669:1706   */\n      mstore\n        /* \"#utility.yul\":1594:1712   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1718:1940   */\n    tag_22:\n        /* \"#utility.yul\":1811:1815   */\n      0x00\n        /* \"#utility.yul\":1849:1851   */\n      0x20\n        /* \"#utility.yul\":1838:1847   */\n      dup3\n        /* \"#utility.yul\":1834:1852   */\n      add\n        /* \"#utility.yul\":1826:1852   */\n      swap1\n      pop\n        /* \"#utility.yul\":1862:1933   */\n      tag_118\n        /* \"#utility.yul\":1930:1931   */\n      0x00\n        /* \"#utility.yul\":1919:1928   */\n      dup4\n        /* \"#utility.yul\":1915:1932   */\n      add\n        /* \"#utility.yul\":1906:1912   */\n      dup5\n        /* \"#utility.yul\":1862:1933   */\n      tag_84\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":1718:1940   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2027:2144   */\n    tag_86:\n        /* \"#utility.yul\":2136:2137   */\n      0x00\n        /* \"#utility.yul\":2133:2134   */\n      0x00\n        /* \"#utility.yul\":2126:2138   */\n      revert\n        /* \"#utility.yul\":2273:2395   */\n    tag_88:\n        /* \"#utility.yul\":2346:2370   */\n      tag_123\n        /* \"#utility.yul\":2364:2369   */\n      dup2\n        /* \"#utility.yul\":2346:2370   */\n      tag_76\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":2339:2344   */\n      dup2\n        /* \"#utility.yul\":2336:2371   */\n      eq\n        /* \"#utility.yul\":2326:2389   */\n      tag_124\n      jumpi\n        /* \"#utility.yul\":2385:2386   */\n      0x00\n        /* \"#utility.yul\":2382:2383   */\n      0x00\n        /* \"#utility.yul\":2375:2387   */\n      revert\n        /* \"#utility.yul\":2326:2389   */\n    tag_124:\n        /* \"#utility.yul\":2273:2395   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2401:2540   */\n    tag_89:\n        /* \"#utility.yul\":2447:2452   */\n      0x00\n        /* \"#utility.yul\":2485:2491   */\n      dup2\n        /* \"#utility.yul\":2472:2492   */\n      calldataload\n        /* \"#utility.yul\":2463:2492   */\n      swap1\n      pop\n        /* \"#utility.yul\":2501:2534   */\n      tag_126\n        /* \"#utility.yul\":2528:2533   */\n      dup2\n        /* \"#utility.yul\":2501:2534   */\n      tag_88\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":2401:2540   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2546:2875   */\n    tag_25:\n        /* \"#utility.yul\":2605:2611   */\n      0x00\n        /* \"#utility.yul\":2654:2656   */\n      0x20\n        /* \"#utility.yul\":2642:2651   */\n      dup3\n        /* \"#utility.yul\":2633:2640   */\n      dup5\n        /* \"#utility.yul\":2629:2652   */\n      sub\n        /* \"#utility.yul\":2625:2657   */\n      slt\n        /* \"#utility.yul\":2622:2741   */\n      iszero\n      tag_128\n      jumpi\n        /* \"#utility.yul\":2660:2739   */\n      tag_129\n      tag_86\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":2622:2741   */\n    tag_128:\n        /* \"#utility.yul\":2780:2781   */\n      0x00\n        /* \"#utility.yul\":2805:2858   */\n      tag_130\n        /* \"#utility.yul\":2850:2857   */\n      dup5\n        /* \"#utility.yul\":2841:2847   */\n      dup3\n        /* \"#utility.yul\":2830:2839   */\n      dup6\n        /* \"#utility.yul\":2826:2848   */\n      add\n        /* \"#utility.yul\":2805:2858   */\n      tag_89\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":2795:2858   */\n      swap2\n      pop\n        /* \"#utility.yul\":2751:2868   */\n      pop\n        /* \"#utility.yul\":2546:2875   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2881:3003   */\n    tag_90:\n        /* \"#utility.yul\":2954:2978   */\n      tag_132\n        /* \"#utility.yul\":2972:2977   */\n      dup2\n        /* \"#utility.yul\":2954:2978   */\n      tag_83\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":2947:2952   */\n      dup2\n        /* \"#utility.yul\":2944:2979   */\n      eq\n        /* \"#utility.yul\":2934:2997   */\n      tag_133\n      jumpi\n        /* \"#utility.yul\":2993:2994   */\n      0x00\n        /* \"#utility.yul\":2990:2991   */\n      0x00\n        /* \"#utility.yul\":2983:2995   */\n      revert\n        /* \"#utility.yul\":2934:2997   */\n    tag_133:\n        /* \"#utility.yul\":2881:3003   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3009:3148   */\n    tag_91:\n        /* \"#utility.yul\":3055:3060   */\n      0x00\n        /* \"#utility.yul\":3093:3099   */\n      dup2\n        /* \"#utility.yul\":3080:3100   */\n      calldataload\n        /* \"#utility.yul\":3071:3100   */\n      swap1\n      pop\n        /* \"#utility.yul\":3109:3142   */\n      tag_135\n        /* \"#utility.yul\":3136:3141   */\n      dup2\n        /* \"#utility.yul\":3109:3142   */\n      tag_90\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":3009:3148   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3154:3628   */\n    tag_29:\n        /* \"#utility.yul\":3222:3228   */\n      0x00\n        /* \"#utility.yul\":3230:3236   */\n      0x00\n        /* \"#utility.yul\":3279:3281   */\n      0x40\n        /* \"#utility.yul\":3267:3276   */\n      dup4\n        /* \"#utility.yul\":3258:3265   */\n      dup6\n        /* \"#utility.yul\":3254:3277   */\n      sub\n        /* \"#utility.yul\":3250:3282   */\n      slt\n        /* \"#utility.yul\":3247:3366   */\n      iszero\n      tag_137\n      jumpi\n        /* \"#utility.yul\":3285:3364   */\n      tag_138\n      tag_86\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":3247:3366   */\n    tag_137:\n        /* \"#utility.yul\":3405:3406   */\n      0x00\n        /* \"#utility.yul\":3430:3483   */\n      tag_139\n        /* \"#utility.yul\":3475:3482   */\n      dup6\n        /* \"#utility.yul\":3466:3472   */\n      dup3\n        /* \"#utility.yul\":3455:3464   */\n      dup7\n        /* \"#utility.yul\":3451:3473   */\n      add\n        /* \"#utility.yul\":3430:3483   */\n      tag_89\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":3420:3483   */\n      swap3\n      pop\n        /* \"#utility.yul\":3376:3493   */\n      pop\n        /* \"#utility.yul\":3532:3534   */\n      0x20\n        /* \"#utility.yul\":3558:3611   */\n      tag_140\n        /* \"#utility.yul\":3603:3610   */\n      dup6\n        /* \"#utility.yul\":3594:3600   */\n      dup3\n        /* \"#utility.yul\":3583:3592   */\n      dup7\n        /* \"#utility.yul\":3579:3601   */\n      add\n        /* \"#utility.yul\":3558:3611   */\n      tag_91\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":3548:3611   */\n      swap2\n      pop\n        /* \"#utility.yul\":3503:3621   */\n      pop\n        /* \"#utility.yul\":3154:3628   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3634:3777   */\n    tag_92:\n        /* \"#utility.yul\":3691:3696   */\n      0x00\n        /* \"#utility.yul\":3722:3728   */\n      dup2\n        /* \"#utility.yul\":3716:3729   */\n      mload\n        /* \"#utility.yul\":3707:3729   */\n      swap1\n      pop\n        /* \"#utility.yul\":3738:3771   */\n      tag_142\n        /* \"#utility.yul\":3765:3770   */\n      dup2\n        /* \"#utility.yul\":3738:3771   */\n      tag_90\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":3634:3777   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3783:4134   */\n    tag_43:\n        /* \"#utility.yul\":3853:3859   */\n      0x00\n        /* \"#utility.yul\":3902:3904   */\n      0x20\n        /* \"#utility.yul\":3890:3899   */\n      dup3\n        /* \"#utility.yul\":3881:3888   */\n      dup5\n        /* \"#utility.yul\":3877:3900   */\n      sub\n        /* \"#utility.yul\":3873:3905   */\n      slt\n        /* \"#utility.yul\":3870:3989   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":3908:3987   */\n      tag_145\n      tag_86\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":3870:3989   */\n    tag_144:\n        /* \"#utility.yul\":4028:4029   */\n      0x00\n        /* \"#utility.yul\":4053:4117   */\n      tag_146\n        /* \"#utility.yul\":4109:4116   */\n      dup5\n        /* \"#utility.yul\":4100:4106   */\n      dup3\n        /* \"#utility.yul\":4089:4098   */\n      dup6\n        /* \"#utility.yul\":4085:4107   */\n      add\n        /* \"#utility.yul\":4053:4117   */\n      tag_92\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":4043:4117   */\n      swap2\n      pop\n        /* \"#utility.yul\":3999:4127   */\n      pop\n        /* \"#utility.yul\":3783:4134   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4140:4472   */\n    tag_66:\n        /* \"#utility.yul\":4261:4265   */\n      0x00\n        /* \"#utility.yul\":4299:4301   */\n      0x40\n        /* \"#utility.yul\":4288:4297   */\n      dup3\n        /* \"#utility.yul\":4284:4302   */\n      add\n        /* \"#utility.yul\":4276:4302   */\n      swap1\n      pop\n        /* \"#utility.yul\":4312:4383   */\n      tag_148\n        /* \"#utility.yul\":4380:4381   */\n      0x00\n        /* \"#utility.yul\":4369:4378   */\n      dup4\n        /* \"#utility.yul\":4365:4382   */\n      add\n        /* \"#utility.yul\":4356:4362   */\n      dup6\n        /* \"#utility.yul\":4312:4383   */\n      tag_77\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":4393:4465   */\n      tag_149\n        /* \"#utility.yul\":4461:4463   */\n      0x20\n        /* \"#utility.yul\":4450:4459   */\n      dup4\n        /* \"#utility.yul\":4446:4464   */\n      add\n        /* \"#utility.yul\":4437:4443   */\n      dup5\n        /* \"#utility.yul\":4393:4465   */\n      tag_84\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":4140:4472   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c1198753c4d47eaa95c0862639943fda4ce251fcbe9ffe29421da0c40b3fd0c264736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1553": {
									"entryPoint": null,
									"id": 1553,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 347,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 634,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 696,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 792,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 711,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 826,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 736,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 575,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 540,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743": {
									"entryPoint": 752,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 592,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2856:13",
										"nodeType": "YulBlock",
										"src": "0:2856:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "379:81:13",
													"nodeType": "YulBlock",
													"src": "379:81:13",
													"statements": [
														{
															"nativeSrc": "389:65:13",
															"nodeType": "YulAssignment",
															"src": "389:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:13",
																		"nodeType": "YulLiteral",
																		"src": "411:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:13"
																},
																"nativeSrc": "400:54:13",
																"nodeType": "YulFunctionCall",
																"src": "400:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:13",
														"nodeType": "YulTypedName",
														"src": "361:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:13",
														"nodeType": "YulTypedName",
														"src": "371:7:13",
														"type": ""
													}
												],
												"src": "334:126:13"
											},
											{
												"body": {
													"nativeSrc": "511:51:13",
													"nodeType": "YulBlock",
													"src": "511:51:13",
													"statements": [
														{
															"nativeSrc": "521:35:13",
															"nodeType": "YulAssignment",
															"src": "521:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:13"
																},
																"nativeSrc": "532:24:13",
																"nodeType": "YulFunctionCall",
																"src": "532:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:13",
														"nodeType": "YulTypedName",
														"src": "493:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:13",
														"nodeType": "YulTypedName",
														"src": "503:7:13",
														"type": ""
													}
												],
												"src": "466:96:13"
											},
											{
												"body": {
													"nativeSrc": "611:79:13",
													"nodeType": "YulBlock",
													"src": "611:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:13",
																"nodeType": "YulBlock",
																"src": "668:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:13",
																					"nodeType": "YulLiteral",
																					"src": "677:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:13",
																					"nodeType": "YulLiteral",
																					"src": "680:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:13"
																			},
																			"nativeSrc": "670:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:13"
																		},
																		"nativeSrc": "670:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:13"
																				},
																				"nativeSrc": "641:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:13"
																		},
																		"nativeSrc": "631:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:13"
																},
																"nativeSrc": "624:43:13",
																"nodeType": "YulFunctionCall",
																"src": "624:43:13"
															},
															"nativeSrc": "621:63:13",
															"nodeType": "YulIf",
															"src": "621:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:13",
														"nodeType": "YulTypedName",
														"src": "604:5:13",
														"type": ""
													}
												],
												"src": "568:122:13"
											},
											{
												"body": {
													"nativeSrc": "759:80:13",
													"nodeType": "YulBlock",
													"src": "759:80:13",
													"statements": [
														{
															"nativeSrc": "769:22:13",
															"nodeType": "YulAssignment",
															"src": "769:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:13"
																},
																"nativeSrc": "778:13:13",
																"nodeType": "YulFunctionCall",
																"src": "778:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:13"
																},
																"nativeSrc": "800:33:13",
																"nodeType": "YulFunctionCall",
																"src": "800:33:13"
															},
															"nativeSrc": "800:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:13"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:13",
														"nodeType": "YulTypedName",
														"src": "737:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:13",
														"nodeType": "YulTypedName",
														"src": "745:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:13",
														"nodeType": "YulTypedName",
														"src": "753:5:13",
														"type": ""
													}
												],
												"src": "696:143:13"
											},
											{
												"body": {
													"nativeSrc": "939:413:13",
													"nodeType": "YulBlock",
													"src": "939:413:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:13",
																"nodeType": "YulBlock",
																"src": "985:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:13"
																			},
																			"nativeSrc": "987:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:13"
																		},
																		"nativeSrc": "987:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:13"
																		},
																		"nativeSrc": "956:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:13",
																		"nodeType": "YulLiteral",
																		"src": "981:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:13"
																},
																"nativeSrc": "952:32:13",
																"nodeType": "YulFunctionCall",
																"src": "952:32:13"
															},
															"nativeSrc": "949:119:13",
															"nodeType": "YulIf",
															"src": "949:119:13"
														},
														{
															"nativeSrc": "1078:128:13",
															"nodeType": "YulBlock",
															"src": "1078:128:13",
															"statements": [
																{
																	"nativeSrc": "1093:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:13",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:13"
																				},
																				"nativeSrc": "1164:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:13"
																		},
																		"nativeSrc": "1132:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:13",
															"nodeType": "YulBlock",
															"src": "1216:129:13",
															"statements": [
																{
																	"nativeSrc": "1231:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:13",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:13"
																				},
																				"nativeSrc": "1303:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:13"
																		},
																		"nativeSrc": "1271:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:13",
														"nodeType": "YulTypedName",
														"src": "901:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:13",
														"nodeType": "YulTypedName",
														"src": "912:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:13",
														"nodeType": "YulTypedName",
														"src": "924:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:13",
														"nodeType": "YulTypedName",
														"src": "932:6:13",
														"type": ""
													}
												],
												"src": "845:507:13"
											},
											{
												"body": {
													"nativeSrc": "1423:53:13",
													"nodeType": "YulBlock",
													"src": "1423:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1440:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1440:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1463:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1463:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1445:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "1445:17:13"
																		},
																		"nativeSrc": "1445:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1445:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1433:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1433:6:13"
																},
																"nativeSrc": "1433:37:13",
																"nodeType": "YulFunctionCall",
																"src": "1433:37:13"
															},
															"nativeSrc": "1433:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "1433:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1358:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1411:5:13",
														"nodeType": "YulTypedName",
														"src": "1411:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1418:3:13",
														"nodeType": "YulTypedName",
														"src": "1418:3:13",
														"type": ""
													}
												],
												"src": "1358:118:13"
											},
											{
												"body": {
													"nativeSrc": "1580:124:13",
													"nodeType": "YulBlock",
													"src": "1580:124:13",
													"statements": [
														{
															"nativeSrc": "1590:26:13",
															"nodeType": "YulAssignment",
															"src": "1590:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1602:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1602:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1613:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1613:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1598:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1598:3:13"
																},
																"nativeSrc": "1598:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1598:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1590:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1590:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1670:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1670:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1683:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1694:1:13",
																				"nodeType": "YulLiteral",
																				"src": "1694:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1679:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:13"
																		},
																		"nativeSrc": "1679:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1679:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1626:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "1626:43:13"
																},
																"nativeSrc": "1626:71:13",
																"nodeType": "YulFunctionCall",
																"src": "1626:71:13"
															},
															"nativeSrc": "1626:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "1626:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1482:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1552:9:13",
														"nodeType": "YulTypedName",
														"src": "1552:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1564:6:13",
														"nodeType": "YulTypedName",
														"src": "1564:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1575:4:13",
														"nodeType": "YulTypedName",
														"src": "1575:4:13",
														"type": ""
													}
												],
												"src": "1482:222:13"
											},
											{
												"body": {
													"nativeSrc": "1806:73:13",
													"nodeType": "YulBlock",
													"src": "1806:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1823:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1823:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1828:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1828:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1816:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1816:6:13"
																},
																"nativeSrc": "1816:19:13",
																"nodeType": "YulFunctionCall",
																"src": "1816:19:13"
															},
															"nativeSrc": "1816:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "1816:19:13"
														},
														{
															"nativeSrc": "1844:29:13",
															"nodeType": "YulAssignment",
															"src": "1844:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1863:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1863:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1868:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1868:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1859:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1859:3:13"
																},
																"nativeSrc": "1859:14:13",
																"nodeType": "YulFunctionCall",
																"src": "1859:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1844:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "1844:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1710:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1778:3:13",
														"nodeType": "YulTypedName",
														"src": "1778:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1783:6:13",
														"nodeType": "YulTypedName",
														"src": "1783:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1794:11:13",
														"nodeType": "YulTypedName",
														"src": "1794:11:13",
														"type": ""
													}
												],
												"src": "1710:169:13"
											},
											{
												"body": {
													"nativeSrc": "1991:65:13",
													"nodeType": "YulBlock",
													"src": "1991:65:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2013:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2013:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2021:1:13",
																				"nodeType": "YulLiteral",
																				"src": "2021:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2009:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2009:3:13"
																		},
																		"nativeSrc": "2009:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2009:14:13"
																	},
																	{
																		"hexValue": "496e76616c696420746f6b656e2061646472657373",
																		"kind": "string",
																		"nativeSrc": "2025:23:13",
																		"nodeType": "YulLiteral",
																		"src": "2025:23:13",
																		"type": "",
																		"value": "Invalid token address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2002:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2002:6:13"
																},
																"nativeSrc": "2002:47:13",
																"nodeType": "YulFunctionCall",
																"src": "2002:47:13"
															},
															"nativeSrc": "2002:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "2002:47:13"
														}
													]
												},
												"name": "store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
												"nativeSrc": "1885:171:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1983:6:13",
														"nodeType": "YulTypedName",
														"src": "1983:6:13",
														"type": ""
													}
												],
												"src": "1885:171:13"
											},
											{
												"body": {
													"nativeSrc": "2208:220:13",
													"nodeType": "YulBlock",
													"src": "2208:220:13",
													"statements": [
														{
															"nativeSrc": "2218:74:13",
															"nodeType": "YulAssignment",
															"src": "2218:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2284:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2284:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2289:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2289:2:13",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2225:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "2225:58:13"
																},
																"nativeSrc": "2225:67:13",
																"nodeType": "YulFunctionCall",
																"src": "2225:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2218:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2218:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2390:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2390:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																	"nativeSrc": "2301:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "2301:88:13"
																},
																"nativeSrc": "2301:93:13",
																"nodeType": "YulFunctionCall",
																"src": "2301:93:13"
															},
															"nativeSrc": "2301:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "2301:93:13"
														},
														{
															"nativeSrc": "2403:19:13",
															"nodeType": "YulAssignment",
															"src": "2403:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2414:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2414:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2419:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2419:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2410:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2410:3:13"
																},
																"nativeSrc": "2410:12:13",
																"nodeType": "YulFunctionCall",
																"src": "2410:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2403:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2403:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2062:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2196:3:13",
														"nodeType": "YulTypedName",
														"src": "2196:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2204:3:13",
														"nodeType": "YulTypedName",
														"src": "2204:3:13",
														"type": ""
													}
												],
												"src": "2062:366:13"
											},
											{
												"body": {
													"nativeSrc": "2605:248:13",
													"nodeType": "YulBlock",
													"src": "2605:248:13",
													"statements": [
														{
															"nativeSrc": "2615:26:13",
															"nodeType": "YulAssignment",
															"src": "2615:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2627:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2627:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2638:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2638:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2623:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2623:3:13"
																},
																"nativeSrc": "2623:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2623:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2615:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2615:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2662:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2662:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2673:1:13",
																				"nodeType": "YulLiteral",
																				"src": "2673:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2658:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2658:3:13"
																		},
																		"nativeSrc": "2658:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2658:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2681:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "2681:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2687:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2687:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2677:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2677:3:13"
																		},
																		"nativeSrc": "2677:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2677:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2651:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2651:6:13"
																},
																"nativeSrc": "2651:47:13",
																"nodeType": "YulFunctionCall",
																"src": "2651:47:13"
															},
															"nativeSrc": "2651:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "2651:47:13"
														},
														{
															"nativeSrc": "2707:139:13",
															"nodeType": "YulAssignment",
															"src": "2707:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2841:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2841:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2715:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "2715:124:13"
																},
																"nativeSrc": "2715:131:13",
																"nodeType": "YulFunctionCall",
																"src": "2715:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2707:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2707:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2434:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2585:9:13",
														"nodeType": "YulTypedName",
														"src": "2585:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2600:4:13",
														"nodeType": "YulTypedName",
														"src": "2600:4:13",
														"type": ""
													}
												],
												"src": "2434:419:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid token address\")\n\n    }\n\n    function abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561000f575f5ffd5b50604051610b18380380610b188339818101604052810190610031919061027a565b805f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a2575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009991906102c7565b60405180910390fd5b6100b18161015b60201b60201c565b505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610120576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101179061033a565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505050610358565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61024982610220565b9050919050565b6102598161023f565b8114610263575f5ffd5b50565b5f8151905061027481610250565b92915050565b5f5f604083850312156102905761028f61021c565b5b5f61029d85828601610266565b92505060206102ae85828601610266565b9150509250929050565b6102c18161023f565b82525050565b5f6020820190506102da5f8301846102b8565b92915050565b5f82825260208201905092915050565b7f496e76616c696420746f6b656e206164647265737300000000000000000000005f82015250565b5f6103246015836102e0565b915061032f826102f0565b602082019050919050565b5f6020820190508181035f83015261035181610318565b9050919050565b60805161079a61037e5f395f818161013c01528181610161015261028f015261079a5ff3fe608060405234801561000f575f5ffd5b5060043610610060575f3560e01c8063715018a6146100645780638da5cb5b1461006e578063b2016bd41461008c578063b69ef8a8146100aa578063f2fde38b146100c8578063f3fef3a3146100e4575b5f5ffd5b61006c610100565b005b610076610113565b604051610083919061057f565b60405180910390f35b61009461013a565b6040516100a191906105f3565b60405180910390f35b6100b261015e565b6040516100bf9190610624565b60405180910390f35b6100e260048036038101906100dd919061066b565b6101fc565b005b6100fe60048036038101906100f991906106c0565b610280565b005b6101086102d7565b6101115f61035e565b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016101b8919061057f565b602060405180830381865afa1580156101d3573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101f79190610712565b905090565b6102046102d7565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610274575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161026b919061057f565b60405180910390fd5b61027d8161035e565b50565b6102886102d7565b6102d382827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661041f9092919063ffffffff16565b5050565b6102df61049e565b73ffffffffffffffffffffffffffffffffffffffff166102fd610113565b73ffffffffffffffffffffffffffffffffffffffff161461035c5761032061049e565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610353919061057f565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610499838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb858560405160240161045292919061073d565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506104a5565b505050565b5f33905090565b5f5f60205f8451602086015f885af1806104c4576040513d5f823e3d81fd5b3d92505f519150505f82146104dd5760018114156104f8565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561053a57836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610531919061057f565b60405180910390fd5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61056982610540565b9050919050565b6105798161055f565b82525050565b5f6020820190506105925f830184610570565b92915050565b5f819050919050565b5f6105bb6105b66105b184610540565b610598565b610540565b9050919050565b5f6105cc826105a1565b9050919050565b5f6105dd826105c2565b9050919050565b6105ed816105d3565b82525050565b5f6020820190506106065f8301846105e4565b92915050565b5f819050919050565b61061e8161060c565b82525050565b5f6020820190506106375f830184610615565b92915050565b5f5ffd5b61064a8161055f565b8114610654575f5ffd5b50565b5f8135905061066581610641565b92915050565b5f602082840312156106805761067f61063d565b5b5f61068d84828501610657565b91505092915050565b61069f8161060c565b81146106a9575f5ffd5b50565b5f813590506106ba81610696565b92915050565b5f5f604083850312156106d6576106d561063d565b5b5f6106e385828601610657565b92505060206106f4858286016106ac565b9150509250929050565b5f8151905061070c81610696565b92915050565b5f602082840312156107275761072661063d565b5b5f610734848285016106fe565b91505092915050565b5f6040820190506107505f830185610570565b61075d6020830184610615565b939250505056fea2646970667358221220c1198753c4d47eaa95c0862639943fda4ce251fcbe9ffe29421da0c40b3fd0c264736f6c634300081d0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xB18 CODESIZE SUB DUP1 PUSH2 0xB18 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x27A JUMP JUMPDEST DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x2C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1 DUP2 PUSH2 0x15B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x120 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x117 SWAP1 PUSH2 0x33A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP PUSH2 0x358 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x249 DUP3 PUSH2 0x220 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x259 DUP2 PUSH2 0x23F JUMP JUMPDEST DUP2 EQ PUSH2 0x263 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x274 DUP2 PUSH2 0x250 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x290 JUMPI PUSH2 0x28F PUSH2 0x21C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x29D DUP6 DUP3 DUP7 ADD PUSH2 0x266 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2AE DUP6 DUP3 DUP7 ADD PUSH2 0x266 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C1 DUP2 PUSH2 0x23F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2DA PUSH0 DUP4 ADD DUP5 PUSH2 0x2B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E20616464726573730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x324 PUSH1 0x15 DUP4 PUSH2 0x2E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x32F DUP3 PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x351 DUP2 PUSH2 0x318 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x79A PUSH2 0x37E PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x13C ADD MSTORE DUP2 DUP2 PUSH2 0x161 ADD MSTORE PUSH2 0x28F ADD MSTORE PUSH2 0x79A PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0xB2016BD4 EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0xB69EF8A8 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0xE4 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x6C PUSH2 0x100 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x76 PUSH2 0x113 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x94 PUSH2 0x13A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x5F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB2 PUSH2 0x15E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x624 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x66B JUMP JUMPDEST PUSH2 0x1FC JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0x6C0 JUMP JUMPDEST PUSH2 0x280 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x108 PUSH2 0x2D7 JUMP JUMPDEST PUSH2 0x111 PUSH0 PUSH2 0x35E JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x57F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D3 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x712 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x2D7 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x274 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x27D DUP2 PUSH2 0x35E JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x288 PUSH2 0x2D7 JUMP JUMPDEST PUSH2 0x2D3 DUP3 DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x41F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x49E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2FD PUSH2 0x113 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x35C JUMPI PUSH2 0x320 PUSH2 0x49E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x499 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x452 SWAP3 SWAP2 SWAP1 PUSH2 0x73D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x4A5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x4C4 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x4DD JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x4F8 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x53A JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x531 SWAP2 SWAP1 PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x569 DUP3 PUSH2 0x540 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x579 DUP2 PUSH2 0x55F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x592 PUSH0 DUP4 ADD DUP5 PUSH2 0x570 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5BB PUSH2 0x5B6 PUSH2 0x5B1 DUP5 PUSH2 0x540 JUMP JUMPDEST PUSH2 0x598 JUMP JUMPDEST PUSH2 0x540 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5CC DUP3 PUSH2 0x5A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5DD DUP3 PUSH2 0x5C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5ED DUP2 PUSH2 0x5D3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x606 PUSH0 DUP4 ADD DUP5 PUSH2 0x5E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x61E DUP2 PUSH2 0x60C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x637 PUSH0 DUP4 ADD DUP5 PUSH2 0x615 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x64A DUP2 PUSH2 0x55F JUMP JUMPDEST DUP2 EQ PUSH2 0x654 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x665 DUP2 PUSH2 0x641 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x680 JUMPI PUSH2 0x67F PUSH2 0x63D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x68D DUP5 DUP3 DUP6 ADD PUSH2 0x657 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x69F DUP2 PUSH2 0x60C JUMP JUMPDEST DUP2 EQ PUSH2 0x6A9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6BA DUP2 PUSH2 0x696 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6D6 JUMPI PUSH2 0x6D5 PUSH2 0x63D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6E3 DUP6 DUP3 DUP7 ADD PUSH2 0x657 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x6F4 DUP6 DUP3 DUP7 ADD PUSH2 0x6AC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x70C DUP2 PUSH2 0x696 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x727 JUMPI PUSH2 0x726 PUSH2 0x63D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x734 DUP5 DUP3 DUP6 ADD PUSH2 0x6FE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x750 PUSH0 DUP4 ADD DUP6 PUSH2 0x570 JUMP JUMPDEST PUSH2 0x75D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x615 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 NOT DUP8 MSTORE8 0xC4 0xD4 PUSH31 0xAA95C0862639943FDA4CE251FCBE9FFE29421DA0C40B3FD0C264736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "481:1022:12:-:0;;;829:203;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;891:6;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;945:1:12::1;917:30;;:16;:30;;::::0;909:64:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1008:16;983:42;;;;;;;;::::0;::::1;829:203:::0;;481:1022;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:13:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:118::-;1445:24;1463:5;1445:24;:::i;:::-;1440:3;1433:37;1358:118;;:::o;1482:222::-;1575:4;1613:2;1602:9;1598:18;1590:26;;1626:71;1694:1;1683:9;1679:17;1670:6;1626:71;:::i;:::-;1482:222;;;;:::o;1710:169::-;1794:11;1828:6;1823:3;1816:19;1868:4;1863:3;1859:14;1844:29;;1710:169;;;;:::o;1885:171::-;2025:23;2021:1;2013:6;2009:14;2002:47;1885:171;:::o;2062:366::-;2204:3;2225:67;2289:2;2284:3;2225:67;:::i;:::-;2218:74;;2301:93;2390:3;2301:93;:::i;:::-;2419:2;2414:3;2410:12;2403:19;;2062:366;;;:::o;2434:419::-;2600:4;2638:2;2627:9;2623:18;2615:26;;2687:9;2681:4;2677:20;2673:1;2662:9;2658:17;2651:47;2715:131;2841:4;2715:131;:::i;:::-;2707:139;;2434:419;;;:::o;481:1022:12:-;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_1425": {
									"entryPoint": 1189,
									"id": 1425,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 727,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1479": {
									"entryPoint": 1182,
									"id": 1479,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 862,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@balance_1586": {
									"entryPoint": 350,
									"id": 1586,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@collateralToken_1525": {
									"entryPoint": 314,
									"id": 1525,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 275,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 256,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransfer_1103": {
									"entryPoint": 1055,
									"id": 1103,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 508,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_1571": {
									"entryPoint": 640,
									"id": 1571,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1623,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1708,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1790,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1643,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1728,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1810,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1392,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$1032_to_t_address_fromStack": {
									"entryPoint": 1508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1557,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1407,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1853,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$1032__to_t_address__fromStack_reversed": {
									"entryPoint": 1523,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1572,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1344,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1548,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$1032_to_t_address": {
									"entryPoint": 1491,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 1474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 1441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1432,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1597,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4475:13",
										"nodeType": "YulBlock",
										"src": "0:4475:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:13",
													"nodeType": "YulBlock",
													"src": "52:81:13",
													"statements": [
														{
															"nativeSrc": "62:65:13",
															"nodeType": "YulAssignment",
															"src": "62:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:13",
																		"nodeType": "YulLiteral",
																		"src": "84:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:13"
																},
																"nativeSrc": "73:54:13",
																"nodeType": "YulFunctionCall",
																"src": "73:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:13",
														"nodeType": "YulTypedName",
														"src": "34:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:13",
														"nodeType": "YulTypedName",
														"src": "44:7:13",
														"type": ""
													}
												],
												"src": "7:126:13"
											},
											{
												"body": {
													"nativeSrc": "184:51:13",
													"nodeType": "YulBlock",
													"src": "184:51:13",
													"statements": [
														{
															"nativeSrc": "194:35:13",
															"nodeType": "YulAssignment",
															"src": "194:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:13"
																},
																"nativeSrc": "205:24:13",
																"nodeType": "YulFunctionCall",
																"src": "205:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:13",
														"nodeType": "YulTypedName",
														"src": "166:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:13",
														"nodeType": "YulTypedName",
														"src": "176:7:13",
														"type": ""
													}
												],
												"src": "139:96:13"
											},
											{
												"body": {
													"nativeSrc": "306:53:13",
													"nodeType": "YulBlock",
													"src": "306:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:13"
																		},
																		"nativeSrc": "328:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:13"
																},
																"nativeSrc": "316:37:13",
																"nodeType": "YulFunctionCall",
																"src": "316:37:13"
															},
															"nativeSrc": "316:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:13",
														"nodeType": "YulTypedName",
														"src": "294:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:13",
														"nodeType": "YulTypedName",
														"src": "301:3:13",
														"type": ""
													}
												],
												"src": "241:118:13"
											},
											{
												"body": {
													"nativeSrc": "463:124:13",
													"nodeType": "YulBlock",
													"src": "463:124:13",
													"statements": [
														{
															"nativeSrc": "473:26:13",
															"nodeType": "YulAssignment",
															"src": "473:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:13",
																		"nodeType": "YulLiteral",
																		"src": "496:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:13"
																},
																"nativeSrc": "481:18:13",
																"nodeType": "YulFunctionCall",
																"src": "481:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:13",
																				"nodeType": "YulLiteral",
																				"src": "577:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:13"
																		},
																		"nativeSrc": "562:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:13"
																},
																"nativeSrc": "509:71:13",
																"nodeType": "YulFunctionCall",
																"src": "509:71:13"
															},
															"nativeSrc": "509:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:13",
														"nodeType": "YulTypedName",
														"src": "435:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:13",
														"nodeType": "YulTypedName",
														"src": "447:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:13",
														"nodeType": "YulTypedName",
														"src": "458:4:13",
														"type": ""
													}
												],
												"src": "365:222:13"
											},
											{
												"body": {
													"nativeSrc": "625:28:13",
													"nodeType": "YulBlock",
													"src": "625:28:13",
													"statements": [
														{
															"nativeSrc": "635:12:13",
															"nodeType": "YulAssignment",
															"src": "635:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "642:5:13",
																"nodeType": "YulIdentifier",
																"src": "642:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "635:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "635:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "593:60:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:13",
														"nodeType": "YulTypedName",
														"src": "611:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "621:3:13",
														"nodeType": "YulTypedName",
														"src": "621:3:13",
														"type": ""
													}
												],
												"src": "593:60:13"
											},
											{
												"body": {
													"nativeSrc": "719:82:13",
													"nodeType": "YulBlock",
													"src": "719:82:13",
													"statements": [
														{
															"nativeSrc": "729:66:13",
															"nodeType": "YulAssignment",
															"src": "729:66:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "787:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "787:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "769:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "769:17:13"
																				},
																				"nativeSrc": "769:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "769:24:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "760:8:13",
																			"nodeType": "YulIdentifier",
																			"src": "760:8:13"
																		},
																		"nativeSrc": "760:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "760:34:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "742:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "742:17:13"
																},
																"nativeSrc": "742:53:13",
																"nodeType": "YulFunctionCall",
																"src": "742:53:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "729:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "729:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "659:142:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "699:5:13",
														"nodeType": "YulTypedName",
														"src": "699:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "709:9:13",
														"nodeType": "YulTypedName",
														"src": "709:9:13",
														"type": ""
													}
												],
												"src": "659:142:13"
											},
											{
												"body": {
													"nativeSrc": "867:66:13",
													"nodeType": "YulBlock",
													"src": "867:66:13",
													"statements": [
														{
															"nativeSrc": "877:50:13",
															"nodeType": "YulAssignment",
															"src": "877:50:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "921:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "921:5:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "890:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "890:30:13"
																},
																"nativeSrc": "890:37:13",
																"nodeType": "YulFunctionCall",
																"src": "890:37:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "877:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "877:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "807:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "847:5:13",
														"nodeType": "YulTypedName",
														"src": "847:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "857:9:13",
														"nodeType": "YulTypedName",
														"src": "857:9:13",
														"type": ""
													}
												],
												"src": "807:126:13"
											},
											{
												"body": {
													"nativeSrc": "1014:66:13",
													"nodeType": "YulBlock",
													"src": "1014:66:13",
													"statements": [
														{
															"nativeSrc": "1024:50:13",
															"nodeType": "YulAssignment",
															"src": "1024:50:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1068:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1068:5:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "1037:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "1037:30:13"
																},
																"nativeSrc": "1037:37:13",
																"nodeType": "YulFunctionCall",
																"src": "1037:37:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1024:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "1024:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$1032_to_t_address",
												"nativeSrc": "939:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "994:5:13",
														"nodeType": "YulTypedName",
														"src": "994:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1004:9:13",
														"nodeType": "YulTypedName",
														"src": "1004:9:13",
														"type": ""
													}
												],
												"src": "939:141:13"
											},
											{
												"body": {
													"nativeSrc": "1166:81:13",
													"nodeType": "YulBlock",
													"src": "1166:81:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1183:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1183:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1234:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1234:5:13"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$1032_to_t_address",
																			"nativeSrc": "1188:45:13",
																			"nodeType": "YulIdentifier",
																			"src": "1188:45:13"
																		},
																		"nativeSrc": "1188:52:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1188:52:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1176:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1176:6:13"
																},
																"nativeSrc": "1176:65:13",
																"nodeType": "YulFunctionCall",
																"src": "1176:65:13"
															},
															"nativeSrc": "1176:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "1176:65:13"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$1032_to_t_address_fromStack",
												"nativeSrc": "1086:161:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1154:5:13",
														"nodeType": "YulTypedName",
														"src": "1154:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1161:3:13",
														"nodeType": "YulTypedName",
														"src": "1161:3:13",
														"type": ""
													}
												],
												"src": "1086:161:13"
											},
											{
												"body": {
													"nativeSrc": "1366:139:13",
													"nodeType": "YulBlock",
													"src": "1366:139:13",
													"statements": [
														{
															"nativeSrc": "1376:26:13",
															"nodeType": "YulAssignment",
															"src": "1376:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1388:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1388:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1399:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1399:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1384:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1384:3:13"
																},
																"nativeSrc": "1384:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1384:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1376:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1376:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1471:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1471:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1484:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1484:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1495:1:13",
																				"nodeType": "YulLiteral",
																				"src": "1495:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1480:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1480:3:13"
																		},
																		"nativeSrc": "1480:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1480:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$1032_to_t_address_fromStack",
																	"nativeSrc": "1412:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "1412:58:13"
																},
																"nativeSrc": "1412:86:13",
																"nodeType": "YulFunctionCall",
																"src": "1412:86:13"
															},
															"nativeSrc": "1412:86:13",
															"nodeType": "YulExpressionStatement",
															"src": "1412:86:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$1032__to_t_address__fromStack_reversed",
												"nativeSrc": "1253:252:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1338:9:13",
														"nodeType": "YulTypedName",
														"src": "1338:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1350:6:13",
														"nodeType": "YulTypedName",
														"src": "1350:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1361:4:13",
														"nodeType": "YulTypedName",
														"src": "1361:4:13",
														"type": ""
													}
												],
												"src": "1253:252:13"
											},
											{
												"body": {
													"nativeSrc": "1556:32:13",
													"nodeType": "YulBlock",
													"src": "1556:32:13",
													"statements": [
														{
															"nativeSrc": "1566:16:13",
															"nodeType": "YulAssignment",
															"src": "1566:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "1577:5:13",
																"nodeType": "YulIdentifier",
																"src": "1577:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1566:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "1566:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1511:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1538:5:13",
														"nodeType": "YulTypedName",
														"src": "1538:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1548:7:13",
														"nodeType": "YulTypedName",
														"src": "1548:7:13",
														"type": ""
													}
												],
												"src": "1511:77:13"
											},
											{
												"body": {
													"nativeSrc": "1659:53:13",
													"nodeType": "YulBlock",
													"src": "1659:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1676:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1676:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1699:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1699:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1681:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "1681:17:13"
																		},
																		"nativeSrc": "1681:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1681:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1669:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1669:6:13"
																},
																"nativeSrc": "1669:37:13",
																"nodeType": "YulFunctionCall",
																"src": "1669:37:13"
															},
															"nativeSrc": "1669:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "1669:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1594:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1647:5:13",
														"nodeType": "YulTypedName",
														"src": "1647:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1654:3:13",
														"nodeType": "YulTypedName",
														"src": "1654:3:13",
														"type": ""
													}
												],
												"src": "1594:118:13"
											},
											{
												"body": {
													"nativeSrc": "1816:124:13",
													"nodeType": "YulBlock",
													"src": "1816:124:13",
													"statements": [
														{
															"nativeSrc": "1826:26:13",
															"nodeType": "YulAssignment",
															"src": "1826:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1838:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1838:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1849:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1849:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1834:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1834:3:13"
																},
																"nativeSrc": "1834:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1834:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1826:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1826:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1906:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1906:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1919:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1919:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1930:1:13",
																				"nodeType": "YulLiteral",
																				"src": "1930:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1915:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1915:3:13"
																		},
																		"nativeSrc": "1915:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1915:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1862:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "1862:43:13"
																},
																"nativeSrc": "1862:71:13",
																"nodeType": "YulFunctionCall",
																"src": "1862:71:13"
															},
															"nativeSrc": "1862:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "1862:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1718:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1788:9:13",
														"nodeType": "YulTypedName",
														"src": "1788:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1800:6:13",
														"nodeType": "YulTypedName",
														"src": "1800:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1811:4:13",
														"nodeType": "YulTypedName",
														"src": "1811:4:13",
														"type": ""
													}
												],
												"src": "1718:222:13"
											},
											{
												"body": {
													"nativeSrc": "1986:35:13",
													"nodeType": "YulBlock",
													"src": "1986:35:13",
													"statements": [
														{
															"nativeSrc": "1996:19:13",
															"nodeType": "YulAssignment",
															"src": "1996:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2012:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2006:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2006:5:13"
																},
																"nativeSrc": "2006:9:13",
																"nodeType": "YulFunctionCall",
																"src": "2006:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1996:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1996:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1946:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1979:6:13",
														"nodeType": "YulTypedName",
														"src": "1979:6:13",
														"type": ""
													}
												],
												"src": "1946:75:13"
											},
											{
												"body": {
													"nativeSrc": "2116:28:13",
													"nodeType": "YulBlock",
													"src": "2116:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2133:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2133:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2136:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2136:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2126:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2126:6:13"
																},
																"nativeSrc": "2126:12:13",
																"nodeType": "YulFunctionCall",
																"src": "2126:12:13"
															},
															"nativeSrc": "2126:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "2126:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "2027:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "2027:117:13"
											},
											{
												"body": {
													"nativeSrc": "2239:28:13",
													"nodeType": "YulBlock",
													"src": "2239:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2256:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2256:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2259:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2259:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2249:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2249:6:13"
																},
																"nativeSrc": "2249:12:13",
																"nodeType": "YulFunctionCall",
																"src": "2249:12:13"
															},
															"nativeSrc": "2249:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "2249:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "2150:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "2150:117:13"
											},
											{
												"body": {
													"nativeSrc": "2316:79:13",
													"nodeType": "YulBlock",
													"src": "2316:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2373:16:13",
																"nodeType": "YulBlock",
																"src": "2373:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2382:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2382:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2385:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2385:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2375:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2375:6:13"
																			},
																			"nativeSrc": "2375:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2375:12:13"
																		},
																		"nativeSrc": "2375:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2375:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2339:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2339:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2364:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "2364:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2346:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "2346:17:13"
																				},
																				"nativeSrc": "2346:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2346:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2336:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "2336:2:13"
																		},
																		"nativeSrc": "2336:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2336:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2329:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2329:6:13"
																},
																"nativeSrc": "2329:43:13",
																"nodeType": "YulFunctionCall",
																"src": "2329:43:13"
															},
															"nativeSrc": "2326:63:13",
															"nodeType": "YulIf",
															"src": "2326:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2273:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2309:5:13",
														"nodeType": "YulTypedName",
														"src": "2309:5:13",
														"type": ""
													}
												],
												"src": "2273:122:13"
											},
											{
												"body": {
													"nativeSrc": "2453:87:13",
													"nodeType": "YulBlock",
													"src": "2453:87:13",
													"statements": [
														{
															"nativeSrc": "2463:29:13",
															"nodeType": "YulAssignment",
															"src": "2463:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2485:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2485:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2472:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "2472:12:13"
																},
																"nativeSrc": "2472:20:13",
																"nodeType": "YulFunctionCall",
																"src": "2472:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2463:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2463:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2528:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2528:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2501:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "2501:26:13"
																},
																"nativeSrc": "2501:33:13",
																"nodeType": "YulFunctionCall",
																"src": "2501:33:13"
															},
															"nativeSrc": "2501:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "2501:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2401:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2431:6:13",
														"nodeType": "YulTypedName",
														"src": "2431:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2439:3:13",
														"nodeType": "YulTypedName",
														"src": "2439:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2447:5:13",
														"nodeType": "YulTypedName",
														"src": "2447:5:13",
														"type": ""
													}
												],
												"src": "2401:139:13"
											},
											{
												"body": {
													"nativeSrc": "2612:263:13",
													"nodeType": "YulBlock",
													"src": "2612:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2658:83:13",
																"nodeType": "YulBlock",
																"src": "2658:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2660:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "2660:77:13"
																			},
																			"nativeSrc": "2660:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2660:79:13"
																		},
																		"nativeSrc": "2660:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2660:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2633:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2633:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2642:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2642:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2629:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2629:3:13"
																		},
																		"nativeSrc": "2629:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2629:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2654:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2654:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2625:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2625:3:13"
																},
																"nativeSrc": "2625:32:13",
																"nodeType": "YulFunctionCall",
																"src": "2625:32:13"
															},
															"nativeSrc": "2622:119:13",
															"nodeType": "YulIf",
															"src": "2622:119:13"
														},
														{
															"nativeSrc": "2751:117:13",
															"nodeType": "YulBlock",
															"src": "2751:117:13",
															"statements": [
																{
																	"nativeSrc": "2766:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2766:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2780:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2780:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2770:6:13",
																			"nodeType": "YulTypedName",
																			"src": "2770:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2795:63:13",
																	"nodeType": "YulAssignment",
																	"src": "2795:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2830:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "2830:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2841:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2841:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2826:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2826:3:13"
																				},
																				"nativeSrc": "2826:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2826:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2850:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2850:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2805:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "2805:20:13"
																		},
																		"nativeSrc": "2805:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2805:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2795:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "2795:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2546:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2582:9:13",
														"nodeType": "YulTypedName",
														"src": "2582:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2593:7:13",
														"nodeType": "YulTypedName",
														"src": "2593:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2605:6:13",
														"nodeType": "YulTypedName",
														"src": "2605:6:13",
														"type": ""
													}
												],
												"src": "2546:329:13"
											},
											{
												"body": {
													"nativeSrc": "2924:79:13",
													"nodeType": "YulBlock",
													"src": "2924:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2981:16:13",
																"nodeType": "YulBlock",
																"src": "2981:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2990:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2990:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2993:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2993:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2983:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2983:6:13"
																			},
																			"nativeSrc": "2983:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2983:12:13"
																		},
																		"nativeSrc": "2983:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2983:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2947:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2947:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2972:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "2972:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2954:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "2954:17:13"
																				},
																				"nativeSrc": "2954:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2954:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2944:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "2944:2:13"
																		},
																		"nativeSrc": "2944:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2944:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2937:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2937:6:13"
																},
																"nativeSrc": "2937:43:13",
																"nodeType": "YulFunctionCall",
																"src": "2937:43:13"
															},
															"nativeSrc": "2934:63:13",
															"nodeType": "YulIf",
															"src": "2934:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2881:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2917:5:13",
														"nodeType": "YulTypedName",
														"src": "2917:5:13",
														"type": ""
													}
												],
												"src": "2881:122:13"
											},
											{
												"body": {
													"nativeSrc": "3061:87:13",
													"nodeType": "YulBlock",
													"src": "3061:87:13",
													"statements": [
														{
															"nativeSrc": "3071:29:13",
															"nodeType": "YulAssignment",
															"src": "3071:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3093:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3093:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3080:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "3080:12:13"
																},
																"nativeSrc": "3080:20:13",
																"nodeType": "YulFunctionCall",
																"src": "3080:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3071:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3071:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3136:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3136:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3109:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "3109:26:13"
																},
																"nativeSrc": "3109:33:13",
																"nodeType": "YulFunctionCall",
																"src": "3109:33:13"
															},
															"nativeSrc": "3109:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "3109:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3009:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3039:6:13",
														"nodeType": "YulTypedName",
														"src": "3039:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3047:3:13",
														"nodeType": "YulTypedName",
														"src": "3047:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3055:5:13",
														"nodeType": "YulTypedName",
														"src": "3055:5:13",
														"type": ""
													}
												],
												"src": "3009:139:13"
											},
											{
												"body": {
													"nativeSrc": "3237:391:13",
													"nodeType": "YulBlock",
													"src": "3237:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3283:83:13",
																"nodeType": "YulBlock",
																"src": "3283:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3285:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "3285:77:13"
																			},
																			"nativeSrc": "3285:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3285:79:13"
																		},
																		"nativeSrc": "3285:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3285:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3258:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3258:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3267:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3267:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3254:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3254:3:13"
																		},
																		"nativeSrc": "3254:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3254:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3279:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3279:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3250:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3250:3:13"
																},
																"nativeSrc": "3250:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3250:32:13"
															},
															"nativeSrc": "3247:119:13",
															"nodeType": "YulIf",
															"src": "3247:119:13"
														},
														{
															"nativeSrc": "3376:117:13",
															"nodeType": "YulBlock",
															"src": "3376:117:13",
															"statements": [
																{
																	"nativeSrc": "3391:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3391:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3405:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3405:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3395:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3395:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3420:63:13",
																	"nodeType": "YulAssignment",
																	"src": "3420:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3455:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3455:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3466:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3466:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3451:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3451:3:13"
																				},
																				"nativeSrc": "3451:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3451:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3475:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3475:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3430:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "3430:20:13"
																		},
																		"nativeSrc": "3430:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3430:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3420:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3420:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3503:118:13",
															"nodeType": "YulBlock",
															"src": "3503:118:13",
															"statements": [
																{
																	"nativeSrc": "3518:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3518:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3532:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3532:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3522:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3522:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3548:63:13",
																	"nodeType": "YulAssignment",
																	"src": "3548:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3583:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3583:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3594:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3594:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3579:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3579:3:13"
																				},
																				"nativeSrc": "3579:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3579:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3603:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3603:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3558:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "3558:20:13"
																		},
																		"nativeSrc": "3558:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3558:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3548:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3548:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3154:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3199:9:13",
														"nodeType": "YulTypedName",
														"src": "3199:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3210:7:13",
														"nodeType": "YulTypedName",
														"src": "3210:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3222:6:13",
														"nodeType": "YulTypedName",
														"src": "3222:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3230:6:13",
														"nodeType": "YulTypedName",
														"src": "3230:6:13",
														"type": ""
													}
												],
												"src": "3154:474:13"
											},
											{
												"body": {
													"nativeSrc": "3697:80:13",
													"nodeType": "YulBlock",
													"src": "3697:80:13",
													"statements": [
														{
															"nativeSrc": "3707:22:13",
															"nodeType": "YulAssignment",
															"src": "3707:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3722:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3722:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3716:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3716:5:13"
																},
																"nativeSrc": "3716:13:13",
																"nodeType": "YulFunctionCall",
																"src": "3716:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3707:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3707:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3765:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3765:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3738:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "3738:26:13"
																},
																"nativeSrc": "3738:33:13",
																"nodeType": "YulFunctionCall",
																"src": "3738:33:13"
															},
															"nativeSrc": "3738:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "3738:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "3634:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3675:6:13",
														"nodeType": "YulTypedName",
														"src": "3675:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3683:3:13",
														"nodeType": "YulTypedName",
														"src": "3683:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3691:5:13",
														"nodeType": "YulTypedName",
														"src": "3691:5:13",
														"type": ""
													}
												],
												"src": "3634:143:13"
											},
											{
												"body": {
													"nativeSrc": "3860:274:13",
													"nodeType": "YulBlock",
													"src": "3860:274:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3906:83:13",
																"nodeType": "YulBlock",
																"src": "3906:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3908:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "3908:77:13"
																			},
																			"nativeSrc": "3908:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3908:79:13"
																		},
																		"nativeSrc": "3908:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3908:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3881:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3881:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3890:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3890:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3877:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3877:3:13"
																		},
																		"nativeSrc": "3877:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3877:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3902:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3902:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3873:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3873:3:13"
																},
																"nativeSrc": "3873:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3873:32:13"
															},
															"nativeSrc": "3870:119:13",
															"nodeType": "YulIf",
															"src": "3870:119:13"
														},
														{
															"nativeSrc": "3999:128:13",
															"nodeType": "YulBlock",
															"src": "3999:128:13",
															"statements": [
																{
																	"nativeSrc": "4014:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4014:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4028:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4028:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4018:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4018:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4043:74:13",
																	"nodeType": "YulAssignment",
																	"src": "4043:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4089:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4089:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4100:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4100:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4085:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4085:3:13"
																				},
																				"nativeSrc": "4085:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4085:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4109:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4109:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "4053:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "4053:31:13"
																		},
																		"nativeSrc": "4053:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4053:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4043:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4043:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "3783:351:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3830:9:13",
														"nodeType": "YulTypedName",
														"src": "3830:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3841:7:13",
														"nodeType": "YulTypedName",
														"src": "3841:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3853:6:13",
														"nodeType": "YulTypedName",
														"src": "3853:6:13",
														"type": ""
													}
												],
												"src": "3783:351:13"
											},
											{
												"body": {
													"nativeSrc": "4266:206:13",
													"nodeType": "YulBlock",
													"src": "4266:206:13",
													"statements": [
														{
															"nativeSrc": "4276:26:13",
															"nodeType": "YulAssignment",
															"src": "4276:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4288:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4288:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4299:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4299:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4284:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4284:3:13"
																},
																"nativeSrc": "4284:18:13",
																"nodeType": "YulFunctionCall",
																"src": "4284:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4276:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4276:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4356:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4356:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4369:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4369:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4380:1:13",
																				"nodeType": "YulLiteral",
																				"src": "4380:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4365:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4365:3:13"
																		},
																		"nativeSrc": "4365:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4365:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4312:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "4312:43:13"
																},
																"nativeSrc": "4312:71:13",
																"nodeType": "YulFunctionCall",
																"src": "4312:71:13"
															},
															"nativeSrc": "4312:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "4312:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4437:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4437:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4450:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4450:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4461:2:13",
																				"nodeType": "YulLiteral",
																				"src": "4461:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4446:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4446:3:13"
																		},
																		"nativeSrc": "4446:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4446:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4393:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "4393:43:13"
																},
																"nativeSrc": "4393:72:13",
																"nodeType": "YulFunctionCall",
																"src": "4393:72:13"
															},
															"nativeSrc": "4393:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "4393:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "4140:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4230:9:13",
														"nodeType": "YulTypedName",
														"src": "4230:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4242:6:13",
														"nodeType": "YulTypedName",
														"src": "4242:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4250:6:13",
														"nodeType": "YulTypedName",
														"src": "4250:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4261:4:13",
														"nodeType": "YulTypedName",
														"src": "4261:4:13",
														"type": ""
													}
												],
												"src": "4140:332:13"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$1032_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$1032_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$1032_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$1032__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$1032_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1525": [
									{
										"length": 32,
										"start": 316
									},
									{
										"length": 32,
										"start": 353
									},
									{
										"length": 32,
										"start": 655
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610060575f3560e01c8063715018a6146100645780638da5cb5b1461006e578063b2016bd41461008c578063b69ef8a8146100aa578063f2fde38b146100c8578063f3fef3a3146100e4575b5f5ffd5b61006c610100565b005b610076610113565b604051610083919061057f565b60405180910390f35b61009461013a565b6040516100a191906105f3565b60405180910390f35b6100b261015e565b6040516100bf9190610624565b60405180910390f35b6100e260048036038101906100dd919061066b565b6101fc565b005b6100fe60048036038101906100f991906106c0565b610280565b005b6101086102d7565b6101115f61035e565b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016101b8919061057f565b602060405180830381865afa1580156101d3573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101f79190610712565b905090565b6102046102d7565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610274575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161026b919061057f565b60405180910390fd5b61027d8161035e565b50565b6102886102d7565b6102d382827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661041f9092919063ffffffff16565b5050565b6102df61049e565b73ffffffffffffffffffffffffffffffffffffffff166102fd610113565b73ffffffffffffffffffffffffffffffffffffffff161461035c5761032061049e565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610353919061057f565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610499838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb858560405160240161045292919061073d565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506104a5565b505050565b5f33905090565b5f5f60205f8451602086015f885af1806104c4576040513d5f823e3d81fd5b3d92505f519150505f82146104dd5760018114156104f8565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561053a57836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610531919061057f565b60405180910390fd5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61056982610540565b9050919050565b6105798161055f565b82525050565b5f6020820190506105925f830184610570565b92915050565b5f819050919050565b5f6105bb6105b66105b184610540565b610598565b610540565b9050919050565b5f6105cc826105a1565b9050919050565b5f6105dd826105c2565b9050919050565b6105ed816105d3565b82525050565b5f6020820190506106065f8301846105e4565b92915050565b5f819050919050565b61061e8161060c565b82525050565b5f6020820190506106375f830184610615565b92915050565b5f5ffd5b61064a8161055f565b8114610654575f5ffd5b50565b5f8135905061066581610641565b92915050565b5f602082840312156106805761067f61063d565b5b5f61068d84828501610657565b91505092915050565b61069f8161060c565b81146106a9575f5ffd5b50565b5f813590506106ba81610696565b92915050565b5f5f604083850312156106d6576106d561063d565b5b5f6106e385828601610657565b92505060206106f4858286016106ac565b9150509250929050565b5f8151905061070c81610696565b92915050565b5f602082840312156107275761072661063d565b5b5f610734848285016106fe565b91505092915050565b5f6040820190506107505f830185610570565b61075d6020830184610615565b939250505056fea2646970667358221220c1198753c4d47eaa95c0862639943fda4ce251fcbe9ffe29421da0c40b3fd0c264736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0xB2016BD4 EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0xB69EF8A8 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0xF3FEF3A3 EQ PUSH2 0xE4 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x6C PUSH2 0x100 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x76 PUSH2 0x113 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x94 PUSH2 0x13A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x5F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB2 PUSH2 0x15E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x624 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x66B JUMP JUMPDEST PUSH2 0x1FC JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0x6C0 JUMP JUMPDEST PUSH2 0x280 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x108 PUSH2 0x2D7 JUMP JUMPDEST PUSH2 0x111 PUSH0 PUSH2 0x35E JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B8 SWAP2 SWAP1 PUSH2 0x57F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D3 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x712 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x2D7 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x274 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x27D DUP2 PUSH2 0x35E JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x288 PUSH2 0x2D7 JUMP JUMPDEST PUSH2 0x2D3 DUP3 DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x41F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x2DF PUSH2 0x49E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2FD PUSH2 0x113 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x35C JUMPI PUSH2 0x320 PUSH2 0x49E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x499 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x452 SWAP3 SWAP2 SWAP1 PUSH2 0x73D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x4A5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x4C4 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x4DD JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x4F8 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x53A JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x531 SWAP2 SWAP1 PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x569 DUP3 PUSH2 0x540 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x579 DUP2 PUSH2 0x55F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x592 PUSH0 DUP4 ADD DUP5 PUSH2 0x570 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5BB PUSH2 0x5B6 PUSH2 0x5B1 DUP5 PUSH2 0x540 JUMP JUMPDEST PUSH2 0x598 JUMP JUMPDEST PUSH2 0x540 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5CC DUP3 PUSH2 0x5A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5DD DUP3 PUSH2 0x5C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5ED DUP2 PUSH2 0x5D3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x606 PUSH0 DUP4 ADD DUP5 PUSH2 0x5E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x61E DUP2 PUSH2 0x60C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x637 PUSH0 DUP4 ADD DUP5 PUSH2 0x615 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x64A DUP2 PUSH2 0x55F JUMP JUMPDEST DUP2 EQ PUSH2 0x654 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x665 DUP2 PUSH2 0x641 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x680 JUMPI PUSH2 0x67F PUSH2 0x63D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x68D DUP5 DUP3 DUP6 ADD PUSH2 0x657 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x69F DUP2 PUSH2 0x60C JUMP JUMPDEST DUP2 EQ PUSH2 0x6A9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6BA DUP2 PUSH2 0x696 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6D6 JUMPI PUSH2 0x6D5 PUSH2 0x63D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6E3 DUP6 DUP3 DUP7 ADD PUSH2 0x657 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x6F4 DUP6 DUP3 DUP7 ADD PUSH2 0x6AC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x70C DUP2 PUSH2 0x696 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x727 JUMPI PUSH2 0x726 PUSH2 0x63D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x734 DUP5 DUP3 DUP6 ADD PUSH2 0x6FE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x750 PUSH0 DUP4 ADD DUP6 PUSH2 0x570 JUMP JUMPDEST PUSH2 0x75D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x615 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 NOT DUP8 MSTORE8 0xC4 0xD4 PUSH31 0xAA95C0862639943FDA4CE251FCBE9FFE29421DA0C40B3FD0C264736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "481:1022:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;550:39:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1386:115;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1188:122:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;550:39:12:-;;;:::o;1386:115::-;1428:7;1454:15;:25;;;1488:4;1454:40;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1447:47;;1386:115;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1188:122:12:-;1531:13:0;:11;:13::i;:::-;1263:40:12::1;1292:2;1296:6;1263:15;:28;;;;:40;;;;;:::i;:::-;1188:122:::0;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1219:160:9:-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;656:96:10:-;709:7;735:10;728:17;;656:96;:::o;7686:720:9:-;7766:18;7794:19;7932:4;7929:1;7922:4;7916:11;7909:4;7903;7899:15;7896:1;7889:5;7882;7877:60;7989:7;7979:176;;8033:4;8027:11;8078:16;8075:1;8070:3;8055:40;8124:16;8119:3;8112:29;7979:176;8182:16;8168:30;;8232:1;8226:8;8211:23;;7848:396;8272:1;8258:10;:15;:68;;8325:1;8310:11;:16;;8258:68;;;8306:1;8284:5;8276:26;;;:31;8258:68;8254:146;;;8382:5;8349:40;;;;;;;;;;;:::i;:::-;;;;;;;;8254:146;7756:650;;7686:720;;:::o;7:126:13:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:60::-;621:3;642:5;635:12;;593:60;;;:::o;659:142::-;709:9;742:53;760:34;769:24;787:5;769:24;:::i;:::-;760:34;:::i;:::-;742:53;:::i;:::-;729:66;;659:142;;;:::o;807:126::-;857:9;890:37;921:5;890:37;:::i;:::-;877:50;;807:126;;;:::o;939:141::-;1004:9;1037:37;1068:5;1037:37;:::i;:::-;1024:50;;939:141;;;:::o;1086:161::-;1188:52;1234:5;1188:52;:::i;:::-;1183:3;1176:65;1086:161;;:::o;1253:252::-;1361:4;1399:2;1388:9;1384:18;1376:26;;1412:86;1495:1;1484:9;1480:17;1471:6;1412:86;:::i;:::-;1253:252;;;;:::o;1511:77::-;1548:7;1577:5;1566:16;;1511:77;;;:::o;1594:118::-;1681:24;1699:5;1681:24;:::i;:::-;1676:3;1669:37;1594:118;;:::o;1718:222::-;1811:4;1849:2;1838:9;1834:18;1826:26;;1862:71;1930:1;1919:9;1915:17;1906:6;1862:71;:::i;:::-;1718:222;;;;:::o;2027:117::-;2136:1;2133;2126:12;2273:122;2346:24;2364:5;2346:24;:::i;:::-;2339:5;2336:35;2326:63;;2385:1;2382;2375:12;2326:63;2273:122;:::o;2401:139::-;2447:5;2485:6;2472:20;2463:29;;2501:33;2528:5;2501:33;:::i;:::-;2401:139;;;;:::o;2546:329::-;2605:6;2654:2;2642:9;2633:7;2629:23;2625:32;2622:119;;;2660:79;;:::i;:::-;2622:119;2780:1;2805:53;2850:7;2841:6;2830:9;2826:22;2805:53;:::i;:::-;2795:63;;2751:117;2546:329;;;;:::o;2881:122::-;2954:24;2972:5;2954:24;:::i;:::-;2947:5;2944:35;2934:63;;2993:1;2990;2983:12;2934:63;2881:122;:::o;3009:139::-;3055:5;3093:6;3080:20;3071:29;;3109:33;3136:5;3109:33;:::i;:::-;3009:139;;;;:::o;3154:474::-;3222:6;3230;3279:2;3267:9;3258:7;3254:23;3250:32;3247:119;;;3285:79;;:::i;:::-;3247:119;3405:1;3430:53;3475:7;3466:6;3455:9;3451:22;3430:53;:::i;:::-;3420:63;;3376:117;3532:2;3558:53;3603:7;3594:6;3583:9;3579:22;3558:53;:::i;:::-;3548:63;;3503:118;3154:474;;;;;:::o;3634:143::-;3691:5;3722:6;3716:13;3707:22;;3738:33;3765:5;3738:33;:::i;:::-;3634:143;;;;:::o;3783:351::-;3853:6;3902:2;3890:9;3881:7;3877:23;3873:32;3870:119;;;3908:79;;:::i;:::-;3870:119;4028:1;4053:64;4109:7;4100:6;4089:9;4085:22;4053:64;:::i;:::-;4043:74;;3999:128;3783:351;;;;:::o;4140:332::-;4261:4;4299:2;4288:9;4284:18;4276:26;;4312:71;4380:1;4369:9;4365:17;4356:6;4312:71;:::i;:::-;4393:72;4461:2;4450:9;4446:18;4437:6;4393:72;:::i;:::-;4140:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "389200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balance()": "infinite",
								"collateralToken()": "infinite",
								"owner()": "2514",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite",
								"withdraw(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 481,
									"end": 1503,
									"name": "PUSH",
									"source": 12,
									"value": "A0"
								},
								{
									"begin": 481,
									"end": 1503,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 481,
									"end": 1503,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 829,
									"end": 1032,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 829,
									"end": 1032,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 829,
									"end": 1032,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 829,
									"end": 1032,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 829,
									"end": 1032,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 829,
									"end": 1032,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 829,
									"end": 1032,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 829,
									"end": 1032,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 829,
									"end": 1032,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 829,
									"end": 1032,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 829,
									"end": 1032,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 829,
									"end": 1032,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 829,
									"end": 1032,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 829,
									"end": 1032,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 829,
									"end": 1032,
									"name": "CODESIZE",
									"source": 12
								},
								{
									"begin": 829,
									"end": 1032,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 829,
									"end": 1032,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 829,
									"end": 1032,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 829,
									"end": 1032,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 829,
									"end": 1032,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 829,
									"end": 1032,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 829,
									"end": 1032,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 829,
									"end": 1032,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 829,
									"end": 1032,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 829,
									"end": 1032,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 829,
									"end": 1032,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 829,
									"end": 1032,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 829,
									"end": 1032,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 829,
									"end": 1032,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 829,
									"end": 1032,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 829,
									"end": 1032,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 829,
									"end": 1032,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 829,
									"end": 1032,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 829,
									"end": 1032,
									"name": "tag",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 829,
									"end": 1032,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 891,
									"end": 897,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 945,
									"end": 946,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 917,
									"end": 947,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 917,
									"end": 947,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 917,
									"end": 933,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 917,
									"end": 947,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 917,
									"end": 947,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 917,
									"end": 947,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 909,
									"end": 973,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 909,
									"end": 973,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 909,
									"end": 973,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 909,
									"end": 973,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 909,
									"end": 973,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 909,
									"end": 973,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 909,
									"end": 973,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 909,
									"end": 973,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 909,
									"end": 973,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 909,
									"end": 973,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 909,
									"end": 973,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 909,
									"end": 973,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 909,
									"end": 973,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 909,
									"end": 973,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 909,
									"end": 973,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 909,
									"end": 973,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 909,
									"end": 973,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 909,
									"end": 973,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 909,
									"end": 973,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 909,
									"end": 973,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 909,
									"end": 973,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 909,
									"end": 973,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 909,
									"end": 973,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 909,
									"end": 973,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1008,
									"end": 1024,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 983,
									"end": 1025,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 983,
									"end": 1025,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 983,
									"end": 1025,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 983,
									"end": 1025,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 983,
									"end": 1025,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 983,
									"end": 1025,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 983,
									"end": 1025,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 983,
									"end": 1025,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 983,
									"end": 1025,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 983,
									"end": 1025,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 829,
									"end": 1032,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 829,
									"end": 1032,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 481,
									"end": 1503,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 481,
									"end": 1503,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 13,
									"value": "19"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "19"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "tag",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "47"
								},
								{
									"begin": 1463,
									"end": 1468,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 1445,
									"end": 1469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "tag",
									"source": 13,
									"value": "47"
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1440,
									"end": 1443,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1433,
									"end": 1470,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1358,
									"end": 1476,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "tag",
									"source": 13,
									"value": "9"
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1575,
									"end": 1579,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1613,
									"end": 1615,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1602,
									"end": 1611,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1598,
									"end": 1616,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "49"
								},
								{
									"begin": 1694,
									"end": 1695,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1683,
									"end": 1692,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1679,
									"end": 1696,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1670,
									"end": 1676,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 1626,
									"end": 1697,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "tag",
									"source": 13,
									"value": "49"
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1482,
									"end": 1704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1710,
									"end": 1879,
									"name": "tag",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 1710,
									"end": 1879,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1794,
									"end": 1805,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1828,
									"end": 1834,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1823,
									"end": 1826,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1816,
									"end": 1835,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1868,
									"end": 1872,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1863,
									"end": 1866,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1859,
									"end": 1873,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1844,
									"end": 1873,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1844,
									"end": 1873,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1710,
									"end": 1879,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1710,
									"end": 1879,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1710,
									"end": 1879,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1710,
									"end": 1879,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1710,
									"end": 1879,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1885,
									"end": 2056,
									"name": "tag",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 1885,
									"end": 2056,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2025,
									"end": 2048,
									"name": "PUSH",
									"source": 13,
									"value": "496E76616C696420746F6B656E20616464726573730000000000000000000000"
								},
								{
									"begin": 2021,
									"end": 2022,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2013,
									"end": 2019,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2002,
									"end": 2049,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1885,
									"end": 2056,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1885,
									"end": 2056,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2062,
									"end": 2428,
									"name": "tag",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 2062,
									"end": 2428,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2204,
									"end": 2207,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2225,
									"end": 2292,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "53"
								},
								{
									"begin": 2289,
									"end": 2291,
									"name": "PUSH",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 2284,
									"end": 2287,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2225,
									"end": 2292,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 2225,
									"end": 2292,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2225,
									"end": 2292,
									"name": "tag",
									"source": 13,
									"value": "53"
								},
								{
									"begin": 2225,
									"end": 2292,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2218,
									"end": 2292,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2218,
									"end": 2292,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2301,
									"end": 2394,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "54"
								},
								{
									"begin": 2390,
									"end": 2393,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2301,
									"end": 2394,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 2301,
									"end": 2394,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2301,
									"end": 2394,
									"name": "tag",
									"source": 13,
									"value": "54"
								},
								{
									"begin": 2301,
									"end": 2394,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2419,
									"end": 2421,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2414,
									"end": 2417,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2410,
									"end": 2422,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2403,
									"end": 2422,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2403,
									"end": 2422,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2062,
									"end": 2428,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2062,
									"end": 2428,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2062,
									"end": 2428,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2062,
									"end": 2428,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2434,
									"end": 2853,
									"name": "tag",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 2434,
									"end": 2853,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2600,
									"end": 2604,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2638,
									"end": 2640,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2627,
									"end": 2636,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2623,
									"end": 2641,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2615,
									"end": 2641,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2615,
									"end": 2641,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2687,
									"end": 2696,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2681,
									"end": 2685,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2677,
									"end": 2697,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 2673,
									"end": 2674,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2662,
									"end": 2671,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2658,
									"end": 2675,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2651,
									"end": 2698,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2715,
									"end": 2846,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 2841,
									"end": 2845,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2715,
									"end": 2846,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 2715,
									"end": 2846,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2715,
									"end": 2846,
									"name": "tag",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 2715,
									"end": 2846,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2707,
									"end": 2846,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2707,
									"end": 2846,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2434,
									"end": 2853,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2434,
									"end": 2853,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2434,
									"end": 2853,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2434,
									"end": 2853,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 481,
									"end": 1503,
									"name": "tag",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 481,
									"end": 1503,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 481,
									"end": 1503,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 481,
									"end": 1503,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 481,
									"end": 1503,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 481,
									"end": 1503,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 481,
									"end": 1503,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 481,
									"end": 1503,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 481,
									"end": 1503,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 481,
									"end": 1503,
									"name": "ASSIGNIMMUTABLE",
									"source": 12,
									"value": "1525"
								},
								{
									"begin": 481,
									"end": 1503,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 481,
									"end": 1503,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 481,
									"end": 1503,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c1198753c4d47eaa95c0862639943fda4ce251fcbe9ffe29421da0c40b3fd0c264736f6c634300081d0033",
									".code": [
										{
											"begin": 481,
											"end": 1503,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "PUSH",
											"source": 12,
											"value": "715018A6"
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "PUSH",
											"source": 12,
											"value": "8DA5CB5B"
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "PUSH",
											"source": 12,
											"value": "B2016BD4"
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "PUSH",
											"source": 12,
											"value": "B69EF8A8"
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "PUSH",
											"source": 12,
											"value": "F2FDE38B"
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "PUSH",
											"source": 12,
											"value": "F3FEF3A3"
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 481,
											"end": 1503,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 550,
											"end": 589,
											"name": "tag",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 550,
											"end": 589,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 550,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 550,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 550,
											"end": 589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 550,
											"end": 589,
											"name": "tag",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 550,
											"end": 589,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 550,
											"end": 589,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 550,
											"end": 589,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 550,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 550,
											"end": 589,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 550,
											"end": 589,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 550,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 550,
											"end": 589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 550,
											"end": 589,
											"name": "tag",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 550,
											"end": 589,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 550,
											"end": 589,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 550,
											"end": 589,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 550,
											"end": 589,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 550,
											"end": 589,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 550,
											"end": 589,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 550,
											"end": 589,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 550,
											"end": 589,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1386,
											"end": 1501,
											"name": "tag",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 1386,
											"end": 1501,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1386,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 1386,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1386,
											"end": 1501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1386,
											"end": 1501,
											"name": "tag",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 1386,
											"end": 1501,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1386,
											"end": 1501,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1386,
											"end": 1501,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1386,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 1386,
											"end": 1501,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1386,
											"end": 1501,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1386,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 1386,
											"end": 1501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1386,
											"end": 1501,
											"name": "tag",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 1386,
											"end": 1501,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1386,
											"end": 1501,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1386,
											"end": 1501,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1386,
											"end": 1501,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1386,
											"end": 1501,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1386,
											"end": 1501,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1386,
											"end": 1501,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1386,
											"end": 1501,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1310,
											"name": "tag",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 1188,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1188,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 1188,
											"end": 1310,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1188,
											"end": 1310,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1188,
											"end": 1310,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1188,
											"end": 1310,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1188,
											"end": 1310,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1188,
											"end": 1310,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1188,
											"end": 1310,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1188,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 1188,
											"end": 1310,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1188,
											"end": 1310,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1188,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 1188,
											"end": 1310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1188,
											"end": 1310,
											"name": "tag",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 1188,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1188,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 1188,
											"end": 1310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1188,
											"end": 1310,
											"name": "tag",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 1188,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1188,
											"end": 1310,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 550,
											"end": 589,
											"name": "tag",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 550,
											"end": 589,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 550,
											"end": 589,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1525"
										},
										{
											"begin": 550,
											"end": 589,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 550,
											"end": 589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1386,
											"end": 1501,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1386,
											"end": 1501,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1435,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1469,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1525"
										},
										{
											"begin": 1454,
											"end": 1479,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1454,
											"end": 1479,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1479,
											"name": "PUSH",
											"source": 12,
											"value": "70A08231"
										},
										{
											"begin": 1488,
											"end": 1492,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 1454,
											"end": 1494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "tag",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "tag",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 1454,
											"end": 1494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "tag",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 1454,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1447,
											"end": 1494,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1447,
											"end": 1494,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1386,
											"end": 1501,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1386,
											"end": 1501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1310,
											"name": "tag",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 1188,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1263,
											"end": 1303,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 1292,
											"end": 1294,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1296,
											"end": 1302,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1263,
											"end": 1278,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1525"
										},
										{
											"begin": 1263,
											"end": 1291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1263,
											"end": 1291,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1263,
											"end": 1291,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 1263,
											"end": 1291,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1263,
											"end": 1303,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1263,
											"end": 1303,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1263,
											"end": 1303,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1263,
											"end": 1303,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1263,
											"end": 1303,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1263,
											"end": 1303,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1263,
											"end": 1303,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 1263,
											"end": 1303,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1188,
											"end": 1310,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1188,
											"end": 1310,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1188,
											"end": 1310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7766,
											"end": 7784,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7794,
											"end": 7813,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7932,
											"end": 7936,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7929,
											"end": 7930,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7922,
											"end": 7926,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7916,
											"end": 7927,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7909,
											"end": 7913,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7903,
											"end": 7907,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7896,
											"end": 7897,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7889,
											"end": 7894,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 7882,
											"end": 7887,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 7877,
											"end": 7937,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 7989,
											"end": 7996,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8033,
											"end": 8037,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8027,
											"end": 8038,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8078,
											"end": 8094,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 8075,
											"end": 8076,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8070,
											"end": 8073,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8055,
											"end": 8095,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8140,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 8119,
											"end": 8122,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8182,
											"end": 8198,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 8168,
											"end": 8198,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8168,
											"end": 8198,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8232,
											"end": 8233,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8226,
											"end": 8234,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8211,
											"end": 8234,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8211,
											"end": 8234,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7848,
											"end": 8244,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8272,
											"end": 8273,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8258,
											"end": 8268,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8258,
											"end": 8273,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8325,
											"end": 8326,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 8310,
											"end": 8321,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8310,
											"end": 8326,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 8310,
											"end": 8326,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8306,
											"end": 8307,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8284,
											"end": 8289,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 8276,
											"end": 8307,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8382,
											"end": 8387,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 9,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 8349,
											"end": 8389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7756,
											"end": 8406,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7756,
											"end": 8406,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7686,
											"end": 8406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 593,
											"end": 653,
											"name": "tag",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 593,
											"end": 653,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 621,
											"end": 624,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 642,
											"end": 647,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 635,
											"end": 647,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 635,
											"end": 647,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 593,
											"end": 653,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 593,
											"end": 653,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 593,
											"end": 653,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 593,
											"end": 653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 659,
											"end": 801,
											"name": "tag",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 659,
											"end": 801,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 709,
											"end": 718,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 742,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 760,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 769,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 787,
											"end": 792,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 769,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 769,
											"end": 793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 769,
											"end": 793,
											"name": "tag",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 769,
											"end": 793,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 760,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 760,
											"end": 794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 760,
											"end": 794,
											"name": "tag",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 760,
											"end": 794,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 742,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 742,
											"end": 795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 742,
											"end": 795,
											"name": "tag",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 742,
											"end": 795,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 729,
											"end": 795,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 729,
											"end": 795,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 659,
											"end": 801,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 659,
											"end": 801,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 659,
											"end": 801,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 659,
											"end": 801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 807,
											"end": 933,
											"name": "tag",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 807,
											"end": 933,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 857,
											"end": 866,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 890,
											"end": 927,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 921,
											"end": 926,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 890,
											"end": 927,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 890,
											"end": 927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 890,
											"end": 927,
											"name": "tag",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 890,
											"end": 927,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 877,
											"end": 927,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 877,
											"end": 927,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 807,
											"end": 933,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 807,
											"end": 933,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 807,
											"end": 933,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 807,
											"end": 933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 939,
											"end": 1080,
											"name": "tag",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 939,
											"end": 1080,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1004,
											"end": 1013,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1037,
											"end": 1074,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 1068,
											"end": 1073,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1037,
											"end": 1074,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 1037,
											"end": 1074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1037,
											"end": 1074,
											"name": "tag",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 1037,
											"end": 1074,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1024,
											"end": 1074,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1024,
											"end": 1074,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 939,
											"end": 1080,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 939,
											"end": 1080,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 939,
											"end": 1080,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 939,
											"end": 1080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1086,
											"end": 1247,
											"name": "tag",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 1086,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1188,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 1234,
											"end": 1239,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1188,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 1188,
											"end": 1240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1188,
											"end": 1240,
											"name": "tag",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 1188,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1183,
											"end": 1186,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1176,
											"end": 1241,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1086,
											"end": 1247,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1086,
											"end": 1247,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1086,
											"end": 1247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1253,
											"end": 1505,
											"name": "tag",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 1253,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1361,
											"end": 1365,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1399,
											"end": 1401,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1388,
											"end": 1397,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1384,
											"end": 1402,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1376,
											"end": 1402,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1376,
											"end": 1402,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1412,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 1495,
											"end": 1496,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1484,
											"end": 1493,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1480,
											"end": 1497,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1412,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 1412,
											"end": 1498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1412,
											"end": 1498,
											"name": "tag",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 1412,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1253,
											"end": 1505,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1253,
											"end": 1505,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1253,
											"end": 1505,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1253,
											"end": 1505,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1253,
											"end": 1505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1511,
											"end": 1588,
											"name": "tag",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 1511,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1548,
											"end": 1555,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1577,
											"end": 1582,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1566,
											"end": 1582,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1566,
											"end": 1582,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1511,
											"end": 1588,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1511,
											"end": 1588,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1511,
											"end": 1588,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1511,
											"end": 1588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1594,
											"end": 1712,
											"name": "tag",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 1594,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1681,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 1699,
											"end": 1704,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1681,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 1681,
											"end": 1705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1681,
											"end": 1705,
											"name": "tag",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 1681,
											"end": 1705,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1676,
											"end": 1679,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1669,
											"end": 1706,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1594,
											"end": 1712,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1594,
											"end": 1712,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1594,
											"end": 1712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1718,
											"end": 1940,
											"name": "tag",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 1718,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1811,
											"end": 1815,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1851,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1838,
											"end": 1847,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1834,
											"end": 1852,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1826,
											"end": 1852,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1826,
											"end": 1852,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1862,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 1930,
											"end": 1931,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1928,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1915,
											"end": 1932,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1906,
											"end": 1912,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1862,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 1862,
											"end": 1933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1862,
											"end": 1933,
											"name": "tag",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 1862,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1718,
											"end": 1940,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1718,
											"end": 1940,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1718,
											"end": 1940,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1718,
											"end": 1940,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1718,
											"end": 1940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2027,
											"end": 2144,
											"name": "tag",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 2027,
											"end": 2144,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2136,
											"end": 2137,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2134,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2126,
											"end": 2138,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2273,
											"end": 2395,
											"name": "tag",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 2273,
											"end": 2395,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2346,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 2364,
											"end": 2369,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2346,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 2346,
											"end": 2370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2346,
											"end": 2370,
											"name": "tag",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 2346,
											"end": 2370,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2339,
											"end": 2344,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2336,
											"end": 2371,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2326,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 2326,
											"end": 2389,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2385,
											"end": 2386,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2382,
											"end": 2383,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2387,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2326,
											"end": 2389,
											"name": "tag",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 2326,
											"end": 2389,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2273,
											"end": 2395,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2273,
											"end": 2395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2540,
											"name": "tag",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 2401,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2447,
											"end": 2452,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2485,
											"end": 2491,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2472,
											"end": 2492,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2463,
											"end": 2492,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2463,
											"end": 2492,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2501,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 2528,
											"end": 2533,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2501,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 2501,
											"end": 2534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2501,
											"end": 2534,
											"name": "tag",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 2501,
											"end": 2534,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2540,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2540,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2540,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2540,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2546,
											"end": 2875,
											"name": "tag",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 2546,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2605,
											"end": 2611,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2654,
											"end": 2656,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2642,
											"end": 2651,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2633,
											"end": 2640,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2629,
											"end": 2652,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2622,
											"end": 2741,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2622,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 2622,
											"end": 2741,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2660,
											"end": 2739,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 2660,
											"end": 2739,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 2660,
											"end": 2739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2660,
											"end": 2739,
											"name": "tag",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 2660,
											"end": 2739,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2622,
											"end": 2741,
											"name": "tag",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 2622,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2780,
											"end": 2781,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2805,
											"end": 2858,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 2850,
											"end": 2857,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2841,
											"end": 2847,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2830,
											"end": 2839,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2826,
											"end": 2848,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2805,
											"end": 2858,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 2805,
											"end": 2858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2805,
											"end": 2858,
											"name": "tag",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 2805,
											"end": 2858,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2795,
											"end": 2858,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2795,
											"end": 2858,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2751,
											"end": 2868,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2546,
											"end": 2875,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2546,
											"end": 2875,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2546,
											"end": 2875,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2546,
											"end": 2875,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2546,
											"end": 2875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2881,
											"end": 3003,
											"name": "tag",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 2881,
											"end": 3003,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2954,
											"end": 2978,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "132"
										},
										{
											"begin": 2972,
											"end": 2977,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2954,
											"end": 2978,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 2954,
											"end": 2978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2954,
											"end": 2978,
											"name": "tag",
											"source": 13,
											"value": "132"
										},
										{
											"begin": 2954,
											"end": 2978,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2947,
											"end": 2952,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2944,
											"end": 2979,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2934,
											"end": 2997,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 2934,
											"end": 2997,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2993,
											"end": 2994,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2990,
											"end": 2991,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2983,
											"end": 2995,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2934,
											"end": 2997,
											"name": "tag",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 2934,
											"end": 2997,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2881,
											"end": 3003,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2881,
											"end": 3003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3009,
											"end": 3148,
											"name": "tag",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 3009,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3055,
											"end": 3060,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3093,
											"end": 3099,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3080,
											"end": 3100,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3071,
											"end": 3100,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3071,
											"end": 3100,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3109,
											"end": 3142,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 3136,
											"end": 3141,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3109,
											"end": 3142,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 3109,
											"end": 3142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3109,
											"end": 3142,
											"name": "tag",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 3109,
											"end": 3142,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3009,
											"end": 3148,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3009,
											"end": 3148,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3009,
											"end": 3148,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3009,
											"end": 3148,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3009,
											"end": 3148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3154,
											"end": 3628,
											"name": "tag",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 3154,
											"end": 3628,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3222,
											"end": 3228,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3230,
											"end": 3236,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3279,
											"end": 3281,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3267,
											"end": 3276,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3258,
											"end": 3265,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3254,
											"end": 3277,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3250,
											"end": 3282,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3247,
											"end": 3366,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3247,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 3247,
											"end": 3366,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3285,
											"end": 3364,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 3285,
											"end": 3364,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 3285,
											"end": 3364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3285,
											"end": 3364,
											"name": "tag",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 3285,
											"end": 3364,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3247,
											"end": 3366,
											"name": "tag",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 3247,
											"end": 3366,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3405,
											"end": 3406,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3430,
											"end": 3483,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 3475,
											"end": 3482,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3466,
											"end": 3472,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3455,
											"end": 3464,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3451,
											"end": 3473,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3430,
											"end": 3483,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 3430,
											"end": 3483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3430,
											"end": 3483,
											"name": "tag",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 3430,
											"end": 3483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3420,
											"end": 3483,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3420,
											"end": 3483,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3376,
											"end": 3493,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3532,
											"end": 3534,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3558,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 3603,
											"end": 3610,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3594,
											"end": 3600,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3579,
											"end": 3601,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3558,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 3558,
											"end": 3611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3558,
											"end": 3611,
											"name": "tag",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 3558,
											"end": 3611,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3548,
											"end": 3611,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3548,
											"end": 3611,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3503,
											"end": 3621,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3154,
											"end": 3628,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3154,
											"end": 3628,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3154,
											"end": 3628,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3154,
											"end": 3628,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3154,
											"end": 3628,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3154,
											"end": 3628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3634,
											"end": 3777,
											"name": "tag",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 3634,
											"end": 3777,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3691,
											"end": 3696,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3722,
											"end": 3728,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3716,
											"end": 3729,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3707,
											"end": 3729,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3707,
											"end": 3729,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3738,
											"end": 3771,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 3765,
											"end": 3770,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3738,
											"end": 3771,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 3738,
											"end": 3771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3738,
											"end": 3771,
											"name": "tag",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 3738,
											"end": 3771,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3634,
											"end": 3777,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3634,
											"end": 3777,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3634,
											"end": 3777,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3634,
											"end": 3777,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3634,
											"end": 3777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3783,
											"end": 4134,
											"name": "tag",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 3783,
											"end": 4134,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3853,
											"end": 3859,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3902,
											"end": 3904,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3890,
											"end": 3899,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3881,
											"end": 3888,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3877,
											"end": 3900,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3873,
											"end": 3905,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3870,
											"end": 3989,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3870,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 3870,
											"end": 3989,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3908,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 3908,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 3908,
											"end": 3987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3908,
											"end": 3987,
											"name": "tag",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 3908,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3870,
											"end": 3989,
											"name": "tag",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 3870,
											"end": 3989,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4028,
											"end": 4029,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4053,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 4109,
											"end": 4116,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4100,
											"end": 4106,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4089,
											"end": 4098,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4085,
											"end": 4107,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4053,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 4053,
											"end": 4117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4053,
											"end": 4117,
											"name": "tag",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 4053,
											"end": 4117,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4043,
											"end": 4117,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4043,
											"end": 4117,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3999,
											"end": 4127,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3783,
											"end": 4134,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3783,
											"end": 4134,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3783,
											"end": 4134,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3783,
											"end": 4134,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3783,
											"end": 4134,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4140,
											"end": 4472,
											"name": "tag",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 4140,
											"end": 4472,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4261,
											"end": 4265,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4299,
											"end": 4301,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4288,
											"end": 4297,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4284,
											"end": 4302,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4276,
											"end": 4302,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4276,
											"end": 4302,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4312,
											"end": 4383,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 4380,
											"end": 4381,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4369,
											"end": 4378,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4365,
											"end": 4382,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4356,
											"end": 4362,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4312,
											"end": 4383,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 4312,
											"end": 4383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4312,
											"end": 4383,
											"name": "tag",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 4312,
											"end": 4383,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4393,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 4461,
											"end": 4463,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4450,
											"end": 4459,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4446,
											"end": 4464,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4437,
											"end": 4443,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4393,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 4393,
											"end": 4465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4393,
											"end": 4465,
											"name": "tag",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 4393,
											"end": 4465,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4140,
											"end": 4472,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4140,
											"end": 4472,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4140,
											"end": 4472,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4140,
											"end": 4472,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4140,
											"end": 4472,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4140,
											"end": 4472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"C/commingling .sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balance()": "b69ef8a8",
							"collateralToken()": "b2016bd4",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(address,uint256)": "f3fef3a3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateralToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_collateralToken\":\"The address of the collateral ERC20 token.\",\"owner_\":\"The owner of the vault (set to the main contract).\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"balance()\":{\"notice\":\"Returns the vault\\u2019s current collateral balance.\"},\"constructor\":{\"notice\":\"The constructor sets the collateral token and assigns ownership.\"},\"withdraw(address,uint256)\":{\"notice\":\"Withdraws a specified amount of collateral to a given address. Can only be called by the vault owner (the main contract).\"}},\"notice\":\"Vault contract holds a single user\\u2019s collateral to avoid commingling with others. The vault is deployed for each user and is owned by the main stable coin contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"C/commingling .sol\":\"Vault\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"C/commingling .sol\":{\"keccak256\":\"0x0a358594de1d0fa157bca7497fba3823b55ffb61ffcb9ee0b5c273d11dac78ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0d2afefaf77bfa20737a3531680f8156853cf27697c096329fad555fdc0e273\",\"dweb:/ipfs/QmUM9MMHjyuq7b8U1LNC3XZ3kJRb8peUk5uGpW3Jr41A7c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "C/commingling .sol:Vault",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"balance()": {
								"notice": "Returns the vault’s current collateral balance."
							},
							"constructor": {
								"notice": "The constructor sets the collateral token and assigns ownership."
							},
							"withdraw(address,uint256)": {
								"notice": "Withdraws a specified amount of collateral to a given address. Can only be called by the vault owner (the main contract)."
							}
						},
						"notice": "Vault contract holds a single user’s collateral to avoid commingling with others. The vault is deployed for each user and is owned by the main stable coin contract.",
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> C/commingling .sol:143:38:\n    |\n143 |     function _isCollateralSufficient(address user, uint256 collateralAmt, uint256 debtAmt) internal view returns (bool) {\n    |                                      ^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 6881,
					"file": "C/commingling .sol",
					"start": 6869
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1497
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1498,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1497,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1497,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1497
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1479,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1479,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							1509
						],
						"IERC20": [
							1032
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1032,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1509,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1032,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1509,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								1509,
								1032
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								966,
								975
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1509
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 1510,
							"src": "132:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1509,
										"src": "140:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1032
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 1033,
							"src": "131:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1032,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							374
						],
						"IERC20Errors": [
							279
						],
						"IERC721Errors": [
							327
						]
					},
					"id": 375,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:4",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 279,
							"linearizedBaseContracts": [
								279
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 249,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "654:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "670:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "687:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:4"
									},
									"src": "623:80:4"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 254,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "891:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:4"
									},
									"src": "866:41:4"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 259,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "1104:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:4"
									},
									"src": "1077:45:4"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:4",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 268,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1511:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1528:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1547:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:4"
									},
									"src": "1478:85:4"
								},
								{
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 273,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "1775:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:4"
									},
									"src": "1748:45:4"
								},
								{
									"documentation": {
										"id": 274,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:4",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 278,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "2025:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:4"
									},
									"src": "1999:43:4"
								}
							],
							"scope": 375,
							"src": "280:1764:4",
							"usedErrors": [
								249,
								254,
								259,
								268,
								273,
								278
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 280,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:4",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 327,
							"linearizedBaseContracts": [
								327
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:4",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 285,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "2469:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:4"
									},
									"src": "2444:40:4"
								},
								{
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:4",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 290,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "2656:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:4"
									},
									"src": "2627:46:4"
								},
								{
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:4",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 299,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "3000:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "3016:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "3033:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:4"
									},
									"src": "2973:75:4"
								},
								{
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 304,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "3237:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:4"
									},
									"src": "3211:42:4"
								},
								{
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 309,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "3451:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:4"
									},
									"src": "3423:46:4"
								},
								{
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 316,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "3760:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "3778:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:4"
									},
									"src": "3727:68:4"
								},
								{
									"documentation": {
										"id": 317,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 321,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "4008:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:4"
									},
									"src": "3980:46:4"
								},
								{
									"documentation": {
										"id": 322,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 326,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "4262:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:4"
									},
									"src": "4234:46:4"
								}
							],
							"scope": 375,
							"src": "2190:2092:4",
							"usedErrors": [
								285,
								290,
								299,
								304,
								309,
								316,
								321,
								326
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 328,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:4",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 374,
							"linearizedBaseContracts": [
								374
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 329,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 339,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "4860:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "4876:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "4893:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "4909:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:4"
									},
									"src": "4827:99:4"
								},
								{
									"documentation": {
										"id": 340,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 344,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "5116:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:4"
									},
									"src": "5089:43:4"
								},
								{
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 349,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "5331:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:4"
									},
									"src": "5302:47:4"
								},
								{
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 356,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "5651:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "5669:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:4"
									},
									"src": "5616:68:4"
								},
								{
									"documentation": {
										"id": 357,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 361,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "5898:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:4"
									},
									"src": "5869:47:4"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 366,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "6153:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:4"
									},
									"src": "6124:47:4"
								},
								{
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:4",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 373,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "6494:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "6513:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:4"
									},
									"src": "6462:73:4"
								}
							],
							"scope": 375,
							"src": "4430:2107:4",
							"usedErrors": [
								339,
								344,
								349,
								356,
								361,
								366,
								373
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							439
						]
					},
					"id": 440,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 376,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 377,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:5",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 439,
							"linearizedBaseContracts": [
								439
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 380,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 439,
									"src": "1676:41:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 378,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 379,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 383,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 439,
									"src": "1723:37:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 381,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 382,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 385,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 439,
									"src": "1767:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 384,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 392,
										"nodeType": "Block",
										"src": "1811:39:5",
										"statements": [
											{
												"expression": {
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 388,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "1821:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 389,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 380,
														"src": "1831:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 391,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:5"
											}
										]
									},
									"id": 393,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:5"
									},
									"returnParameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:5"
									},
									"scope": 439,
									"src": "1797:53:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "2251:79:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 396,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "2261:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 398,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:5"
											},
											{
												"id": 399,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:5"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 400,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "2303:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 402,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:5"
											}
										]
									},
									"documentation": {
										"id": 394,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:5",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 404,
									"name": "nonReentrant",
									"nameLocation": "2236:12:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:5"
									},
									"src": "2227:103:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 418,
										"nodeType": "Block",
										"src": "2375:248:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 408,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 385,
																"src": "2468:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 409,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 383,
																"src": "2479:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 407,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 413,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:5"
											},
											{
												"expression": {
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 414,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "2598:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 415,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 383,
														"src": "2608:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 417,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:5"
											}
										]
									},
									"id": 419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:5"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:5"
									},
									"scope": 439,
									"src": "2336:287:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "2667:171:5",
										"statements": [
											{
												"expression": {
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 422,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "2809:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 423,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 380,
														"src": "2819:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:5"
											}
										]
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:5"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:5"
									},
									"scope": 439,
									"src": "2629:209:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "3081:43:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 433,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "3098:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 434,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 383,
														"src": "3109:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 432,
												"id": 436,
												"nodeType": "Return",
												"src": "3091:26:5"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:5",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:5"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "3075:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:5"
									},
									"scope": 439,
									"src": "3017:107:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 440,
							"src": "888:2238:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1497
						],
						"ERC20": [
							954
						],
						"IERC20": [
							1032
						],
						"IERC20Errors": [
							279
						],
						"IERC20Metadata": [
							1058
						]
					},
					"id": 955,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 441,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 443,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 955,
							"sourceUnit": 1033,
							"src": "131:36:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 442,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1032,
										"src": "139:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 445,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 955,
							"sourceUnit": 1059,
							"src": "168:63:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 444,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1058,
										"src": "176:14:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 447,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 955,
							"sourceUnit": 1498,
							"src": "232:48:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 446,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1497,
										"src": "240:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 449,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 955,
							"sourceUnit": 375,
							"src": "281:65:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 448,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 279,
										"src": "289:12:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 451,
										"name": "Context",
										"nameLocations": [
											"1133:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1497,
										"src": "1133:7:6"
									},
									"id": 452,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:6"
								},
								{
									"baseName": {
										"id": 453,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1032,
										"src": "1142:6:6"
									},
									"id": 454,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:6"
								},
								{
									"baseName": {
										"id": 455,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1058,
										"src": "1150:14:6"
									},
									"id": 456,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:6"
								},
								{
									"baseName": {
										"id": 457,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 279,
										"src": "1166:12:6"
									},
									"id": 458,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:6"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 450,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:6",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 954,
							"linearizedBaseContracts": [
								954,
								279,
								1058,
								1032,
								1497
							],
							"name": "ERC20",
							"nameLocation": "1124:5:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 462,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 954,
									"src": "1185:53:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 461,
										"keyName": "account",
										"keyNameLocation": "1201:7:6",
										"keyType": {
											"id": 459,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 460,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 468,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 954,
									"src": "1245:83:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 467,
										"keyName": "account",
										"keyNameLocation": "1261:7:6",
										"keyType": {
											"id": 463,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 466,
											"keyName": "spender",
											"keyNameLocation": "1288:7:6",
											"keyType": {
												"id": 464,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 465,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 470,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 954,
									"src": "1335:28:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 469,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 472,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 954,
									"src": "1370:20:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 471,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 474,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 954,
									"src": "1396:22:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 473,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "1657:57:6",
										"statements": [
											{
												"expression": {
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 482,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 472,
														"src": "1667:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 483,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 477,
														"src": "1675:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 485,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:6"
											},
											{
												"expression": {
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 486,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 474,
														"src": "1690:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 487,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "1700:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:6"
											}
										]
									},
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:6",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 491,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "1613:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 476,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "1634:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 478,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:6"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:6"
									},
									"scope": 954,
									"src": "1601:113:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1045
									],
									"body": {
										"id": 499,
										"nodeType": "Block",
										"src": "1839:29:6",
										"statements": [
											{
												"expression": {
													"id": 497,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 472,
													"src": "1856:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 496,
												"id": 498,
												"nodeType": "Return",
												"src": "1849:12:6"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:6"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "1824:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 494,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:6"
									},
									"scope": 954,
									"src": "1779:89:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1051
									],
									"body": {
										"id": 508,
										"nodeType": "Block",
										"src": "2043:31:6",
										"statements": [
											{
												"expression": {
													"id": 506,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 474,
													"src": "2060:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 505,
												"id": 507,
												"nodeType": "Return",
												"src": "2053:14:6"
											}
										]
									},
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:6",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:6"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "2028:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 503,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:6"
									},
									"scope": 954,
									"src": "1981:93:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1057
									],
									"body": {
										"id": 517,
										"nodeType": "Block",
										"src": "2763:26:6",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 514,
												"id": 516,
												"nodeType": "Return",
												"src": "2773:9:6"
											}
										]
									},
									"documentation": {
										"id": 510,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:6",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:6"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "2756:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 512,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:6"
									},
									"scope": 954,
									"src": "2707:82:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										981
									],
									"body": {
										"id": 526,
										"nodeType": "Block",
										"src": "2910:36:6",
										"statements": [
											{
												"expression": {
													"id": 524,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 470,
													"src": "2927:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 523,
												"id": 525,
												"nodeType": "Return",
												"src": "2920:19:6"
											}
										]
									},
									"documentation": {
										"id": 519,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:6",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:6"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "2901:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:6"
									},
									"scope": 954,
									"src": "2849:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										989
									],
									"body": {
										"id": 539,
										"nodeType": "Block",
										"src": "3078:42:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 535,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 462,
														"src": "3095:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 537,
													"indexExpression": {
														"id": 536,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 530,
														"src": "3105:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 534,
												"id": 538,
												"nodeType": "Return",
												"src": "3088:25:6"
											}
										]
									},
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:6",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "3023:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:6"
									},
									"returnParameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "3069:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:6"
									},
									"scope": 954,
									"src": "3004:116:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										999
									],
									"body": {
										"id": 563,
										"nodeType": "Block",
										"src": "3390:103:6",
										"statements": [
											{
												"assignments": [
													551
												],
												"declarations": [
													{
														"constant": false,
														"id": 551,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 563,
														"src": "3400:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 550,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 554,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 552,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1479,
														"src": "3416:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 556,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 551,
															"src": "3448:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 557,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 543,
															"src": "3455:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 558,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "3459:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 555,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 684,
														"src": "3438:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 560,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:6"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 549,
												"id": 562,
												"nodeType": "Return",
												"src": "3475:11:6"
											}
										]
									},
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:6",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "3333:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "3345:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:6"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "3384:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 547,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:6"
									},
									"scope": 954,
									"src": "3315:178:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1009
									],
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "3640:51:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 574,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "3657:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 576,
														"indexExpression": {
															"id": 575,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 567,
															"src": "3669:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 578,
													"indexExpression": {
														"id": 577,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 569,
														"src": "3676:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 573,
												"id": 579,
												"nodeType": "Return",
												"src": "3650:34:6"
											}
										]
									},
									"documentation": {
										"id": 565,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:6",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "3570:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "3585:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:6"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "3631:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:6"
									},
									"scope": 954,
									"src": "3551:140:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1019
									],
									"body": {
										"id": 604,
										"nodeType": "Block",
										"src": "4077:107:6",
										"statements": [
											{
												"assignments": [
													592
												],
												"declarations": [
													{
														"constant": false,
														"id": 592,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 604,
														"src": "4087:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 591,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 595,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 593,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1479,
														"src": "4103:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 597,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "4134:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 598,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "4141:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 599,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "4150:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 596,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															845,
															905
														],
														"referencedDeclaration": 845,
														"src": "4125:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 601,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:6"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 590,
												"id": 603,
												"nodeType": "Return",
												"src": "4166:11:6"
											}
										]
									},
									"documentation": {
										"id": 582,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:6",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "4015:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "4032:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:6"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "4071:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 588,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:6"
									},
									"scope": 954,
									"src": "3998:186:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1031
									],
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "4869:151:6",
										"statements": [
											{
												"assignments": [
													618
												],
												"declarations": [
													{
														"constant": false,
														"id": 618,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 636,
														"src": "4879:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 617,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 621,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 619,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1479,
														"src": "4897:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 623,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "4935:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 624,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "4941:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 625,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "4950:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 622,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "4919:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 627,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 629,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "4976:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 630,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "4982:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 631,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "4986:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 628,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 684,
														"src": "4966:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 633,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:6"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 616,
												"id": 635,
												"nodeType": "Return",
												"src": "5002:11:6"
											}
										]
									},
									"documentation": {
										"id": 606,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:6",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "4798:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "4812:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "4824:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:6"
									},
									"returnParameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "4863:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 614,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:6"
									},
									"scope": 954,
									"src": "4776:244:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 683,
										"nodeType": "Block",
										"src": "5462:231:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 640,
														"src": "5476:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "5472:86:6",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "5496:62:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "5517:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "5510:37:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 662,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "5571:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 663,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 666,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 676,
												"nodeType": "IfStatement",
												"src": "5567:86:6",
												"trueBody": {
													"id": 675,
													"nodeType": "Block",
													"src": "5589:64:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 671,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 670,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 669,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 672,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 668,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "5610:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 673,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 674,
															"nodeType": "RevertStatement",
															"src": "5603:39:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 678,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "5670:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 679,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "5676:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 680,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "5680:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 677,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "5662:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 682,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:6"
											}
										]
									},
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:6",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "5412:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "5426:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "5438:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:6"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:6"
									},
									"scope": 954,
									"src": "5393:300:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 760,
										"nodeType": "Block",
										"src": "6083:1032:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 694,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 687,
														"src": "6097:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 697,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 696,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 695,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 698,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 731,
													"nodeType": "Block",
													"src": "6271:362:6",
													"statements": [
														{
															"assignments": [
																706
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 706,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 731,
																	"src": "6285:19:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 705,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 710,
															"initialValue": {
																"baseExpression": {
																	"id": 707,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "6307:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 709,
																"indexExpression": {
																	"id": 708,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 687,
																	"src": "6317:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 711,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 706,
																	"src": "6340:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 712,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 691,
																	"src": "6354:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 721,
															"nodeType": "IfStatement",
															"src": "6336:115:6",
															"trueBody": {
																"id": 720,
																"nodeType": "Block",
																"src": "6361:90:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 715,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 687,
																					"src": "6411:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 716,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 706,
																					"src": "6417:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 717,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 691,
																					"src": "6430:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 714,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 249,
																				"src": "6386:24:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 718,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 719,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:6"
																	}
																]
															}
														},
														{
															"id": 730,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:6",
															"statements": [
																{
																	"expression": {
																		"id": 728,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 722,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 462,
																				"src": "6571:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 724,
																			"indexExpression": {
																				"id": 723,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 687,
																				"src": "6581:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 727,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 725,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 706,
																				"src": "6589:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 726,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 691,
																				"src": "6603:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 729,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:6"
																}
															]
														}
													]
												},
												"id": 732,
												"nodeType": "IfStatement",
												"src": "6093:540:6",
												"trueBody": {
													"id": 704,
													"nodeType": "Block",
													"src": "6117:148:6",
													"statements": [
														{
															"expression": {
																"id": 702,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 700,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 470,
																	"src": "6233:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 701,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 691,
																	"src": "6249:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 703,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 733,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 689,
														"src": "6647:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 736,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 734,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 737,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 752,
													"nodeType": "Block",
													"src": "6862:206:6",
													"statements": [
														{
															"id": 751,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:6",
															"statements": [
																{
																	"expression": {
																		"id": 749,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 745,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 462,
																				"src": "7021:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 747,
																			"indexExpression": {
																				"id": 746,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 689,
																				"src": "7031:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 748,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 691,
																			"src": "7038:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 750,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:6"
																}
															]
														}
													]
												},
												"id": 753,
												"nodeType": "IfStatement",
												"src": "6643:425:6",
												"trueBody": {
													"id": 744,
													"nodeType": "Block",
													"src": "6665:191:6",
													"statements": [
														{
															"id": 743,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:6",
															"statements": [
																{
																	"expression": {
																		"id": 741,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 739,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 470,
																			"src": "6810:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 740,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 691,
																			"src": "6826:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 742,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:6"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 755,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "7092:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 756,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "7098:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 757,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "7102:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 754,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "7083:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 759,
												"nodeType": "EmitStatement",
												"src": "7078:30:6"
											}
										]
									},
									"documentation": {
										"id": 685,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:6",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "6025:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "6039:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "6051:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:6"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:6"
									},
									"scope": 954,
									"src": "6008:1107:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 793,
										"nodeType": "Block",
										"src": "7514:152:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 769,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 764,
														"src": "7528:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 772,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 770,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 773,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 783,
												"nodeType": "IfStatement",
												"src": "7524:91:6",
												"trueBody": {
													"id": 782,
													"nodeType": "Block",
													"src": "7551:64:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 778,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 777,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 776,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 779,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 775,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "7572:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 780,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 781,
															"nodeType": "RevertStatement",
															"src": "7565:39:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 785,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 789,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 764,
															"src": "7644:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 790,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 766,
															"src": "7653:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 784,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "7624:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 792,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:6"
											}
										]
									},
									"documentation": {
										"id": 762,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:6",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 794,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "7473:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "7490:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:6"
									},
									"returnParameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:6"
									},
									"scope": 954,
									"src": "7458:208:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "8040:150:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 802,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "8054:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 805,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 803,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 806,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 816,
												"nodeType": "IfStatement",
												"src": "8050:89:6",
												"trueBody": {
													"id": 815,
													"nodeType": "Block",
													"src": "8077:62:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 811,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 810,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 809,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 812,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 808,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "8098:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 814,
															"nodeType": "RevertStatement",
															"src": "8091:37:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 818,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "8156:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 820,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 819,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 823,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "8177:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 817,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "8148:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 825,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:6"
											}
										]
									},
									"documentation": {
										"id": 795,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:6",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "7999:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "8016:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:6"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:6"
									},
									"scope": 954,
									"src": "7984:206:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 844,
										"nodeType": "Block",
										"src": "8800:54:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 838,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "8819:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 839,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "8826:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 840,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "8835:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 837,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															845,
															905
														],
														"referencedDeclaration": 905,
														"src": "8810:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 843,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:6"
											}
										]
									},
									"documentation": {
										"id": 828,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:6",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "8744:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "8759:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "8776:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:6"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:6"
									},
									"scope": 954,
									"src": "8726:128:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 904,
										"nodeType": "Block",
										"src": "9799:334:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 857,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 848,
														"src": "9813:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 860,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 858,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 861,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 871,
												"nodeType": "IfStatement",
												"src": "9809:89:6",
												"trueBody": {
													"id": 870,
													"nodeType": "Block",
													"src": "9834:64:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 866,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 865,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 864,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 867,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 863,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 273,
																	"src": "9855:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 868,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 869,
															"nodeType": "RevertStatement",
															"src": "9848:39:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 872,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "9911:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 875,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 873,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 876,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 886,
												"nodeType": "IfStatement",
												"src": "9907:90:6",
												"trueBody": {
													"id": 885,
													"nodeType": "Block",
													"src": "9934:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 881,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 880,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 879,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 878,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 278,
																	"src": "9955:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 883,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 884,
															"nodeType": "RevertStatement",
															"src": "9948:38:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 887,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 468,
																"src": "10006:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 890,
															"indexExpression": {
																"id": 888,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 848,
																"src": "10018:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 891,
														"indexExpression": {
															"id": 889,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "10025:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 892,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 852,
														"src": "10036:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 894,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:6"
											},
											{
												"condition": {
													"id": 895,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 854,
													"src": "10055:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 903,
												"nodeType": "IfStatement",
												"src": "10051:76:6",
												"trueBody": {
													"id": 902,
													"nodeType": "Block",
													"src": "10066:61:6",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 897,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 848,
																		"src": "10094:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 898,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 850,
																		"src": "10101:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 899,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 852,
																		"src": "10110:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 896,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 975,
																	"src": "10085:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 900,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 901,
															"nodeType": "EmitStatement",
															"src": "10080:36:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 846,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:6",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 905,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "9719:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "9734:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "9751:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "9766:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 853,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:6"
									},
									"returnParameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:6"
									},
									"scope": 954,
									"src": "9701:432:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 952,
										"nodeType": "Block",
										"src": "10504:387:6",
										"statements": [
											{
												"assignments": [
													916
												],
												"declarations": [
													{
														"constant": false,
														"id": 916,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:6",
														"nodeType": "VariableDeclaration",
														"scope": 952,
														"src": "10514:24:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 915,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 921,
												"initialValue": {
													"arguments": [
														{
															"id": 918,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "10551:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 919,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "10558:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 917,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "10541:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 922,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "10580:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 924,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:6",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 923,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 926,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 927,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:6",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 951,
												"nodeType": "IfStatement",
												"src": "10576:309:6",
												"trueBody": {
													"id": 950,
													"nodeType": "Block",
													"src": "10618:267:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 929,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 916,
																	"src": "10636:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 930,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 912,
																	"src": "10655:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 939,
															"nodeType": "IfStatement",
															"src": "10632:130:6",
															"trueBody": {
																"id": 938,
																"nodeType": "Block",
																"src": "10662:100:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 933,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 910,
																					"src": "10714:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 934,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 916,
																					"src": "10723:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 935,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 912,
																					"src": "10741:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 932,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 268,
																				"src": "10687:26:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 936,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 937,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:6"
																	}
																]
															}
														},
														{
															"id": 949,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:6",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 941,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 908,
																				"src": "10812:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 942,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 910,
																				"src": "10819:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 945,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 943,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 916,
																					"src": "10828:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 944,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 912,
																					"src": "10847:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 946,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 940,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				845,
																				905
																			],
																			"referencedDeclaration": 905,
																			"src": "10803:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 947,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 948,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:6"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 906,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:6",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 953,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "10440:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "10455:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "10472:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:6"
									},
									"returnParameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:6"
									},
									"scope": 954,
									"src": "10415:476:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 955,
							"src": "1106:9787:6",
							"usedErrors": [
								249,
								254,
								259,
								268,
								273,
								278
							],
							"usedEvents": [
								966,
								975
							]
						}
					],
					"src": "105:10789:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1032
						]
					},
					"id": 1033,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 956,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 957,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:7",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1032,
							"linearizedBaseContracts": [
								1032
							],
							"name": "IERC20",
							"nameLocation": "214:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 958,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:7",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 966,
									"name": "Transfer",
									"nameLocation": "396:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "405:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "427:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 961,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 964,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "447:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:7"
									},
									"src": "390:72:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 967,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:7",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 975,
									"name": "Approval",
									"nameLocation": "627:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "636:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 971,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "659:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 970,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 973,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "684:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:7"
									},
									"src": "621:78:7"
								},
								{
									"documentation": {
										"id": 976,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:7",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 981,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:7"
									},
									"returnParameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "821:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:7"
									},
									"scope": 1032,
									"src": "775:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 982,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:7",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 989,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "931:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:7"
									},
									"returnParameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "971:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:7"
									},
									"scope": 1032,
									"src": "912:68:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 990,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:7",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 999,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "1222:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "1234:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:7"
									},
									"returnParameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "1267:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 996,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:7"
									},
									"scope": 1032,
									"src": "1204:69:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1000,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:7",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1009,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "1567:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "1582:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:7"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "1622:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:7"
									},
									"scope": 1032,
									"src": "1548:83:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1010,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:7",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1019,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "2326:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "2343:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:7"
									},
									"returnParameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "2376:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1016,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:7"
									},
									"scope": 1032,
									"src": "2309:73:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1020,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:7",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1031,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "2712:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "2726:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "2738:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:7"
									},
									"returnParameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "2771:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1028,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:7"
									},
									"scope": 1032,
									"src": "2690:87:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1033,
							"src": "204:2575:7",
							"usedErrors": [],
							"usedEvents": [
								966,
								975
							]
						}
					],
					"src": "106:2674:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1032
						],
						"IERC20Metadata": [
							1058
						]
					},
					"id": 1059,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1034,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1036,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1059,
							"sourceUnit": 1033,
							"src": "151:37:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1035,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1032,
										"src": "159:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1038,
										"name": "IERC20",
										"nameLocations": [
											"306:6:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1032,
										"src": "306:6:8"
									},
									"id": 1039,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:8"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1037,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:8",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1058,
							"linearizedBaseContracts": [
								1058,
								1032
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1040,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:8",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1045,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:8"
									},
									"returnParameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "417:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1042,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:8"
									},
									"scope": 1058,
									"src": "378:54:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1046,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:8",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1051,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:8"
									},
									"returnParameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "540:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1048,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:8"
									},
									"scope": 1058,
									"src": "499:56:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:8",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1057,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:8"
									},
									"returnParameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "674:5:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1054,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:8"
									},
									"scope": 1058,
									"src": "631:50:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1059,
							"src": "278:405:8",
							"usedErrors": [],
							"usedEvents": [
								966,
								975
							]
						}
					],
					"src": "125:559:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC20": [
							1032
						],
						"SafeERC20": [
							1467
						]
					},
					"id": 1468,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1060,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1062,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1468,
							"sourceUnit": 1033,
							"src": "141:37:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1061,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1032,
										"src": "149:6:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 1064,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1468,
							"sourceUnit": 230,
							"src": "179:58:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1063,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1065,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:9",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1467,
							"linearizedBaseContracts": [
								1467
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1066,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:9",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 1070,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "823:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:9"
									},
									"src": "792:46:9"
								},
								{
									"documentation": {
										"id": 1071,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:9",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 1079,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "959:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1072,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "976:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "1002:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:9"
									},
									"src": "920:109:9"
								},
								{
									"body": {
										"id": 1102,
										"nodeType": "Block",
										"src": "1291:88:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1091,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "1321:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1032",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1094,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1083,
																		"src": "1343:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1032",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1095,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:9",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 999,
																	"src": "1343:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1096,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1085,
																			"src": "1360:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1097,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1087,
																			"src": "1364:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1098,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 1092,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1093,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:9",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1032",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1090,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1425,
														"src": "1301:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1032_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1101,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:9"
											}
										]
									},
									"documentation": {
										"id": 1080,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:9",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 1103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "1241:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1032",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1082,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1081,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1032,
														"src": "1241:6:9"
													},
													"referencedDeclaration": 1032,
													"src": "1241:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1032",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "1255:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "1267:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:9"
									},
									"returnParameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:9"
									},
									"scope": 1467,
									"src": "1219:160:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1129,
										"nodeType": "Block",
										"src": "1708:98:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1117,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1107,
															"src": "1738:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1032",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1120,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1107,
																		"src": "1760:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1032",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:9",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1031,
																	"src": "1760:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1122,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1109,
																			"src": "1781:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1123,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1111,
																			"src": "1787:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1124,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1113,
																			"src": "1791:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1125,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 1118,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:9",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1032",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1116,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1425,
														"src": "1718:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1032_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1128,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:9"
											}
										]
									},
									"documentation": {
										"id": 1104,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:9",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 1130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "1644:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1032",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1106,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1105,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1032,
														"src": "1644:6:9"
													},
													"referencedDeclaration": 1032,
													"src": "1644:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1032",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "1658:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "1672:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "1684:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:9"
									},
									"returnParameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:9"
									},
									"scope": 1467,
									"src": "1618:188:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1160,
										"nodeType": "Block",
										"src": "2548:139:9",
										"statements": [
											{
												"assignments": [
													1142
												],
												"declarations": [
													{
														"constant": false,
														"id": 1142,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2566:12:9",
														"nodeType": "VariableDeclaration",
														"scope": 1160,
														"src": "2558:20:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1141,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2558:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1151,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1147,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2605:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$1467",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$1467",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 1146,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2597:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1145,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2597:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2597:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1149,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1136,
															"src": "2612:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1143,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1134,
															"src": "2581:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1032",
																"typeString": "contract IERC20"
															}
														},
														"id": 1144,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2587:9:9",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1009,
														"src": "2581:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 1150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2581:39:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2558:62:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1153,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1134,
															"src": "2643:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1032",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 1154,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1136,
															"src": "2650:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1155,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1142,
																"src": "2659:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1156,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1138,
																"src": "2674:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2659:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1032",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1152,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1251,
														"src": "2630:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1032_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2630:50:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1159,
												"nodeType": "ExpressionStatement",
												"src": "2630:50:9"
											}
										]
									},
									"documentation": {
										"id": 1131,
										"nodeType": "StructuredDocumentation",
										"src": "1812:645:9",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 1161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2471:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2500:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "2493:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1032",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1133,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1132,
														"name": "IERC20",
														"nameLocations": [
															"2493:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1032,
														"src": "2493:6:9"
													},
													"referencedDeclaration": 1032,
													"src": "2493:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1032",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2515:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "2507:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2507:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2532:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "2524:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2524:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2492:46:9"
									},
									"returnParameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2548:0:9"
									},
									"scope": 1467,
									"src": "2462:225:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1203,
										"nodeType": "Block",
										"src": "3453:370:9",
										"statements": [
											{
												"id": 1202,
												"nodeType": "UncheckedBlock",
												"src": "3463:354:9",
												"statements": [
													{
														"assignments": [
															1173
														],
														"declarations": [
															{
																"constant": false,
																"id": 1173,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "3495:16:9",
																"nodeType": "VariableDeclaration",
																"scope": 1202,
																"src": "3487:24:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1172,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3487:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1182,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1178,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3538:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1467",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1467",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3530:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1176,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3530:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3530:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1180,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1167,
																	"src": "3545:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1174,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1165,
																	"src": "3514:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1032",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3520:9:9",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1009,
																"src": "3514:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3514:39:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3487:66:9"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1183,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1173,
																"src": "3571:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1184,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1169,
																"src": "3590:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3571:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1193,
														"nodeType": "IfStatement",
														"src": "3567:160:9",
														"trueBody": {
															"id": 1192,
															"nodeType": "Block",
															"src": "3609:118:9",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 1187,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1167,
																				"src": "3667:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1188,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1173,
																				"src": "3676:16:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1189,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1169,
																				"src": "3694:17:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1186,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1079,
																			"src": "3634:32:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 1190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3634:78:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 1191,
																	"nodeType": "RevertStatement",
																	"src": "3627:85:9"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1195,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1165,
																	"src": "3753:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1032",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 1196,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1167,
																	"src": "3760:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1197,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1173,
																		"src": "3769:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1198,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1169,
																		"src": "3788:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3769:36:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1032",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1194,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1251,
																"src": "3740:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1032_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 1200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3740:66:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1201,
														"nodeType": "ExpressionStatement",
														"src": "3740:66:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1162,
										"nodeType": "StructuredDocumentation",
										"src": "2693:657:9",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 1204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3364:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3393:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "3386:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1032",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1164,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1163,
														"name": "IERC20",
														"nameLocations": [
															"3386:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1032,
														"src": "3386:6:9"
													},
													"referencedDeclaration": 1032,
													"src": "3386:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1032",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3408:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "3400:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3400:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "3425:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "3417:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3417:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3385:58:9"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3453:0:9"
									},
									"scope": 1467,
									"src": "3355:468:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1250,
										"nodeType": "Block",
										"src": "4477:303:9",
										"statements": [
											{
												"assignments": [
													1216
												],
												"declarations": [
													{
														"constant": false,
														"id": 1216,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "4500:12:9",
														"nodeType": "VariableDeclaration",
														"scope": 1250,
														"src": "4487:25:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1215,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4487:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1225,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1219,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1208,
																"src": "4530:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1032",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4536:7:9",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1019,
															"src": "4530:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 1221,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1210,
																	"src": "4546:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1222,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1212,
																	"src": "4555:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1223,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4545:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 1217,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4515:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1218,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4519:10:9",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "4515:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4515:47:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4487:75:9"
											},
											{
												"condition": {
													"id": 1230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4577:45:9",
													"subExpression": {
														"arguments": [
															{
																"id": 1227,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1208,
																"src": "4602:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1032",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 1228,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1216,
																"src": "4609:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$1032",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1226,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1466,
															"src": "4578:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1032_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 1229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4578:44:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1249,
												"nodeType": "IfStatement",
												"src": "4573:201:9",
												"trueBody": {
													"id": 1248,
													"nodeType": "Block",
													"src": "4624:150:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1232,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1208,
																		"src": "4658:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1032",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1235,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1208,
																					"src": "4680:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$1032",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1236,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4686:7:9",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1019,
																				"src": "4680:13:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1237,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1210,
																						"src": "4696:7:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 1238,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4705:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 1239,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4695:12:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 1233,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4665:3:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1234,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4669:10:9",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "4665:14:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4665:43:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$1032",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1231,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1425,
																	"src": "4638:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1032_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 1241,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4638:71:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1242,
															"nodeType": "ExpressionStatement",
															"src": "4638:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1244,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1208,
																		"src": "4743:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1032",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 1245,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1216,
																		"src": "4750:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$1032",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1243,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1425,
																	"src": "4723:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1032_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 1246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4723:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1247,
															"nodeType": "ExpressionStatement",
															"src": "4723:40:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1205,
										"nodeType": "StructuredDocumentation",
										"src": "3829:566:9",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 1251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "4409:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4429:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "4422:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1032",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1207,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1206,
														"name": "IERC20",
														"nameLocations": [
															"4422:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1032,
														"src": "4422:6:9"
													},
													"referencedDeclaration": 1032,
													"src": "4422:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1032",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4444:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "4436:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4436:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4461:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "4453:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4453:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4421:46:9"
									},
									"returnParameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4477:0:9"
									},
									"scope": 1467,
									"src": "4400:380:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1293,
										"nodeType": "Block",
										"src": "5227:219:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1264,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1257,
																"src": "5241:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5244:4:9",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5241:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5249:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5241:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1267,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5259:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5241:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1282,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "5327:39:9",
														"subExpression": {
															"arguments": [
																{
																	"id": 1278,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1257,
																	"src": "5350:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1279,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1259,
																	"src": "5354:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1280,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1261,
																	"src": "5361:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1276,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1255,
																	"src": "5328:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5334:15:9",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "5328:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5328:38:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1291,
													"nodeType": "IfStatement",
													"src": "5323:117:9",
													"trueBody": {
														"id": 1290,
														"nodeType": "Block",
														"src": "5368:72:9",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1286,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1255,
																					"src": "5422:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1285,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5414:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1284,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5414:7:9",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1287,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5414:14:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1283,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1070,
																		"src": "5389:24:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 1288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5389:40:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1289,
																"nodeType": "RevertStatement",
																"src": "5382:47:9"
															}
														]
													}
												},
												"id": 1292,
												"nodeType": "IfStatement",
												"src": "5237:203:9",
												"trueBody": {
													"id": 1275,
													"nodeType": "Block",
													"src": "5262:55:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1270,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1255,
																		"src": "5289:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 1271,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1257,
																		"src": "5296:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1272,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1259,
																		"src": "5300:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1269,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1103,
																	"src": "5276:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1032_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5276:30:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1274,
															"nodeType": "ExpressionStatement",
															"src": "5276:30:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1252,
										"nodeType": "StructuredDocumentation",
										"src": "4786:333:9",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 1294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5133:22:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5165:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "5156:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 1254,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1253,
														"name": "IERC1363",
														"nameLocations": [
															"5156:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5156:8:9"
													},
													"referencedDeclaration": 229,
													"src": "5156:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5180:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "5172:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5172:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5192:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "5184:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5184:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5212:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "5199:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1260,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5199:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5155:62:9"
									},
									"returnParameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5227:0:9"
									},
									"scope": 1467,
									"src": "5124:322:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1340,
										"nodeType": "Block",
										"src": "5965:239:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1309,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1302,
																"src": "5979:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5982:4:9",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5979:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1311,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5987:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5979:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1312,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5997:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5979:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1329,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6075:49:9",
														"subExpression": {
															"arguments": [
																{
																	"id": 1324,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1300,
																	"src": "6102:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1325,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1302,
																	"src": "6108:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1326,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1304,
																	"src": "6112:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1327,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1306,
																	"src": "6119:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1322,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1298,
																	"src": "6076:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6082:19:9",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6076:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6076:48:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1338,
													"nodeType": "IfStatement",
													"src": "6071:127:9",
													"trueBody": {
														"id": 1337,
														"nodeType": "Block",
														"src": "6126:72:9",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1333,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1298,
																					"src": "6180:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1332,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6172:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1331,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6172:7:9",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1334,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6172:14:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1330,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1070,
																		"src": "6147:24:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 1335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6147:40:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1336,
																"nodeType": "RevertStatement",
																"src": "6140:47:9"
															}
														]
													}
												},
												"id": 1339,
												"nodeType": "IfStatement",
												"src": "5975:223:9",
												"trueBody": {
													"id": 1321,
													"nodeType": "Block",
													"src": "6000:65:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1315,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1298,
																		"src": "6031:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 1316,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1300,
																		"src": "6038:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1317,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1302,
																		"src": "6044:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1318,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1304,
																		"src": "6048:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1314,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1130,
																	"src": "6014:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1032_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6014:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1320,
															"nodeType": "ExpressionStatement",
															"src": "6014:40:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1295,
										"nodeType": "StructuredDocumentation",
										"src": "5452:341:9",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 1341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "5807:26:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5852:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "5843:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 1297,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1296,
														"name": "IERC1363",
														"nameLocations": [
															"5843:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5843:8:9"
													},
													"referencedDeclaration": 229,
													"src": "5843:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5875:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "5867:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5867:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5897:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "5889:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5889:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5917:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "5909:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5909:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5945:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "5932:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1305,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5932:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5833:122:9"
									},
									"returnParameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5965:0:9"
									},
									"scope": 1467,
									"src": "5798:406:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1383,
										"nodeType": "Block",
										"src": "6971:218:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1354,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1347,
																"src": "6985:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6988:4:9",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6985:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1356,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6993:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6985:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1357,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7003:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6985:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7071:38:9",
														"subExpression": {
															"arguments": [
																{
																	"id": 1368,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1347,
																	"src": "7093:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1369,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1349,
																	"src": "7097:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1370,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1351,
																	"src": "7104:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1366,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1345,
																	"src": "7072:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7078:14:9",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7072:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7072:37:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1381,
													"nodeType": "IfStatement",
													"src": "7067:116:9",
													"trueBody": {
														"id": 1380,
														"nodeType": "Block",
														"src": "7111:72:9",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1376,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1345,
																					"src": "7165:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1375,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7157:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1374,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7157:7:9",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1377,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7157:14:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1373,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1070,
																		"src": "7132:24:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 1378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7132:40:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1379,
																"nodeType": "RevertStatement",
																"src": "7125:47:9"
															}
														]
													}
												},
												"id": 1382,
												"nodeType": "IfStatement",
												"src": "6981:202:9",
												"trueBody": {
													"id": 1365,
													"nodeType": "Block",
													"src": "7006:55:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1360,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1345,
																		"src": "7033:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 1361,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1347,
																		"src": "7040:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1362,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1349,
																		"src": "7044:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1359,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1251,
																	"src": "7020:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1032_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7020:30:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1364,
															"nodeType": "ExpressionStatement",
															"src": "7020:30:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1342,
										"nodeType": "StructuredDocumentation",
										"src": "6210:654:9",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 1384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "6878:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6909:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "6900:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 1344,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1343,
														"name": "IERC1363",
														"nameLocations": [
															"6900:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6900:8:9"
													},
													"referencedDeclaration": 229,
													"src": "6900:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6924:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "6916:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6916:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6936:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "6928:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6928:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6956:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "6943:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1350,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6943:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6899:62:9"
									},
									"returnParameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6971:0:9"
									},
									"scope": 1467,
									"src": "6869:320:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1424,
										"nodeType": "Block",
										"src": "7756:650:9",
										"statements": [
											{
												"assignments": [
													1394
												],
												"declarations": [
													{
														"constant": false,
														"id": 1394,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "7774:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1424,
														"src": "7766:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1393,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7766:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1395,
												"nodeType": "VariableDeclarationStatement",
												"src": "7766:18:9"
											},
											{
												"assignments": [
													1397
												],
												"declarations": [
													{
														"constant": false,
														"id": 1397,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "7802:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1424,
														"src": "7794:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1396,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7794:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1398,
												"nodeType": "VariableDeclarationStatement",
												"src": "7794:19:9"
											},
											{
												"AST": {
													"nativeSrc": "7848:396:9",
													"nodeType": "YulBlock",
													"src": "7848:396:9",
													"statements": [
														{
															"nativeSrc": "7862:75:9",
															"nodeType": "YulVariableDeclaration",
															"src": "7862:75:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "7882:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7882:3:9"
																		},
																		"nativeSrc": "7882:5:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7882:5:9"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "7889:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "7889:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7896:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7896:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7903:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "7903:4:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7909:4:9",
																				"nodeType": "YulLiteral",
																				"src": "7909:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7899:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7899:3:9"
																		},
																		"nativeSrc": "7899:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7899:15:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7922:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "7922:4:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7916:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "7916:5:9"
																		},
																		"nativeSrc": "7916:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7916:11:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7929:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7929:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7932:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7932:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "7877:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7877:4:9"
																},
																"nativeSrc": "7877:60:9",
																"nodeType": "YulFunctionCall",
																"src": "7877:60:9"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "7866:7:9",
																	"nodeType": "YulTypedName",
																	"src": "7866:7:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7998:157:9",
																"nodeType": "YulBlock",
																"src": "7998:157:9",
																"statements": [
																	{
																		"nativeSrc": "8016:22:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8016:22:9",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8033:4:9",
																					"nodeType": "YulLiteral",
																					"src": "8033:4:9",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8027:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "8027:5:9"
																			},
																			"nativeSrc": "8027:11:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8027:11:9"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8020:3:9",
																				"nodeType": "YulTypedName",
																				"src": "8020:3:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8070:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8070:3:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8075:1:9",
																					"nodeType": "YulLiteral",
																					"src": "8075:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8078:14:9",
																						"nodeType": "YulIdentifier",
																						"src": "8078:14:9"
																					},
																					"nativeSrc": "8078:16:9",
																					"nodeType": "YulFunctionCall",
																					"src": "8078:16:9"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8055:14:9",
																				"nodeType": "YulIdentifier",
																				"src": "8055:14:9"
																			},
																			"nativeSrc": "8055:40:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8055:40:9"
																		},
																		"nativeSrc": "8055:40:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "8055:40:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8119:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "8119:3:9"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8124:14:9",
																						"nodeType": "YulIdentifier",
																						"src": "8124:14:9"
																					},
																					"nativeSrc": "8124:16:9",
																					"nodeType": "YulFunctionCall",
																					"src": "8124:16:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8112:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "8112:6:9"
																			},
																			"nativeSrc": "8112:29:9",
																			"nodeType": "YulFunctionCall",
																			"src": "8112:29:9"
																		},
																		"nativeSrc": "8112:29:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "8112:29:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "7989:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "7989:7:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7982:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7982:6:9"
																},
																"nativeSrc": "7982:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7982:15:9"
															},
															"nativeSrc": "7979:176:9",
															"nodeType": "YulIf",
															"src": "7979:176:9"
														},
														{
															"nativeSrc": "8168:30:9",
															"nodeType": "YulAssignment",
															"src": "8168:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8182:14:9",
																	"nodeType": "YulIdentifier",
																	"src": "8182:14:9"
																},
																"nativeSrc": "8182:16:9",
																"nodeType": "YulFunctionCall",
																"src": "8182:16:9"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8168:10:9",
																	"nodeType": "YulIdentifier",
																	"src": "8168:10:9"
																}
															]
														},
														{
															"nativeSrc": "8211:23:9",
															"nodeType": "YulAssignment",
															"src": "8211:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8232:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8232:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8226:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "8226:5:9"
																},
																"nativeSrc": "8226:8:9",
																"nodeType": "YulFunctionCall",
																"src": "8226:8:9"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8211:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "8211:11:9"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1390,
														"isOffset": false,
														"isSlot": false,
														"src": "7903:4:9",
														"valueSize": 1
													},
													{
														"declaration": 1390,
														"isOffset": false,
														"isSlot": false,
														"src": "7922:4:9",
														"valueSize": 1
													},
													{
														"declaration": 1394,
														"isOffset": false,
														"isSlot": false,
														"src": "8168:10:9",
														"valueSize": 1
													},
													{
														"declaration": 1397,
														"isOffset": false,
														"isSlot": false,
														"src": "8211:11:9",
														"valueSize": 1
													},
													{
														"declaration": 1388,
														"isOffset": false,
														"isSlot": false,
														"src": "7889:5:9",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1399,
												"nodeType": "InlineAssembly",
												"src": "7823:421:9"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1402,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1400,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1394,
															"src": "8258:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1401,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8272:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8258:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1411,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1397,
															"src": "8310:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 1412,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8325:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8310:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8258:68:9",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1410,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1405,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1388,
																			"src": "8284:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1032",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$1032",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8276:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1403,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8276:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8276:14:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8291:4:9",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8276:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8296:6:9",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8276:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8306:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8276:31:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1423,
												"nodeType": "IfStatement",
												"src": "8254:146:9",
												"trueBody": {
													"id": 1422,
													"nodeType": "Block",
													"src": "8328:72:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1418,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1388,
																				"src": "8382:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$1032",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$1032",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 1417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8374:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1416,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8374:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8374:14:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1415,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1070,
																	"src": "8349:24:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8349:40:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1421,
															"nodeType": "RevertStatement",
															"src": "8342:47:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1385,
										"nodeType": "StructuredDocumentation",
										"src": "7195:486:9",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 1425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "7695:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7722:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "7715:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1032",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1387,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1386,
														"name": "IERC20",
														"nameLocations": [
															"7715:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1032,
														"src": "7715:6:9"
													},
													"referencedDeclaration": 1032,
													"src": "7715:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1032",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7742:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "7729:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1389,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7729:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7714:33:9"
									},
									"returnParameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7756:0:9"
									},
									"scope": 1467,
									"src": "7686:720:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1465,
										"nodeType": "Block",
										"src": "8997:391:9",
										"statements": [
											{
												"assignments": [
													1437
												],
												"declarations": [
													{
														"constant": false,
														"id": 1437,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9012:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1465,
														"src": "9007:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1436,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9007:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1438,
												"nodeType": "VariableDeclarationStatement",
												"src": "9007:12:9"
											},
											{
												"assignments": [
													1440
												],
												"declarations": [
													{
														"constant": false,
														"id": 1440,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9037:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1465,
														"src": "9029:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1439,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9029:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1441,
												"nodeType": "VariableDeclarationStatement",
												"src": "9029:18:9"
											},
											{
												"assignments": [
													1443
												],
												"declarations": [
													{
														"constant": false,
														"id": 1443,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9065:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1465,
														"src": "9057:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1442,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9057:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1444,
												"nodeType": "VariableDeclarationStatement",
												"src": "9057:19:9"
											},
											{
												"AST": {
													"nativeSrc": "9111:174:9",
													"nodeType": "YulBlock",
													"src": "9111:174:9",
													"statements": [
														{
															"nativeSrc": "9125:71:9",
															"nodeType": "YulAssignment",
															"src": "9125:71:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9141:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9141:3:9"
																		},
																		"nativeSrc": "9141:5:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9141:5:9"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9148:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "9148:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9155:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9155:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9162:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "9162:4:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9168:4:9",
																				"nodeType": "YulLiteral",
																				"src": "9168:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9158:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9158:3:9"
																		},
																		"nativeSrc": "9158:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9158:15:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9181:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "9181:4:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9175:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "9175:5:9"
																		},
																		"nativeSrc": "9175:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9175:11:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9188:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9188:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9191:4:9",
																		"nodeType": "YulLiteral",
																		"src": "9191:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9136:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "9136:4:9"
																},
																"nativeSrc": "9136:60:9",
																"nodeType": "YulFunctionCall",
																"src": "9136:60:9"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9125:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "9125:7:9"
																}
															]
														},
														{
															"nativeSrc": "9209:30:9",
															"nodeType": "YulAssignment",
															"src": "9209:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9223:14:9",
																	"nodeType": "YulIdentifier",
																	"src": "9223:14:9"
																},
																"nativeSrc": "9223:16:9",
																"nodeType": "YulFunctionCall",
																"src": "9223:16:9"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9209:10:9",
																	"nodeType": "YulIdentifier",
																	"src": "9209:10:9"
																}
															]
														},
														{
															"nativeSrc": "9252:23:9",
															"nodeType": "YulAssignment",
															"src": "9252:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9273:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9273:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9267:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "9267:5:9"
																},
																"nativeSrc": "9267:8:9",
																"nodeType": "YulFunctionCall",
																"src": "9267:8:9"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9252:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "9252:11:9"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1431,
														"isOffset": false,
														"isSlot": false,
														"src": "9162:4:9",
														"valueSize": 1
													},
													{
														"declaration": 1431,
														"isOffset": false,
														"isSlot": false,
														"src": "9181:4:9",
														"valueSize": 1
													},
													{
														"declaration": 1440,
														"isOffset": false,
														"isSlot": false,
														"src": "9209:10:9",
														"valueSize": 1
													},
													{
														"declaration": 1443,
														"isOffset": false,
														"isSlot": false,
														"src": "9252:11:9",
														"valueSize": 1
													},
													{
														"declaration": 1437,
														"isOffset": false,
														"isSlot": false,
														"src": "9125:7:9",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "9148:5:9",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1445,
												"nodeType": "InlineAssembly",
												"src": "9086:199:9"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1446,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1437,
														"src": "9301:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1449,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1447,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1440,
																		"src": "9313:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9327:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9313:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1458,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1443,
																		"src": "9364:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1459,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9379:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "9364:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9313:67:9",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 1452,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1429,
																						"src": "9339:5:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$1032",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$1032",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 1451,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9331:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1450,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "9331:7:9",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1453,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9331:14:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1454,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9346:4:9",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "9331:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9351:6:9",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "9331:26:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1456,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9360:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9331:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1462,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9312:69:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9301:80:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1435,
												"id": 1464,
												"nodeType": "Return",
												"src": "9294:87:9"
											}
										]
									},
									"documentation": {
										"id": 1426,
										"nodeType": "StructuredDocumentation",
										"src": "8412:491:9",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 1466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "8917:23:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8948:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "8941:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1032",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1428,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1427,
														"name": "IERC20",
														"nameLocations": [
															"8941:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1032,
														"src": "8941:6:9"
													},
													"referencedDeclaration": 1032,
													"src": "8941:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1032",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8968:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "8955:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1430,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8955:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8940:33:9"
									},
									"returnParameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "8991:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8991:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8990:6:9"
									},
									"scope": 1467,
									"src": "8908:480:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1468,
							"src": "698:8692:9",
							"usedErrors": [
								1070,
								1079
							],
							"usedEvents": []
						}
					],
					"src": "115:9276:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1497
						]
					},
					"id": 1498,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1469,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:10"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1470,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:10",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1497,
							"linearizedBaseContracts": [
								1497
							],
							"name": "Context",
							"nameLocation": "642:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1478,
										"nodeType": "Block",
										"src": "718:34:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1475,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:10",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1474,
												"id": 1477,
												"nodeType": "Return",
												"src": "728:17:10"
											}
										]
									},
									"id": 1479,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:10"
									},
									"returnParameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "709:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:10"
									},
									"scope": 1497,
									"src": "656:96:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1487,
										"nodeType": "Block",
										"src": "825:32:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1484,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:10",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1483,
												"id": 1486,
												"nodeType": "Return",
												"src": "835:15:10"
											}
										]
									},
									"id": 1488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:10"
									},
									"returnParameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "809:14:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1481,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:10"
									},
									"scope": 1497,
									"src": "758:99:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1495,
										"nodeType": "Block",
										"src": "935:25:10",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1493,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1492,
												"id": 1494,
												"nodeType": "Return",
												"src": "945:8:10"
											}
										]
									},
									"id": 1496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:10"
									},
									"returnParameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "926:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:10"
									},
									"scope": 1497,
									"src": "863:97:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1498,
							"src": "624:338:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1509
						]
					},
					"id": 1510,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1499,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1500,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:11",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1509,
							"linearizedBaseContracts": [
								1509
							],
							"name": "IERC165",
							"nameLocation": "432:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1501,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:11",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1508,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "818:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1502,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:11"
									},
									"returnParameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "861:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1505,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:11"
									},
									"scope": 1509,
									"src": "791:76:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1510,
							"src": "422:447:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:11"
				},
				"id": 11
			},
			"C/commingling .sol": {
				"ast": {
					"absolutePath": "C/commingling .sol",
					"exportedSymbols": {
						"CollateralizedStableCoin": [
							2064
						],
						"Context": [
							1497
						],
						"ERC20": [
							954
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							1032
						],
						"IERC20Errors": [
							279
						],
						"IERC20Metadata": [
							1058
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							439
						],
						"SafeERC20": [
							1467
						],
						"Vault": [
							1587
						]
					},
					"id": 2065,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1511,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1512,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2065,
							"sourceUnit": 955,
							"src": "57:55:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1513,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2065,
							"sourceUnit": 1468,
							"src": "114:65:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1514,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2065,
							"sourceUnit": 148,
							"src": "181:52:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1515,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2065,
							"sourceUnit": 440,
							"src": "234:62:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1517,
										"name": "Ownable",
										"nameLocations": [
											"499:7:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "499:7:12"
									},
									"id": 1518,
									"nodeType": "InheritanceSpecifier",
									"src": "499:7:12"
								}
							],
							"canonicalName": "Vault",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1516,
								"nodeType": "StructuredDocumentation",
								"src": "298:183:12",
								"text": "@notice Vault contract holds a single user’s collateral to avoid commingling with others.\n The vault is deployed for each user and is owned by the main stable coin contract."
							},
							"fullyImplemented": true,
							"id": 1587,
							"linearizedBaseContracts": [
								1587,
								147,
								1497
							],
							"name": "Vault",
							"nameLocation": "490:5:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1522,
									"libraryName": {
										"id": 1519,
										"name": "SafeERC20",
										"nameLocations": [
											"519:9:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1467,
										"src": "519:9:12"
									},
									"nodeType": "UsingForDirective",
									"src": "513:27:12",
									"typeName": {
										"id": 1521,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1520,
											"name": "IERC20",
											"nameLocations": [
												"533:6:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1032,
											"src": "533:6:12"
										},
										"referencedDeclaration": 1032,
										"src": "533:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1032",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "b2016bd4",
									"id": 1525,
									"mutability": "immutable",
									"name": "collateralToken",
									"nameLocation": "574:15:12",
									"nodeType": "VariableDeclaration",
									"scope": 1587,
									"src": "550:39:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$1032",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1524,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1523,
											"name": "IERC20",
											"nameLocations": [
												"550:6:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1032,
											"src": "550:6:12"
										},
										"referencedDeclaration": 1032,
										"src": "550:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1032",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1552,
										"nodeType": "Block",
										"src": "899:133:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1537,
																"name": "_collateralToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1528,
																"src": "917:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "945:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "937:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1538,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "937:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1541,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "937:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "917:30:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420746f6b656e2061646472657373",
															"id": 1543,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "949:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															},
															"value": "Invalid token address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															}
														],
														"id": 1536,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "909:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "909:64:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1545,
												"nodeType": "ExpressionStatement",
												"src": "909:64:12"
											},
											{
												"expression": {
													"id": 1550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1546,
														"name": "collateralToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1525,
														"src": "983:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1032",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1548,
																"name": "_collateralToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1528,
																"src": "1008:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1547,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "1001:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$1032_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1549,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1001:24:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1032",
															"typeString": "contract IERC20"
														}
													},
													"src": "983:42:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1032",
														"typeString": "contract IERC20"
													}
												},
												"id": 1551,
												"nodeType": "ExpressionStatement",
												"src": "983:42:12"
											}
										]
									},
									"documentation": {
										"id": 1526,
										"nodeType": "StructuredDocumentation",
										"src": "600:224:12",
										"text": "@notice The constructor sets the collateral token and assigns ownership.\n @param _collateralToken The address of the collateral ERC20 token.\n @param owner_ The owner of the vault (set to the main contract)."
									},
									"id": 1553,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1533,
													"name": "owner_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1530,
													"src": "891:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1534,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1532,
												"name": "Ownable",
												"nameLocations": [
													"883:7:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "883:7:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "883:15:12"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "_collateralToken",
												"nameLocation": "849:16:12",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "841:24:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "841:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "owner_",
												"nameLocation": "875:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "867:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "840:42:12"
									},
									"returnParameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "899:0:12"
									},
									"scope": 1587,
									"src": "829:203:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1570,
										"nodeType": "Block",
										"src": "1253:57:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1566,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1556,
															"src": "1292:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1567,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1558,
															"src": "1296:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1563,
															"name": "collateralToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1525,
															"src": "1263:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1032",
																"typeString": "contract IERC20"
															}
														},
														"id": 1565,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1279:12:12",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1103,
														"src": "1263:28:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1032_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1032_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1263:40:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1569,
												"nodeType": "ExpressionStatement",
												"src": "1263:40:12"
											}
										]
									},
									"documentation": {
										"id": 1554,
										"nodeType": "StructuredDocumentation",
										"src": "1042:141:12",
										"text": "@notice Withdraws a specified amount of collateral to a given address.\n Can only be called by the vault owner (the main contract)."
									},
									"functionSelector": "f3fef3a3",
									"id": 1571,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1561,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1560,
												"name": "onlyOwner",
												"nameLocations": [
													"1243:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1243:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "1243:9:12"
										}
									],
									"name": "withdraw",
									"nameLocation": "1197:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1214:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "1206:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1206:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1226:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1571,
												"src": "1218:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1218:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1205:28:12"
									},
									"returnParameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1253:0:12"
									},
									"scope": 1587,
									"src": "1188:122:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1585,
										"nodeType": "Block",
										"src": "1437:64:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1581,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1488:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Vault_$1587",
																		"typeString": "contract Vault"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Vault_$1587",
																		"typeString": "contract Vault"
																	}
																],
																"id": 1580,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1480:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1579,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1480:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1480:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1577,
															"name": "collateralToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1525,
															"src": "1454:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1032",
																"typeString": "contract IERC20"
															}
														},
														"id": 1578,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1470:9:12",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 989,
														"src": "1454:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1454:40:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1576,
												"id": 1584,
												"nodeType": "Return",
												"src": "1447:47:12"
											}
										]
									},
									"documentation": {
										"id": 1572,
										"nodeType": "StructuredDocumentation",
										"src": "1320:61:12",
										"text": "@notice Returns the vault’s current collateral balance."
									},
									"functionSelector": "b69ef8a8",
									"id": 1586,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balance",
									"nameLocation": "1395:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1402:2:12"
									},
									"returnParameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "1428:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1428:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1427:9:12"
									},
									"scope": 1587,
									"src": "1386:115:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2065,
							"src": "481:1022:12",
							"usedErrors": [
								13,
								18,
								1070
							],
							"usedEvents": [
								24
							]
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1589,
										"name": "ERC20",
										"nameLocations": [
											"1894:5:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 954,
										"src": "1894:5:12"
									},
									"id": 1590,
									"nodeType": "InheritanceSpecifier",
									"src": "1894:5:12"
								},
								{
									"baseName": {
										"id": 1591,
										"name": "Ownable",
										"nameLocations": [
											"1901:7:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "1901:7:12"
									},
									"id": 1592,
									"nodeType": "InheritanceSpecifier",
									"src": "1901:7:12"
								},
								{
									"baseName": {
										"id": 1593,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"1910:15:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 439,
										"src": "1910:15:12"
									},
									"id": 1594,
									"nodeType": "InheritanceSpecifier",
									"src": "1910:15:12"
								}
							],
							"canonicalName": "CollateralizedStableCoin",
							"contractDependencies": [
								1587
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1588,
								"nodeType": "StructuredDocumentation",
								"src": "1505:352:12",
								"text": "@notice CollateralizedStableCoin is an ERC20 token representing the stable coin.\n Users deposit a collateral ERC20 token into their own vault (preventing commingling),\n then mint stable coins up to a safe collateralization ratio. They can later burn stable coins\n (repay debt) and withdraw collateral provided their position remains safe."
							},
							"fullyImplemented": true,
							"id": 2064,
							"linearizedBaseContracts": [
								2064,
								439,
								147,
								954,
								279,
								1058,
								1032,
								1497
							],
							"name": "CollateralizedStableCoin",
							"nameLocation": "1866:24:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1598,
									"libraryName": {
										"id": 1595,
										"name": "SafeERC20",
										"nameLocations": [
											"1938:9:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1467,
										"src": "1938:9:12"
									},
									"nodeType": "UsingForDirective",
									"src": "1932:27:12",
									"typeName": {
										"id": 1597,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1596,
											"name": "IERC20",
											"nameLocations": [
												"1952:6:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1032,
											"src": "1952:6:12"
										},
										"referencedDeclaration": 1032,
										"src": "1952:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1032",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "b2016bd4",
									"id": 1601,
									"mutability": "immutable",
									"name": "collateralToken",
									"nameLocation": "2051:15:12",
									"nodeType": "VariableDeclaration",
									"scope": 2064,
									"src": "2027:39:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$1032",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1600,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1599,
											"name": "IERC20",
											"nameLocations": [
												"2027:6:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1032,
											"src": "2027:6:12"
										},
										"referencedDeclaration": 1032,
										"src": "2027:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1032",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a1bf2840",
									"id": 1605,
									"mutability": "mutable",
									"name": "collateralBalance",
									"nameLocation": "2204:17:12",
									"nodeType": "VariableDeclaration",
									"scope": 2064,
									"src": "2169:52:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1604,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1602,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2177:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2169:27:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1603,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2188:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "11005b07",
									"id": 1609,
									"mutability": "mutable",
									"name": "debtBalance",
									"nameLocation": "2327:11:12",
									"nodeType": "VariableDeclaration",
									"scope": 2064,
									"src": "2292:46:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1608,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1606,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2300:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2292:27:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1607,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2311:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a622ee7c",
									"id": 1614,
									"mutability": "mutable",
									"name": "vaults",
									"nameLocation": "2435:6:12",
									"nodeType": "VariableDeclaration",
									"scope": 2064,
									"src": "2402:39:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_contract$_Vault_$1587_$",
										"typeString": "mapping(address => contract Vault)"
									},
									"typeName": {
										"id": 1613,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1610,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2410:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2402:25:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_contract$_Vault_$1587_$",
											"typeString": "mapping(address => contract Vault)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1612,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1611,
												"name": "Vault",
												"nameLocations": [
													"2421:5:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1587,
												"src": "2421:5:12"
											},
											"referencedDeclaration": 1587,
											"src": "2421:5:12",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_Vault_$1587",
												"typeString": "contract Vault"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dcaf9c44",
									"id": 1616,
									"mutability": "mutable",
									"name": "collateralizationRatio",
									"nameLocation": "2617:22:12",
									"nodeType": "VariableDeclaration",
									"scope": 2064,
									"src": "2602:37:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1615,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2602:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "d7243f6f8212d5188fd054141cf6ea89cfc0d91facb8c3afe2f88a1358480142",
									"id": 1622,
									"name": "CollateralDeposited",
									"nameLocation": "2678:19:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1618,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2714:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "2698:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2698:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1620,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2728:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "2720:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2720:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2697:38:12"
									},
									"src": "2672:64:12"
								},
								{
									"anonymous": false,
									"eventSelector": "c30fcfbcaac9e0deffa719714eaa82396ff506a0d0d0eebe170830177288715d",
									"id": 1628,
									"name": "CollateralWithdrawn",
									"nameLocation": "2747:19:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1624,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2783:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "2767:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2767:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1626,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2797:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "2789:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2789:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2766:38:12"
									},
									"src": "2741:64:12"
								},
								{
									"anonymous": false,
									"eventSelector": "3f1ae0a6113ff787f6445396e9ec4e9d0f6e1a0f05a9a856206f72f9623a2e9f",
									"id": 1634,
									"name": "StableCoinMinted",
									"nameLocation": "2816:16:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1630,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2849:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "2833:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2833:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1632,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2863:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "2855:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2855:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2832:38:12"
									},
									"src": "2810:61:12"
								},
								{
									"anonymous": false,
									"eventSelector": "e46e4414fb02a244a8932c7ec11c904ddf0313b8403a267c5e583cb565b473af",
									"id": 1640,
									"name": "StableCoinBurned",
									"nameLocation": "2882:16:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1636,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2915:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "2899:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2899:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1638,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2929:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "2921:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2921:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2898:38:12"
									},
									"src": "2876:61:12"
								},
								{
									"body": {
										"id": 1687,
										"nodeType": "Block",
										"src": "3545:302:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1661,
																"name": "_collateralToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1643,
																"src": "3563:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1664,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3591:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1663,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3583:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1662,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3583:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3583:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3563:30:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420636f6c6c61746572616c20746f6b656e2061646472657373",
															"id": 1667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3595:34:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f11883101265ee814d3ec8ca32dd1376e23cf07c21786604713151f75410aa5a",
																"typeString": "literal_string \"Invalid collateral token address\""
															},
															"value": "Invalid collateral token address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f11883101265ee814d3ec8ca32dd1376e23cf07c21786604713151f75410aa5a",
																"typeString": "literal_string \"Invalid collateral token address\""
															}
														],
														"id": 1660,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3555:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3555:75:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1669,
												"nodeType": "ExpressionStatement",
												"src": "3555:75:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1671,
																"name": "_collateralizationRatio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1645,
																"src": "3648:23:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "3130303030",
																"id": 1672,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3675:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															},
															"src": "3648:32:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6c6c61746572616c697a6174696f6e20726174696f206d757374206265206174206c656173742031303025",
															"id": 1674,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3682:47:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b0625f87e31dc518e790285a825bb3c4cd66fc859c380f7e244181f8081e3f92",
																"typeString": "literal_string \"Collateralization ratio must be at least 100%\""
															},
															"value": "Collateralization ratio must be at least 100%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b0625f87e31dc518e790285a825bb3c4cd66fc859c380f7e244181f8081e3f92",
																"typeString": "literal_string \"Collateralization ratio must be at least 100%\""
															}
														],
														"id": 1670,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3640:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3640:90:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1676,
												"nodeType": "ExpressionStatement",
												"src": "3640:90:12"
											},
											{
												"expression": {
													"id": 1681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1677,
														"name": "collateralToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1601,
														"src": "3740:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1032",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1679,
																"name": "_collateralToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1643,
																"src": "3765:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1678,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "3758:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$1032_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1680,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3758:24:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1032",
															"typeString": "contract IERC20"
														}
													},
													"src": "3740:42:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1032",
														"typeString": "contract IERC20"
													}
												},
												"id": 1682,
												"nodeType": "ExpressionStatement",
												"src": "3740:42:12"
											},
											{
												"expression": {
													"id": 1685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1683,
														"name": "collateralizationRatio",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1616,
														"src": "3792:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1684,
														"name": "_collateralizationRatio",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1645,
														"src": "3817:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3792:48:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1686,
												"nodeType": "ExpressionStatement",
												"src": "3792:48:12"
											}
										]
									},
									"documentation": {
										"id": 1641,
										"nodeType": "StructuredDocumentation",
										"src": "2947:380:12",
										"text": "@notice Constructor sets the collateral token, initial collateralization ratio, and stable coin details.\n @param _collateralToken Address of the collateral ERC20 token.\n @param _collateralizationRatio Required collateralization ratio in basis points (>= 10000 = 100%).\n @param name Name of the stable coin.\n @param symbol Symbol of the stable coin."
									},
									"id": 1688,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1652,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1647,
													"src": "3499:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 1653,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1649,
													"src": "3505:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 1654,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1651,
												"name": "ERC20",
												"nameLocations": [
													"3493:5:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 954,
												"src": "3493:5:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "3493:19:12"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1656,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3529:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3533:6:12",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "3529:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1658,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1655,
												"name": "Ownable",
												"nameLocations": [
													"3521:7:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "3521:7:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "3521:19:12"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "_collateralToken",
												"nameLocation": "3361:16:12",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "3353:24:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3353:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "_collateralizationRatio",
												"nameLocation": "3395:23:12",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "3387:31:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3387:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "3443:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "3429:18:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1646,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3429:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "3472:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "3458:20:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1648,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3458:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3343:141:12"
									},
									"returnParameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3545:0:12"
									},
									"scope": 2064,
									"src": "3332:515:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1736,
										"nodeType": "Block",
										"src": "3993:215:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"baseExpression": {
																	"id": 1699,
																	"name": "vaults",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1614,
																	"src": "4015:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_contract$_Vault_$1587_$",
																		"typeString": "mapping(address => contract Vault)"
																	}
																},
																"id": 1701,
																"indexExpression": {
																	"id": 1700,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1691,
																	"src": "4022:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4015:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Vault_$1587",
																	"typeString": "contract Vault"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_Vault_$1587",
																	"typeString": "contract Vault"
																}
															],
															"id": 1698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4007:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1697,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4007:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 1702,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4007:21:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4040:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4032:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4032:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 1706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4032:10:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4007:35:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1731,
												"nodeType": "IfStatement",
												"src": "4003:170:12",
												"trueBody": {
													"id": 1730,
													"nodeType": "Block",
													"src": "4044:129:12",
													"statements": [
														{
															"assignments": [
																1710
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1710,
																	"mutability": "mutable",
																	"name": "newVault",
																	"nameLocation": "4064:8:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 1730,
																	"src": "4058:14:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Vault_$1587",
																		"typeString": "contract Vault"
																	},
																	"typeName": {
																		"id": 1709,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1708,
																			"name": "Vault",
																			"nameLocations": [
																				"4058:5:12"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 1587,
																			"src": "4058:5:12"
																		},
																		"referencedDeclaration": 1587,
																		"src": "4058:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Vault_$1587",
																			"typeString": "contract Vault"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1723,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1716,
																				"name": "collateralToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1601,
																				"src": "4093:15:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$1032",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$1032",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 1715,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4085:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1714,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4085:7:12",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1717,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4085:24:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1720,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4119:4:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_CollateralizedStableCoin_$2064",
																					"typeString": "contract CollateralizedStableCoin"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_CollateralizedStableCoin_$2064",
																					"typeString": "contract CollateralizedStableCoin"
																				}
																			],
																			"id": 1719,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4111:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1718,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4111:7:12",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4111:13:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "4075:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$returns$_t_contract$_Vault_$1587_$",
																		"typeString": "function (address,address) returns (contract Vault)"
																	},
																	"typeName": {
																		"id": 1712,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1711,
																			"name": "Vault",
																			"nameLocations": [
																				"4079:5:12"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 1587,
																			"src": "4079:5:12"
																		},
																		"referencedDeclaration": 1587,
																		"src": "4079:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Vault_$1587",
																			"typeString": "contract Vault"
																		}
																	}
																},
																"id": 1722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4075:50:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Vault_$1587",
																	"typeString": "contract Vault"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4058:67:12"
														},
														{
															"expression": {
																"id": 1728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1724,
																		"name": "vaults",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1614,
																		"src": "4139:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_contract$_Vault_$1587_$",
																			"typeString": "mapping(address => contract Vault)"
																		}
																	},
																	"id": 1726,
																	"indexExpression": {
																		"id": 1725,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1691,
																		"src": "4146:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4139:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Vault_$1587",
																		"typeString": "contract Vault"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1727,
																	"name": "newVault",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1710,
																	"src": "4154:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Vault_$1587",
																		"typeString": "contract Vault"
																	}
																},
																"src": "4139:23:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_Vault_$1587",
																	"typeString": "contract Vault"
																}
															},
															"id": 1729,
															"nodeType": "ExpressionStatement",
															"src": "4139:23:12"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1732,
														"name": "vaults",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1614,
														"src": "4189:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_contract$_Vault_$1587_$",
															"typeString": "mapping(address => contract Vault)"
														}
													},
													"id": 1734,
													"indexExpression": {
														"id": 1733,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1691,
														"src": "4196:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4189:12:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Vault_$1587",
														"typeString": "contract Vault"
													}
												},
												"functionReturnParameters": 1696,
												"id": 1735,
												"nodeType": "Return",
												"src": "4182:19:12"
											}
										]
									},
									"documentation": {
										"id": 1689,
										"nodeType": "StructuredDocumentation",
										"src": "3857:73:12",
										"text": "@notice Internal helper to retrieve (or create) the vault for a user."
									},
									"id": 1737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getVault",
									"nameLocation": "3944:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1691,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3962:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "3954:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:14:12"
									},
									"returnParameters": {
										"id": 1696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "3986:5:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_Vault_$1587",
													"typeString": "contract Vault"
												},
												"typeName": {
													"id": 1694,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1693,
														"name": "Vault",
														"nameLocations": [
															"3986:5:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1587,
														"src": "3986:5:12"
													},
													"referencedDeclaration": 1587,
													"src": "3986:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Vault_$1587",
														"typeString": "contract Vault"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3985:7:12"
									},
									"scope": 2064,
									"src": "3935:273:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1785,
										"nodeType": "Block",
										"src": "4423:350:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1746,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1740,
																"src": "4441:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1747,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4450:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4441:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d757374206265203e2030",
															"id": 1749,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4453:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																"typeString": "literal_string \"Amount must be > 0\""
															},
															"value": "Amount must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																"typeString": "literal_string \"Amount must be > 0\""
															}
														],
														"id": 1745,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4433:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4433:41:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1751,
												"nodeType": "ExpressionStatement",
												"src": "4433:41:12"
											},
											{
												"assignments": [
													1754
												],
												"declarations": [
													{
														"constant": false,
														"id": 1754,
														"mutability": "mutable",
														"name": "vault",
														"nameLocation": "4490:5:12",
														"nodeType": "VariableDeclaration",
														"scope": 1785,
														"src": "4484:11:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Vault_$1587",
															"typeString": "contract Vault"
														},
														"typeName": {
															"id": 1753,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1752,
																"name": "Vault",
																"nameLocations": [
																	"4484:5:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1587,
																"src": "4484:5:12"
															},
															"referencedDeclaration": 1587,
															"src": "4484:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Vault_$1587",
																"typeString": "contract Vault"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1759,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1756,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4508:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4512:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4508:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1755,
														"name": "_getVault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1737,
														"src": "4498:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_contract$_Vault_$1587_$",
															"typeString": "function (address) returns (contract Vault)"
														}
													},
													"id": 1758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4498:21:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Vault_$1587",
														"typeString": "contract Vault"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4484:35:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1763,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4628:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4632:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4628:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1767,
																	"name": "vault",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1754,
																	"src": "4648:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Vault_$1587",
																		"typeString": "contract Vault"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Vault_$1587",
																		"typeString": "contract Vault"
																	}
																],
																"id": 1766,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4640:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1765,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4640:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4640:14:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1769,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1740,
															"src": "4656:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1760,
															"name": "collateralToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1601,
															"src": "4595:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1032",
																"typeString": "contract IERC20"
															}
														},
														"id": 1762,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4611:16:12",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1130,
														"src": "4595:32:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1032_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1032_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4595:68:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1771,
												"nodeType": "ExpressionStatement",
												"src": "4595:68:12"
											},
											{
												"expression": {
													"id": 1777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1772,
															"name": "collateralBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1605,
															"src": "4673:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1775,
														"indexExpression": {
															"expression": {
																"id": 1773,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4691:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4695:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4691:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4673:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1776,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1740,
														"src": "4706:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4673:39:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1778,
												"nodeType": "ExpressionStatement",
												"src": "4673:39:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1780,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4747:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4751:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4747:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1782,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1740,
															"src": "4759:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1779,
														"name": "CollateralDeposited",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1622,
														"src": "4727:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4727:39:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1784,
												"nodeType": "EmitStatement",
												"src": "4722:44:12"
											}
										]
									},
									"documentation": {
										"id": 1738,
										"nodeType": "StructuredDocumentation",
										"src": "4218:135:12",
										"text": "@notice Deposit collateral into your personal vault.\n The deposited amount is tracked and stored in a vault specific to you."
									},
									"functionSelector": "bad4a01f",
									"id": 1786,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1743,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1742,
												"name": "nonReentrant",
												"nameLocations": [
													"4410:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 404,
												"src": "4410:12:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "4410:12:12"
										}
									],
									"name": "depositCollateral",
									"nameLocation": "4367:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4393:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1786,
												"src": "4385:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4385:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4384:16:12"
									},
									"returnParameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4423:0:12"
									},
									"scope": 2064,
									"src": "4358:415:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1875,
										"nodeType": "Block",
										"src": "4994:656:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1797,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1795,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1789,
																"src": "5012:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1796,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5021:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5012:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d757374206265203e2030",
															"id": 1798,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5024:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																"typeString": "literal_string \"Amount must be > 0\""
															},
															"value": "Amount must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																"typeString": "literal_string \"Amount must be > 0\""
															}
														],
														"id": 1794,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5004:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5004:41:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1800,
												"nodeType": "ExpressionStatement",
												"src": "5004:41:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1802,
																	"name": "collateralBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1605,
																	"src": "5063:17:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1805,
																"indexExpression": {
																	"expression": {
																		"id": 1803,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5081:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1804,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5085:6:12",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5081:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5063:29:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1806,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1789,
																"src": "5096:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5063:39:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420636f6c6c61746572616c2062616c616e6365",
															"id": 1808,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5104:33:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5978e55655ae94e38fa7726ce96ce1eb90620fc9a937aeb007bc6487f417e4de",
																"typeString": "literal_string \"Insufficient collateral balance\""
															},
															"value": "Insufficient collateral balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5978e55655ae94e38fa7726ce96ce1eb90620fc9a937aeb007bc6487f417e4de",
																"typeString": "literal_string \"Insufficient collateral balance\""
															}
														],
														"id": 1801,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5055:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5055:83:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1810,
												"nodeType": "ExpressionStatement",
												"src": "5055:83:12"
											},
											{
												"assignments": [
													1812
												],
												"declarations": [
													{
														"constant": false,
														"id": 1812,
														"mutability": "mutable",
														"name": "newCollateral",
														"nameLocation": "5165:13:12",
														"nodeType": "VariableDeclaration",
														"scope": 1875,
														"src": "5157:21:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1811,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5157:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1819,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1813,
															"name": "collateralBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1605,
															"src": "5181:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1816,
														"indexExpression": {
															"expression": {
																"id": 1814,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5199:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5203:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5199:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5181:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1817,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1789,
														"src": "5213:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5181:38:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5157:62:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1822,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5261:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1823,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5265:6:12",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5261:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1824,
																	"name": "newCollateral",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1812,
																	"src": "5273:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"baseExpression": {
																		"id": 1825,
																		"name": "debtBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1609,
																		"src": "5288:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1828,
																	"indexExpression": {
																		"expression": {
																			"id": 1826,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5300:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1827,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5304:6:12",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5300:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5288:23:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1821,
																"name": "_isCollateralSufficient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2008,
																"src": "5237:23:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,uint256) view returns (bool)"
																}
															},
															"id": 1829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5237:75:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5769746864726177616c20776f756c642062726561636820636f6c6c61746572616c697a6174696f6e20726174696f",
															"id": 1830,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5314:49:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_59f034818b0329044bc3dd8d1236d7e23aa7fbe805dec217b13e45ed2e126a55",
																"typeString": "literal_string \"Withdrawal would breach collateralization ratio\""
															},
															"value": "Withdrawal would breach collateralization ratio"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_59f034818b0329044bc3dd8d1236d7e23aa7fbe805dec217b13e45ed2e126a55",
																"typeString": "literal_string \"Withdrawal would breach collateralization ratio\""
															}
														],
														"id": 1820,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5229:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:135:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1832,
												"nodeType": "ExpressionStatement",
												"src": "5229:135:12"
											},
											{
												"expression": {
													"id": 1838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1833,
															"name": "collateralBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1605,
															"src": "5383:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1836,
														"indexExpression": {
															"expression": {
																"id": 1834,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5401:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5405:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5401:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5383:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1837,
														"name": "newCollateral",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1812,
														"src": "5415:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5383:45:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1839,
												"nodeType": "ExpressionStatement",
												"src": "5383:45:12"
											},
											{
												"assignments": [
													1842
												],
												"declarations": [
													{
														"constant": false,
														"id": 1842,
														"mutability": "mutable",
														"name": "vault",
														"nameLocation": "5444:5:12",
														"nodeType": "VariableDeclaration",
														"scope": 1875,
														"src": "5438:11:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Vault_$1587",
															"typeString": "contract Vault"
														},
														"typeName": {
															"id": 1841,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1840,
																"name": "Vault",
																"nameLocations": [
																	"5438:5:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1587,
																"src": "5438:5:12"
															},
															"referencedDeclaration": 1587,
															"src": "5438:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Vault_$1587",
																"typeString": "contract Vault"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1847,
												"initialValue": {
													"baseExpression": {
														"id": 1843,
														"name": "vaults",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1614,
														"src": "5452:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_contract$_Vault_$1587_$",
															"typeString": "mapping(address => contract Vault)"
														}
													},
													"id": 1846,
													"indexExpression": {
														"expression": {
															"id": 1844,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "5459:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1845,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5463:6:12",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "5459:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5452:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Vault_$1587",
														"typeString": "contract Vault"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5438:32:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1851,
																		"name": "vault",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1842,
																		"src": "5496:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Vault_$1587",
																			"typeString": "contract Vault"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Vault_$1587",
																			"typeString": "contract Vault"
																		}
																	],
																	"id": 1850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5488:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1849,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5488:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5488:14:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5514:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1854,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5506:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1853,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5506:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1856,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5506:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5488:28:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f207661756c742065786973747320666f722075736572",
															"id": 1858,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5518:26:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5821c66d801abd0f067bed9f888f52bbd0ec900df9f86f6117638508d1a7ebba",
																"typeString": "literal_string \"No vault exists for user\""
															},
															"value": "No vault exists for user"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5821c66d801abd0f067bed9f888f52bbd0ec900df9f86f6117638508d1a7ebba",
																"typeString": "literal_string \"No vault exists for user\""
															}
														],
														"id": 1848,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5480:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5480:65:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1860,
												"nodeType": "ExpressionStatement",
												"src": "5480:65:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1864,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5570:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5574:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5570:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1866,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1789,
															"src": "5582:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1861,
															"name": "vault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1842,
															"src": "5555:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Vault_$1587",
																"typeString": "contract Vault"
															}
														},
														"id": 1863,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5561:8:12",
														"memberName": "withdraw",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1571,
														"src": "5555:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5555:34:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1868,
												"nodeType": "ExpressionStatement",
												"src": "5555:34:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1870,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5624:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5628:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5624:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1872,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1789,
															"src": "5636:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1869,
														"name": "CollateralWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1628,
														"src": "5604:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5604:39:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1874,
												"nodeType": "EmitStatement",
												"src": "5599:44:12"
											}
										]
									},
									"documentation": {
										"id": 1787,
										"nodeType": "StructuredDocumentation",
										"src": "4783:140:12",
										"text": "@notice Withdraw collateral from your vault.\n Allowed only if the remaining collateral keeps your position safely collateralized."
									},
									"functionSelector": "6112fe2e",
									"id": 1876,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1792,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1791,
												"name": "nonReentrant",
												"nameLocations": [
													"4981:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 404,
												"src": "4981:12:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "4981:12:12"
										}
									],
									"name": "withdrawCollateral",
									"nameLocation": "4937:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1789,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4964:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1876,
												"src": "4956:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4956:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4955:16:12"
									},
									"returnParameters": {
										"id": 1793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4994:0:12"
									},
									"scope": 2064,
									"src": "4928:722:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1932,
										"nodeType": "Block",
										"src": "5869:397:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1885,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1879,
																"src": "5887:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1886,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5896:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5887:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d757374206265203e2030",
															"id": 1888,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5899:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																"typeString": "literal_string \"Amount must be > 0\""
															},
															"value": "Amount must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																"typeString": "literal_string \"Amount must be > 0\""
															}
														],
														"id": 1884,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5879:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5879:41:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1890,
												"nodeType": "ExpressionStatement",
												"src": "5879:41:12"
											},
											{
												"assignments": [
													1892
												],
												"declarations": [
													{
														"constant": false,
														"id": 1892,
														"mutability": "mutable",
														"name": "newDebt",
														"nameLocation": "5938:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 1932,
														"src": "5930:15:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1891,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5930:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1899,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1893,
															"name": "debtBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1609,
															"src": "5948:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1896,
														"indexExpression": {
															"expression": {
																"id": 1894,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5960:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5964:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5960:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5948:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1897,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1879,
														"src": "5974:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5948:32:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5930:50:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1902,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "6022:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1903,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6026:6:12",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "6022:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"baseExpression": {
																		"id": 1904,
																		"name": "collateralBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1605,
																		"src": "6034:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1907,
																	"indexExpression": {
																		"expression": {
																			"id": 1905,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6052:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1906,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6056:6:12",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6052:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6034:29:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1908,
																	"name": "newDebt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1892,
																	"src": "6065:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1901,
																"name": "_isCollateralSufficient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2008,
																"src": "5998:23:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,uint256) view returns (bool)"
																}
															},
															"id": 1909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5998:75:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420636f6c6c61746572616c20746f206d696e74207468617420616d6f756e74",
															"id": 1910,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6075:45:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0e36ef5e15ed9013dd7607096cd93e0b2ef988dfde5f216aa728191847127f83",
																"typeString": "literal_string \"Insufficient collateral to mint that amount\""
															},
															"value": "Insufficient collateral to mint that amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0e36ef5e15ed9013dd7607096cd93e0b2ef988dfde5f216aa728191847127f83",
																"typeString": "literal_string \"Insufficient collateral to mint that amount\""
															}
														],
														"id": 1900,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5990:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5990:131:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1912,
												"nodeType": "ExpressionStatement",
												"src": "5990:131:12"
											},
											{
												"expression": {
													"id": 1918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1913,
															"name": "debtBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1609,
															"src": "6140:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1916,
														"indexExpression": {
															"expression": {
																"id": 1914,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6152:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6156:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6152:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6140:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1917,
														"name": "newDebt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1892,
														"src": "6166:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6140:33:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1919,
												"nodeType": "ExpressionStatement",
												"src": "6140:33:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1921,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6189:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1922,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6193:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6189:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1923,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1879,
															"src": "6201:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1920,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "6183:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6183:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1925,
												"nodeType": "ExpressionStatement",
												"src": "6183:25:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1927,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6240:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1928,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6244:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6240:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1929,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1879,
															"src": "6252:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1926,
														"name": "StableCoinMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1634,
														"src": "6223:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6223:36:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1931,
												"nodeType": "EmitStatement",
												"src": "6218:41:12"
											}
										]
									},
									"documentation": {
										"id": 1877,
										"nodeType": "StructuredDocumentation",
										"src": "5660:142:12",
										"text": "@notice Mint stable coins against your deposited collateral.\n Your debt increases, and new stable coins are minted to your account."
									},
									"functionSelector": "bfa244fe",
									"id": 1933,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1882,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1881,
												"name": "nonReentrant",
												"nameLocations": [
													"5856:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 404,
												"src": "5856:12:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "5856:12:12"
										}
									],
									"name": "mintStableCoin",
									"nameLocation": "5816:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1879,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5839:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1933,
												"src": "5831:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5831:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5830:16:12"
									},
									"returnParameters": {
										"id": 1883,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5869:0:12"
									},
									"scope": 2064,
									"src": "5807:459:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1977,
										"nodeType": "Block",
										"src": "6387:271:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1944,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1942,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1936,
																"src": "6405:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1943,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6414:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6405:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d757374206265203e2030",
															"id": 1945,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6417:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																"typeString": "literal_string \"Amount must be > 0\""
															},
															"value": "Amount must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																"typeString": "literal_string \"Amount must be > 0\""
															}
														],
														"id": 1941,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6397:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6397:41:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1947,
												"nodeType": "ExpressionStatement",
												"src": "6397:41:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1954,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1949,
																	"name": "debtBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1609,
																	"src": "6456:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1952,
																"indexExpression": {
																	"expression": {
																		"id": 1950,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "6468:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1951,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6472:6:12",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "6468:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6456:23:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1953,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1936,
																"src": "6483:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6456:33:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e7420657863656564732064656274",
															"id": 1955,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6491:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_969d0e7bdc9f60900822ca06581f62f1488479b8fc44dc0279e23a50719ed79d",
																"typeString": "literal_string \"Amount exceeds debt\""
															},
															"value": "Amount exceeds debt"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_969d0e7bdc9f60900822ca06581f62f1488479b8fc44dc0279e23a50719ed79d",
																"typeString": "literal_string \"Amount exceeds debt\""
															}
														],
														"id": 1948,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6448:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6448:65:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1957,
												"nodeType": "ExpressionStatement",
												"src": "6448:65:12"
											},
											{
												"expression": {
													"id": 1963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1958,
															"name": "debtBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1609,
															"src": "6532:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1961,
														"indexExpression": {
															"expression": {
																"id": 1959,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6544:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6548:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6544:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6532:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1962,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1936,
														"src": "6559:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6532:33:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1964,
												"nodeType": "ExpressionStatement",
												"src": "6532:33:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1966,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6581:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1967,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6585:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6581:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1968,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1936,
															"src": "6593:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1965,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "6575:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6575:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1970,
												"nodeType": "ExpressionStatement",
												"src": "6575:25:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1972,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6632:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6636:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6632:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1974,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1936,
															"src": "6644:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1971,
														"name": "StableCoinBurned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1640,
														"src": "6615:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6615:36:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1976,
												"nodeType": "EmitStatement",
												"src": "6610:41:12"
											}
										]
									},
									"documentation": {
										"id": 1934,
										"nodeType": "StructuredDocumentation",
										"src": "6276:44:12",
										"text": "@notice Burn stable coins to repay debt."
									},
									"functionSelector": "4798eb21",
									"id": 1978,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1939,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1938,
												"name": "nonReentrant",
												"nameLocations": [
													"6374:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 404,
												"src": "6374:12:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "6374:12:12"
										}
									],
									"name": "burnStableCoin",
									"nameLocation": "6334:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6357:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "6349:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6349:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6348:16:12"
									},
									"returnParameters": {
										"id": 1940,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6387:0:12"
									},
									"scope": 2064,
									"src": "6325:333:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2007,
										"nodeType": "Block",
										"src": "6952:148:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1990,
														"name": "debtAmt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1985,
														"src": "6966:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1991,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6977:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6966:12:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1996,
												"nodeType": "IfStatement",
												"src": "6962:54:12",
												"trueBody": {
													"id": 1995,
													"nodeType": "Block",
													"src": "6980:36:12",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1993,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7001:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1989,
															"id": 1994,
															"nodeType": "Return",
															"src": "6994:11:12"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1999,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1997,
																	"name": "collateralAmt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1983,
																	"src": "7033:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3130303030",
																	"id": 1998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7049:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "10000"
																},
																"src": "7033:21:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2000,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7032:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2003,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2001,
																	"name": "debtAmt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1985,
																	"src": "7060:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2002,
																	"name": "collateralizationRatio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1616,
																	"src": "7070:22:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7060:32:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2004,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7059:34:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7032:61:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1989,
												"id": 2006,
												"nodeType": "Return",
												"src": "7025:68:12"
											}
										]
									},
									"documentation": {
										"id": 1979,
										"nodeType": "StructuredDocumentation",
										"src": "6668:163:12",
										"text": "@notice Internal helper to verify that collateral and debt satisfy the collateralization ratio.\n Assumes a 1:1 price between collateral and stable coin."
									},
									"id": 2008,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isCollateralSufficient",
									"nameLocation": "6845:23:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1981,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "6877:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "6869:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1980,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6869:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1983,
												"mutability": "mutable",
												"name": "collateralAmt",
												"nameLocation": "6891:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "6883:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6883:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "debtAmt",
												"nameLocation": "6914:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "6906:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6906:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6868:54:12"
									},
									"returnParameters": {
										"id": 1989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1988,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "6946:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1987,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6946:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6945:6:12"
									},
									"scope": 2064,
									"src": "6836:264:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2042,
										"nodeType": "Block",
										"src": "7347:179:12",
										"statements": [
											{
												"assignments": [
													2017
												],
												"declarations": [
													{
														"constant": false,
														"id": 2017,
														"mutability": "mutable",
														"name": "debt",
														"nameLocation": "7365:4:12",
														"nodeType": "VariableDeclaration",
														"scope": 2042,
														"src": "7357:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2016,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7357:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2021,
												"initialValue": {
													"baseExpression": {
														"id": 2018,
														"name": "debtBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1609,
														"src": "7372:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2020,
													"indexExpression": {
														"id": 2019,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2011,
														"src": "7384:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7372:17:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7357:32:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2022,
														"name": "debt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2017,
														"src": "7403:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2023,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7411:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7403:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2032,
												"nodeType": "IfStatement",
												"src": "7399:64:12",
												"trueBody": {
													"id": 2031,
													"nodeType": "Block",
													"src": "7414:49:12",
													"statements": [
														{
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2027,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7440:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 2026,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "7440:7:12",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			}
																		],
																		"id": 2025,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "7435:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 2028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7435:13:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint256",
																		"typeString": "type(uint256)"
																	}
																},
																"id": 2029,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7449:3:12",
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "7435:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2015,
															"id": 2030,
															"nodeType": "Return",
															"src": "7428:24:12"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2037,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 2033,
																		"name": "collateralBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1605,
																		"src": "7480:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2035,
																	"indexExpression": {
																		"id": 2034,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2011,
																		"src": "7498:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7480:23:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3130303030",
																	"id": 2036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7506:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "10000"
																},
																"src": "7480:31:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2038,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7479:33:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2039,
														"name": "debt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2017,
														"src": "7515:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7479:40:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2015,
												"id": 2041,
												"nodeType": "Return",
												"src": "7472:47:12"
											}
										]
									},
									"documentation": {
										"id": 2009,
										"nodeType": "StructuredDocumentation",
										"src": "7110:147:12",
										"text": "@notice Returns the current collateralization ratio for a user (in basis points).\n If the user has no debt, returns the maximum uint256."
									},
									"functionSelector": "e1d5e571",
									"id": 2043,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserCollateralizationRatio",
									"nameLocation": "7271:29:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2011,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "7309:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2043,
												"src": "7301:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2010,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7301:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7300:14:12"
									},
									"returnParameters": {
										"id": 2015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2014,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2043,
												"src": "7338:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7338:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7337:9:12"
									},
									"scope": 2064,
									"src": "7262:264:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2062,
										"nodeType": "Block",
										"src": "7682:135:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2054,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2052,
																"name": "newRatio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2046,
																"src": "7700:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "3130303030",
																"id": 2053,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7712:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															},
															"src": "7700:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6c6c61746572616c697a6174696f6e20726174696f206d757374206265206174206c656173742031303025",
															"id": 2055,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7719:47:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b0625f87e31dc518e790285a825bb3c4cd66fc859c380f7e244181f8081e3f92",
																"typeString": "literal_string \"Collateralization ratio must be at least 100%\""
															},
															"value": "Collateralization ratio must be at least 100%"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b0625f87e31dc518e790285a825bb3c4cd66fc859c380f7e244181f8081e3f92",
																"typeString": "literal_string \"Collateralization ratio must be at least 100%\""
															}
														],
														"id": 2051,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7692:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7692:75:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2057,
												"nodeType": "ExpressionStatement",
												"src": "7692:75:12"
											},
											{
												"expression": {
													"id": 2060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2058,
														"name": "collateralizationRatio",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1616,
														"src": "7777:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2059,
														"name": "newRatio",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2046,
														"src": "7802:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7777:33:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2061,
												"nodeType": "ExpressionStatement",
												"src": "7777:33:12"
											}
										]
									},
									"documentation": {
										"id": 2044,
										"nodeType": "StructuredDocumentation",
										"src": "7536:66:12",
										"text": "@notice Owner can update the required collateralization ratio."
									},
									"functionSelector": "0607ec70",
									"id": 2063,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2049,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2048,
												"name": "onlyOwner",
												"nameLocations": [
													"7672:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "7672:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "7672:9:12"
										}
									],
									"name": "updateCollateralizationRatio",
									"nameLocation": "7616:28:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2046,
												"mutability": "mutable",
												"name": "newRatio",
												"nameLocation": "7653:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2063,
												"src": "7645:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2045,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7645:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7644:18:12"
									},
									"returnParameters": {
										"id": 2050,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7682:0:12"
									},
									"scope": 2064,
									"src": "7607:210:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2065,
							"src": "1857:5962:12",
							"usedErrors": [
								13,
								18,
								249,
								254,
								259,
								268,
								273,
								278,
								1070
							],
							"usedEvents": [
								24,
								966,
								975,
								1622,
								1628,
								1634,
								1640
							]
						}
					],
					"src": "32:7788:12"
				},
				"id": 12
			}
		}
	}
}