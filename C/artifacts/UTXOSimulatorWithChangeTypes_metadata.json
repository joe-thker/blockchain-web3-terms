{
	"compiler": {
		"version": "0.8.19+commit.7dd6d404"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "totalInput",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "sentAmount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "change",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "changeType",
						"type": "uint8"
					}
				],
				"name": "TransactionExecuted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "UTXOCreated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "UTXOSpent",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "deposit",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "nextUTXOId",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[]",
						"name": "utxoIds",
						"type": "uint256[]"
					},
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "uint8",
						"name": "changeType",
						"type": "uint8"
					}
				],
				"name": "send",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "utxos",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "spent",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"send(uint256[],address,uint256,uint8)": {
					"params": {
						"amount": "The amount to send (in wei).",
						"changeType": "The change mode (0, 1, or 2).",
						"recipient": "The address of the recipient.",
						"utxoIds": "An array of UTXO IDs to use as inputs."
					}
				}
			},
			"title": "UTXOSimulatorWithChangeTypes",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"deposit()": {
					"notice": "Deposits Ether and creates a new UTXO."
				},
				"send(uint256[],address,uint256,uint8)": {
					"notice": "Sends Ether using specified UTXOs. The function supports three types of change handling: changeType 0: Exact Payment (require totalInput == amount) changeType 1: Single Change Output (one UTXO for all change) changeType 2: Multiple Change Outputs (split change into two UTXOs)"
				}
			},
			"notice": "This contract simulates a basic UTXO model with different types of change outputs. Users can deposit Ether to create UTXOs and then spend them. Depending on the changeType parameter, the contract will handle \"change\" in three ways: 0 - Exact Payment: require input equals payment (no change). 1 - Single Change Output: create one UTXO for all the change. 2 - Multiple Change Outputs: split the change into two separate UTXOs.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"C/changeTypes.sol": "UTXOSimulatorWithChangeTypes"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"C/changeTypes.sol": {
			"keccak256": "0x5e8e3fb7289499687076333d0cdb4788ffa8923690d15a10bfe5f5a0d0987a3d",
			"license": "MIT",
			"urls": [
				"bzz-raw://f432872a47065ec929ac5d45c7119d4fd0eacd8e2984d11197a3dec4ec1f618a",
				"dweb:/ipfs/Qmd5iX6j1RFUnRaoTfioaUPqSA17b3ABpJs12d6G9pYNe8"
			]
		}
	},
	"version": 1
}