{
	"compiler": {
		"version": "0.8.20+commit.a1b79de6"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "initialCPI",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "OwnableInvalidOwner",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "OwnableUnauthorizedAccount",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "cpi",
						"type": "uint256"
					}
				],
				"name": "CPIUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "DECIMALS",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "index1",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "index2",
						"type": "uint256"
					}
				],
				"name": "computeInflation",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "inflationRate",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "getCPIRecord",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "cpi",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getCurrentCPI",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getRecordCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "newCPI",
						"type": "uint256"
					}
				],
				"name": "updateCPI",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"errors": {
				"OwnableInvalidOwner(address)": [
					{
						"details": "The owner is not a valid owner account. (eg. `address(0)`)"
					}
				],
				"OwnableUnauthorizedAccount(address)": [
					{
						"details": "The caller account is not authorized to perform an operation."
					}
				]
			},
			"kind": "dev",
			"methods": {
				"computeInflation(uint256,uint256)": {
					"params": {
						"index1": "The index of the earlier record.",
						"index2": "The index of the later record (must be greater than index1)."
					},
					"returns": {
						"inflationRate": "The inflation rate as a percentage (scaled by DECIMALS). For example, a result of 0.05 * DECIMALS represents 5% inflation."
					}
				},
				"constructor": {
					"params": {
						"initialCPI": "The initial CPI value (scaled by DECIMALS)."
					}
				},
				"getCPIRecord(uint256)": {
					"params": {
						"index": "The index of the record (0-based)."
					},
					"returns": {
						"cpi": "The CPI value at that time (scaled by DECIMALS).",
						"timestamp": "The timestamp of the record."
					}
				},
				"getCurrentCPI()": {
					"returns": {
						"_0": "The most recent CPI value (scaled by DECIMALS)."
					}
				},
				"getRecordCount()": {
					"returns": {
						"_0": "The count of CPI updates."
					}
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				},
				"updateCPI(uint256)": {
					"params": {
						"newCPI": "The new CPI value (scaled by DECIMALS)."
					}
				}
			},
			"title": "ConsumerPriceIndex",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"computeInflation(uint256,uint256)": {
					"notice": "Computes the inflation rate between two CPI records."
				},
				"constructor": {
					"notice": "Constructor sets the initial CPI value."
				},
				"getCPIRecord(uint256)": {
					"notice": "Returns the CPI record at a given index."
				},
				"getCurrentCPI()": {
					"notice": "Returns the current CPI value."
				},
				"getRecordCount()": {
					"notice": "Returns the total number of CPI records stored."
				},
				"updateCPI(uint256)": {
					"notice": "Allows the owner to update the CPI value."
				}
			},
			"notice": "This contract maintains a historical record of the Consumer Price Index (CPI). The owner can update the CPI value, and each update is recorded along with a timestamp. This design is dynamic (supports multiple updates), optimized (stores only necessary records), and secure (using Ownable and ReentrancyGuard).",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"C/Consumer Price Index.sol": "ConsumerPriceIndex"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
			"license": "MIT",
			"urls": [
				"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
				"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
			]
		},
		"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
			"keccak256": "0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1",
			"license": "MIT",
			"urls": [
				"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34",
				"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
				"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
			]
		},
		"C/Consumer Price Index.sol": {
			"keccak256": "0xb0f852cc292a9fbe17fb02af703a75411a68bd718014e74c383481be58e89afb",
			"license": "MIT",
			"urls": [
				"bzz-raw://7a33967f62ec19974237e2f4a918f0685e932e1c2b71c48afab846d0612e7bc2",
				"dweb:/ipfs/QmQaSRGDbkHWvvoM1P1e8WdgoDDZa6NXTfaEq69zecPU4L"
			]
		}
	},
	"version": 1
}