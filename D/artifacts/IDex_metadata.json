{
	"compiler": {
		"version": "0.8.25+commit.b61c2a91"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenIn",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "tokenOut",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amountIn",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "minOut",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					}
				],
				"name": "swap",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amountOut",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"swap(address,address,uint256,uint256,address)": {
					"params": {
						"amountIn": "The exact amount of tokenIn to swap.",
						"minOut": "The minimum acceptable amount of tokenOut.",
						"to": "The address to receive the swapped tokens.",
						"tokenIn": "The address of the input token.",
						"tokenOut": "The address of the output token."
					},
					"returns": {
						"amountOut": "The actual amount of tokenOut received from the swap."
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"swap(address,address,uint256,uint256,address)": {
					"notice": "Swaps a specified amount of tokenIn for at least minOut of tokenOut, sending the result to `to`."
				}
			},
			"notice": "A simplified DEX interface for a generic swap function.",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"D/dexAggregator.sol": "IDex"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
			"license": "MIT",
			"urls": [
				"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
				"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
			]
		},
		"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
			"keccak256": "0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1",
			"license": "MIT",
			"urls": [
				"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34",
				"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
				"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
			]
		},
		"D/dexAggregator.sol": {
			"keccak256": "0x82f3c21a05bc7d27b8c89431aab44ee4e240ccbb7f063d63d60447b04175c184",
			"license": "MIT",
			"urls": [
				"bzz-raw://a87b8379d5f27e4e3699ce6e7311008084e7723548256ece7a4ee235fd1b3da6",
				"dweb:/ipfs/QmPERsxUdUtxBvcDkPK9Ys6p42kV5h6Nua8hQwnrJ1KbBF"
			]
		}
	},
	"version": 1
}