{
	"id": "02310bedc0ff6d8e5f4c4ddd53d34122",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"D/depeg.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\n/// @title DepegMonitor\n/// @notice Monitors the price of a stablecoin and detects when it depegs (i.e., goes beyond a certain threshold from its peg price).\n/// The owner can dynamically update the peg price, threshold, and the authorized aggregator that reports prices.\ncontract DepegMonitor is Ownable, ReentrancyGuard {\n    /// @notice The stablecoin’s ideal peg price in scaled integer form (e.g. 1.0 USD = 1e8).\n    uint256 public pegPrice;\n    /// @notice Deviation threshold in basis points. For instance, 500 = 5%.\n    uint256 public thresholdBps;\n    /// @notice The last reported price of the stablecoin (scaled integer, e.g., 1.05 USD = 105000000).\n    uint256 public lastPrice;\n    /// @notice Address authorized to update the stablecoin price (e.g., an oracle or aggregator).\n    address public priceAggregator;\n    /// @notice Whether the stablecoin is currently considered depegged.\n    bool public isDepegged;\n\n    // --- Events ---\n    event AggregatorUpdated(address indexed newAggregator);\n    event ThresholdUpdated(uint256 newThresholdBps);\n    event PegPriceUpdated(uint256 newPegPrice);\n    event PriceReported(uint256 reportedPrice, bool depegged);\n    event Depegged(uint256 timestamp, uint256 price);\n    event Repegged(uint256 timestamp, uint256 price);\n\n    /// @notice Constructor sets the initial peg price, threshold, aggregator, and owner.\n    /// @param _pegPrice The stablecoin’s ideal peg price (in scaled integer form).\n    /// @param _thresholdBps The basis-point deviation threshold (e.g., 500 for 5%).\n    /// @param _priceAggregator The address authorized to update the price.\n    constructor(uint256 _pegPrice, uint256 _thresholdBps, address _priceAggregator)\n        Ownable(msg.sender)\n    {\n        require(_pegPrice > 0, \"Peg price must be > 0\");\n        require(_thresholdBps <= 2000, \"Threshold too high (max 20%)\");\n        require(_priceAggregator != address(0), \"Invalid aggregator address\");\n\n        pegPrice = _pegPrice;\n        thresholdBps = _thresholdBps;\n        priceAggregator = _priceAggregator;\n        isDepegged = false;\n    }\n\n    /// @notice Updates the aggregator address allowed to report stablecoin prices.\n    /// Only callable by the owner.\n    /// @param newAggregator The new aggregator address.\n    function updateAggregator(address newAggregator) external onlyOwner {\n        require(newAggregator != address(0), \"Invalid aggregator address\");\n        priceAggregator = newAggregator;\n        emit AggregatorUpdated(newAggregator);\n    }\n\n    /// @notice Updates the deviation threshold in basis points. Only callable by the owner.\n    /// e.g., 500 means 5%.\n    /// @param newThresholdBps The new threshold in basis points.\n    function updateThreshold(uint256 newThresholdBps) external onlyOwner {\n        require(newThresholdBps <= 2000, \"Threshold too high (max 20%)\");\n        thresholdBps = newThresholdBps;\n        emit ThresholdUpdated(newThresholdBps);\n    }\n\n    /// @notice Updates the stablecoin’s ideal peg price. Only callable by the owner.\n    /// e.g., 1.00 USD = 1e8 if using 8 decimal scaling.\n    /// @param newPegPrice The new peg price in scaled integer form.\n    function updatePegPrice(uint256 newPegPrice) external onlyOwner {\n        require(newPegPrice > 0, \"Peg price must be > 0\");\n        pegPrice = newPegPrice;\n        emit PegPriceUpdated(newPegPrice);\n    }\n\n    /// @notice The aggregator reports the stablecoin’s current price.\n    /// This function checks if the stablecoin is depegged based on the threshold from pegPrice.\n    /// @param reportedPrice The stablecoin’s reported price (in scaled integer form).\n    function reportPrice(uint256 reportedPrice) external nonReentrant {\n        require(msg.sender == priceAggregator, \"Not authorized aggregator\");\n        require(reportedPrice > 0, \"Invalid reported price\");\n\n        lastPrice = reportedPrice;\n        bool currentlyDepegged = _checkDepeg(reportedPrice);\n\n        emit PriceReported(reportedPrice, currentlyDepegged);\n\n        if (currentlyDepegged && !isDepegged) {\n            // Transition from pegged -> depegged\n            isDepegged = true;\n            emit Depegged(block.timestamp, reportedPrice);\n        } else if (!currentlyDepegged && isDepegged) {\n            // Transition from depegged -> pegged\n            isDepegged = false;\n            emit Repegged(block.timestamp, reportedPrice);\n        }\n    }\n\n    /// @notice Internal helper that checks if the stablecoin’s current price has depegged.\n    /// @param price The stablecoin’s reported price.\n    /// @return True if the price is outside the threshold from pegPrice, false otherwise.\n    function _checkDepeg(uint256 price) internal view returns (bool) {\n        // Calculate absolute difference from pegPrice\n        uint256 diff = (price > pegPrice) ? price - pegPrice : pegPrice - price;\n        // If diff * 10000 / pegPrice > thresholdBps => depegged\n        // Multiply first to avoid rounding issues\n        uint256 diffBps = (diff * 10000) / pegPrice;\n        return diffBps > thresholdBps;\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 158,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"D/depeg.sol": {
				"DepegMonitor": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pegPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_thresholdBps",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_priceAggregator",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAggregator",
									"type": "address"
								}
							],
							"name": "AggregatorUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "Depegged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newPegPrice",
									"type": "uint256"
								}
							],
							"name": "PegPriceUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reportedPrice",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "depegged",
									"type": "bool"
								}
							],
							"name": "PriceReported",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "Repegged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newThresholdBps",
									"type": "uint256"
								}
							],
							"name": "ThresholdUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "isDepegged",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pegPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "priceAggregator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "reportedPrice",
									"type": "uint256"
								}
							],
							"name": "reportPrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "thresholdBps",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAggregator",
									"type": "address"
								}
							],
							"name": "updateAggregator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newPegPrice",
									"type": "uint256"
								}
							],
							"name": "updatePegPrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newThresholdBps",
									"type": "uint256"
								}
							],
							"name": "updateThreshold",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"params": {
									"_pegPrice": "The stablecoin’s ideal peg price (in scaled integer form).",
									"_priceAggregator": "The address authorized to update the price.",
									"_thresholdBps": "The basis-point deviation threshold (e.g., 500 for 5%)."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"reportPrice(uint256)": {
								"params": {
									"reportedPrice": "The stablecoin’s reported price (in scaled integer form)."
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"updateAggregator(address)": {
								"params": {
									"newAggregator": "The new aggregator address."
								}
							},
							"updatePegPrice(uint256)": {
								"params": {
									"newPegPrice": "The new peg price in scaled integer form."
								}
							},
							"updateThreshold(uint256)": {
								"params": {
									"newThresholdBps": "The new threshold in basis points."
								}
							}
						},
						"title": "DepegMonitor",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"D/depeg.sol\":447:5244  contract DepegMonitor is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"D/depeg.sol\":1801:2269  constructor(uint256 _pegPrice, uint256 _thresholdBps, address _priceAggregator)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"D/depeg.sol\":1897:1907  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_8\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_12)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"D/depeg.sol\":1943:1944  0 */\n  0x00\n    /* \"D/depeg.sol\":1931:1940  _pegPrice */\n  dup4\n    /* \"D/depeg.sol\":1931:1944  _pegPrice > 0 */\n  gt\n    /* \"D/depeg.sol\":1923:1970  require(_pegPrice > 0, \"Peg price must be > 0\") */\n  tag_15\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_16\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_15:\n    /* \"D/depeg.sol\":2005:2009  2000 */\n  0x07d0\n    /* \"D/depeg.sol\":1988:2001  _thresholdBps */\n  dup3\n    /* \"D/depeg.sol\":1988:2009  _thresholdBps <= 2000 */\n  gt\n  iszero\n    /* \"D/depeg.sol\":1980:2042  require(_thresholdBps <= 2000, \"Threshold too high (max 20%)\") */\n  tag_18\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_19\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_18:\n    /* \"D/depeg.sol\":2088:2089  0 */\n  0x00\n    /* \"D/depeg.sol\":2060:2090  _priceAggregator != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"D/depeg.sol\":2060:2076  _priceAggregator */\n  dup2\n    /* \"D/depeg.sol\":2060:2090  _priceAggregator != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"D/depeg.sol\":2052:2121  require(_priceAggregator != address(0), \"Invalid aggregator address\") */\n  tag_21\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_22\n  swap1\n  tag_23\n  jump\t// in\ntag_22:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_21:\n    /* \"D/depeg.sol\":2143:2152  _pegPrice */\n  dup3\n    /* \"D/depeg.sol\":2132:2140  pegPrice */\n  0x02\n    /* \"D/depeg.sol\":2132:2152  pegPrice = _pegPrice */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"D/depeg.sol\":2177:2190  _thresholdBps */\n  dup2\n    /* \"D/depeg.sol\":2162:2174  thresholdBps */\n  0x03\n    /* \"D/depeg.sol\":2162:2190  thresholdBps = _thresholdBps */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"D/depeg.sol\":2218:2234  _priceAggregator */\n  dup1\n    /* \"D/depeg.sol\":2200:2215  priceAggregator */\n  0x05\n  0x00\n    /* \"D/depeg.sol\":2200:2234  priceAggregator = _priceAggregator */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"D/depeg.sol\":2257:2262  false */\n  0x00\n    /* \"D/depeg.sol\":2244:2254  isDepegged */\n  0x05\n  0x14\n    /* \"D/depeg.sol\":2244:2262  isDepegged = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"D/depeg.sol\":1801:2269  constructor(uint256 _pegPrice, uint256 _thresholdBps, address _priceAggregator)... */\n  pop\n  pop\n  pop\n    /* \"D/depeg.sol\":447:5244  contract DepegMonitor is Ownable, ReentrancyGuard {... */\n  jump(tag_24)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_27:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_29:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_30:\n    /* \"#utility.yul\":490:514   */\n  tag_50\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_29\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_51\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  dup1\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_51:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_31:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_53\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_30\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:820   */\ntag_32:\n    /* \"#utility.yul\":731:738   */\n  0x00\n    /* \"#utility.yul\":771:813   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":764:769   */\n  dup3\n    /* \"#utility.yul\":760:814   */\n  and\n    /* \"#utility.yul\":749:814   */\n  swap1\n  pop\n    /* \"#utility.yul\":694:820   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":826:922   */\ntag_33:\n    /* \"#utility.yul\":863:870   */\n  0x00\n    /* \"#utility.yul\":892:916   */\n  tag_56\n    /* \"#utility.yul\":910:915   */\n  dup3\n    /* \"#utility.yul\":892:916   */\n  tag_32\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":881:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":826:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_34:\n    /* \"#utility.yul\":1001:1025   */\n  tag_58\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_33\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_59\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_59:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_35:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_61\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_34\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1868   */\ntag_3:\n    /* \"#utility.yul\":1293:1299   */\n  0x00\n    /* \"#utility.yul\":1301:1307   */\n  dup1\n    /* \"#utility.yul\":1309:1315   */\n  0x00\n    /* \"#utility.yul\":1358:1360   */\n  0x60\n    /* \"#utility.yul\":1346:1355   */\n  dup5\n    /* \"#utility.yul\":1337:1344   */\n  dup7\n    /* \"#utility.yul\":1333:1356   */\n  sub\n    /* \"#utility.yul\":1329:1361   */\n  slt\n    /* \"#utility.yul\":1326:1445   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":1364:1443   */\n  tag_64\n  tag_27\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":1326:1445   */\ntag_63:\n    /* \"#utility.yul\":1484:1485   */\n  0x00\n    /* \"#utility.yul\":1509:1573   */\n  tag_65\n    /* \"#utility.yul\":1565:1572   */\n  dup7\n    /* \"#utility.yul\":1556:1562   */\n  dup3\n    /* \"#utility.yul\":1545:1554   */\n  dup8\n    /* \"#utility.yul\":1541:1563   */\n  add\n    /* \"#utility.yul\":1509:1573   */\n  tag_31\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1499:1573   */\n  swap4\n  pop\n    /* \"#utility.yul\":1455:1583   */\n  pop\n    /* \"#utility.yul\":1622:1624   */\n  0x20\n    /* \"#utility.yul\":1648:1712   */\n  tag_66\n    /* \"#utility.yul\":1704:1711   */\n  dup7\n    /* \"#utility.yul\":1695:1701   */\n  dup3\n    /* \"#utility.yul\":1684:1693   */\n  dup8\n    /* \"#utility.yul\":1680:1702   */\n  add\n    /* \"#utility.yul\":1648:1712   */\n  tag_31\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1638:1712   */\n  swap3\n  pop\n    /* \"#utility.yul\":1593:1722   */\n  pop\n    /* \"#utility.yul\":1761:1763   */\n  0x40\n    /* \"#utility.yul\":1787:1851   */\n  tag_67\n    /* \"#utility.yul\":1843:1850   */\n  dup7\n    /* \"#utility.yul\":1834:1840   */\n  dup3\n    /* \"#utility.yul\":1823:1832   */\n  dup8\n    /* \"#utility.yul\":1819:1841   */\n  add\n    /* \"#utility.yul\":1787:1851   */\n  tag_35\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1777:1851   */\n  swap2\n  pop\n    /* \"#utility.yul\":1732:1861   */\n  pop\n    /* \"#utility.yul\":1205:1868   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1874:1992   */\ntag_36:\n    /* \"#utility.yul\":1961:1985   */\n  tag_69\n    /* \"#utility.yul\":1979:1984   */\n  dup2\n    /* \"#utility.yul\":1961:1985   */\n  tag_33\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1956:1959   */\n  dup3\n    /* \"#utility.yul\":1949:1986   */\n  mstore\n    /* \"#utility.yul\":1874:1992   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1998:2220   */\ntag_10:\n    /* \"#utility.yul\":2091:2095   */\n  0x00\n    /* \"#utility.yul\":2129:2131   */\n  0x20\n    /* \"#utility.yul\":2118:2127   */\n  dup3\n    /* \"#utility.yul\":2114:2132   */\n  add\n    /* \"#utility.yul\":2106:2132   */\n  swap1\n  pop\n    /* \"#utility.yul\":2142:2213   */\n  tag_71\n    /* \"#utility.yul\":2210:2211   */\n  0x00\n    /* \"#utility.yul\":2199:2208   */\n  dup4\n    /* \"#utility.yul\":2195:2212   */\n  add\n    /* \"#utility.yul\":2186:2192   */\n  dup5\n    /* \"#utility.yul\":2142:2213   */\n  tag_36\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":1998:2220   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2226:2395   */\ntag_37:\n    /* \"#utility.yul\":2310:2321   */\n  0x00\n    /* \"#utility.yul\":2344:2350   */\n  dup3\n    /* \"#utility.yul\":2339:2342   */\n  dup3\n    /* \"#utility.yul\":2332:2351   */\n  mstore\n    /* \"#utility.yul\":2384:2388   */\n  0x20\n    /* \"#utility.yul\":2379:2382   */\n  dup3\n    /* \"#utility.yul\":2375:2389   */\n  add\n    /* \"#utility.yul\":2360:2389   */\n  swap1\n  pop\n    /* \"#utility.yul\":2226:2395   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2401:2572   */\ntag_38:\n    /* \"#utility.yul\":2541:2564   */\n  0x506567207072696365206d757374206265203e20300000000000000000000000\n    /* \"#utility.yul\":2537:2538   */\n  0x00\n    /* \"#utility.yul\":2529:2535   */\n  dup3\n    /* \"#utility.yul\":2525:2539   */\n  add\n    /* \"#utility.yul\":2518:2565   */\n  mstore\n    /* \"#utility.yul\":2401:2572   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2578:2944   */\ntag_39:\n    /* \"#utility.yul\":2720:2723   */\n  0x00\n    /* \"#utility.yul\":2741:2808   */\n  tag_75\n    /* \"#utility.yul\":2805:2807   */\n  0x15\n    /* \"#utility.yul\":2800:2803   */\n  dup4\n    /* \"#utility.yul\":2741:2808   */\n  tag_37\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2734:2808   */\n  swap2\n  pop\n    /* \"#utility.yul\":2817:2910   */\n  tag_76\n    /* \"#utility.yul\":2906:2909   */\n  dup3\n    /* \"#utility.yul\":2817:2910   */\n  tag_38\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2935:2937   */\n  0x20\n    /* \"#utility.yul\":2930:2933   */\n  dup3\n    /* \"#utility.yul\":2926:2938   */\n  add\n    /* \"#utility.yul\":2919:2938   */\n  swap1\n  pop\n    /* \"#utility.yul\":2578:2944   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2950:3369   */\ntag_17:\n    /* \"#utility.yul\":3116:3120   */\n  0x00\n    /* \"#utility.yul\":3154:3156   */\n  0x20\n    /* \"#utility.yul\":3143:3152   */\n  dup3\n    /* \"#utility.yul\":3139:3157   */\n  add\n    /* \"#utility.yul\":3131:3157   */\n  swap1\n  pop\n    /* \"#utility.yul\":3203:3212   */\n  dup2\n    /* \"#utility.yul\":3197:3201   */\n  dup2\n    /* \"#utility.yul\":3193:3213   */\n  sub\n    /* \"#utility.yul\":3189:3190   */\n  0x00\n    /* \"#utility.yul\":3178:3187   */\n  dup4\n    /* \"#utility.yul\":3174:3191   */\n  add\n    /* \"#utility.yul\":3167:3214   */\n  mstore\n    /* \"#utility.yul\":3231:3362   */\n  tag_78\n    /* \"#utility.yul\":3357:3361   */\n  dup2\n    /* \"#utility.yul\":3231:3362   */\n  tag_39\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":3223:3362   */\n  swap1\n  pop\n    /* \"#utility.yul\":2950:3369   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3375:3553   */\ntag_40:\n    /* \"#utility.yul\":3515:3545   */\n  0x5468726573686f6c6420746f6f206869676820286d6178203230252900000000\n    /* \"#utility.yul\":3511:3512   */\n  0x00\n    /* \"#utility.yul\":3503:3509   */\n  dup3\n    /* \"#utility.yul\":3499:3513   */\n  add\n    /* \"#utility.yul\":3492:3546   */\n  mstore\n    /* \"#utility.yul\":3375:3553   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3559:3925   */\ntag_41:\n    /* \"#utility.yul\":3701:3704   */\n  0x00\n    /* \"#utility.yul\":3722:3789   */\n  tag_81\n    /* \"#utility.yul\":3786:3788   */\n  0x1c\n    /* \"#utility.yul\":3781:3784   */\n  dup4\n    /* \"#utility.yul\":3722:3789   */\n  tag_37\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":3715:3789   */\n  swap2\n  pop\n    /* \"#utility.yul\":3798:3891   */\n  tag_82\n    /* \"#utility.yul\":3887:3890   */\n  dup3\n    /* \"#utility.yul\":3798:3891   */\n  tag_40\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3916:3918   */\n  0x20\n    /* \"#utility.yul\":3911:3914   */\n  dup3\n    /* \"#utility.yul\":3907:3919   */\n  add\n    /* \"#utility.yul\":3900:3919   */\n  swap1\n  pop\n    /* \"#utility.yul\":3559:3925   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3931:4350   */\ntag_20:\n    /* \"#utility.yul\":4097:4101   */\n  0x00\n    /* \"#utility.yul\":4135:4137   */\n  0x20\n    /* \"#utility.yul\":4124:4133   */\n  dup3\n    /* \"#utility.yul\":4120:4138   */\n  add\n    /* \"#utility.yul\":4112:4138   */\n  swap1\n  pop\n    /* \"#utility.yul\":4184:4193   */\n  dup2\n    /* \"#utility.yul\":4178:4182   */\n  dup2\n    /* \"#utility.yul\":4174:4194   */\n  sub\n    /* \"#utility.yul\":4170:4171   */\n  0x00\n    /* \"#utility.yul\":4159:4168   */\n  dup4\n    /* \"#utility.yul\":4155:4172   */\n  add\n    /* \"#utility.yul\":4148:4195   */\n  mstore\n    /* \"#utility.yul\":4212:4343   */\n  tag_84\n    /* \"#utility.yul\":4338:4342   */\n  dup2\n    /* \"#utility.yul\":4212:4343   */\n  tag_41\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":4204:4343   */\n  swap1\n  pop\n    /* \"#utility.yul\":3931:4350   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4356:4532   */\ntag_42:\n    /* \"#utility.yul\":4496:4524   */\n  0x496e76616c69642061676772656761746f722061646472657373000000000000\n    /* \"#utility.yul\":4492:4493   */\n  0x00\n    /* \"#utility.yul\":4484:4490   */\n  dup3\n    /* \"#utility.yul\":4480:4494   */\n  add\n    /* \"#utility.yul\":4473:4525   */\n  mstore\n    /* \"#utility.yul\":4356:4532   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4538:4904   */\ntag_43:\n    /* \"#utility.yul\":4680:4683   */\n  0x00\n    /* \"#utility.yul\":4701:4768   */\n  tag_87\n    /* \"#utility.yul\":4765:4767   */\n  0x1a\n    /* \"#utility.yul\":4760:4763   */\n  dup4\n    /* \"#utility.yul\":4701:4768   */\n  tag_37\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":4694:4768   */\n  swap2\n  pop\n    /* \"#utility.yul\":4777:4870   */\n  tag_88\n    /* \"#utility.yul\":4866:4869   */\n  dup3\n    /* \"#utility.yul\":4777:4870   */\n  tag_42\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":4895:4897   */\n  0x20\n    /* \"#utility.yul\":4890:4893   */\n  dup3\n    /* \"#utility.yul\":4886:4898   */\n  add\n    /* \"#utility.yul\":4879:4898   */\n  swap1\n  pop\n    /* \"#utility.yul\":4538:4904   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4910:5329   */\ntag_23:\n    /* \"#utility.yul\":5076:5080   */\n  0x00\n    /* \"#utility.yul\":5114:5116   */\n  0x20\n    /* \"#utility.yul\":5103:5112   */\n  dup3\n    /* \"#utility.yul\":5099:5117   */\n  add\n    /* \"#utility.yul\":5091:5117   */\n  swap1\n  pop\n    /* \"#utility.yul\":5163:5172   */\n  dup2\n    /* \"#utility.yul\":5157:5161   */\n  dup2\n    /* \"#utility.yul\":5153:5173   */\n  sub\n    /* \"#utility.yul\":5149:5150   */\n  0x00\n    /* \"#utility.yul\":5138:5147   */\n  dup4\n    /* \"#utility.yul\":5134:5151   */\n  add\n    /* \"#utility.yul\":5127:5174   */\n  mstore\n    /* \"#utility.yul\":5191:5322   */\n  tag_90\n    /* \"#utility.yul\":5317:5321   */\n  dup2\n    /* \"#utility.yul\":5191:5322   */\n  tag_43\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":5183:5322   */\n  swap1\n  pop\n    /* \"#utility.yul\":4910:5329   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"D/depeg.sol\":447:5244  contract DepegMonitor is Ownable, ReentrancyGuard {... */\ntag_24:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"D/depeg.sol\":447:5244  contract DepegMonitor is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x9fe4ee47\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xc1144b71\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xc7f898f0\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xd7d7442f\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x053f14da\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3078fff5\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5a0332a4\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x74de33e4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x7542f23a\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"D/depeg.sol\":842:866  uint256 public lastPrice */\n    tag_3:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"D/depeg.sol\":971:1001  address public priceAggregator */\n    tag_4:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"D/depeg.sol\":1080:1102  bool public isDepegged */\n    tag_5:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      stop\n        /* \"D/depeg.sol\":3342:3547  function updatePegPrice(uint256 newPegPrice) external onlyOwner {... */\n    tag_7:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"D/depeg.sol\":599:622  uint256 public pegPrice */\n    tag_8:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_9:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"D/depeg.sol\":2452:2691  function updateAggregator(address newAggregator) external onlyOwner {... */\n    tag_10:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"D/depeg.sol\":705:732  uint256 public thresholdBps */\n    tag_11:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"D/depeg.sol\":3812:4579  function reportPrice(uint256 reportedPrice) external nonReentrant {... */\n    tag_12:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n    tag_47:\n      stop\n        /* \"D/depeg.sol\":2884:3122  function updateThreshold(uint256 newThresholdBps) external onlyOwner {... */\n    tag_13:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_14:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"D/depeg.sol\":842:866  uint256 public lastPrice */\n    tag_17:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"D/depeg.sol\":971:1001  address public priceAggregator */\n    tag_21:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"D/depeg.sol\":1080:1102  bool public isDepegged */\n    tag_25:\n      0x05\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_57\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_58\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_57:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_60\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_61\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"D/depeg.sol\":3342:3547  function updatePegPrice(uint256 newPegPrice) external onlyOwner {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_63\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_58\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_63:\n        /* \"D/depeg.sol\":3438:3439  0 */\n      0x00\n        /* \"D/depeg.sol\":3424:3435  newPegPrice */\n      dup2\n        /* \"D/depeg.sol\":3424:3439  newPegPrice > 0 */\n      gt\n        /* \"D/depeg.sol\":3416:3465  require(newPegPrice > 0, \"Peg price must be > 0\") */\n      tag_65\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_66\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_65:\n        /* \"D/depeg.sol\":3486:3497  newPegPrice */\n      dup1\n        /* \"D/depeg.sol\":3475:3483  pegPrice */\n      0x02\n        /* \"D/depeg.sol\":3475:3497  pegPrice = newPegPrice */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"D/depeg.sol\":3512:3540  PegPriceUpdated(newPegPrice) */\n      0x8b4412706cf218351f2b2670d751d9981e4b3e3490911aba339f1dac35103d0b\n        /* \"D/depeg.sol\":3528:3539  newPegPrice */\n      dup2\n        /* \"D/depeg.sol\":3512:3540  PegPriceUpdated(newPegPrice) */\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"D/depeg.sol\":3342:3547  function updatePegPrice(uint256 newPegPrice) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"D/depeg.sol\":599:622  uint256 public pegPrice */\n    tag_35:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"D/depeg.sol\":2452:2691  function updateAggregator(address newAggregator) external onlyOwner {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_71\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_58\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_71:\n        /* \"D/depeg.sol\":2563:2564  0 */\n      0x00\n        /* \"D/depeg.sol\":2538:2565  newAggregator != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"D/depeg.sol\":2538:2551  newAggregator */\n      dup2\n        /* \"D/depeg.sol\":2538:2565  newAggregator != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"D/depeg.sol\":2530:2596  require(newAggregator != address(0), \"Invalid aggregator address\") */\n      tag_73\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_74\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_73:\n        /* \"D/depeg.sol\":2624:2637  newAggregator */\n      dup1\n        /* \"D/depeg.sol\":2606:2621  priceAggregator */\n      0x05\n      0x00\n        /* \"D/depeg.sol\":2606:2637  priceAggregator = newAggregator */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"D/depeg.sol\":2670:2683  newAggregator */\n      dup1\n        /* \"D/depeg.sol\":2652:2684  AggregatorUpdated(newAggregator) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x602cec4b1583b07d071161da5eb9589444d2459201e2fab7753dc941e9351c21\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"D/depeg.sol\":2452:2691  function updateAggregator(address newAggregator) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"D/depeg.sol\":705:732  uint256 public thresholdBps */\n    tag_45:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"D/depeg.sol\":3812:4579  function reportPrice(uint256 reportedPrice) external nonReentrant {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_77\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_78\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_77:\n        /* \"D/depeg.sol\":3910:3925  priceAggregator */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"D/depeg.sol\":3896:3925  msg.sender == priceAggregator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"D/depeg.sol\":3896:3906  msg.sender */\n      caller\n        /* \"D/depeg.sol\":3896:3925  msg.sender == priceAggregator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"D/depeg.sol\":3888:3955  require(msg.sender == priceAggregator, \"Not authorized aggregator\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"D/depeg.sol\":3989:3990  0 */\n      0x00\n        /* \"D/depeg.sol\":3973:3986  reportedPrice */\n      dup2\n        /* \"D/depeg.sol\":3973:3990  reportedPrice > 0 */\n      gt\n        /* \"D/depeg.sol\":3965:4017  require(reportedPrice > 0, \"Invalid reported price\") */\n      tag_83\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_84\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_83:\n        /* \"D/depeg.sol\":4040:4053  reportedPrice */\n      dup1\n        /* \"D/depeg.sol\":4028:4037  lastPrice */\n      0x04\n        /* \"D/depeg.sol\":4028:4053  lastPrice = reportedPrice */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"D/depeg.sol\":4063:4085  bool currentlyDepegged */\n      0x00\n        /* \"D/depeg.sol\":4088:4114  _checkDepeg(reportedPrice) */\n      tag_86\n        /* \"D/depeg.sol\":4100:4113  reportedPrice */\n      dup3\n        /* \"D/depeg.sol\":4088:4099  _checkDepeg */\n      tag_87\n        /* \"D/depeg.sol\":4088:4114  _checkDepeg(reportedPrice) */\n      jump\t// in\n    tag_86:\n        /* \"D/depeg.sol\":4063:4114  bool currentlyDepegged = _checkDepeg(reportedPrice) */\n      swap1\n      pop\n        /* \"D/depeg.sol\":4130:4177  PriceReported(reportedPrice, currentlyDepegged) */\n      0x8322c40cc8fa3bd54ec84110a078e65c783d8d79ad96adf1b07cd59ed10c2dc2\n        /* \"D/depeg.sol\":4144:4157  reportedPrice */\n      dup3\n        /* \"D/depeg.sol\":4159:4176  currentlyDepegged */\n      dup3\n        /* \"D/depeg.sol\":4130:4177  PriceReported(reportedPrice, currentlyDepegged) */\n      mload(0x40)\n      tag_88\n      swap3\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"D/depeg.sol\":4192:4209  currentlyDepegged */\n      dup1\n        /* \"D/depeg.sol\":4192:4224  currentlyDepegged && !isDepegged */\n      dup1\n      iszero\n      tag_90\n      jumpi\n      pop\n        /* \"D/depeg.sol\":4214:4224  isDepegged */\n      0x05\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"D/depeg.sol\":4213:4224  !isDepegged */\n      iszero\n        /* \"D/depeg.sol\":4192:4224  currentlyDepegged && !isDepegged */\n    tag_90:\n        /* \"D/depeg.sol\":4188:4573  if (currentlyDepegged && !isDepegged) {... */\n      iszero\n      tag_91\n      jumpi\n        /* \"D/depeg.sol\":4303:4307  true */\n      0x01\n        /* \"D/depeg.sol\":4290:4300  isDepegged */\n      0x05\n      0x14\n        /* \"D/depeg.sol\":4290:4307  isDepegged = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"D/depeg.sol\":4326:4366  Depegged(block.timestamp, reportedPrice) */\n      0x43a30a8a621ae0bf221b02b806c2a80d658e4886e1d85e72427b7466c0cd4197\n        /* \"D/depeg.sol\":4335:4350  block.timestamp */\n      timestamp\n        /* \"D/depeg.sol\":4352:4365  reportedPrice */\n      dup4\n        /* \"D/depeg.sol\":4326:4366  Depegged(block.timestamp, reportedPrice) */\n      mload(0x40)\n      tag_92\n      swap3\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"D/depeg.sol\":4188:4573  if (currentlyDepegged && !isDepegged) {... */\n      jump(tag_94)\n    tag_91:\n        /* \"D/depeg.sol\":4388:4405  currentlyDepegged */\n      dup1\n        /* \"D/depeg.sol\":4387:4405  !currentlyDepegged */\n      iszero\n        /* \"D/depeg.sol\":4387:4419  !currentlyDepegged && isDepegged */\n      dup1\n      iszero\n      tag_95\n      jumpi\n      pop\n        /* \"D/depeg.sol\":4409:4419  isDepegged */\n      0x05\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"D/depeg.sol\":4387:4419  !currentlyDepegged && isDepegged */\n    tag_95:\n        /* \"D/depeg.sol\":4383:4573  if (!currentlyDepegged && isDepegged) {... */\n      iszero\n      tag_96\n      jumpi\n        /* \"D/depeg.sol\":4498:4503  false */\n      0x00\n        /* \"D/depeg.sol\":4485:4495  isDepegged */\n      0x05\n      0x14\n        /* \"D/depeg.sol\":4485:4503  isDepegged = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"D/depeg.sol\":4522:4562  Repegged(block.timestamp, reportedPrice) */\n      0xeedd16500c1f2c39ebb8b74fd12984f1e07626acdb1434293dd2707e32ea6eb9\n        /* \"D/depeg.sol\":4531:4546  block.timestamp */\n      timestamp\n        /* \"D/depeg.sol\":4548:4561  reportedPrice */\n      dup4\n        /* \"D/depeg.sol\":4522:4562  Repegged(block.timestamp, reportedPrice) */\n      mload(0x40)\n      tag_97\n      swap3\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"D/depeg.sol\":4383:4573  if (!currentlyDepegged && isDepegged) {... */\n    tag_96:\n        /* \"D/depeg.sol\":4188:4573  if (currentlyDepegged && !isDepegged) {... */\n    tag_94:\n        /* \"D/depeg.sol\":3878:4579  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_98\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_99\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_98:\n        /* \"D/depeg.sol\":3812:4579  function reportPrice(uint256 reportedPrice) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"D/depeg.sol\":2884:3122  function updateThreshold(uint256 newThresholdBps) external onlyOwner {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_101\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_58\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_101:\n        /* \"D/depeg.sol\":2990:2994  2000 */\n      0x07d0\n        /* \"D/depeg.sol\":2971:2986  newThresholdBps */\n      dup2\n        /* \"D/depeg.sol\":2971:2994  newThresholdBps <= 2000 */\n      gt\n      iszero\n        /* \"D/depeg.sol\":2963:3027  require(newThresholdBps <= 2000, \"Threshold too high (max 20%)\") */\n      tag_103\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n        /* \"D/depeg.sol\":3052:3067  newThresholdBps */\n      dup1\n        /* \"D/depeg.sol\":3037:3049  thresholdBps */\n      0x03\n        /* \"D/depeg.sol\":3037:3067  thresholdBps = newThresholdBps */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"D/depeg.sol\":3082:3115  ThresholdUpdated(newThresholdBps) */\n      0xadfa8ecb21b6962ebcd0adbd9ab985b7b4c5b5eb3b0dead683171565c7bfe171\n        /* \"D/depeg.sol\":3099:3114  newThresholdBps */\n      dup2\n        /* \"D/depeg.sol\":3082:3115  ThresholdUpdated(newThresholdBps) */\n      mload(0x40)\n      tag_106\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"D/depeg.sol\":2884:3122  function updateThreshold(uint256 newThresholdBps) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_108\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_58\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_110\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_111\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_112\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_61\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_112:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_114\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_115\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_114:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_38\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_117\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_118\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_115\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_118:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_122:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"D/depeg.sol\":4826:5242  function _checkDepeg(uint256 price) internal view returns (bool) {... */\n    tag_87:\n        /* \"D/depeg.sol\":4885:4889  bool */\n      0x00\n        /* \"D/depeg.sol\":4956:4968  uint256 diff */\n      dup1\n        /* \"D/depeg.sol\":4980:4988  pegPrice */\n      sload(0x02)\n        /* \"D/depeg.sol\":4972:4977  price */\n      dup4\n        /* \"D/depeg.sol\":4972:4988  price > pegPrice */\n      gt\n        /* \"D/depeg.sol\":4971:5027  (price > pegPrice) ? price - pegPrice : pegPrice - price */\n      tag_126\n      jumpi\n        /* \"D/depeg.sol\":5022:5027  price */\n      dup3\n        /* \"D/depeg.sol\":5011:5019  pegPrice */\n      sload(0x02)\n        /* \"D/depeg.sol\":5011:5027  pegPrice - price */\n      tag_127\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n        /* \"D/depeg.sol\":4971:5027  (price > pegPrice) ? price - pegPrice : pegPrice - price */\n      jump(tag_129)\n    tag_126:\n        /* \"D/depeg.sol\":5000:5008  pegPrice */\n      sload(0x02)\n        /* \"D/depeg.sol\":4992:4997  price */\n      dup4\n        /* \"D/depeg.sol\":4992:5008  price - pegPrice */\n      tag_130\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_130:\n        /* \"D/depeg.sol\":4971:5027  (price > pegPrice) ? price - pegPrice : pegPrice - price */\n    tag_129:\n        /* \"D/depeg.sol\":4956:5027  uint256 diff = (price > pegPrice) ? price - pegPrice : pegPrice - price */\n      swap1\n      pop\n        /* \"D/depeg.sol\":5153:5168  uint256 diffBps */\n      0x00\n        /* \"D/depeg.sol\":5188:5196  pegPrice */\n      sload(0x02)\n        /* \"D/depeg.sol\":5179:5184  10000 */\n      0x2710\n        /* \"D/depeg.sol\":5172:5176  diff */\n      dup4\n        /* \"D/depeg.sol\":5172:5184  diff * 10000 */\n      tag_131\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n        /* \"D/depeg.sol\":5171:5196  (diff * 10000) / pegPrice */\n      tag_133\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n        /* \"D/depeg.sol\":5153:5196  uint256 diffBps = (diff * 10000) / pegPrice */\n      swap1\n      pop\n        /* \"D/depeg.sol\":5223:5235  thresholdBps */\n      sload(0x03)\n        /* \"D/depeg.sol\":5213:5220  diffBps */\n      dup2\n        /* \"D/depeg.sol\":5213:5235  diffBps > thresholdBps */\n      gt\n        /* \"D/depeg.sol\":5206:5235  return diffBps > thresholdBps */\n      swap3\n      pop\n      pop\n      pop\n        /* \"D/depeg.sol\":4826:5242  function _checkDepeg(uint256 price) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_137:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_138:\n        /* \"#utility.yul\":177:201   */\n      tag_169\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_137\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_19:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_171\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_138\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:568   */\n    tag_139:\n        /* \"#utility.yul\":479:486   */\n      0x00\n        /* \"#utility.yul\":519:561   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":512:517   */\n      dup3\n        /* \"#utility.yul\":508:562   */\n      and\n        /* \"#utility.yul\":497:562   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:568   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":574:670   */\n    tag_140:\n        /* \"#utility.yul\":611:618   */\n      0x00\n        /* \"#utility.yul\":640:664   */\n      tag_174\n        /* \"#utility.yul\":658:663   */\n      dup3\n        /* \"#utility.yul\":640:664   */\n      tag_139\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":629:664   */\n      swap1\n      pop\n        /* \"#utility.yul\":574:670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":676:794   */\n    tag_141:\n        /* \"#utility.yul\":763:787   */\n      tag_176\n        /* \"#utility.yul\":781:786   */\n      dup2\n        /* \"#utility.yul\":763:787   */\n      tag_140\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":758:761   */\n      dup3\n        /* \"#utility.yul\":751:788   */\n      mstore\n        /* \"#utility.yul\":676:794   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":800:1022   */\n    tag_23:\n        /* \"#utility.yul\":893:897   */\n      0x00\n        /* \"#utility.yul\":931:933   */\n      0x20\n        /* \"#utility.yul\":920:929   */\n      dup3\n        /* \"#utility.yul\":916:934   */\n      add\n        /* \"#utility.yul\":908:934   */\n      swap1\n      pop\n        /* \"#utility.yul\":944:1015   */\n      tag_178\n        /* \"#utility.yul\":1012:1013   */\n      0x00\n        /* \"#utility.yul\":1001:1010   */\n      dup4\n        /* \"#utility.yul\":997:1014   */\n      add\n        /* \"#utility.yul\":988:994   */\n      dup5\n        /* \"#utility.yul\":944:1015   */\n      tag_141\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":800:1022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1028:1118   */\n    tag_142:\n        /* \"#utility.yul\":1062:1069   */\n      0x00\n        /* \"#utility.yul\":1105:1110   */\n      dup2\n        /* \"#utility.yul\":1098:1111   */\n      iszero\n        /* \"#utility.yul\":1091:1112   */\n      iszero\n        /* \"#utility.yul\":1080:1112   */\n      swap1\n      pop\n        /* \"#utility.yul\":1028:1118   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1124:1233   */\n    tag_143:\n        /* \"#utility.yul\":1205:1226   */\n      tag_181\n        /* \"#utility.yul\":1220:1225   */\n      dup2\n        /* \"#utility.yul\":1205:1226   */\n      tag_142\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":1200:1203   */\n      dup3\n        /* \"#utility.yul\":1193:1227   */\n      mstore\n        /* \"#utility.yul\":1124:1233   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1239:1449   */\n    tag_27:\n        /* \"#utility.yul\":1326:1330   */\n      0x00\n        /* \"#utility.yul\":1364:1366   */\n      0x20\n        /* \"#utility.yul\":1353:1362   */\n      dup3\n        /* \"#utility.yul\":1349:1367   */\n      add\n        /* \"#utility.yul\":1341:1367   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1442   */\n      tag_183\n        /* \"#utility.yul\":1439:1440   */\n      0x00\n        /* \"#utility.yul\":1428:1437   */\n      dup4\n        /* \"#utility.yul\":1424:1441   */\n      add\n        /* \"#utility.yul\":1415:1421   */\n      dup5\n        /* \"#utility.yul\":1377:1442   */\n      tag_143\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":1239:1449   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1536:1653   */\n    tag_145:\n        /* \"#utility.yul\":1645:1646   */\n      0x00\n        /* \"#utility.yul\":1642:1643   */\n      dup1\n        /* \"#utility.yul\":1635:1647   */\n      revert\n        /* \"#utility.yul\":1782:1904   */\n    tag_147:\n        /* \"#utility.yul\":1855:1879   */\n      tag_188\n        /* \"#utility.yul\":1873:1878   */\n      dup2\n        /* \"#utility.yul\":1855:1879   */\n      tag_137\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":1848:1853   */\n      dup2\n        /* \"#utility.yul\":1845:1880   */\n      eq\n        /* \"#utility.yul\":1835:1898   */\n      tag_189\n      jumpi\n        /* \"#utility.yul\":1894:1895   */\n      0x00\n        /* \"#utility.yul\":1891:1892   */\n      dup1\n        /* \"#utility.yul\":1884:1896   */\n      revert\n        /* \"#utility.yul\":1835:1898   */\n    tag_189:\n        /* \"#utility.yul\":1782:1904   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2049   */\n    tag_148:\n        /* \"#utility.yul\":1956:1961   */\n      0x00\n        /* \"#utility.yul\":1994:2000   */\n      dup2\n        /* \"#utility.yul\":1981:2001   */\n      calldataload\n        /* \"#utility.yul\":1972:2001   */\n      swap1\n      pop\n        /* \"#utility.yul\":2010:2043   */\n      tag_191\n        /* \"#utility.yul\":2037:2042   */\n      dup2\n        /* \"#utility.yul\":2010:2043   */\n      tag_147\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":1910:2049   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2055:2384   */\n    tag_32:\n        /* \"#utility.yul\":2114:2120   */\n      0x00\n        /* \"#utility.yul\":2163:2165   */\n      0x20\n        /* \"#utility.yul\":2151:2160   */\n      dup3\n        /* \"#utility.yul\":2142:2149   */\n      dup5\n        /* \"#utility.yul\":2138:2161   */\n      sub\n        /* \"#utility.yul\":2134:2166   */\n      slt\n        /* \"#utility.yul\":2131:2250   */\n      iszero\n      tag_193\n      jumpi\n        /* \"#utility.yul\":2169:2248   */\n      tag_194\n      tag_145\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":2131:2250   */\n    tag_193:\n        /* \"#utility.yul\":2289:2290   */\n      0x00\n        /* \"#utility.yul\":2314:2367   */\n      tag_195\n        /* \"#utility.yul\":2359:2366   */\n      dup5\n        /* \"#utility.yul\":2350:2356   */\n      dup3\n        /* \"#utility.yul\":2339:2348   */\n      dup6\n        /* \"#utility.yul\":2335:2357   */\n      add\n        /* \"#utility.yul\":2314:2367   */\n      tag_148\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":2304:2367   */\n      swap2\n      pop\n        /* \"#utility.yul\":2260:2377   */\n      pop\n        /* \"#utility.yul\":2055:2384   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2390:2512   */\n    tag_149:\n        /* \"#utility.yul\":2463:2487   */\n      tag_197\n        /* \"#utility.yul\":2481:2486   */\n      dup2\n        /* \"#utility.yul\":2463:2487   */\n      tag_140\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":2456:2461   */\n      dup2\n        /* \"#utility.yul\":2453:2488   */\n      eq\n        /* \"#utility.yul\":2443:2506   */\n      tag_198\n      jumpi\n        /* \"#utility.yul\":2502:2503   */\n      0x00\n        /* \"#utility.yul\":2499:2500   */\n      dup1\n        /* \"#utility.yul\":2492:2504   */\n      revert\n        /* \"#utility.yul\":2443:2506   */\n    tag_198:\n        /* \"#utility.yul\":2390:2512   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2518:2657   */\n    tag_150:\n        /* \"#utility.yul\":2564:2569   */\n      0x00\n        /* \"#utility.yul\":2602:2608   */\n      dup2\n        /* \"#utility.yul\":2589:2609   */\n      calldataload\n        /* \"#utility.yul\":2580:2609   */\n      swap1\n      pop\n        /* \"#utility.yul\":2618:2651   */\n      tag_200\n        /* \"#utility.yul\":2645:2650   */\n      dup2\n        /* \"#utility.yul\":2618:2651   */\n      tag_149\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":2518:2657   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2663:2992   */\n    tag_42:\n        /* \"#utility.yul\":2722:2728   */\n      0x00\n        /* \"#utility.yul\":2771:2773   */\n      0x20\n        /* \"#utility.yul\":2759:2768   */\n      dup3\n        /* \"#utility.yul\":2750:2757   */\n      dup5\n        /* \"#utility.yul\":2746:2769   */\n      sub\n        /* \"#utility.yul\":2742:2774   */\n      slt\n        /* \"#utility.yul\":2739:2858   */\n      iszero\n      tag_202\n      jumpi\n        /* \"#utility.yul\":2777:2856   */\n      tag_203\n      tag_145\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":2739:2858   */\n    tag_202:\n        /* \"#utility.yul\":2897:2898   */\n      0x00\n        /* \"#utility.yul\":2922:2975   */\n      tag_204\n        /* \"#utility.yul\":2967:2974   */\n      dup5\n        /* \"#utility.yul\":2958:2964   */\n      dup3\n        /* \"#utility.yul\":2947:2956   */\n      dup6\n        /* \"#utility.yul\":2943:2965   */\n      add\n        /* \"#utility.yul\":2922:2975   */\n      tag_150\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":2912:2975   */\n      swap2\n      pop\n        /* \"#utility.yul\":2868:2985   */\n      pop\n        /* \"#utility.yul\":2663:2992   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2998:3167   */\n    tag_151:\n        /* \"#utility.yul\":3082:3093   */\n      0x00\n        /* \"#utility.yul\":3116:3122   */\n      dup3\n        /* \"#utility.yul\":3111:3114   */\n      dup3\n        /* \"#utility.yul\":3104:3123   */\n      mstore\n        /* \"#utility.yul\":3156:3160   */\n      0x20\n        /* \"#utility.yul\":3151:3154   */\n      dup3\n        /* \"#utility.yul\":3147:3161   */\n      add\n        /* \"#utility.yul\":3132:3161   */\n      swap1\n      pop\n        /* \"#utility.yul\":2998:3167   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3173:3344   */\n    tag_152:\n        /* \"#utility.yul\":3313:3336   */\n      0x506567207072696365206d757374206265203e20300000000000000000000000\n        /* \"#utility.yul\":3309:3310   */\n      0x00\n        /* \"#utility.yul\":3301:3307   */\n      dup3\n        /* \"#utility.yul\":3297:3311   */\n      add\n        /* \"#utility.yul\":3290:3337   */\n      mstore\n        /* \"#utility.yul\":3173:3344   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3350:3716   */\n    tag_153:\n        /* \"#utility.yul\":3492:3495   */\n      0x00\n        /* \"#utility.yul\":3513:3580   */\n      tag_208\n        /* \"#utility.yul\":3577:3579   */\n      0x15\n        /* \"#utility.yul\":3572:3575   */\n      dup4\n        /* \"#utility.yul\":3513:3580   */\n      tag_151\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":3506:3580   */\n      swap2\n      pop\n        /* \"#utility.yul\":3589:3682   */\n      tag_209\n        /* \"#utility.yul\":3678:3681   */\n      dup3\n        /* \"#utility.yul\":3589:3682   */\n      tag_152\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":3707:3709   */\n      0x20\n        /* \"#utility.yul\":3702:3705   */\n      dup3\n        /* \"#utility.yul\":3698:3710   */\n      add\n        /* \"#utility.yul\":3691:3710   */\n      swap1\n      pop\n        /* \"#utility.yul\":3350:3716   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3722:4141   */\n    tag_67:\n        /* \"#utility.yul\":3888:3892   */\n      0x00\n        /* \"#utility.yul\":3926:3928   */\n      0x20\n        /* \"#utility.yul\":3915:3924   */\n      dup3\n        /* \"#utility.yul\":3911:3929   */\n      add\n        /* \"#utility.yul\":3903:3929   */\n      swap1\n      pop\n        /* \"#utility.yul\":3975:3984   */\n      dup2\n        /* \"#utility.yul\":3969:3973   */\n      dup2\n        /* \"#utility.yul\":3965:3985   */\n      sub\n        /* \"#utility.yul\":3961:3962   */\n      0x00\n        /* \"#utility.yul\":3950:3959   */\n      dup4\n        /* \"#utility.yul\":3946:3963   */\n      add\n        /* \"#utility.yul\":3939:3986   */\n      mstore\n        /* \"#utility.yul\":4003:4134   */\n      tag_211\n        /* \"#utility.yul\":4129:4133   */\n      dup2\n        /* \"#utility.yul\":4003:4134   */\n      tag_153\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":3995:4134   */\n      swap1\n      pop\n        /* \"#utility.yul\":3722:4141   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4147:4323   */\n    tag_154:\n        /* \"#utility.yul\":4287:4315   */\n      0x496e76616c69642061676772656761746f722061646472657373000000000000\n        /* \"#utility.yul\":4283:4284   */\n      0x00\n        /* \"#utility.yul\":4275:4281   */\n      dup3\n        /* \"#utility.yul\":4271:4285   */\n      add\n        /* \"#utility.yul\":4264:4316   */\n      mstore\n        /* \"#utility.yul\":4147:4323   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4329:4695   */\n    tag_155:\n        /* \"#utility.yul\":4471:4474   */\n      0x00\n        /* \"#utility.yul\":4492:4559   */\n      tag_214\n        /* \"#utility.yul\":4556:4558   */\n      0x1a\n        /* \"#utility.yul\":4551:4554   */\n      dup4\n        /* \"#utility.yul\":4492:4559   */\n      tag_151\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":4485:4559   */\n      swap2\n      pop\n        /* \"#utility.yul\":4568:4661   */\n      tag_215\n        /* \"#utility.yul\":4657:4660   */\n      dup3\n        /* \"#utility.yul\":4568:4661   */\n      tag_154\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":4686:4688   */\n      0x20\n        /* \"#utility.yul\":4681:4684   */\n      dup3\n        /* \"#utility.yul\":4677:4689   */\n      add\n        /* \"#utility.yul\":4670:4689   */\n      swap1\n      pop\n        /* \"#utility.yul\":4329:4695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4701:5120   */\n    tag_75:\n        /* \"#utility.yul\":4867:4871   */\n      0x00\n        /* \"#utility.yul\":4905:4907   */\n      0x20\n        /* \"#utility.yul\":4894:4903   */\n      dup3\n        /* \"#utility.yul\":4890:4908   */\n      add\n        /* \"#utility.yul\":4882:4908   */\n      swap1\n      pop\n        /* \"#utility.yul\":4954:4963   */\n      dup2\n        /* \"#utility.yul\":4948:4952   */\n      dup2\n        /* \"#utility.yul\":4944:4964   */\n      sub\n        /* \"#utility.yul\":4940:4941   */\n      0x00\n        /* \"#utility.yul\":4929:4938   */\n      dup4\n        /* \"#utility.yul\":4925:4942   */\n      add\n        /* \"#utility.yul\":4918:4965   */\n      mstore\n        /* \"#utility.yul\":4982:5113   */\n      tag_217\n        /* \"#utility.yul\":5108:5112   */\n      dup2\n        /* \"#utility.yul\":4982:5113   */\n      tag_155\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":4974:5113   */\n      swap1\n      pop\n        /* \"#utility.yul\":4701:5120   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5126:5301   */\n    tag_156:\n        /* \"#utility.yul\":5266:5293   */\n      0x4e6f7420617574686f72697a65642061676772656761746f7200000000000000\n        /* \"#utility.yul\":5262:5263   */\n      0x00\n        /* \"#utility.yul\":5254:5260   */\n      dup3\n        /* \"#utility.yul\":5250:5264   */\n      add\n        /* \"#utility.yul\":5243:5294   */\n      mstore\n        /* \"#utility.yul\":5126:5301   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5307:5673   */\n    tag_157:\n        /* \"#utility.yul\":5449:5452   */\n      0x00\n        /* \"#utility.yul\":5470:5537   */\n      tag_220\n        /* \"#utility.yul\":5534:5536   */\n      0x19\n        /* \"#utility.yul\":5529:5532   */\n      dup4\n        /* \"#utility.yul\":5470:5537   */\n      tag_151\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":5463:5537   */\n      swap2\n      pop\n        /* \"#utility.yul\":5546:5639   */\n      tag_221\n        /* \"#utility.yul\":5635:5638   */\n      dup3\n        /* \"#utility.yul\":5546:5639   */\n      tag_156\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":5664:5666   */\n      0x20\n        /* \"#utility.yul\":5659:5662   */\n      dup3\n        /* \"#utility.yul\":5655:5667   */\n      add\n        /* \"#utility.yul\":5648:5667   */\n      swap1\n      pop\n        /* \"#utility.yul\":5307:5673   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5679:6098   */\n    tag_82:\n        /* \"#utility.yul\":5845:5849   */\n      0x00\n        /* \"#utility.yul\":5883:5885   */\n      0x20\n        /* \"#utility.yul\":5872:5881   */\n      dup3\n        /* \"#utility.yul\":5868:5886   */\n      add\n        /* \"#utility.yul\":5860:5886   */\n      swap1\n      pop\n        /* \"#utility.yul\":5932:5941   */\n      dup2\n        /* \"#utility.yul\":5926:5930   */\n      dup2\n        /* \"#utility.yul\":5922:5942   */\n      sub\n        /* \"#utility.yul\":5918:5919   */\n      0x00\n        /* \"#utility.yul\":5907:5916   */\n      dup4\n        /* \"#utility.yul\":5903:5920   */\n      add\n        /* \"#utility.yul\":5896:5943   */\n      mstore\n        /* \"#utility.yul\":5960:6091   */\n      tag_223\n        /* \"#utility.yul\":6086:6090   */\n      dup2\n        /* \"#utility.yul\":5960:6091   */\n      tag_157\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":5952:6091   */\n      swap1\n      pop\n        /* \"#utility.yul\":5679:6098   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6104:6276   */\n    tag_158:\n        /* \"#utility.yul\":6244:6268   */\n      0x496e76616c6964207265706f7274656420707269636500000000000000000000\n        /* \"#utility.yul\":6240:6241   */\n      0x00\n        /* \"#utility.yul\":6232:6238   */\n      dup3\n        /* \"#utility.yul\":6228:6242   */\n      add\n        /* \"#utility.yul\":6221:6269   */\n      mstore\n        /* \"#utility.yul\":6104:6276   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6282:6648   */\n    tag_159:\n        /* \"#utility.yul\":6424:6427   */\n      0x00\n        /* \"#utility.yul\":6445:6512   */\n      tag_226\n        /* \"#utility.yul\":6509:6511   */\n      0x16\n        /* \"#utility.yul\":6504:6507   */\n      dup4\n        /* \"#utility.yul\":6445:6512   */\n      tag_151\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":6438:6512   */\n      swap2\n      pop\n        /* \"#utility.yul\":6521:6614   */\n      tag_227\n        /* \"#utility.yul\":6610:6613   */\n      dup3\n        /* \"#utility.yul\":6521:6614   */\n      tag_158\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":6639:6641   */\n      0x20\n        /* \"#utility.yul\":6634:6637   */\n      dup3\n        /* \"#utility.yul\":6630:6642   */\n      add\n        /* \"#utility.yul\":6623:6642   */\n      swap1\n      pop\n        /* \"#utility.yul\":6282:6648   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6654:7073   */\n    tag_85:\n        /* \"#utility.yul\":6820:6824   */\n      0x00\n        /* \"#utility.yul\":6858:6860   */\n      0x20\n        /* \"#utility.yul\":6847:6856   */\n      dup3\n        /* \"#utility.yul\":6843:6861   */\n      add\n        /* \"#utility.yul\":6835:6861   */\n      swap1\n      pop\n        /* \"#utility.yul\":6907:6916   */\n      dup2\n        /* \"#utility.yul\":6901:6905   */\n      dup2\n        /* \"#utility.yul\":6897:6917   */\n      sub\n        /* \"#utility.yul\":6893:6894   */\n      0x00\n        /* \"#utility.yul\":6882:6891   */\n      dup4\n        /* \"#utility.yul\":6878:6895   */\n      add\n        /* \"#utility.yul\":6871:6918   */\n      mstore\n        /* \"#utility.yul\":6935:7066   */\n      tag_229\n        /* \"#utility.yul\":7061:7065   */\n      dup2\n        /* \"#utility.yul\":6935:7066   */\n      tag_159\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":6927:7066   */\n      swap1\n      pop\n        /* \"#utility.yul\":6654:7073   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7079:7399   */\n    tag_89:\n        /* \"#utility.yul\":7194:7198   */\n      0x00\n        /* \"#utility.yul\":7232:7234   */\n      0x40\n        /* \"#utility.yul\":7221:7230   */\n      dup3\n        /* \"#utility.yul\":7217:7235   */\n      add\n        /* \"#utility.yul\":7209:7235   */\n      swap1\n      pop\n        /* \"#utility.yul\":7245:7316   */\n      tag_231\n        /* \"#utility.yul\":7313:7314   */\n      0x00\n        /* \"#utility.yul\":7302:7311   */\n      dup4\n        /* \"#utility.yul\":7298:7315   */\n      add\n        /* \"#utility.yul\":7289:7295   */\n      dup6\n        /* \"#utility.yul\":7245:7316   */\n      tag_138\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":7326:7392   */\n      tag_232\n        /* \"#utility.yul\":7388:7390   */\n      0x20\n        /* \"#utility.yul\":7377:7386   */\n      dup4\n        /* \"#utility.yul\":7373:7391   */\n      add\n        /* \"#utility.yul\":7364:7370   */\n      dup5\n        /* \"#utility.yul\":7326:7392   */\n      tag_143\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":7079:7399   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7405:7737   */\n    tag_93:\n        /* \"#utility.yul\":7526:7530   */\n      0x00\n        /* \"#utility.yul\":7564:7566   */\n      0x40\n        /* \"#utility.yul\":7553:7562   */\n      dup3\n        /* \"#utility.yul\":7549:7567   */\n      add\n        /* \"#utility.yul\":7541:7567   */\n      swap1\n      pop\n        /* \"#utility.yul\":7577:7648   */\n      tag_234\n        /* \"#utility.yul\":7645:7646   */\n      0x00\n        /* \"#utility.yul\":7634:7643   */\n      dup4\n        /* \"#utility.yul\":7630:7647   */\n      add\n        /* \"#utility.yul\":7621:7627   */\n      dup6\n        /* \"#utility.yul\":7577:7648   */\n      tag_138\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":7658:7730   */\n      tag_235\n        /* \"#utility.yul\":7726:7728   */\n      0x20\n        /* \"#utility.yul\":7715:7724   */\n      dup4\n        /* \"#utility.yul\":7711:7729   */\n      add\n        /* \"#utility.yul\":7702:7708   */\n      dup5\n        /* \"#utility.yul\":7658:7730   */\n      tag_138\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":7405:7737   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7743:7921   */\n    tag_160:\n        /* \"#utility.yul\":7883:7913   */\n      0x5468726573686f6c6420746f6f206869676820286d6178203230252900000000\n        /* \"#utility.yul\":7879:7880   */\n      0x00\n        /* \"#utility.yul\":7871:7877   */\n      dup3\n        /* \"#utility.yul\":7867:7881   */\n      add\n        /* \"#utility.yul\":7860:7914   */\n      mstore\n        /* \"#utility.yul\":7743:7921   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7927:8293   */\n    tag_161:\n        /* \"#utility.yul\":8069:8072   */\n      0x00\n        /* \"#utility.yul\":8090:8157   */\n      tag_238\n        /* \"#utility.yul\":8154:8156   */\n      0x1c\n        /* \"#utility.yul\":8149:8152   */\n      dup4\n        /* \"#utility.yul\":8090:8157   */\n      tag_151\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":8083:8157   */\n      swap2\n      pop\n        /* \"#utility.yul\":8166:8259   */\n      tag_239\n        /* \"#utility.yul\":8255:8258   */\n      dup3\n        /* \"#utility.yul\":8166:8259   */\n      tag_160\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":8284:8286   */\n      0x20\n        /* \"#utility.yul\":8279:8282   */\n      dup3\n        /* \"#utility.yul\":8275:8287   */\n      add\n        /* \"#utility.yul\":8268:8287   */\n      swap1\n      pop\n        /* \"#utility.yul\":7927:8293   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8299:8718   */\n    tag_105:\n        /* \"#utility.yul\":8465:8469   */\n      0x00\n        /* \"#utility.yul\":8503:8505   */\n      0x20\n        /* \"#utility.yul\":8492:8501   */\n      dup3\n        /* \"#utility.yul\":8488:8506   */\n      add\n        /* \"#utility.yul\":8480:8506   */\n      swap1\n      pop\n        /* \"#utility.yul\":8552:8561   */\n      dup2\n        /* \"#utility.yul\":8546:8550   */\n      dup2\n        /* \"#utility.yul\":8542:8562   */\n      sub\n        /* \"#utility.yul\":8538:8539   */\n      0x00\n        /* \"#utility.yul\":8527:8536   */\n      dup4\n        /* \"#utility.yul\":8523:8540   */\n      add\n        /* \"#utility.yul\":8516:8563   */\n      mstore\n        /* \"#utility.yul\":8580:8711   */\n      tag_241\n        /* \"#utility.yul\":8706:8710   */\n      dup2\n        /* \"#utility.yul\":8580:8711   */\n      tag_161\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":8572:8711   */\n      swap1\n      pop\n        /* \"#utility.yul\":8299:8718   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8724:8905   */\n    tag_162:\n        /* \"#utility.yul\":8864:8897   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":8860:8861   */\n      0x00\n        /* \"#utility.yul\":8852:8858   */\n      dup3\n        /* \"#utility.yul\":8848:8862   */\n      add\n        /* \"#utility.yul\":8841:8898   */\n      mstore\n        /* \"#utility.yul\":8724:8905   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8911:9277   */\n    tag_163:\n        /* \"#utility.yul\":9053:9056   */\n      0x00\n        /* \"#utility.yul\":9074:9141   */\n      tag_244\n        /* \"#utility.yul\":9138:9140   */\n      0x1f\n        /* \"#utility.yul\":9133:9136   */\n      dup4\n        /* \"#utility.yul\":9074:9141   */\n      tag_151\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":9067:9141   */\n      swap2\n      pop\n        /* \"#utility.yul\":9150:9243   */\n      tag_245\n        /* \"#utility.yul\":9239:9242   */\n      dup3\n        /* \"#utility.yul\":9150:9243   */\n      tag_162\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":9268:9270   */\n      0x20\n        /* \"#utility.yul\":9263:9266   */\n      dup3\n        /* \"#utility.yul\":9259:9271   */\n      add\n        /* \"#utility.yul\":9252:9271   */\n      swap1\n      pop\n        /* \"#utility.yul\":8911:9277   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9283:9702   */\n    tag_124:\n        /* \"#utility.yul\":9449:9453   */\n      0x00\n        /* \"#utility.yul\":9487:9489   */\n      0x20\n        /* \"#utility.yul\":9476:9485   */\n      dup3\n        /* \"#utility.yul\":9472:9490   */\n      add\n        /* \"#utility.yul\":9464:9490   */\n      swap1\n      pop\n        /* \"#utility.yul\":9536:9545   */\n      dup2\n        /* \"#utility.yul\":9530:9534   */\n      dup2\n        /* \"#utility.yul\":9526:9546   */\n      sub\n        /* \"#utility.yul\":9522:9523   */\n      0x00\n        /* \"#utility.yul\":9511:9520   */\n      dup4\n        /* \"#utility.yul\":9507:9524   */\n      add\n        /* \"#utility.yul\":9500:9547   */\n      mstore\n        /* \"#utility.yul\":9564:9695   */\n      tag_247\n        /* \"#utility.yul\":9690:9694   */\n      dup2\n        /* \"#utility.yul\":9564:9695   */\n      tag_163\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":9556:9695   */\n      swap1\n      pop\n        /* \"#utility.yul\":9283:9702   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9708:9888   */\n    tag_164:\n        /* \"#utility.yul\":9756:9833   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9753:9754   */\n      0x00\n        /* \"#utility.yul\":9746:9834   */\n      mstore\n        /* \"#utility.yul\":9853:9857   */\n      0x11\n        /* \"#utility.yul\":9850:9851   */\n      0x04\n        /* \"#utility.yul\":9843:9858   */\n      mstore\n        /* \"#utility.yul\":9877:9881   */\n      0x24\n        /* \"#utility.yul\":9874:9875   */\n      0x00\n        /* \"#utility.yul\":9867:9882   */\n      revert\n        /* \"#utility.yul\":9894:10088   */\n    tag_128:\n        /* \"#utility.yul\":9934:9938   */\n      0x00\n        /* \"#utility.yul\":9954:9974   */\n      tag_250\n        /* \"#utility.yul\":9972:9973   */\n      dup3\n        /* \"#utility.yul\":9954:9974   */\n      tag_137\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":9949:9974   */\n      swap2\n      pop\n        /* \"#utility.yul\":9988:10008   */\n      tag_251\n        /* \"#utility.yul\":10006:10007   */\n      dup4\n        /* \"#utility.yul\":9988:10008   */\n      tag_137\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":9983:10008   */\n      swap3\n      pop\n        /* \"#utility.yul\":10032:10033   */\n      dup3\n        /* \"#utility.yul\":10029:10030   */\n      dup3\n        /* \"#utility.yul\":10025:10034   */\n      sub\n        /* \"#utility.yul\":10017:10034   */\n      swap1\n      pop\n        /* \"#utility.yul\":10056:10057   */\n      dup2\n        /* \"#utility.yul\":10050:10054   */\n      dup2\n        /* \"#utility.yul\":10047:10058   */\n      gt\n        /* \"#utility.yul\":10044:10081   */\n      iszero\n      tag_252\n      jumpi\n        /* \"#utility.yul\":10061:10079   */\n      tag_253\n      tag_164\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":10044:10081   */\n    tag_252:\n        /* \"#utility.yul\":9894:10088   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10094:10504   */\n    tag_132:\n        /* \"#utility.yul\":10134:10141   */\n      0x00\n        /* \"#utility.yul\":10157:10177   */\n      tag_255\n        /* \"#utility.yul\":10175:10176   */\n      dup3\n        /* \"#utility.yul\":10157:10177   */\n      tag_137\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":10152:10177   */\n      swap2\n      pop\n        /* \"#utility.yul\":10191:10211   */\n      tag_256\n        /* \"#utility.yul\":10209:10210   */\n      dup4\n        /* \"#utility.yul\":10191:10211   */\n      tag_137\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":10186:10211   */\n      swap3\n      pop\n        /* \"#utility.yul\":10246:10247   */\n      dup3\n        /* \"#utility.yul\":10243:10244   */\n      dup3\n        /* \"#utility.yul\":10239:10248   */\n      mul\n        /* \"#utility.yul\":10268:10298   */\n      tag_257\n        /* \"#utility.yul\":10286:10297   */\n      dup2\n        /* \"#utility.yul\":10268:10298   */\n      tag_137\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":10257:10298   */\n      swap2\n      pop\n        /* \"#utility.yul\":10447:10448   */\n      dup3\n        /* \"#utility.yul\":10438:10445   */\n      dup3\n        /* \"#utility.yul\":10434:10449   */\n      div\n        /* \"#utility.yul\":10431:10432   */\n      dup5\n        /* \"#utility.yul\":10428:10450   */\n      eq\n        /* \"#utility.yul\":10408:10409   */\n      dup4\n        /* \"#utility.yul\":10401:10410   */\n      iszero\n        /* \"#utility.yul\":10381:10464   */\n      or\n        /* \"#utility.yul\":10358:10497   */\n      tag_258\n      jumpi\n        /* \"#utility.yul\":10477:10495   */\n      tag_259\n      tag_164\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":10358:10497   */\n    tag_258:\n        /* \"#utility.yul\":10142:10504   */\n      pop\n        /* \"#utility.yul\":10094:10504   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10510:10690   */\n    tag_165:\n        /* \"#utility.yul\":10558:10635   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10555:10556   */\n      0x00\n        /* \"#utility.yul\":10548:10636   */\n      mstore\n        /* \"#utility.yul\":10655:10659   */\n      0x12\n        /* \"#utility.yul\":10652:10653   */\n      0x04\n        /* \"#utility.yul\":10645:10660   */\n      mstore\n        /* \"#utility.yul\":10679:10683   */\n      0x24\n        /* \"#utility.yul\":10676:10677   */\n      0x00\n        /* \"#utility.yul\":10669:10684   */\n      revert\n        /* \"#utility.yul\":10696:10881   */\n    tag_134:\n        /* \"#utility.yul\":10736:10737   */\n      0x00\n        /* \"#utility.yul\":10753:10773   */\n      tag_262\n        /* \"#utility.yul\":10771:10772   */\n      dup3\n        /* \"#utility.yul\":10753:10773   */\n      tag_137\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":10748:10773   */\n      swap2\n      pop\n        /* \"#utility.yul\":10787:10807   */\n      tag_263\n        /* \"#utility.yul\":10805:10806   */\n      dup4\n        /* \"#utility.yul\":10787:10807   */\n      tag_137\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":10782:10807   */\n      swap3\n      pop\n        /* \"#utility.yul\":10826:10827   */\n      dup3\n        /* \"#utility.yul\":10816:10851   */\n      tag_264\n      jumpi\n        /* \"#utility.yul\":10831:10849   */\n      tag_265\n      tag_165\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":10816:10851   */\n    tag_264:\n        /* \"#utility.yul\":10873:10874   */\n      dup3\n        /* \"#utility.yul\":10870:10871   */\n      dup3\n        /* \"#utility.yul\":10866:10875   */\n      div\n        /* \"#utility.yul\":10861:10875   */\n      swap1\n      pop\n        /* \"#utility.yul\":10696:10881   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220682a8fe8a693c14180b93d0dd717010ef1a5b4c745f2587750218aff61083d5b64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_166": {
									"entryPoint": null,
									"id": 166,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_351": {
									"entryPoint": null,
									"id": 351,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 562,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 890,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 793,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_address_fromMemory": {
									"entryPoint": 912,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1001,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_12dd0bd5b0fe6bd694aad6aa9c1622ed7fb13899080df8a821a6515487e07564_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1101,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a538d00ccaeee824696a630bd8955dad3f6250a448b63391385ebbab0030f6db_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1211,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fa814051730ebeb9b66b18fa0637007e08f69a4bf0ce03e54dbb251d25cd23d5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1321,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1018,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_12dd0bd5b0fe6bd694aad6aa9c1622ed7fb13899080df8a821a6515487e07564__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1139,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a538d00ccaeee824696a630bd8955dad3f6250a448b63391385ebbab0030f6db__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1249,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fa814051730ebeb9b66b18fa0637007e08f69a4bf0ce03e54dbb251d25cd23d5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1359,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1045,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 846,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 759,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 755,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_12dd0bd5b0fe6bd694aad6aa9c1622ed7fb13899080df8a821a6515487e07564": {
									"entryPoint": 1061,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a538d00ccaeee824696a630bd8955dad3f6250a448b63391385ebbab0030f6db": {
									"entryPoint": 1171,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fa814051730ebeb9b66b18fa0637007e08f69a4bf0ce03e54dbb251d25cd23d5": {
									"entryPoint": 1281,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 865,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 768,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5332:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:4"
															},
															"nodeType": "YulIf",
															"src": "470:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:4",
														"type": ""
													}
												],
												"src": "417:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "608:80:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "618:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "627:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "649:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "649:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "586:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "594:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "602:5:4",
														"type": ""
													}
												],
												"src": "545:143:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "749:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "764:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "771:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "760:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "760:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "749:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "721:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "731:7:4",
														"type": ""
													}
												],
												"src": "694:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "871:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "881:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "910:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "892:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "892:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "881:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "853:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "863:7:4",
														"type": ""
													}
												],
												"src": "826:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "971:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1028:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "984:43:4"
															},
															"nodeType": "YulIf",
															"src": "981:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "964:5:4",
														"type": ""
													}
												],
												"src": "928:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1119:80:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1129:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1138:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1160:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:4"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1097:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1105:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1113:5:4",
														"type": ""
													}
												],
												"src": "1056:143:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1316:552:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1362:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1364:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1364:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1337:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1346:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1333:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1333:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1358:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1329:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1329:32:4"
															},
															"nodeType": "YulIf",
															"src": "1326:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1455:128:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1470:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1484:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1474:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1499:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1545:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1556:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1541:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1541:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1565:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1509:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1509:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1499:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1593:129:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1608:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1622:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1612:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1638:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1684:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1695:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1680:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1680:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1704:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1648:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1648:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1638:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1732:129:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1747:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1761:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1751:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1777:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1823:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1834:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1819:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1819:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1843:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1787:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1787:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1777:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1270:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1281:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1293:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1301:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1309:6:4",
														"type": ""
													}
												],
												"src": "1205:663:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1939:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1956:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1979:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1961:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1961:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1949:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1949:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1949:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1927:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1934:3:4",
														"type": ""
													}
												],
												"src": "1874:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2096:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2106:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2118:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2129:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2114:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2114:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2106:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2186:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2199:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2210:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2195:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2195:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2142:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2142:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2142:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2068:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2080:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2091:4:4",
														"type": ""
													}
												],
												"src": "1998:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2322:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2339:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2344:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2332:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2332:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2332:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2360:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2379:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2384:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2375:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2375:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2360:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2294:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2299:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2310:11:4",
														"type": ""
													}
												],
												"src": "2226:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2507:65:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2529:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2537:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2525:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2525:14:4"
																	},
																	{
																		"hexValue": "506567207072696365206d757374206265203e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2541:23:4",
																		"type": "",
																		"value": "Peg price must be > 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2518:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2518:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2518:47:4"
														}
													]
												},
												"name": "store_literal_in_memory_12dd0bd5b0fe6bd694aad6aa9c1622ed7fb13899080df8a821a6515487e07564",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2499:6:4",
														"type": ""
													}
												],
												"src": "2401:171:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2724:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2734:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2800:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2805:2:4",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2741:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2741:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2734:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2906:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_12dd0bd5b0fe6bd694aad6aa9c1622ed7fb13899080df8a821a6515487e07564",
																	"nodeType": "YulIdentifier",
																	"src": "2817:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2817:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2817:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2919:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2930:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2935:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2926:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2926:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2919:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_12dd0bd5b0fe6bd694aad6aa9c1622ed7fb13899080df8a821a6515487e07564_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2712:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2720:3:4",
														"type": ""
													}
												],
												"src": "2578:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3121:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3131:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3143:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3154:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3139:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3139:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3131:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3178:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3189:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3174:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3174:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3197:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3203:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3193:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3193:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3167:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3167:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3167:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3223:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3357:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_12dd0bd5b0fe6bd694aad6aa9c1622ed7fb13899080df8a821a6515487e07564_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3231:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3231:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3223:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_12dd0bd5b0fe6bd694aad6aa9c1622ed7fb13899080df8a821a6515487e07564__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3101:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3116:4:4",
														"type": ""
													}
												],
												"src": "2950:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3481:72:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3503:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3511:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3499:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3499:14:4"
																	},
																	{
																		"hexValue": "5468726573686f6c6420746f6f206869676820286d61782032302529",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3515:30:4",
																		"type": "",
																		"value": "Threshold too high (max 20%)"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3492:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3492:54:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3492:54:4"
														}
													]
												},
												"name": "store_literal_in_memory_a538d00ccaeee824696a630bd8955dad3f6250a448b63391385ebbab0030f6db",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3473:6:4",
														"type": ""
													}
												],
												"src": "3375:178:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3705:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3715:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3781:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3786:2:4",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3722:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3722:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3715:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3887:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a538d00ccaeee824696a630bd8955dad3f6250a448b63391385ebbab0030f6db",
																	"nodeType": "YulIdentifier",
																	"src": "3798:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3798:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3798:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3900:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3911:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3916:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3907:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3907:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3900:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a538d00ccaeee824696a630bd8955dad3f6250a448b63391385ebbab0030f6db_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3693:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3701:3:4",
														"type": ""
													}
												],
												"src": "3559:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4102:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4112:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4124:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4135:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4120:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4120:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4112:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4159:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4170:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4155:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4155:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4178:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4184:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4174:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4174:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4148:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4148:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4148:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4204:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4338:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a538d00ccaeee824696a630bd8955dad3f6250a448b63391385ebbab0030f6db_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4212:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4212:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4204:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a538d00ccaeee824696a630bd8955dad3f6250a448b63391385ebbab0030f6db__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4082:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4097:4:4",
														"type": ""
													}
												],
												"src": "3931:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4462:70:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4484:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4492:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4480:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4480:14:4"
																	},
																	{
																		"hexValue": "496e76616c69642061676772656761746f722061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4496:28:4",
																		"type": "",
																		"value": "Invalid aggregator address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4473:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4473:52:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4473:52:4"
														}
													]
												},
												"name": "store_literal_in_memory_fa814051730ebeb9b66b18fa0637007e08f69a4bf0ce03e54dbb251d25cd23d5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4454:6:4",
														"type": ""
													}
												],
												"src": "4356:176:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4684:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4694:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4760:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4765:2:4",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4701:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4701:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4694:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4866:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fa814051730ebeb9b66b18fa0637007e08f69a4bf0ce03e54dbb251d25cd23d5",
																	"nodeType": "YulIdentifier",
																	"src": "4777:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4777:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4777:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4879:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4890:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4895:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4886:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4886:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4879:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fa814051730ebeb9b66b18fa0637007e08f69a4bf0ce03e54dbb251d25cd23d5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4672:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4680:3:4",
														"type": ""
													}
												],
												"src": "4538:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5081:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5091:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5103:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5114:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5099:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5099:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5091:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5138:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5149:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5134:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5134:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5157:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5163:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5153:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5153:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5127:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5127:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5127:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5183:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5317:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fa814051730ebeb9b66b18fa0637007e08f69a4bf0ce03e54dbb251d25cd23d5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5191:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5191:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5183:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fa814051730ebeb9b66b18fa0637007e08f69a4bf0ce03e54dbb251d25cd23d5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5061:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5076:4:4",
														"type": ""
													}
												],
												"src": "4910:419:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_12dd0bd5b0fe6bd694aad6aa9c1622ed7fb13899080df8a821a6515487e07564(memPtr) {\n\n        mstore(add(memPtr, 0), \"Peg price must be > 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_12dd0bd5b0fe6bd694aad6aa9c1622ed7fb13899080df8a821a6515487e07564_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_12dd0bd5b0fe6bd694aad6aa9c1622ed7fb13899080df8a821a6515487e07564(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_12dd0bd5b0fe6bd694aad6aa9c1622ed7fb13899080df8a821a6515487e07564__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12dd0bd5b0fe6bd694aad6aa9c1622ed7fb13899080df8a821a6515487e07564_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a538d00ccaeee824696a630bd8955dad3f6250a448b63391385ebbab0030f6db(memPtr) {\n\n        mstore(add(memPtr, 0), \"Threshold too high (max 20%)\")\n\n    }\n\n    function abi_encode_t_stringliteral_a538d00ccaeee824696a630bd8955dad3f6250a448b63391385ebbab0030f6db_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_a538d00ccaeee824696a630bd8955dad3f6250a448b63391385ebbab0030f6db(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a538d00ccaeee824696a630bd8955dad3f6250a448b63391385ebbab0030f6db__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a538d00ccaeee824696a630bd8955dad3f6250a448b63391385ebbab0030f6db_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fa814051730ebeb9b66b18fa0637007e08f69a4bf0ce03e54dbb251d25cd23d5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid aggregator address\")\n\n    }\n\n    function abi_encode_t_stringliteral_fa814051730ebeb9b66b18fa0637007e08f69a4bf0ce03e54dbb251d25cd23d5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_fa814051730ebeb9b66b18fa0637007e08f69a4bf0ce03e54dbb251d25cd23d5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fa814051730ebeb9b66b18fa0637007e08f69a4bf0ce03e54dbb251d25cd23d5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fa814051730ebeb9b66b18fa0637007e08f69a4bf0ce03e54dbb251d25cd23d5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1425 CODESIZE SUB DUP1 PUSH3 0x1425 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x390 JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xAA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA1 SWAP2 SWAP1 PUSH3 0x3FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xBB DUP2 PUSH3 0x232 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH0 DUP4 GT PUSH3 0x108 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xFF SWAP1 PUSH3 0x473 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7D0 DUP3 GT ISZERO PUSH3 0x150 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x147 SWAP1 PUSH3 0x4E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x1C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1B8 SWAP1 PUSH3 0x54F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP PUSH3 0x56F JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x30B DUP2 PUSH3 0x2F7 JUMP JUMPDEST DUP2 EQ PUSH3 0x316 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x329 DUP2 PUSH3 0x300 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x35A DUP3 PUSH3 0x32F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x36C DUP2 PUSH3 0x34E JUMP JUMPDEST DUP2 EQ PUSH3 0x377 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x38A DUP2 PUSH3 0x361 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x3AA JUMPI PUSH3 0x3A9 PUSH3 0x2F3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x3B9 DUP7 DUP3 DUP8 ADD PUSH3 0x319 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x3CC DUP7 DUP3 DUP8 ADD PUSH3 0x319 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x3DF DUP7 DUP3 DUP8 ADD PUSH3 0x37A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH3 0x3F4 DUP2 PUSH3 0x34E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x40F PUSH0 DUP4 ADD DUP5 PUSH3 0x3E9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x506567207072696365206D757374206265203E20300000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x45B PUSH1 0x15 DUP4 PUSH3 0x415 JUMP JUMPDEST SWAP2 POP PUSH3 0x468 DUP3 PUSH3 0x425 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x48C DUP2 PUSH3 0x44D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5468726573686F6C6420746F6F206869676820286D6178203230252900000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x4C9 PUSH1 0x1C DUP4 PUSH3 0x415 JUMP JUMPDEST SWAP2 POP PUSH3 0x4D6 DUP3 PUSH3 0x493 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x4FA DUP2 PUSH3 0x4BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642061676772656761746F722061646472657373000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x537 PUSH1 0x1A DUP4 PUSH3 0x415 JUMP JUMPDEST SWAP2 POP PUSH3 0x544 DUP3 PUSH3 0x501 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x568 DUP2 PUSH3 0x529 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEA8 DUP1 PUSH3 0x57D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0x9FE4EE47 EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0xC1144B71 EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0xC7F898F0 EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0xD7D7442F EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1E4 JUMPI PUSH2 0xB2 JUMP JUMPDEST DUP1 PUSH4 0x53F14DA EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x3078FFF5 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x5A0332A4 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x74DE33E4 EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x7542F23A EQ PUSH2 0x136 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBE PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x954 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDC PUSH2 0x206 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x9AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFA PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x107 SWAP2 SWAP1 PUSH2 0x9DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x118 PUSH2 0x23E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xA26 JUMP JUMPDEST PUSH2 0x251 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13E PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14B SWAP2 SWAP1 PUSH2 0x954 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15C PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x169 SWAP2 SWAP1 PUSH2 0x9AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x187 SWAP2 SWAP1 PUSH2 0xA7B JUMP JUMPDEST PUSH2 0x309 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x196 PUSH2 0x405 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x954 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0xA26 JUMP JUMPDEST PUSH2 0x40B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xA26 JUMP JUMPDEST PUSH2 0x628 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0xA7B JUMP JUMPDEST PUSH2 0x6B6 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x246 PUSH2 0x73A JUMP JUMPDEST PUSH2 0x24F PUSH0 PUSH2 0x7C1 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x259 PUSH2 0x73A JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x29B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x292 SWAP1 PUSH2 0xB00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0x8B4412706CF218351F2B2670D751D9981E4B3E3490911ABA339F1DAC35103D0B DUP2 PUSH1 0x40 MLOAD PUSH2 0x2D1 SWAP2 SWAP1 PUSH2 0x954 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x311 PUSH2 0x73A JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x37F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x376 SWAP1 PUSH2 0xB68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x602CEC4B1583B07D071161DA5EB9589444D2459201E2FAB7753DC941E9351C21 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x413 PUSH2 0x882 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x499 SWAP1 PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x4E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DB SWAP1 PUSH2 0xC38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH0 PUSH2 0x4F5 DUP3 PUSH2 0x8D1 JUMP JUMPDEST SWAP1 POP PUSH32 0x8322C40CC8FA3BD54EC84110A078E65C783D8D79AD96ADF1B07CD59ED10C2DC2 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x528 SWAP3 SWAP2 SWAP1 PUSH2 0xC56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 DUP1 ISZERO PUSH2 0x54A JUMPI POP PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x5A8 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x43A30A8A621AE0BF221B02B806C2A80D658E4886E1D85E72427B7466C0CD4197 TIMESTAMP DUP4 PUSH1 0x40 MLOAD PUSH2 0x59B SWAP3 SWAP2 SWAP1 PUSH2 0xC7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x61C JUMP JUMPDEST DUP1 ISZERO DUP1 ISZERO PUSH2 0x5C2 JUMPI POP PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x61B JUMPI PUSH0 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xEEDD16500C1F2C39EBB8B74FD12984F1E07626ACDB1434293DD2707E32EA6EB9 TIMESTAMP DUP4 PUSH1 0x40 MLOAD PUSH2 0x612 SWAP3 SWAP2 SWAP1 PUSH2 0xC7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST JUMPDEST POP PUSH2 0x625 PUSH2 0x92C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x630 PUSH2 0x73A JUMP JUMPDEST PUSH2 0x7D0 DUP2 GT ISZERO PUSH2 0x675 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x66C SWAP1 PUSH2 0xCEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0xADFA8ECB21B6962EBCD0ADBD9AB985B7B4C5B5EB3B0DEAD683171565C7BFE171 DUP2 PUSH1 0x40 MLOAD PUSH2 0x6AB SWAP2 SWAP1 PUSH2 0x954 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x6BE PUSH2 0x73A JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x72E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x725 SWAP2 SWAP1 PUSH2 0x9AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x737 DUP2 PUSH2 0x7C1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x742 PUSH2 0x935 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x760 PUSH2 0x2E2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7BF JUMPI PUSH2 0x783 PUSH2 0x935 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B6 SWAP2 SWAP1 PUSH2 0x9AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x8C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8BE SWAP1 PUSH2 0xD56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x2 SLOAD DUP4 GT PUSH2 0x8EF JUMPI DUP3 PUSH1 0x2 SLOAD PUSH2 0x8EA SWAP2 SWAP1 PUSH2 0xDA1 JUMP JUMPDEST PUSH2 0x8FE JUMP JUMPDEST PUSH1 0x2 SLOAD DUP4 PUSH2 0x8FD SWAP2 SWAP1 PUSH2 0xDA1 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 SLOAD PUSH2 0x2710 DUP4 PUSH2 0x912 SWAP2 SWAP1 PUSH2 0xDD4 JUMP JUMPDEST PUSH2 0x91C SWAP2 SWAP1 PUSH2 0xE42 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 SLOAD DUP2 GT SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x94E DUP2 PUSH2 0x93C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x967 PUSH0 DUP4 ADD DUP5 PUSH2 0x945 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x996 DUP3 PUSH2 0x96D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9A6 DUP2 PUSH2 0x98C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9BF PUSH0 DUP4 ADD DUP5 PUSH2 0x99D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9D9 DUP2 PUSH2 0x9C5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9F2 PUSH0 DUP4 ADD DUP5 PUSH2 0x9D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA05 DUP2 PUSH2 0x93C JUMP JUMPDEST DUP2 EQ PUSH2 0xA0F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA20 DUP2 PUSH2 0x9FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA3B JUMPI PUSH2 0xA3A PUSH2 0x9F8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA48 DUP5 DUP3 DUP6 ADD PUSH2 0xA12 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA5A DUP2 PUSH2 0x98C JUMP JUMPDEST DUP2 EQ PUSH2 0xA64 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA75 DUP2 PUSH2 0xA51 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA90 JUMPI PUSH2 0xA8F PUSH2 0x9F8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA9D DUP5 DUP3 DUP6 ADD PUSH2 0xA67 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x506567207072696365206D757374206265203E20300000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xAEA PUSH1 0x15 DUP4 PUSH2 0xAA6 JUMP JUMPDEST SWAP2 POP PUSH2 0xAF5 DUP3 PUSH2 0xAB6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB17 DUP2 PUSH2 0xADE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642061676772656761746F722061646472657373000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB52 PUSH1 0x1A DUP4 PUSH2 0xAA6 JUMP JUMPDEST SWAP2 POP PUSH2 0xB5D DUP3 PUSH2 0xB1E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB7F DUP2 PUSH2 0xB46 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A65642061676772656761746F7200000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xBBA PUSH1 0x19 DUP4 PUSH2 0xAA6 JUMP JUMPDEST SWAP2 POP PUSH2 0xBC5 DUP3 PUSH2 0xB86 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xBE7 DUP2 PUSH2 0xBAE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964207265706F7274656420707269636500000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC22 PUSH1 0x16 DUP4 PUSH2 0xAA6 JUMP JUMPDEST SWAP2 POP PUSH2 0xC2D DUP3 PUSH2 0xBEE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC4F DUP2 PUSH2 0xC16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC69 PUSH0 DUP4 ADD DUP6 PUSH2 0x945 JUMP JUMPDEST PUSH2 0xC76 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x9D0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC90 PUSH0 DUP4 ADD DUP6 PUSH2 0x945 JUMP JUMPDEST PUSH2 0xC9D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x945 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5468726573686F6C6420746F6F206869676820286D6178203230252900000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xCD8 PUSH1 0x1C DUP4 PUSH2 0xAA6 JUMP JUMPDEST SWAP2 POP PUSH2 0xCE3 DUP3 PUSH2 0xCA4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD05 DUP2 PUSH2 0xCCC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD40 PUSH1 0x1F DUP4 PUSH2 0xAA6 JUMP JUMPDEST SWAP2 POP PUSH2 0xD4B DUP3 PUSH2 0xD0C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD6D DUP2 PUSH2 0xD34 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xDAB DUP3 PUSH2 0x93C JUMP JUMPDEST SWAP2 POP PUSH2 0xDB6 DUP4 PUSH2 0x93C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xDCE JUMPI PUSH2 0xDCD PUSH2 0xD74 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDDE DUP3 PUSH2 0x93C JUMP JUMPDEST SWAP2 POP PUSH2 0xDE9 DUP4 PUSH2 0x93C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xDF7 DUP2 PUSH2 0x93C JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xE0E JUMPI PUSH2 0xE0D PUSH2 0xD74 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xE4C DUP3 PUSH2 0x93C JUMP JUMPDEST SWAP2 POP PUSH2 0xE57 DUP4 PUSH2 0x93C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xE67 JUMPI PUSH2 0xE66 PUSH2 0xE15 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x2A8FE8A693C14180B9 RETURNDATASIZE 0xD 0xD7 OR ADD 0xE CALL 0xA5 0xB4 0xC7 GASLIMIT CALLCODE PC PUSH24 0x50218AFF61083D5B64736F6C634300081400330000000000 ",
							"sourceMap": "447:4797:3:-:0;;;1801:468;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1897:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:1;1821:7;:22;;;;1943:1:3::1;1931:9;:13;1923:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;2005:4;1988:13;:21;;1980:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;2088:1;2060:30;;:16;:30;;::::0;2052:69:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2143:9;2132:8;:20;;;;2177:13;2162:12;:28;;;;2218:16;2200:15;;:34;;;;;;;;;;;;;;;;;;2257:5;2244:10;;:18;;;;;;;;;;;;;;;;;;1801:468:::0;;;447:4797;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:4:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:126::-;731:7;771:42;764:5;760:54;749:65;;694:126;;;:::o;826:96::-;863:7;892:24;910:5;892:24;:::i;:::-;881:35;;826:96;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:663::-;1293:6;1301;1309;1358:2;1346:9;1337:7;1333:23;1329:32;1326:119;;;1364:79;;:::i;:::-;1326:119;1484:1;1509:64;1565:7;1556:6;1545:9;1541:22;1509:64;:::i;:::-;1499:74;;1455:128;1622:2;1648:64;1704:7;1695:6;1684:9;1680:22;1648:64;:::i;:::-;1638:74;;1593:129;1761:2;1787:64;1843:7;1834:6;1823:9;1819:22;1787:64;:::i;:::-;1777:74;;1732:129;1205:663;;;;;:::o;1874:118::-;1961:24;1979:5;1961:24;:::i;:::-;1956:3;1949:37;1874:118;;:::o;1998:222::-;2091:4;2129:2;2118:9;2114:18;2106:26;;2142:71;2210:1;2199:9;2195:17;2186:6;2142:71;:::i;:::-;1998:222;;;;:::o;2226:169::-;2310:11;2344:6;2339:3;2332:19;2384:4;2379:3;2375:14;2360:29;;2226:169;;;;:::o;2401:171::-;2541:23;2537:1;2529:6;2525:14;2518:47;2401:171;:::o;2578:366::-;2720:3;2741:67;2805:2;2800:3;2741:67;:::i;:::-;2734:74;;2817:93;2906:3;2817:93;:::i;:::-;2935:2;2930:3;2926:12;2919:19;;2578:366;;;:::o;2950:419::-;3116:4;3154:2;3143:9;3139:18;3131:26;;3203:9;3197:4;3193:20;3189:1;3178:9;3174:17;3167:47;3231:131;3357:4;3231:131;:::i;:::-;3223:139;;2950:419;;;:::o;3375:178::-;3515:30;3511:1;3503:6;3499:14;3492:54;3375:178;:::o;3559:366::-;3701:3;3722:67;3786:2;3781:3;3722:67;:::i;:::-;3715:74;;3798:93;3887:3;3798:93;:::i;:::-;3916:2;3911:3;3907:12;3900:19;;3559:366;;;:::o;3931:419::-;4097:4;4135:2;4124:9;4120:18;4112:26;;4184:9;4178:4;4174:20;4170:1;4159:9;4155:17;4148:47;4212:131;4338:4;4212:131;:::i;:::-;4204:139;;3931:419;;;:::o;4356:176::-;4496:28;4492:1;4484:6;4480:14;4473:52;4356:176;:::o;4538:366::-;4680:3;4701:67;4765:2;4760:3;4701:67;:::i;:::-;4694:74;;4777:93;4866:3;4777:93;:::i;:::-;4895:2;4890:3;4886:12;4879:19;;4538:366;;;:::o;4910:419::-;5076:4;5114:2;5103:9;5099:18;5091:26;;5163:9;5157:4;5153:20;5149:1;5138:9;5134:17;5127:47;5191:131;5317:4;5191:131;:::i;:::-;5183:139;;4910:419;;;:::o;447:4797:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkDepeg_533": {
									"entryPoint": 2257,
									"id": 533,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_checkOwner_84": {
									"entryPoint": 1850,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_224": {
									"entryPoint": 2357,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_200": {
									"entryPoint": 2348,
									"id": 200,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_192": {
									"entryPoint": 2178,
									"id": 192,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 1985,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isDepegged_266": {
									"entryPoint": 555,
									"id": 266,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lastPrice_260": {
									"entryPoint": 512,
									"id": 260,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 738,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pegPrice_254": {
									"entryPoint": 732,
									"id": 254,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@priceAggregator_263": {
									"entryPoint": 518,
									"id": 263,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 574,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reportPrice_497": {
									"entryPoint": 1035,
									"id": 497,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@thresholdBps_257": {
									"entryPoint": 1029,
									"id": 257,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 1718,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateAggregator_378": {
									"entryPoint": 777,
									"id": 378,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updatePegPrice_426": {
									"entryPoint": 593,
									"id": 426,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateThreshold_402": {
									"entryPoint": 1576,
									"id": 402,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2663,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2578,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2683,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2598,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2461,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_12dd0bd5b0fe6bd694aad6aa9c1622ed7fb13899080df8a821a6515487e07564_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2782,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1da32b1727104c1bb72198bdeb5aa3d36a7210eafdc67d4728eca087384bd815_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2990,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a538d00ccaeee824696a630bd8955dad3f6250a448b63391385ebbab0030f6db_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3276,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b079fc7e3ef0cb6e47ccaa10b025eceb7b35370f00a1a7796a9d619400121ece_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3094,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3380,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fa814051730ebeb9b66b18fa0637007e08f69a4bf0ce03e54dbb251d25cd23d5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2886,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2373,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2476,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_12dd0bd5b0fe6bd694aad6aa9c1622ed7fb13899080df8a821a6515487e07564__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2816,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1da32b1727104c1bb72198bdeb5aa3d36a7210eafdc67d4728eca087384bd815__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3024,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a538d00ccaeee824696a630bd8955dad3f6250a448b63391385ebbab0030f6db__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3310,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b079fc7e3ef0cb6e47ccaa10b025eceb7b35370f00a1a7796a9d619400121ece__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3128,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3414,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fa814051730ebeb9b66b18fa0637007e08f69a4bf0ce03e54dbb251d25cd23d5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2920,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2388,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 3158,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3197,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2726,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3540,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3489,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2444,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2501,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2413,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2364,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3444,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3605,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2552,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_12dd0bd5b0fe6bd694aad6aa9c1622ed7fb13899080df8a821a6515487e07564": {
									"entryPoint": 2742,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1da32b1727104c1bb72198bdeb5aa3d36a7210eafdc67d4728eca087384bd815": {
									"entryPoint": 2950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a538d00ccaeee824696a630bd8955dad3f6250a448b63391385ebbab0030f6db": {
									"entryPoint": 3236,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b079fc7e3ef0cb6e47ccaa10b025eceb7b35370f00a1a7796a9d619400121ece": {
									"entryPoint": 3054,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 3340,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fa814051730ebeb9b66b18fa0637007e08f69a4bf0ce03e54dbb251d25cd23d5": {
									"entryPoint": 2846,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2556,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10884:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:4",
														"type": ""
													}
												],
												"src": "7:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:4",
														"type": ""
													}
												],
												"src": "90:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:4",
														"type": ""
													}
												],
												"src": "214:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "487:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "497:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "512:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "519:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "508:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "508:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "497:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "469:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "479:7:4",
														"type": ""
													}
												],
												"src": "442:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "619:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "629:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "658:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "640:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "640:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "629:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "601:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "611:7:4",
														"type": ""
													}
												],
												"src": "574:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "741:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "758:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "781:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "763:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "763:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "751:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "751:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "729:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "736:3:4",
														"type": ""
													}
												],
												"src": "676:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "898:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "908:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "920:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "931:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "916:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "916:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "908:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "988:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1001:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1012:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "997:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "997:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "944:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "944:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "944:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "870:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "882:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "893:4:4",
														"type": ""
													}
												],
												"src": "800:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1070:48:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1080:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1105:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1098:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1098:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1091:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1091:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1080:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1052:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1062:7:4",
														"type": ""
													}
												],
												"src": "1028:90:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1183:50:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1200:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1220:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1205:14:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1205:21:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1193:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1193:34:4"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1171:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1178:3:4",
														"type": ""
													}
												],
												"src": "1124:109:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1331:118:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1341:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1353:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1364:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1349:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1349:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1341:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1415:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1428:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1439:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1424:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1424:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1377:37:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1377:65:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1377:65:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1303:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1315:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1326:4:4",
														"type": ""
													}
												],
												"src": "1239:210:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1495:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1505:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1521:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1515:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1515:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1505:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1488:6:4",
														"type": ""
													}
												],
												"src": "1455:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1625:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1642:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1645:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1635:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1635:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1635:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1536:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1748:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1765:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1768:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1758:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1758:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1758:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1659:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1825:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1882:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1891:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1894:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1884:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1884:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1884:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1848:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1873:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1855:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1855:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1845:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1845:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1838:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1838:43:4"
															},
															"nodeType": "YulIf",
															"src": "1835:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1818:5:4",
														"type": ""
													}
												],
												"src": "1782:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1962:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1972:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1994:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1981:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1981:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1972:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2037:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2010:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2010:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2010:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1940:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1948:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1956:5:4",
														"type": ""
													}
												],
												"src": "1910:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2121:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2167:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2169:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2169:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2169:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2142:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2151:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2138:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2163:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2134:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2134:32:4"
															},
															"nodeType": "YulIf",
															"src": "2131:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "2260:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2275:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2289:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2279:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2304:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2339:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2350:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2335:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2335:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2359:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2314:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2314:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2304:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2091:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2102:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2114:6:4",
														"type": ""
													}
												],
												"src": "2055:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2433:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2490:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2499:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2502:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2492:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2492:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2492:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2456:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2481:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2463:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2463:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2453:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2453:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2446:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2446:43:4"
															},
															"nodeType": "YulIf",
															"src": "2443:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2426:5:4",
														"type": ""
													}
												],
												"src": "2390:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2570:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2580:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2602:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2589:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2589:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2580:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2645:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2618:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2618:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2618:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2548:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2556:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2564:5:4",
														"type": ""
													}
												],
												"src": "2518:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2729:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2775:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2777:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2777:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2777:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2750:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2759:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2746:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2746:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2771:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2742:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2742:32:4"
															},
															"nodeType": "YulIf",
															"src": "2739:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "2868:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2883:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2897:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2887:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2912:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2947:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2958:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2943:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2943:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2967:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2922:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2922:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2912:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2699:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2710:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2722:6:4",
														"type": ""
													}
												],
												"src": "2663:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3094:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3111:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3116:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3104:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3104:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3104:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3132:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3151:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3156:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3147:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3147:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3132:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3066:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3071:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3082:11:4",
														"type": ""
													}
												],
												"src": "2998:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3279:65:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3301:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3309:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3297:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3297:14:4"
																	},
																	{
																		"hexValue": "506567207072696365206d757374206265203e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3313:23:4",
																		"type": "",
																		"value": "Peg price must be > 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3290:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3290:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3290:47:4"
														}
													]
												},
												"name": "store_literal_in_memory_12dd0bd5b0fe6bd694aad6aa9c1622ed7fb13899080df8a821a6515487e07564",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3271:6:4",
														"type": ""
													}
												],
												"src": "3173:171:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3496:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3506:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3572:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3577:2:4",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3513:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3513:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3506:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3678:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_12dd0bd5b0fe6bd694aad6aa9c1622ed7fb13899080df8a821a6515487e07564",
																	"nodeType": "YulIdentifier",
																	"src": "3589:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3589:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3589:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3691:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3702:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3707:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3698:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3698:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3691:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_12dd0bd5b0fe6bd694aad6aa9c1622ed7fb13899080df8a821a6515487e07564_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3484:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3492:3:4",
														"type": ""
													}
												],
												"src": "3350:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3893:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3903:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3915:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3926:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3911:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3903:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3950:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3961:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3946:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3946:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3969:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3975:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3965:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3965:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3939:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3939:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3939:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3995:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4129:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_12dd0bd5b0fe6bd694aad6aa9c1622ed7fb13899080df8a821a6515487e07564_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4003:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4003:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3995:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_12dd0bd5b0fe6bd694aad6aa9c1622ed7fb13899080df8a821a6515487e07564__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3873:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3888:4:4",
														"type": ""
													}
												],
												"src": "3722:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4253:70:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4275:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4283:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4271:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4271:14:4"
																	},
																	{
																		"hexValue": "496e76616c69642061676772656761746f722061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4287:28:4",
																		"type": "",
																		"value": "Invalid aggregator address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4264:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4264:52:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4264:52:4"
														}
													]
												},
												"name": "store_literal_in_memory_fa814051730ebeb9b66b18fa0637007e08f69a4bf0ce03e54dbb251d25cd23d5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4245:6:4",
														"type": ""
													}
												],
												"src": "4147:176:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4475:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4485:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4551:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4556:2:4",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4492:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4492:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4485:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4657:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fa814051730ebeb9b66b18fa0637007e08f69a4bf0ce03e54dbb251d25cd23d5",
																	"nodeType": "YulIdentifier",
																	"src": "4568:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4568:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4568:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4670:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4681:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4686:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4677:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4677:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4670:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fa814051730ebeb9b66b18fa0637007e08f69a4bf0ce03e54dbb251d25cd23d5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4463:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4471:3:4",
														"type": ""
													}
												],
												"src": "4329:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4872:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4882:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4894:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4905:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4890:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4890:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4882:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4929:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4940:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4925:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4925:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4948:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4954:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4944:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4944:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4918:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4918:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4918:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4974:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5108:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fa814051730ebeb9b66b18fa0637007e08f69a4bf0ce03e54dbb251d25cd23d5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4982:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4982:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4974:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fa814051730ebeb9b66b18fa0637007e08f69a4bf0ce03e54dbb251d25cd23d5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4852:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4867:4:4",
														"type": ""
													}
												],
												"src": "4701:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5232:69:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5254:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5262:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5250:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5250:14:4"
																	},
																	{
																		"hexValue": "4e6f7420617574686f72697a65642061676772656761746f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5266:27:4",
																		"type": "",
																		"value": "Not authorized aggregator"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5243:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5243:51:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5243:51:4"
														}
													]
												},
												"name": "store_literal_in_memory_1da32b1727104c1bb72198bdeb5aa3d36a7210eafdc67d4728eca087384bd815",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5224:6:4",
														"type": ""
													}
												],
												"src": "5126:175:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5453:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5463:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5529:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5534:2:4",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5470:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5470:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5463:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5635:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1da32b1727104c1bb72198bdeb5aa3d36a7210eafdc67d4728eca087384bd815",
																	"nodeType": "YulIdentifier",
																	"src": "5546:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5546:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5546:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5648:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5659:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5664:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5655:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5655:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5648:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1da32b1727104c1bb72198bdeb5aa3d36a7210eafdc67d4728eca087384bd815_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5441:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5449:3:4",
														"type": ""
													}
												],
												"src": "5307:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5850:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5860:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5872:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5883:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5868:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5868:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5860:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5907:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5918:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5903:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5903:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5926:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5932:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5922:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5922:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5896:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5896:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5896:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5952:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6086:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1da32b1727104c1bb72198bdeb5aa3d36a7210eafdc67d4728eca087384bd815_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5960:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5960:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5952:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1da32b1727104c1bb72198bdeb5aa3d36a7210eafdc67d4728eca087384bd815__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5830:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5845:4:4",
														"type": ""
													}
												],
												"src": "5679:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6210:66:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6232:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6240:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6228:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6228:14:4"
																	},
																	{
																		"hexValue": "496e76616c6964207265706f72746564207072696365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6244:24:4",
																		"type": "",
																		"value": "Invalid reported price"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6221:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6221:48:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6221:48:4"
														}
													]
												},
												"name": "store_literal_in_memory_b079fc7e3ef0cb6e47ccaa10b025eceb7b35370f00a1a7796a9d619400121ece",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6202:6:4",
														"type": ""
													}
												],
												"src": "6104:172:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6428:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6438:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6504:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6509:2:4",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6445:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6445:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6438:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6610:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b079fc7e3ef0cb6e47ccaa10b025eceb7b35370f00a1a7796a9d619400121ece",
																	"nodeType": "YulIdentifier",
																	"src": "6521:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6521:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6521:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6623:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6634:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6639:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6630:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6630:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6623:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b079fc7e3ef0cb6e47ccaa10b025eceb7b35370f00a1a7796a9d619400121ece_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6416:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6424:3:4",
														"type": ""
													}
												],
												"src": "6282:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6825:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6835:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6847:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6858:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6843:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6843:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6835:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6882:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6893:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6878:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6878:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6901:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6907:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6897:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6897:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6871:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6871:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6871:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6927:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7061:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b079fc7e3ef0cb6e47ccaa10b025eceb7b35370f00a1a7796a9d619400121ece_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6935:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6935:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6927:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b079fc7e3ef0cb6e47ccaa10b025eceb7b35370f00a1a7796a9d619400121ece__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6805:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6820:4:4",
														"type": ""
													}
												],
												"src": "6654:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7199:200:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7209:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7221:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7232:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7217:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7217:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7209:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7289:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7302:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7313:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7298:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7298:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7245:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7245:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7245:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7364:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7377:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7388:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7373:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7373:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7326:37:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7326:66:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7326:66:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7163:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7175:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7183:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7194:4:4",
														"type": ""
													}
												],
												"src": "7079:320:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7531:206:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7541:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7553:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7564:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7549:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7549:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7541:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7621:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7634:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7645:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7630:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7630:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7577:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7577:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7577:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7702:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7715:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7726:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7711:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7711:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7658:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7658:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7658:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7495:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7507:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7515:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7526:4:4",
														"type": ""
													}
												],
												"src": "7405:332:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7849:72:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7871:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7879:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7867:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7867:14:4"
																	},
																	{
																		"hexValue": "5468726573686f6c6420746f6f206869676820286d61782032302529",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7883:30:4",
																		"type": "",
																		"value": "Threshold too high (max 20%)"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7860:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7860:54:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7860:54:4"
														}
													]
												},
												"name": "store_literal_in_memory_a538d00ccaeee824696a630bd8955dad3f6250a448b63391385ebbab0030f6db",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7841:6:4",
														"type": ""
													}
												],
												"src": "7743:178:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8073:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8083:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8149:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8154:2:4",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8090:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8090:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8083:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8255:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a538d00ccaeee824696a630bd8955dad3f6250a448b63391385ebbab0030f6db",
																	"nodeType": "YulIdentifier",
																	"src": "8166:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8166:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8166:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8268:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8279:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8284:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8275:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8275:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8268:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a538d00ccaeee824696a630bd8955dad3f6250a448b63391385ebbab0030f6db_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8061:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8069:3:4",
														"type": ""
													}
												],
												"src": "7927:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8470:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8480:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8492:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8503:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8488:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8488:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8480:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8527:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8538:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8523:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8523:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8546:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8552:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8542:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8542:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8516:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8516:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8516:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8572:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8706:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a538d00ccaeee824696a630bd8955dad3f6250a448b63391385ebbab0030f6db_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8580:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8580:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8572:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a538d00ccaeee824696a630bd8955dad3f6250a448b63391385ebbab0030f6db__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8450:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8465:4:4",
														"type": ""
													}
												],
												"src": "8299:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8830:75:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8852:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8860:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8848:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8848:14:4"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8864:33:4",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8841:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8841:57:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8841:57:4"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8822:6:4",
														"type": ""
													}
												],
												"src": "8724:181:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9057:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9067:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9133:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9138:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9074:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9074:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9067:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9239:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "9150:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9150:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9150:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9252:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9263:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9268:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9259:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9259:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9252:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9045:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9053:3:4",
														"type": ""
													}
												],
												"src": "8911:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9454:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9464:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9476:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9487:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9472:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9472:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9464:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9511:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9522:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9507:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9507:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9530:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9536:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9526:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9526:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9500:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9500:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9500:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9556:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9690:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9564:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9564:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9556:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9434:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9449:4:4",
														"type": ""
													}
												],
												"src": "9283:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9736:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9753:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9756:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9746:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9746:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9746:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9850:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9853:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9843:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9843:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9843:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9874:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9877:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9867:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9867:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9867:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9708:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9939:149:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9949:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9972:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9954:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9954:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9949:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9983:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10006:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9988:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9988:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9983:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10017:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10029:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10032:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10025:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10025:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "10017:4:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10059:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10061:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10061:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10061:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "10050:4:4"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10056:1:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10047:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10047:11:4"
															},
															"nodeType": "YulIf",
															"src": "10044:37:4"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9925:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9928:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "9934:4:4",
														"type": ""
													}
												],
												"src": "9894:194:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10142:362:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10152:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10175:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10157:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10157:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10152:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10186:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10209:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10191:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10191:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10186:1:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10220:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10243:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10246:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "10239:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10239:9:4"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "10224:11:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10257:41:4",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "10286:11:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10268:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10268:30:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "10257:7:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10475:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10477:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10477:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10477:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10408:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "10401:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10401:9:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "10431:1:4"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "10438:7:4"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "10447:1:4"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "10434:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10434:15:4"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "10428:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10428:22:4"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "10381:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10381:83:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10361:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10361:113:4"
															},
															"nodeType": "YulIf",
															"src": "10358:139:4"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10125:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10128:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "10134:7:4",
														"type": ""
													}
												],
												"src": "10094:410:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10538:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10555:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10558:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10548:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10548:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10548:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10652:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10655:4:4",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10645:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10645:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10645:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10676:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10679:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10669:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10669:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10669:15:4"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "10510:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10738:143:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10748:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10771:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10753:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10753:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10748:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10782:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10805:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10787:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10787:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10782:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10829:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "10831:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10831:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10831:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10826:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10819:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10819:9:4"
															},
															"nodeType": "YulIf",
															"src": "10816:35:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10861:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10870:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10873:1:4"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10866:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10866:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "10861:1:4"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10727:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10730:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "10736:1:4",
														"type": ""
													}
												],
												"src": "10696:185:4"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_12dd0bd5b0fe6bd694aad6aa9c1622ed7fb13899080df8a821a6515487e07564(memPtr) {\n\n        mstore(add(memPtr, 0), \"Peg price must be > 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_12dd0bd5b0fe6bd694aad6aa9c1622ed7fb13899080df8a821a6515487e07564_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_12dd0bd5b0fe6bd694aad6aa9c1622ed7fb13899080df8a821a6515487e07564(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_12dd0bd5b0fe6bd694aad6aa9c1622ed7fb13899080df8a821a6515487e07564__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12dd0bd5b0fe6bd694aad6aa9c1622ed7fb13899080df8a821a6515487e07564_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fa814051730ebeb9b66b18fa0637007e08f69a4bf0ce03e54dbb251d25cd23d5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid aggregator address\")\n\n    }\n\n    function abi_encode_t_stringliteral_fa814051730ebeb9b66b18fa0637007e08f69a4bf0ce03e54dbb251d25cd23d5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_fa814051730ebeb9b66b18fa0637007e08f69a4bf0ce03e54dbb251d25cd23d5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fa814051730ebeb9b66b18fa0637007e08f69a4bf0ce03e54dbb251d25cd23d5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fa814051730ebeb9b66b18fa0637007e08f69a4bf0ce03e54dbb251d25cd23d5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1da32b1727104c1bb72198bdeb5aa3d36a7210eafdc67d4728eca087384bd815(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not authorized aggregator\")\n\n    }\n\n    function abi_encode_t_stringliteral_1da32b1727104c1bb72198bdeb5aa3d36a7210eafdc67d4728eca087384bd815_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_1da32b1727104c1bb72198bdeb5aa3d36a7210eafdc67d4728eca087384bd815(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1da32b1727104c1bb72198bdeb5aa3d36a7210eafdc67d4728eca087384bd815__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1da32b1727104c1bb72198bdeb5aa3d36a7210eafdc67d4728eca087384bd815_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b079fc7e3ef0cb6e47ccaa10b025eceb7b35370f00a1a7796a9d619400121ece(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid reported price\")\n\n    }\n\n    function abi_encode_t_stringliteral_b079fc7e3ef0cb6e47ccaa10b025eceb7b35370f00a1a7796a9d619400121ece_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_b079fc7e3ef0cb6e47ccaa10b025eceb7b35370f00a1a7796a9d619400121ece(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b079fc7e3ef0cb6e47ccaa10b025eceb7b35370f00a1a7796a9d619400121ece__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b079fc7e3ef0cb6e47ccaa10b025eceb7b35370f00a1a7796a9d619400121ece_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_a538d00ccaeee824696a630bd8955dad3f6250a448b63391385ebbab0030f6db(memPtr) {\n\n        mstore(add(memPtr, 0), \"Threshold too high (max 20%)\")\n\n    }\n\n    function abi_encode_t_stringliteral_a538d00ccaeee824696a630bd8955dad3f6250a448b63391385ebbab0030f6db_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_a538d00ccaeee824696a630bd8955dad3f6250a448b63391385ebbab0030f6db(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a538d00ccaeee824696a630bd8955dad3f6250a448b63391385ebbab0030f6db__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a538d00ccaeee824696a630bd8955dad3f6250a448b63391385ebbab0030f6db_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100b2575f3560e01c80638da5cb5b1161006f5780638da5cb5b146101545780639fe4ee4714610172578063c1144b711461018e578063c7f898f0146101ac578063d7d7442f146101c8578063f2fde38b146101e4576100b2565b8063053f14da146100b65780633078fff5146100d45780635a0332a4146100f2578063715018a61461011057806374de33e41461011a5780637542f23a14610136575b5f80fd5b6100be610200565b6040516100cb9190610954565b60405180910390f35b6100dc610206565b6040516100e991906109ac565b60405180910390f35b6100fa61022b565b60405161010791906109df565b60405180910390f35b61011861023e565b005b610134600480360381019061012f9190610a26565b610251565b005b61013e6102dc565b60405161014b9190610954565b60405180910390f35b61015c6102e2565b60405161016991906109ac565b60405180910390f35b61018c60048036038101906101879190610a7b565b610309565b005b610196610405565b6040516101a39190610954565b60405180910390f35b6101c660048036038101906101c19190610a26565b61040b565b005b6101e260048036038101906101dd9190610a26565b610628565b005b6101fe60048036038101906101f99190610a7b565b6106b6565b005b60045481565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560149054906101000a900460ff1681565b61024661073a565b61024f5f6107c1565b565b61025961073a565b5f811161029b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029290610b00565b60405180910390fd5b806002819055507f8b4412706cf218351f2b2670d751d9981e4b3e3490911aba339f1dac35103d0b816040516102d19190610954565b60405180910390a150565b60025481565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61031161073a565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361037f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037690610b68565b60405180910390fd5b8060055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f602cec4b1583b07d071161da5eb9589444d2459201e2fab7753dc941e9351c2160405160405180910390a250565b60035481565b610413610882565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049990610bd0565b60405180910390fd5b5f81116104e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104db90610c38565b60405180910390fd5b806004819055505f6104f5826108d1565b90507f8322c40cc8fa3bd54ec84110a078e65c783d8d79ad96adf1b07cd59ed10c2dc28282604051610528929190610c56565b60405180910390a180801561054a5750600560149054906101000a900460ff16155b156105a8576001600560146101000a81548160ff0219169083151502179055507f43a30a8a621ae0bf221b02b806c2a80d658e4886e1d85e72427b7466c0cd4197428360405161059b929190610c7d565b60405180910390a161061c565b801580156105c25750600560149054906101000a900460ff165b1561061b575f600560146101000a81548160ff0219169083151502179055507feedd16500c1f2c39ebb8b74fd12984f1e07626acdb1434293dd2707e32ea6eb94283604051610612929190610c7d565b60405180910390a15b5b5061062561092c565b50565b61063061073a565b6107d0811115610675576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066c90610cee565b60405180910390fd5b806003819055507fadfa8ecb21b6962ebcd0adbd9ab985b7b4c5b5eb3b0dead683171565c7bfe171816040516106ab9190610954565b60405180910390a150565b6106be61073a565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361072e575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161072591906109ac565b60405180910390fd5b610737816107c1565b50565b610742610935565b73ffffffffffffffffffffffffffffffffffffffff166107606102e2565b73ffffffffffffffffffffffffffffffffffffffff16146107bf57610783610935565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016107b691906109ac565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6002600154036108c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108be90610d56565b60405180910390fd5b6002600181905550565b5f8060025483116108ef57826002546108ea9190610da1565b6108fe565b600254836108fd9190610da1565b5b90505f600254612710836109129190610dd4565b61091c9190610e42565b9050600354811192505050919050565b60018081905550565b5f33905090565b5f819050919050565b61094e8161093c565b82525050565b5f6020820190506109675f830184610945565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6109968261096d565b9050919050565b6109a68161098c565b82525050565b5f6020820190506109bf5f83018461099d565b92915050565b5f8115159050919050565b6109d9816109c5565b82525050565b5f6020820190506109f25f8301846109d0565b92915050565b5f80fd5b610a058161093c565b8114610a0f575f80fd5b50565b5f81359050610a20816109fc565b92915050565b5f60208284031215610a3b57610a3a6109f8565b5b5f610a4884828501610a12565b91505092915050565b610a5a8161098c565b8114610a64575f80fd5b50565b5f81359050610a7581610a51565b92915050565b5f60208284031215610a9057610a8f6109f8565b5b5f610a9d84828501610a67565b91505092915050565b5f82825260208201905092915050565b7f506567207072696365206d757374206265203e203000000000000000000000005f82015250565b5f610aea601583610aa6565b9150610af582610ab6565b602082019050919050565b5f6020820190508181035f830152610b1781610ade565b9050919050565b7f496e76616c69642061676772656761746f7220616464726573730000000000005f82015250565b5f610b52601a83610aa6565b9150610b5d82610b1e565b602082019050919050565b5f6020820190508181035f830152610b7f81610b46565b9050919050565b7f4e6f7420617574686f72697a65642061676772656761746f72000000000000005f82015250565b5f610bba601983610aa6565b9150610bc582610b86565b602082019050919050565b5f6020820190508181035f830152610be781610bae565b9050919050565b7f496e76616c6964207265706f72746564207072696365000000000000000000005f82015250565b5f610c22601683610aa6565b9150610c2d82610bee565b602082019050919050565b5f6020820190508181035f830152610c4f81610c16565b9050919050565b5f604082019050610c695f830185610945565b610c7660208301846109d0565b9392505050565b5f604082019050610c905f830185610945565b610c9d6020830184610945565b9392505050565b7f5468726573686f6c6420746f6f206869676820286d61782032302529000000005f82015250565b5f610cd8601c83610aa6565b9150610ce382610ca4565b602082019050919050565b5f6020820190508181035f830152610d0581610ccc565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f610d40601f83610aa6565b9150610d4b82610d0c565b602082019050919050565b5f6020820190508181035f830152610d6d81610d34565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610dab8261093c565b9150610db68361093c565b9250828203905081811115610dce57610dcd610d74565b5b92915050565b5f610dde8261093c565b9150610de98361093c565b9250828202610df78161093c565b91508282048414831517610e0e57610e0d610d74565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610e4c8261093c565b9150610e578361093c565b925082610e6757610e66610e15565b5b82820490509291505056fea2646970667358221220682a8fe8a693c14180b93d0dd717010ef1a5b4c745f2587750218aff61083d5b64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0x9FE4EE47 EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0xC1144B71 EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0xC7F898F0 EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0xD7D7442F EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1E4 JUMPI PUSH2 0xB2 JUMP JUMPDEST DUP1 PUSH4 0x53F14DA EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x3078FFF5 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x5A0332A4 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x74DE33E4 EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x7542F23A EQ PUSH2 0x136 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBE PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x954 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDC PUSH2 0x206 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x9AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFA PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x107 SWAP2 SWAP1 PUSH2 0x9DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x118 PUSH2 0x23E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xA26 JUMP JUMPDEST PUSH2 0x251 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13E PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14B SWAP2 SWAP1 PUSH2 0x954 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15C PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x169 SWAP2 SWAP1 PUSH2 0x9AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x187 SWAP2 SWAP1 PUSH2 0xA7B JUMP JUMPDEST PUSH2 0x309 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x196 PUSH2 0x405 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x954 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0xA26 JUMP JUMPDEST PUSH2 0x40B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xA26 JUMP JUMPDEST PUSH2 0x628 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0xA7B JUMP JUMPDEST PUSH2 0x6B6 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x246 PUSH2 0x73A JUMP JUMPDEST PUSH2 0x24F PUSH0 PUSH2 0x7C1 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x259 PUSH2 0x73A JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x29B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x292 SWAP1 PUSH2 0xB00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0x8B4412706CF218351F2B2670D751D9981E4B3E3490911ABA339F1DAC35103D0B DUP2 PUSH1 0x40 MLOAD PUSH2 0x2D1 SWAP2 SWAP1 PUSH2 0x954 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x311 PUSH2 0x73A JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x37F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x376 SWAP1 PUSH2 0xB68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x602CEC4B1583B07D071161DA5EB9589444D2459201E2FAB7753DC941E9351C21 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x413 PUSH2 0x882 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x499 SWAP1 PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x4E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DB SWAP1 PUSH2 0xC38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH0 PUSH2 0x4F5 DUP3 PUSH2 0x8D1 JUMP JUMPDEST SWAP1 POP PUSH32 0x8322C40CC8FA3BD54EC84110A078E65C783D8D79AD96ADF1B07CD59ED10C2DC2 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x528 SWAP3 SWAP2 SWAP1 PUSH2 0xC56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 DUP1 ISZERO PUSH2 0x54A JUMPI POP PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x5A8 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x43A30A8A621AE0BF221B02B806C2A80D658E4886E1D85E72427B7466C0CD4197 TIMESTAMP DUP4 PUSH1 0x40 MLOAD PUSH2 0x59B SWAP3 SWAP2 SWAP1 PUSH2 0xC7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x61C JUMP JUMPDEST DUP1 ISZERO DUP1 ISZERO PUSH2 0x5C2 JUMPI POP PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x61B JUMPI PUSH0 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xEEDD16500C1F2C39EBB8B74FD12984F1E07626ACDB1434293DD2707E32EA6EB9 TIMESTAMP DUP4 PUSH1 0x40 MLOAD PUSH2 0x612 SWAP3 SWAP2 SWAP1 PUSH2 0xC7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST JUMPDEST POP PUSH2 0x625 PUSH2 0x92C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x630 PUSH2 0x73A JUMP JUMPDEST PUSH2 0x7D0 DUP2 GT ISZERO PUSH2 0x675 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x66C SWAP1 PUSH2 0xCEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH32 0xADFA8ECB21B6962EBCD0ADBD9AB985B7B4C5B5EB3B0DEAD683171565C7BFE171 DUP2 PUSH1 0x40 MLOAD PUSH2 0x6AB SWAP2 SWAP1 PUSH2 0x954 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x6BE PUSH2 0x73A JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x72E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x725 SWAP2 SWAP1 PUSH2 0x9AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x737 DUP2 PUSH2 0x7C1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x742 PUSH2 0x935 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x760 PUSH2 0x2E2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7BF JUMPI PUSH2 0x783 PUSH2 0x935 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B6 SWAP2 SWAP1 PUSH2 0x9AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x8C7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8BE SWAP1 PUSH2 0xD56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x2 SLOAD DUP4 GT PUSH2 0x8EF JUMPI DUP3 PUSH1 0x2 SLOAD PUSH2 0x8EA SWAP2 SWAP1 PUSH2 0xDA1 JUMP JUMPDEST PUSH2 0x8FE JUMP JUMPDEST PUSH1 0x2 SLOAD DUP4 PUSH2 0x8FD SWAP2 SWAP1 PUSH2 0xDA1 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 SLOAD PUSH2 0x2710 DUP4 PUSH2 0x912 SWAP2 SWAP1 PUSH2 0xDD4 JUMP JUMPDEST PUSH2 0x91C SWAP2 SWAP1 PUSH2 0xE42 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 SLOAD DUP2 GT SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x94E DUP2 PUSH2 0x93C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x967 PUSH0 DUP4 ADD DUP5 PUSH2 0x945 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x996 DUP3 PUSH2 0x96D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9A6 DUP2 PUSH2 0x98C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9BF PUSH0 DUP4 ADD DUP5 PUSH2 0x99D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9D9 DUP2 PUSH2 0x9C5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9F2 PUSH0 DUP4 ADD DUP5 PUSH2 0x9D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA05 DUP2 PUSH2 0x93C JUMP JUMPDEST DUP2 EQ PUSH2 0xA0F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA20 DUP2 PUSH2 0x9FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA3B JUMPI PUSH2 0xA3A PUSH2 0x9F8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA48 DUP5 DUP3 DUP6 ADD PUSH2 0xA12 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA5A DUP2 PUSH2 0x98C JUMP JUMPDEST DUP2 EQ PUSH2 0xA64 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA75 DUP2 PUSH2 0xA51 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA90 JUMPI PUSH2 0xA8F PUSH2 0x9F8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA9D DUP5 DUP3 DUP6 ADD PUSH2 0xA67 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x506567207072696365206D757374206265203E20300000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xAEA PUSH1 0x15 DUP4 PUSH2 0xAA6 JUMP JUMPDEST SWAP2 POP PUSH2 0xAF5 DUP3 PUSH2 0xAB6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB17 DUP2 PUSH2 0xADE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642061676772656761746F722061646472657373000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB52 PUSH1 0x1A DUP4 PUSH2 0xAA6 JUMP JUMPDEST SWAP2 POP PUSH2 0xB5D DUP3 PUSH2 0xB1E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB7F DUP2 PUSH2 0xB46 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A65642061676772656761746F7200000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xBBA PUSH1 0x19 DUP4 PUSH2 0xAA6 JUMP JUMPDEST SWAP2 POP PUSH2 0xBC5 DUP3 PUSH2 0xB86 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xBE7 DUP2 PUSH2 0xBAE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964207265706F7274656420707269636500000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC22 PUSH1 0x16 DUP4 PUSH2 0xAA6 JUMP JUMPDEST SWAP2 POP PUSH2 0xC2D DUP3 PUSH2 0xBEE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xC4F DUP2 PUSH2 0xC16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC69 PUSH0 DUP4 ADD DUP6 PUSH2 0x945 JUMP JUMPDEST PUSH2 0xC76 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x9D0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC90 PUSH0 DUP4 ADD DUP6 PUSH2 0x945 JUMP JUMPDEST PUSH2 0xC9D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x945 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5468726573686F6C6420746F6F206869676820286D6178203230252900000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xCD8 PUSH1 0x1C DUP4 PUSH2 0xAA6 JUMP JUMPDEST SWAP2 POP PUSH2 0xCE3 DUP3 PUSH2 0xCA4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD05 DUP2 PUSH2 0xCCC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xD40 PUSH1 0x1F DUP4 PUSH2 0xAA6 JUMP JUMPDEST SWAP2 POP PUSH2 0xD4B DUP3 PUSH2 0xD0C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD6D DUP2 PUSH2 0xD34 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xDAB DUP3 PUSH2 0x93C JUMP JUMPDEST SWAP2 POP PUSH2 0xDB6 DUP4 PUSH2 0x93C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xDCE JUMPI PUSH2 0xDCD PUSH2 0xD74 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDDE DUP3 PUSH2 0x93C JUMP JUMPDEST SWAP2 POP PUSH2 0xDE9 DUP4 PUSH2 0x93C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xDF7 DUP2 PUSH2 0x93C JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xE0E JUMPI PUSH2 0xE0D PUSH2 0xD74 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xE4C DUP3 PUSH2 0x93C JUMP JUMPDEST SWAP2 POP PUSH2 0xE57 DUP4 PUSH2 0x93C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xE67 JUMPI PUSH2 0xE66 PUSH2 0xE15 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x2A8FE8A693C14180B9 RETURNDATASIZE 0xD 0xD7 OR ADD 0xE CALL 0xA5 0xB4 0xC7 GASLIMIT CALLCODE PC PUSH24 0x50218AFF61083D5B64736F6C634300081400330000000000 ",
							"sourceMap": "447:4797:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;842:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;971:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1080:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;3342:205:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;599:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2452:239:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;705:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3812:767;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2884:238;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;842:24:3;;;;:::o;971:30::-;;;;;;;;;;;;;:::o;1080:22::-;;;;;;;;;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;3342:205:3:-;1531:13:0;:11;:13::i;:::-;3438:1:3::1;3424:11;:15;3416:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;3486:11;3475:8;:22;;;;3512:28;3528:11;3512:28;;;;;;:::i;:::-;;;;;;;;3342:205:::0;:::o;599:23::-;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2452:239:3:-;1531:13:0;:11;:13::i;:::-;2563:1:3::1;2538:27;;:13;:27;;::::0;2530:66:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2624:13;2606:15;;:31;;;;;;;;;;;;;;;;;;2670:13;2652:32;;;;;;;;;;;;2452:239:::0;:::o;705:27::-;;;;:::o;3812:767::-;2261:21:1;:19;:21::i;:::-;3910:15:3::1;;;;;;;;;;;3896:29;;:10;:29;;;3888:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;3989:1;3973:13;:17;3965:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;4040:13;4028:9;:25;;;;4063:22;4088:26;4100:13;4088:11;:26::i;:::-;4063:51;;4130:47;4144:13;4159:17;4130:47;;;;;;;:::i;:::-;;;;;;;;4192:17;:32;;;;;4214:10;;;;;;;;;;;4213:11;4192:32;4188:385;;;4303:4;4290:10;;:17;;;;;;;;;;;;;;;;;;4326:40;4335:15;4352:13;4326:40;;;;;;;:::i;:::-;;;;;;;;4188:385;;;4388:17;4387:18;:32;;;;;4409:10;;;;;;;;;;;4387:32;4383:190;;;4498:5;4485:10;;:18;;;;;;;;;;;;;;;;;;4522:40;4531:15;4548:13;4522:40;;;;;;;:::i;:::-;;;;;;;;4383:190;4188:385;3878:701;2303:20:1::0;:18;:20::i;:::-;3812:767:3;:::o;2884:238::-;1531:13:0;:11;:13::i;:::-;2990:4:3::1;2971:15;:23;;2963:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;3052:15;3037:12;:30;;;;3082:33;3099:15;3082:33;;;;;;:::i;:::-;;;;;;;;2884:238:::0;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2336:287:1:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;4826:416:3:-;4885:4;4956:12;4980:8;;4972:5;:16;4971:56;;5022:5;5011:8;;:16;;;;:::i;:::-;4971:56;;;5000:8;;4992:5;:16;;;;:::i;:::-;4971:56;4956:71;;5153:15;5188:8;;5179:5;5172:4;:12;;;;:::i;:::-;5171:25;;;;:::i;:::-;5153:43;;5223:12;;5213:7;:22;5206:29;;;;4826:416;;;:::o;2629:209:1:-;1716:1;2809:7;:22;;;;2629:209::o;656:96:2:-;709:7;735:10;728:17;;656:96;:::o;7:77:4:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:126::-;479:7;519:42;512:5;508:54;497:65;;442:126;;;:::o;574:96::-;611:7;640:24;658:5;640:24;:::i;:::-;629:35;;574:96;;;:::o;676:118::-;763:24;781:5;763:24;:::i;:::-;758:3;751:37;676:118;;:::o;800:222::-;893:4;931:2;920:9;916:18;908:26;;944:71;1012:1;1001:9;997:17;988:6;944:71;:::i;:::-;800:222;;;;:::o;1028:90::-;1062:7;1105:5;1098:13;1091:21;1080:32;;1028:90;;;:::o;1124:109::-;1205:21;1220:5;1205:21;:::i;:::-;1200:3;1193:34;1124:109;;:::o;1239:210::-;1326:4;1364:2;1353:9;1349:18;1341:26;;1377:65;1439:1;1428:9;1424:17;1415:6;1377:65;:::i;:::-;1239:210;;;;:::o;1536:117::-;1645:1;1642;1635:12;1782:122;1855:24;1873:5;1855:24;:::i;:::-;1848:5;1845:35;1835:63;;1894:1;1891;1884:12;1835:63;1782:122;:::o;1910:139::-;1956:5;1994:6;1981:20;1972:29;;2010:33;2037:5;2010:33;:::i;:::-;1910:139;;;;:::o;2055:329::-;2114:6;2163:2;2151:9;2142:7;2138:23;2134:32;2131:119;;;2169:79;;:::i;:::-;2131:119;2289:1;2314:53;2359:7;2350:6;2339:9;2335:22;2314:53;:::i;:::-;2304:63;;2260:117;2055:329;;;;:::o;2390:122::-;2463:24;2481:5;2463:24;:::i;:::-;2456:5;2453:35;2443:63;;2502:1;2499;2492:12;2443:63;2390:122;:::o;2518:139::-;2564:5;2602:6;2589:20;2580:29;;2618:33;2645:5;2618:33;:::i;:::-;2518:139;;;;:::o;2663:329::-;2722:6;2771:2;2759:9;2750:7;2746:23;2742:32;2739:119;;;2777:79;;:::i;:::-;2739:119;2897:1;2922:53;2967:7;2958:6;2947:9;2943:22;2922:53;:::i;:::-;2912:63;;2868:117;2663:329;;;;:::o;2998:169::-;3082:11;3116:6;3111:3;3104:19;3156:4;3151:3;3147:14;3132:29;;2998:169;;;;:::o;3173:171::-;3313:23;3309:1;3301:6;3297:14;3290:47;3173:171;:::o;3350:366::-;3492:3;3513:67;3577:2;3572:3;3513:67;:::i;:::-;3506:74;;3589:93;3678:3;3589:93;:::i;:::-;3707:2;3702:3;3698:12;3691:19;;3350:366;;;:::o;3722:419::-;3888:4;3926:2;3915:9;3911:18;3903:26;;3975:9;3969:4;3965:20;3961:1;3950:9;3946:17;3939:47;4003:131;4129:4;4003:131;:::i;:::-;3995:139;;3722:419;;;:::o;4147:176::-;4287:28;4283:1;4275:6;4271:14;4264:52;4147:176;:::o;4329:366::-;4471:3;4492:67;4556:2;4551:3;4492:67;:::i;:::-;4485:74;;4568:93;4657:3;4568:93;:::i;:::-;4686:2;4681:3;4677:12;4670:19;;4329:366;;;:::o;4701:419::-;4867:4;4905:2;4894:9;4890:18;4882:26;;4954:9;4948:4;4944:20;4940:1;4929:9;4925:17;4918:47;4982:131;5108:4;4982:131;:::i;:::-;4974:139;;4701:419;;;:::o;5126:175::-;5266:27;5262:1;5254:6;5250:14;5243:51;5126:175;:::o;5307:366::-;5449:3;5470:67;5534:2;5529:3;5470:67;:::i;:::-;5463:74;;5546:93;5635:3;5546:93;:::i;:::-;5664:2;5659:3;5655:12;5648:19;;5307:366;;;:::o;5679:419::-;5845:4;5883:2;5872:9;5868:18;5860:26;;5932:9;5926:4;5922:20;5918:1;5907:9;5903:17;5896:47;5960:131;6086:4;5960:131;:::i;:::-;5952:139;;5679:419;;;:::o;6104:172::-;6244:24;6240:1;6232:6;6228:14;6221:48;6104:172;:::o;6282:366::-;6424:3;6445:67;6509:2;6504:3;6445:67;:::i;:::-;6438:74;;6521:93;6610:3;6521:93;:::i;:::-;6639:2;6634:3;6630:12;6623:19;;6282:366;;;:::o;6654:419::-;6820:4;6858:2;6847:9;6843:18;6835:26;;6907:9;6901:4;6897:20;6893:1;6882:9;6878:17;6871:47;6935:131;7061:4;6935:131;:::i;:::-;6927:139;;6654:419;;;:::o;7079:320::-;7194:4;7232:2;7221:9;7217:18;7209:26;;7245:71;7313:1;7302:9;7298:17;7289:6;7245:71;:::i;:::-;7326:66;7388:2;7377:9;7373:18;7364:6;7326:66;:::i;:::-;7079:320;;;;;:::o;7405:332::-;7526:4;7564:2;7553:9;7549:18;7541:26;;7577:71;7645:1;7634:9;7630:17;7621:6;7577:71;:::i;:::-;7658:72;7726:2;7715:9;7711:18;7702:6;7658:72;:::i;:::-;7405:332;;;;;:::o;7743:178::-;7883:30;7879:1;7871:6;7867:14;7860:54;7743:178;:::o;7927:366::-;8069:3;8090:67;8154:2;8149:3;8090:67;:::i;:::-;8083:74;;8166:93;8255:3;8166:93;:::i;:::-;8284:2;8279:3;8275:12;8268:19;;7927:366;;;:::o;8299:419::-;8465:4;8503:2;8492:9;8488:18;8480:26;;8552:9;8546:4;8542:20;8538:1;8527:9;8523:17;8516:47;8580:131;8706:4;8580:131;:::i;:::-;8572:139;;8299:419;;;:::o;8724:181::-;8864:33;8860:1;8852:6;8848:14;8841:57;8724:181;:::o;8911:366::-;9053:3;9074:67;9138:2;9133:3;9074:67;:::i;:::-;9067:74;;9150:93;9239:3;9150:93;:::i;:::-;9268:2;9263:3;9259:12;9252:19;;8911:366;;;:::o;9283:419::-;9449:4;9487:2;9476:9;9472:18;9464:26;;9536:9;9530:4;9526:20;9522:1;9511:9;9507:17;9500:47;9564:131;9690:4;9564:131;:::i;:::-;9556:139;;9283:419;;;:::o;9708:180::-;9756:77;9753:1;9746:88;9853:4;9850:1;9843:15;9877:4;9874:1;9867:15;9894:194;9934:4;9954:20;9972:1;9954:20;:::i;:::-;9949:25;;9988:20;10006:1;9988:20;:::i;:::-;9983:25;;10032:1;10029;10025:9;10017:17;;10056:1;10050:4;10047:11;10044:37;;;10061:18;;:::i;:::-;10044:37;9894:194;;;;:::o;10094:410::-;10134:7;10157:20;10175:1;10157:20;:::i;:::-;10152:25;;10191:20;10209:1;10191:20;:::i;:::-;10186:25;;10246:1;10243;10239:9;10268:30;10286:11;10268:30;:::i;:::-;10257:41;;10447:1;10438:7;10434:15;10431:1;10428:22;10408:1;10401:9;10381:83;10358:139;;10477:18;;:::i;:::-;10358:139;10142:362;10094:410;;;;:::o;10510:180::-;10558:77;10555:1;10548:88;10655:4;10652:1;10645:15;10679:4;10676:1;10669:15;10696:185;10736:1;10753:20;10771:1;10753:20;:::i;:::-;10748:25;;10787:20;10805:1;10787:20;:::i;:::-;10782:25;;10826:1;10816:35;;10831:18;;:::i;:::-;10816:35;10873:1;10870;10866:9;10861:14;;10696:185;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "750400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"isDepegged()": "2562",
								"lastPrice()": "2426",
								"owner()": "2515",
								"pegPrice()": "2536",
								"priceAggregator()": "2531",
								"renounceOwnership()": "infinite",
								"reportPrice(uint256)": "infinite",
								"thresholdBps()": "2469",
								"transferOwnership(address)": "infinite",
								"updateAggregator(address)": "infinite",
								"updatePegPrice(uint256)": "infinite",
								"updateThreshold(uint256)": "infinite"
							},
							"internal": {
								"_checkDepeg(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 447,
									"end": 5244,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 447,
									"end": 5244,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 447,
									"end": 5244,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1801,
									"end": 2269,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 1801,
									"end": 2269,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1801,
									"end": 2269,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1801,
									"end": 2269,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1801,
									"end": 2269,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1801,
									"end": 2269,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1801,
									"end": 2269,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1801,
									"end": 2269,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1801,
									"end": 2269,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1801,
									"end": 2269,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1801,
									"end": 2269,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1801,
									"end": 2269,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1801,
									"end": 2269,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1801,
									"end": 2269,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 1801,
									"end": 2269,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 1801,
									"end": 2269,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1801,
									"end": 2269,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1801,
									"end": 2269,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 1801,
									"end": 2269,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1801,
									"end": 2269,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 1801,
									"end": 2269,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1801,
									"end": 2269,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1801,
									"end": 2269,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1801,
									"end": 2269,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1801,
									"end": 2269,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1801,
									"end": 2269,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1801,
									"end": 2269,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1801,
									"end": 2269,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1801,
									"end": 2269,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1801,
									"end": 2269,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1801,
									"end": 2269,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1801,
									"end": 2269,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1801,
									"end": 2269,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1801,
									"end": 2269,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1801,
									"end": 2269,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1897,
									"end": 1907,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1943,
									"end": 1944,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1931,
									"end": 1940,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1931,
									"end": 1944,
									"modifierDepth": 1,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1923,
									"end": 1970,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1923,
									"end": 1970,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1923,
									"end": 1970,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1923,
									"end": 1970,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1923,
									"end": 1970,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1923,
									"end": 1970,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1923,
									"end": 1970,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1923,
									"end": 1970,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1923,
									"end": 1970,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1923,
									"end": 1970,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1923,
									"end": 1970,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1923,
									"end": 1970,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 1923,
									"end": 1970,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1923,
									"end": 1970,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1923,
									"end": 1970,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1923,
									"end": 1970,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1923,
									"end": 1970,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1923,
									"end": 1970,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1923,
									"end": 1970,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1923,
									"end": 1970,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1923,
									"end": 1970,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1923,
									"end": 1970,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1923,
									"end": 1970,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1923,
									"end": 1970,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2005,
									"end": 2009,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "7D0"
								},
								{
									"begin": 1988,
									"end": 2001,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1988,
									"end": 2009,
									"modifierDepth": 1,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1988,
									"end": 2009,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1980,
									"end": 2042,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 1980,
									"end": 2042,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1980,
									"end": 2042,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2042,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1980,
									"end": 2042,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1980,
									"end": 2042,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1980,
									"end": 2042,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1980,
									"end": 2042,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1980,
									"end": 2042,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1980,
									"end": 2042,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 1980,
									"end": 2042,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1980,
									"end": 2042,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1980,
									"end": 2042,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1980,
									"end": 2042,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 1980,
									"end": 2042,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1980,
									"end": 2042,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2042,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1980,
									"end": 2042,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1980,
									"end": 2042,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1980,
									"end": 2042,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1980,
									"end": 2042,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1980,
									"end": 2042,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1980,
									"end": 2042,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 1980,
									"end": 2042,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2088,
									"end": 2089,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2060,
									"end": 2090,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2060,
									"end": 2090,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2060,
									"end": 2076,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2060,
									"end": 2090,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2060,
									"end": 2090,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2060,
									"end": 2090,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 2052,
									"end": 2121,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 2052,
									"end": 2121,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2052,
									"end": 2121,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2052,
									"end": 2121,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2052,
									"end": 2121,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2052,
									"end": 2121,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2052,
									"end": 2121,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2052,
									"end": 2121,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 2052,
									"end": 2121,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2052,
									"end": 2121,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 2052,
									"end": 2121,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2052,
									"end": 2121,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 2052,
									"end": 2121,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2052,
									"end": 2121,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 2052,
									"end": 2121,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2052,
									"end": 2121,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2052,
									"end": 2121,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2052,
									"end": 2121,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2052,
									"end": 2121,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2052,
									"end": 2121,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 2052,
									"end": 2121,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2052,
									"end": 2121,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 2052,
									"end": 2121,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 2052,
									"end": 2121,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2143,
									"end": 2152,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2132,
									"end": 2140,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 2132,
									"end": 2152,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2132,
									"end": 2152,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2132,
									"end": 2152,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 2132,
									"end": 2152,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2177,
									"end": 2190,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2162,
									"end": 2174,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 2162,
									"end": 2190,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2162,
									"end": 2190,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2162,
									"end": 2190,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 2162,
									"end": 2190,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2218,
									"end": 2234,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2200,
									"end": 2215,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 2200,
									"end": 2215,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2200,
									"end": 2234,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 2200,
									"end": 2234,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 2200,
									"end": 2234,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2200,
									"end": 2234,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 2200,
									"end": 2234,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2200,
									"end": 2234,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2200,
									"end": 2234,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 2200,
									"end": 2234,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 2200,
									"end": 2234,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2200,
									"end": 2234,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2200,
									"end": 2234,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2200,
									"end": 2234,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2200,
									"end": 2234,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2200,
									"end": 2234,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 2200,
									"end": 2234,
									"modifierDepth": 1,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 2200,
									"end": 2234,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2200,
									"end": 2234,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 2200,
									"end": 2234,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2257,
									"end": 2262,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2244,
									"end": 2254,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 2244,
									"end": 2254,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 2244,
									"end": 2262,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 2244,
									"end": 2262,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 2244,
									"end": 2262,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2244,
									"end": 2262,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 2244,
									"end": 2262,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2244,
									"end": 2262,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "FF"
								},
								{
									"begin": 2244,
									"end": 2262,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 2244,
									"end": 2262,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 2244,
									"end": 2262,
									"modifierDepth": 1,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2244,
									"end": 2262,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2244,
									"end": 2262,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2244,
									"end": 2262,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2244,
									"end": 2262,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2244,
									"end": 2262,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 2244,
									"end": 2262,
									"modifierDepth": 1,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 2244,
									"end": 2262,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2244,
									"end": 2262,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 2244,
									"end": 2262,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1801,
									"end": 2269,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1801,
									"end": 2269,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1801,
									"end": 2269,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 447,
									"end": 5244,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 447,
									"end": 5244,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "53"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 4,
									"value": "53"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 694,
									"end": 820,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 694,
									"end": 820,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 731,
									"end": 738,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 771,
									"end": 813,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 760,
									"end": 814,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 749,
									"end": 814,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 749,
									"end": 814,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 694,
									"end": 820,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 694,
									"end": 820,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 826,
									"end": 922,
									"name": "tag",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 826,
									"end": 922,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 863,
									"end": 870,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 892,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "56"
								},
								{
									"begin": 910,
									"end": 915,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 892,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 892,
									"end": 916,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 892,
									"end": 916,
									"name": "tag",
									"source": 4,
									"value": "56"
								},
								{
									"begin": 892,
									"end": 916,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 881,
									"end": 916,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 881,
									"end": 916,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 826,
									"end": 922,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 826,
									"end": 922,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 826,
									"end": 922,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 826,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "58"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 4,
									"value": "58"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1293,
									"end": 1299,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1301,
									"end": 1307,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1309,
									"end": 1315,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "PUSH",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 1346,
									"end": 1355,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1337,
									"end": 1344,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1333,
									"end": 1356,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1329,
									"end": 1361,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "63"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "64"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 1364,
									"end": 1443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "tag",
									"source": 4,
									"value": "64"
								},
								{
									"begin": 1364,
									"end": 1443,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "tag",
									"source": 4,
									"value": "63"
								},
								{
									"begin": 1326,
									"end": 1445,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1484,
									"end": 1485,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "65"
								},
								{
									"begin": 1565,
									"end": 1572,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1556,
									"end": 1562,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1545,
									"end": 1554,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 1541,
									"end": 1563,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 1509,
									"end": 1573,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "tag",
									"source": 4,
									"value": "65"
								},
								{
									"begin": 1509,
									"end": 1573,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 1499,
									"end": 1573,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1455,
									"end": 1583,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1622,
									"end": 1624,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "66"
								},
								{
									"begin": 1704,
									"end": 1711,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1695,
									"end": 1701,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1684,
									"end": 1693,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 1680,
									"end": 1702,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 1648,
									"end": 1712,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "tag",
									"source": 4,
									"value": "66"
								},
								{
									"begin": 1648,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1638,
									"end": 1712,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1593,
									"end": 1722,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1761,
									"end": 1763,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "67"
								},
								{
									"begin": 1843,
									"end": 1850,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1834,
									"end": 1840,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1823,
									"end": 1832,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 1819,
									"end": 1841,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 1787,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "tag",
									"source": 4,
									"value": "67"
								},
								{
									"begin": 1787,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1777,
									"end": 1851,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1732,
									"end": 1861,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 1868,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1205,
									"end": 1868,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1874,
									"end": 1992,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 1874,
									"end": 1992,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1961,
									"end": 1985,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "69"
								},
								{
									"begin": 1979,
									"end": 1984,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1961,
									"end": 1985,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 1961,
									"end": 1985,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1961,
									"end": 1985,
									"name": "tag",
									"source": 4,
									"value": "69"
								},
								{
									"begin": 1961,
									"end": 1985,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1956,
									"end": 1959,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1949,
									"end": 1986,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1874,
									"end": 1992,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1874,
									"end": 1992,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1874,
									"end": 1992,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2091,
									"end": 2095,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2129,
									"end": 2131,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2118,
									"end": 2127,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2114,
									"end": 2132,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2106,
									"end": 2132,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2106,
									"end": 2132,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2142,
									"end": 2213,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "71"
								},
								{
									"begin": 2210,
									"end": 2211,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2199,
									"end": 2208,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2195,
									"end": 2212,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2186,
									"end": 2192,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2142,
									"end": 2213,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 2142,
									"end": 2213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2142,
									"end": 2213,
									"name": "tag",
									"source": 4,
									"value": "71"
								},
								{
									"begin": 2142,
									"end": 2213,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1998,
									"end": 2220,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1998,
									"end": 2220,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2226,
									"end": 2395,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 2226,
									"end": 2395,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2310,
									"end": 2321,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2344,
									"end": 2350,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2339,
									"end": 2342,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2332,
									"end": 2351,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2384,
									"end": 2388,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2379,
									"end": 2382,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2375,
									"end": 2389,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2360,
									"end": 2389,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2360,
									"end": 2389,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2226,
									"end": 2395,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 2226,
									"end": 2395,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2226,
									"end": 2395,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2226,
									"end": 2395,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2226,
									"end": 2395,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2401,
									"end": 2572,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 2401,
									"end": 2572,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2541,
									"end": 2564,
									"name": "PUSH",
									"source": 4,
									"value": "506567207072696365206D757374206265203E20300000000000000000000000"
								},
								{
									"begin": 2537,
									"end": 2538,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2529,
									"end": 2535,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2525,
									"end": 2539,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2518,
									"end": 2565,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2401,
									"end": 2572,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2401,
									"end": 2572,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2578,
									"end": 2944,
									"name": "tag",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 2578,
									"end": 2944,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2720,
									"end": 2723,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2741,
									"end": 2808,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "75"
								},
								{
									"begin": 2805,
									"end": 2807,
									"name": "PUSH",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 2800,
									"end": 2803,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2741,
									"end": 2808,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 2741,
									"end": 2808,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2741,
									"end": 2808,
									"name": "tag",
									"source": 4,
									"value": "75"
								},
								{
									"begin": 2741,
									"end": 2808,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2734,
									"end": 2808,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2734,
									"end": 2808,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2817,
									"end": 2910,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "76"
								},
								{
									"begin": 2906,
									"end": 2909,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2817,
									"end": 2910,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 2817,
									"end": 2910,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2817,
									"end": 2910,
									"name": "tag",
									"source": 4,
									"value": "76"
								},
								{
									"begin": 2817,
									"end": 2910,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2935,
									"end": 2937,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2933,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2926,
									"end": 2938,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2919,
									"end": 2938,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2919,
									"end": 2938,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2578,
									"end": 2944,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2578,
									"end": 2944,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2578,
									"end": 2944,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2578,
									"end": 2944,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2950,
									"end": 3369,
									"name": "tag",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 2950,
									"end": 3369,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3116,
									"end": 3120,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3154,
									"end": 3156,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3143,
									"end": 3152,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3139,
									"end": 3157,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3131,
									"end": 3157,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3131,
									"end": 3157,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3203,
									"end": 3212,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3197,
									"end": 3201,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3193,
									"end": 3213,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 3189,
									"end": 3190,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3178,
									"end": 3187,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3174,
									"end": 3191,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3167,
									"end": 3214,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3231,
									"end": 3362,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "78"
								},
								{
									"begin": 3357,
									"end": 3361,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3231,
									"end": 3362,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 3231,
									"end": 3362,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3231,
									"end": 3362,
									"name": "tag",
									"source": 4,
									"value": "78"
								},
								{
									"begin": 3231,
									"end": 3362,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3223,
									"end": 3362,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3223,
									"end": 3362,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2950,
									"end": 3369,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2950,
									"end": 3369,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2950,
									"end": 3369,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2950,
									"end": 3369,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3375,
									"end": 3553,
									"name": "tag",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3375,
									"end": 3553,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3515,
									"end": 3545,
									"name": "PUSH",
									"source": 4,
									"value": "5468726573686F6C6420746F6F206869676820286D6178203230252900000000"
								},
								{
									"begin": 3511,
									"end": 3512,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3503,
									"end": 3509,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3499,
									"end": 3513,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3492,
									"end": 3546,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3375,
									"end": 3553,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3375,
									"end": 3553,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3559,
									"end": 3925,
									"name": "tag",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 3559,
									"end": 3925,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3701,
									"end": 3704,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3722,
									"end": 3789,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "81"
								},
								{
									"begin": 3786,
									"end": 3788,
									"name": "PUSH",
									"source": 4,
									"value": "1C"
								},
								{
									"begin": 3781,
									"end": 3784,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3722,
									"end": 3789,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 3722,
									"end": 3789,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3722,
									"end": 3789,
									"name": "tag",
									"source": 4,
									"value": "81"
								},
								{
									"begin": 3722,
									"end": 3789,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3715,
									"end": 3789,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3715,
									"end": 3789,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3798,
									"end": 3891,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "82"
								},
								{
									"begin": 3887,
									"end": 3890,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3798,
									"end": 3891,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3798,
									"end": 3891,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3798,
									"end": 3891,
									"name": "tag",
									"source": 4,
									"value": "82"
								},
								{
									"begin": 3798,
									"end": 3891,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3916,
									"end": 3918,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3911,
									"end": 3914,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3907,
									"end": 3919,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3900,
									"end": 3919,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3900,
									"end": 3919,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3559,
									"end": 3925,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3559,
									"end": 3925,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3559,
									"end": 3925,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3559,
									"end": 3925,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3931,
									"end": 4350,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3931,
									"end": 4350,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4097,
									"end": 4101,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4135,
									"end": 4137,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 4124,
									"end": 4133,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4120,
									"end": 4138,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4112,
									"end": 4138,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4112,
									"end": 4138,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4184,
									"end": 4193,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4178,
									"end": 4182,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4174,
									"end": 4194,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 4170,
									"end": 4171,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4159,
									"end": 4168,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 4155,
									"end": 4172,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4148,
									"end": 4195,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 4212,
									"end": 4343,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "84"
								},
								{
									"begin": 4338,
									"end": 4342,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4212,
									"end": 4343,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 4212,
									"end": 4343,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4212,
									"end": 4343,
									"name": "tag",
									"source": 4,
									"value": "84"
								},
								{
									"begin": 4212,
									"end": 4343,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4204,
									"end": 4343,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4204,
									"end": 4343,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3931,
									"end": 4350,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3931,
									"end": 4350,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3931,
									"end": 4350,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3931,
									"end": 4350,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4356,
									"end": 4532,
									"name": "tag",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 4356,
									"end": 4532,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4496,
									"end": 4524,
									"name": "PUSH",
									"source": 4,
									"value": "496E76616C69642061676772656761746F722061646472657373000000000000"
								},
								{
									"begin": 4492,
									"end": 4493,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4484,
									"end": 4490,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4480,
									"end": 4494,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4473,
									"end": 4525,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 4356,
									"end": 4532,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4356,
									"end": 4532,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4538,
									"end": 4904,
									"name": "tag",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 4538,
									"end": 4904,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4680,
									"end": 4683,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4701,
									"end": 4768,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "87"
								},
								{
									"begin": 4765,
									"end": 4767,
									"name": "PUSH",
									"source": 4,
									"value": "1A"
								},
								{
									"begin": 4760,
									"end": 4763,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 4701,
									"end": 4768,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 4701,
									"end": 4768,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4701,
									"end": 4768,
									"name": "tag",
									"source": 4,
									"value": "87"
								},
								{
									"begin": 4701,
									"end": 4768,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4694,
									"end": 4768,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 4694,
									"end": 4768,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4777,
									"end": 4870,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "88"
								},
								{
									"begin": 4866,
									"end": 4869,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4777,
									"end": 4870,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 4777,
									"end": 4870,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4777,
									"end": 4870,
									"name": "tag",
									"source": 4,
									"value": "88"
								},
								{
									"begin": 4777,
									"end": 4870,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4895,
									"end": 4897,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 4890,
									"end": 4893,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4886,
									"end": 4898,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4879,
									"end": 4898,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4879,
									"end": 4898,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4538,
									"end": 4904,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 4538,
									"end": 4904,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4538,
									"end": 4904,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4538,
									"end": 4904,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4910,
									"end": 5329,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 4910,
									"end": 5329,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5076,
									"end": 5080,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 5114,
									"end": 5116,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 5103,
									"end": 5112,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 5099,
									"end": 5117,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 5091,
									"end": 5117,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 5091,
									"end": 5117,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5163,
									"end": 5172,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 5157,
									"end": 5161,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 5153,
									"end": 5173,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 5149,
									"end": 5150,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 5138,
									"end": 5147,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 5134,
									"end": 5151,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 5127,
									"end": 5174,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 5191,
									"end": 5322,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "90"
								},
								{
									"begin": 5317,
									"end": 5321,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 5191,
									"end": 5322,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 5191,
									"end": 5322,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5191,
									"end": 5322,
									"name": "tag",
									"source": 4,
									"value": "90"
								},
								{
									"begin": 5191,
									"end": 5322,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5183,
									"end": 5322,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 5183,
									"end": 5322,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4910,
									"end": 5329,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 4910,
									"end": 5329,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4910,
									"end": 5329,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4910,
									"end": 5329,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 447,
									"end": 5244,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 447,
									"end": 5244,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 447,
									"end": 5244,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 447,
									"end": 5244,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 447,
									"end": 5244,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 447,
									"end": 5244,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 447,
									"end": 5244,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 447,
									"end": 5244,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 447,
									"end": 5244,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220682a8fe8a693c14180b93d0dd717010ef1a5b4c745f2587750218aff61083d5b64736f6c63430008140033",
									".code": [
										{
											"begin": 447,
											"end": 5244,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "PUSH",
											"source": 3,
											"value": "9FE4EE47"
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "PUSH",
											"source": 3,
											"value": "C1144B71"
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "PUSH",
											"source": 3,
											"value": "C7F898F0"
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "PUSH",
											"source": 3,
											"value": "D7D7442F"
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "PUSH",
											"source": 3,
											"value": "53F14DA"
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "PUSH",
											"source": 3,
											"value": "3078FFF5"
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "PUSH",
											"source": 3,
											"value": "5A0332A4"
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "PUSH",
											"source": 3,
											"value": "74DE33E4"
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "PUSH",
											"source": 3,
											"value": "7542F23A"
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 447,
											"end": 5244,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 842,
											"end": 866,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 842,
											"end": 866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 842,
											"end": 866,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 842,
											"end": 866,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 842,
											"end": 866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 842,
											"end": 866,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 842,
											"end": 866,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 842,
											"end": 866,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 842,
											"end": 866,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 842,
											"end": 866,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 842,
											"end": 866,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1001,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 971,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 971,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 971,
											"end": 1001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1001,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 971,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1001,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 971,
											"end": 1001,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 971,
											"end": 1001,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1001,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 971,
											"end": 1001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1001,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 971,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1001,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 971,
											"end": 1001,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1001,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1001,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1001,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1001,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1001,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1080,
											"end": 1102,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1080,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1080,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1080,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1080,
											"end": 1102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1080,
											"end": 1102,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1080,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1080,
											"end": 1102,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1080,
											"end": 1102,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1080,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1080,
											"end": 1102,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1080,
											"end": 1102,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1080,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1080,
											"end": 1102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1080,
											"end": 1102,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1080,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1080,
											"end": 1102,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1080,
											"end": 1102,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1080,
											"end": 1102,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1080,
											"end": 1102,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1080,
											"end": 1102,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1080,
											"end": 1102,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1080,
											"end": 1102,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3342,
											"end": 3547,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 3342,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3342,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3342,
											"end": 3547,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3342,
											"end": 3547,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3342,
											"end": 3547,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3342,
											"end": 3547,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3342,
											"end": 3547,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3342,
											"end": 3547,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3342,
											"end": 3547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3342,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 3342,
											"end": 3547,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3342,
											"end": 3547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3342,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 3342,
											"end": 3547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3342,
											"end": 3547,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 3342,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3342,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3342,
											"end": 3547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3342,
											"end": 3547,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3342,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3342,
											"end": 3547,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 599,
											"end": 622,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 599,
											"end": 622,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 599,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 599,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 599,
											"end": 622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 599,
											"end": 622,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 599,
											"end": 622,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 599,
											"end": 622,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 599,
											"end": 622,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 599,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 599,
											"end": 622,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 599,
											"end": 622,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 599,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 599,
											"end": 622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 599,
											"end": 622,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 599,
											"end": 622,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 599,
											"end": 622,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 599,
											"end": 622,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 599,
											"end": 622,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 599,
											"end": 622,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 599,
											"end": 622,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 599,
											"end": 622,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 599,
											"end": 622,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2452,
											"end": 2691,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 2452,
											"end": 2691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2452,
											"end": 2691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2452,
											"end": 2691,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2452,
											"end": 2691,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2452,
											"end": 2691,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2452,
											"end": 2691,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2452,
											"end": 2691,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2452,
											"end": 2691,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2452,
											"end": 2691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2452,
											"end": 2691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2452,
											"end": 2691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2452,
											"end": 2691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2452,
											"end": 2691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2452,
											"end": 2691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2452,
											"end": 2691,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2452,
											"end": 2691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2452,
											"end": 2691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2452,
											"end": 2691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2452,
											"end": 2691,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2452,
											"end": 2691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2452,
											"end": 2691,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 705,
											"end": 732,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 705,
											"end": 732,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 705,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 705,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 705,
											"end": 732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 705,
											"end": 732,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 705,
											"end": 732,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 705,
											"end": 732,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 705,
											"end": 732,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 705,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 705,
											"end": 732,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 705,
											"end": 732,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 705,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 705,
											"end": 732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 705,
											"end": 732,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 705,
											"end": 732,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 705,
											"end": 732,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 705,
											"end": 732,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 705,
											"end": 732,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 705,
											"end": 732,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 705,
											"end": 732,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 705,
											"end": 732,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 705,
											"end": 732,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3812,
											"end": 4579,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 3812,
											"end": 4579,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3812,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3812,
											"end": 4579,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3812,
											"end": 4579,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3812,
											"end": 4579,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3812,
											"end": 4579,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3812,
											"end": 4579,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3812,
											"end": 4579,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3812,
											"end": 4579,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3812,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3812,
											"end": 4579,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3812,
											"end": 4579,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3812,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 3812,
											"end": 4579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3812,
											"end": 4579,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3812,
											"end": 4579,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3812,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 3812,
											"end": 4579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3812,
											"end": 4579,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3812,
											"end": 4579,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3812,
											"end": 4579,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2884,
											"end": 3122,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 2884,
											"end": 3122,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2884,
											"end": 3122,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2884,
											"end": 3122,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2884,
											"end": 3122,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2884,
											"end": 3122,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2884,
											"end": 3122,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2884,
											"end": 3122,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2884,
											"end": 3122,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2884,
											"end": 3122,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2884,
											"end": 3122,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2884,
											"end": 3122,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2884,
											"end": 3122,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2884,
											"end": 3122,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 2884,
											"end": 3122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2884,
											"end": 3122,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2884,
											"end": 3122,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2884,
											"end": 3122,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2884,
											"end": 3122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2884,
											"end": 3122,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2884,
											"end": 3122,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2884,
											"end": 3122,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 842,
											"end": 866,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 842,
											"end": 866,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 842,
											"end": 866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1001,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 971,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1001,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 971,
											"end": 1001,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 971,
											"end": 1001,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1001,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1001,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1001,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 971,
											"end": 1001,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1001,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1001,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1001,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 971,
											"end": 1001,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1001,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 971,
											"end": 1001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1080,
											"end": 1102,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1080,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1080,
											"end": 1102,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1080,
											"end": 1102,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1080,
											"end": 1102,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1080,
											"end": 1102,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1080,
											"end": 1102,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1080,
											"end": 1102,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1080,
											"end": 1102,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1080,
											"end": 1102,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1080,
											"end": 1102,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1080,
											"end": 1102,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1080,
											"end": 1102,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1080,
											"end": 1102,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1080,
											"end": 1102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3342,
											"end": 3547,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3342,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3438,
											"end": 3439,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3424,
											"end": 3435,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3424,
											"end": 3439,
											"modifierDepth": 1,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3465,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 3416,
											"end": 3465,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3465,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3416,
											"end": 3465,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3465,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3416,
											"end": 3465,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3465,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3465,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3416,
											"end": 3465,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3465,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 3416,
											"end": 3465,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3465,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 3416,
											"end": 3465,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3465,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 3416,
											"end": 3465,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3465,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3416,
											"end": 3465,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3465,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3465,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3465,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3465,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3465,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3465,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 3416,
											"end": 3465,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3486,
											"end": 3497,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3475,
											"end": 3483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3475,
											"end": 3497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3475,
											"end": 3497,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3475,
											"end": 3497,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3475,
											"end": 3497,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3540,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "8B4412706CF218351F2B2670D751D9981E4B3E3490911ABA339F1DAC35103D0B"
										},
										{
											"begin": 3528,
											"end": 3539,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3540,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3512,
											"end": 3540,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3540,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 3512,
											"end": 3540,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3540,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3540,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 3512,
											"end": 3540,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3540,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 3512,
											"end": 3540,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3540,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3512,
											"end": 3540,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3540,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3540,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3540,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3540,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3512,
											"end": 3540,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 3342,
											"end": 3547,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3342,
											"end": 3547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 599,
											"end": 622,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 599,
											"end": 622,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 599,
											"end": 622,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 599,
											"end": 622,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 599,
											"end": 622,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 599,
											"end": 622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2452,
											"end": 2691,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2452,
											"end": 2691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2564,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2538,
											"end": 2565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2538,
											"end": 2565,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2551,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2538,
											"end": 2565,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2565,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2530,
											"end": 2596,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2530,
											"end": 2596,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2530,
											"end": 2596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2530,
											"end": 2596,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2530,
											"end": 2596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2530,
											"end": 2596,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2530,
											"end": 2596,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2530,
											"end": 2596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2530,
											"end": 2596,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2530,
											"end": 2596,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2530,
											"end": 2596,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2530,
											"end": 2596,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2530,
											"end": 2596,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2530,
											"end": 2596,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2530,
											"end": 2596,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2530,
											"end": 2596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2530,
											"end": 2596,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2530,
											"end": 2596,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2530,
											"end": 2596,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2530,
											"end": 2596,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2530,
											"end": 2596,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2530,
											"end": 2596,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2530,
											"end": 2596,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2530,
											"end": 2596,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2624,
											"end": 2637,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2606,
											"end": 2621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2606,
											"end": 2637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2606,
											"end": 2637,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2637,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2637,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2637,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2606,
											"end": 2637,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2637,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2637,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2637,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2637,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2637,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2606,
											"end": 2637,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2637,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2637,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2637,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2637,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2606,
											"end": 2637,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2670,
											"end": 2683,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2684,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2652,
											"end": 2684,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2684,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "602CEC4B1583B07D071161DA5EB9589444D2459201E2FAB7753DC941E9351C21"
										},
										{
											"begin": 2652,
											"end": 2684,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2684,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2684,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2684,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2684,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2684,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2684,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2684,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2652,
											"end": 2684,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 2452,
											"end": 2691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2452,
											"end": 2691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 705,
											"end": 732,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 705,
											"end": 732,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 705,
											"end": 732,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 705,
											"end": 732,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 705,
											"end": 732,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 705,
											"end": 732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3812,
											"end": 4579,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 3812,
											"end": 4579,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3910,
											"end": 3925,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3910,
											"end": 3925,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3910,
											"end": 3925,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3910,
											"end": 3925,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3910,
											"end": 3925,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3910,
											"end": 3925,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3910,
											"end": 3925,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3910,
											"end": 3925,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3910,
											"end": 3925,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3910,
											"end": 3925,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3910,
											"end": 3925,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 3925,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3896,
											"end": 3925,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 3906,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 3925,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3896,
											"end": 3925,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 3925,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3888,
											"end": 3955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3888,
											"end": 3955,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3888,
											"end": 3955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3888,
											"end": 3955,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3888,
											"end": 3955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3888,
											"end": 3955,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3888,
											"end": 3955,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3888,
											"end": 3955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3888,
											"end": 3955,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3888,
											"end": 3955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 3888,
											"end": 3955,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3888,
											"end": 3955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 3888,
											"end": 3955,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3888,
											"end": 3955,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 3888,
											"end": 3955,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3888,
											"end": 3955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3888,
											"end": 3955,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3888,
											"end": 3955,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3888,
											"end": 3955,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3888,
											"end": 3955,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3888,
											"end": 3955,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3888,
											"end": 3955,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3888,
											"end": 3955,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3888,
											"end": 3955,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3989,
											"end": 3990,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3973,
											"end": 3986,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3973,
											"end": 3990,
											"modifierDepth": 1,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3965,
											"end": 4017,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 3965,
											"end": 4017,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3965,
											"end": 4017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3965,
											"end": 4017,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3965,
											"end": 4017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3965,
											"end": 4017,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3965,
											"end": 4017,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3965,
											"end": 4017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3965,
											"end": 4017,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3965,
											"end": 4017,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 3965,
											"end": 4017,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3965,
											"end": 4017,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 3965,
											"end": 4017,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3965,
											"end": 4017,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 3965,
											"end": 4017,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3965,
											"end": 4017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3965,
											"end": 4017,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3965,
											"end": 4017,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3965,
											"end": 4017,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3965,
											"end": 4017,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3965,
											"end": 4017,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3965,
											"end": 4017,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3965,
											"end": 4017,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 3965,
											"end": 4017,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4040,
											"end": 4053,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4028,
											"end": 4037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4028,
											"end": 4053,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4028,
											"end": 4053,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4028,
											"end": 4053,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4028,
											"end": 4053,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4063,
											"end": 4085,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4088,
											"end": 4114,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 4100,
											"end": 4113,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4088,
											"end": 4099,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 4088,
											"end": 4114,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4088,
											"end": 4114,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 4088,
											"end": 4114,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4063,
											"end": 4114,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4063,
											"end": 4114,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4130,
											"end": 4177,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "8322C40CC8FA3BD54EC84110A078E65C783D8D79AD96ADF1B07CD59ED10C2DC2"
										},
										{
											"begin": 4144,
											"end": 4157,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4159,
											"end": 4176,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4130,
											"end": 4177,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4130,
											"end": 4177,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4130,
											"end": 4177,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 4130,
											"end": 4177,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4130,
											"end": 4177,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4130,
											"end": 4177,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4130,
											"end": 4177,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 4130,
											"end": 4177,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4130,
											"end": 4177,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 4130,
											"end": 4177,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4130,
											"end": 4177,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4130,
											"end": 4177,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4130,
											"end": 4177,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4130,
											"end": 4177,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4130,
											"end": 4177,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4130,
											"end": 4177,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4130,
											"end": 4177,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4209,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4224,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4224,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4224,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 4192,
											"end": 4224,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4224,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4214,
											"end": 4224,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 4214,
											"end": 4224,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 4214,
											"end": 4224,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4214,
											"end": 4224,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4214,
											"end": 4224,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4214,
											"end": 4224,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4214,
											"end": 4224,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4214,
											"end": 4224,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4214,
											"end": 4224,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4214,
											"end": 4224,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 4214,
											"end": 4224,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4213,
											"end": 4224,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4224,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 4192,
											"end": 4224,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4188,
											"end": 4573,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4188,
											"end": 4573,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 4188,
											"end": 4573,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4303,
											"end": 4307,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4290,
											"end": 4300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 4290,
											"end": 4300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 4290,
											"end": 4307,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4290,
											"end": 4307,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4290,
											"end": 4307,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4290,
											"end": 4307,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4290,
											"end": 4307,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4290,
											"end": 4307,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 4290,
											"end": 4307,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 4290,
											"end": 4307,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 4290,
											"end": 4307,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4290,
											"end": 4307,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4290,
											"end": 4307,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4290,
											"end": 4307,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4290,
											"end": 4307,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4290,
											"end": 4307,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 4290,
											"end": 4307,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 4290,
											"end": 4307,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4290,
											"end": 4307,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4290,
											"end": 4307,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4326,
											"end": 4366,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "43A30A8A621AE0BF221B02B806C2A80D658E4886E1D85E72427B7466C0CD4197"
										},
										{
											"begin": 4335,
											"end": 4350,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 4352,
											"end": 4365,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4326,
											"end": 4366,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4326,
											"end": 4366,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4326,
											"end": 4366,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 4326,
											"end": 4366,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4326,
											"end": 4366,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4326,
											"end": 4366,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4326,
											"end": 4366,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 4326,
											"end": 4366,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4326,
											"end": 4366,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 4326,
											"end": 4366,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4326,
											"end": 4366,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4326,
											"end": 4366,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4326,
											"end": 4366,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4326,
											"end": 4366,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4326,
											"end": 4366,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4326,
											"end": 4366,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4326,
											"end": 4366,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 4188,
											"end": 4573,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 4188,
											"end": 4573,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4188,
											"end": 4573,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 4188,
											"end": 4573,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4388,
											"end": 4405,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4387,
											"end": 4405,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4387,
											"end": 4419,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4387,
											"end": 4419,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4387,
											"end": 4419,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 4387,
											"end": 4419,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4387,
											"end": 4419,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4409,
											"end": 4419,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 4409,
											"end": 4419,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 4409,
											"end": 4419,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4409,
											"end": 4419,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4409,
											"end": 4419,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4409,
											"end": 4419,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4409,
											"end": 4419,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4409,
											"end": 4419,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4409,
											"end": 4419,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4409,
											"end": 4419,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 4409,
											"end": 4419,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4387,
											"end": 4419,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 4387,
											"end": 4419,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4383,
											"end": 4573,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4383,
											"end": 4573,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 4383,
											"end": 4573,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4498,
											"end": 4503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4485,
											"end": 4495,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 4485,
											"end": 4495,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 4485,
											"end": 4503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4485,
											"end": 4503,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4503,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4503,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4503,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 4485,
											"end": 4503,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4503,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4503,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4503,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4503,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4503,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4503,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4503,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4503,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4503,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4503,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4503,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4522,
											"end": 4562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "EEDD16500C1F2C39EBB8B74FD12984F1E07626ACDB1434293DD2707E32EA6EB9"
										},
										{
											"begin": 4531,
											"end": 4546,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 3
										},
										{
											"begin": 4548,
											"end": 4561,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4522,
											"end": 4562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4522,
											"end": 4562,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4522,
											"end": 4562,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 4522,
											"end": 4562,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4522,
											"end": 4562,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4522,
											"end": 4562,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4522,
											"end": 4562,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 4522,
											"end": 4562,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4522,
											"end": 4562,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 4522,
											"end": 4562,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4522,
											"end": 4562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4522,
											"end": 4562,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4522,
											"end": 4562,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4522,
											"end": 4562,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4522,
											"end": 4562,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4522,
											"end": 4562,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4522,
											"end": 4562,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 4383,
											"end": 4573,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 4383,
											"end": 4573,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4188,
											"end": 4573,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 4188,
											"end": 4573,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3878,
											"end": 4579,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3812,
											"end": 4579,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3812,
											"end": 4579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2884,
											"end": 3122,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2884,
											"end": 3122,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2990,
											"end": 2994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "7D0"
										},
										{
											"begin": 2971,
											"end": 2986,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2971,
											"end": 2994,
											"modifierDepth": 1,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2971,
											"end": 2994,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2963,
											"end": 3027,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 2963,
											"end": 3027,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2963,
											"end": 3027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2963,
											"end": 3027,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2963,
											"end": 3027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2963,
											"end": 3027,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2963,
											"end": 3027,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2963,
											"end": 3027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2963,
											"end": 3027,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2963,
											"end": 3027,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 2963,
											"end": 3027,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2963,
											"end": 3027,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 2963,
											"end": 3027,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2963,
											"end": 3027,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 2963,
											"end": 3027,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2963,
											"end": 3027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2963,
											"end": 3027,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2963,
											"end": 3027,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2963,
											"end": 3027,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2963,
											"end": 3027,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2963,
											"end": 3027,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2963,
											"end": 3027,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2963,
											"end": 3027,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 2963,
											"end": 3027,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3067,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3037,
											"end": 3049,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3037,
											"end": 3067,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3037,
											"end": 3067,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3037,
											"end": 3067,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3037,
											"end": 3067,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3082,
											"end": 3115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "ADFA8ECB21B6962EBCD0ADBD9AB985B7B4C5B5EB3B0DEAD683171565C7BFE171"
										},
										{
											"begin": 3099,
											"end": 3114,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3082,
											"end": 3115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3082,
											"end": 3115,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3082,
											"end": 3115,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 3082,
											"end": 3115,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3082,
											"end": 3115,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3082,
											"end": 3115,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 3082,
											"end": 3115,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3082,
											"end": 3115,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 3082,
											"end": 3115,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3082,
											"end": 3115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3082,
											"end": 3115,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3082,
											"end": 3115,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3082,
											"end": 3115,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3082,
											"end": 3115,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3082,
											"end": 3115,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3082,
											"end": 3115,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 2884,
											"end": 3122,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2884,
											"end": 3122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4826,
											"end": 5242,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 4826,
											"end": 5242,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4885,
											"end": 4889,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4956,
											"end": 4968,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4980,
											"end": 4988,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4980,
											"end": 4988,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4972,
											"end": 4977,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4972,
											"end": 4988,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4971,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 4971,
											"end": 5027,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5022,
											"end": 5027,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5011,
											"end": 5019,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 5011,
											"end": 5019,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5011,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 5011,
											"end": 5027,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5011,
											"end": 5027,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5011,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 5011,
											"end": 5027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5011,
											"end": 5027,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 5011,
											"end": 5027,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4971,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 4971,
											"end": 5027,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4971,
											"end": 5027,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 4971,
											"end": 5027,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5000,
											"end": 5008,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 5000,
											"end": 5008,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4992,
											"end": 4997,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4992,
											"end": 5008,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 4992,
											"end": 5008,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4992,
											"end": 5008,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4992,
											"end": 5008,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 4992,
											"end": 5008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4992,
											"end": 5008,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 4992,
											"end": 5008,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4971,
											"end": 5027,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 4971,
											"end": 5027,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4956,
											"end": 5027,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4956,
											"end": 5027,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5153,
											"end": 5168,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5188,
											"end": 5196,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 5188,
											"end": 5196,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5179,
											"end": 5184,
											"name": "PUSH",
											"source": 3,
											"value": "2710"
										},
										{
											"begin": 5172,
											"end": 5176,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5172,
											"end": 5184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 5172,
											"end": 5184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5172,
											"end": 5184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5172,
											"end": 5184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 5172,
											"end": 5184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5172,
											"end": 5184,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 5172,
											"end": 5184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5171,
											"end": 5196,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 5171,
											"end": 5196,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5171,
											"end": 5196,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5171,
											"end": 5196,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 5171,
											"end": 5196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5171,
											"end": 5196,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 5171,
											"end": 5196,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5153,
											"end": 5196,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5153,
											"end": 5196,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5223,
											"end": 5235,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 5223,
											"end": 5235,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5213,
											"end": 5220,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5213,
											"end": 5235,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5206,
											"end": 5235,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5206,
											"end": 5235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5206,
											"end": 5235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5206,
											"end": 5235,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4826,
											"end": 5242,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4826,
											"end": 5242,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4826,
											"end": 5242,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4826,
											"end": 5242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 442,
											"end": 568,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 442,
											"end": 568,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 479,
											"end": 486,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 561,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 517,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 508,
											"end": 562,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 497,
											"end": 562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 497,
											"end": 562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 442,
											"end": 568,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 442,
											"end": 568,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 442,
											"end": 568,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 442,
											"end": 568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 574,
											"end": 670,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 574,
											"end": 670,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 611,
											"end": 618,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 640,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 658,
											"end": 663,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 640,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 640,
											"end": 664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 640,
											"end": 664,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 640,
											"end": 664,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 629,
											"end": 664,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 629,
											"end": 664,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 574,
											"end": 670,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 574,
											"end": 670,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 574,
											"end": 670,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 574,
											"end": 670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 676,
											"end": 794,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 676,
											"end": 794,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 781,
											"end": 786,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 763,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 763,
											"end": 787,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 758,
											"end": 761,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 751,
											"end": 788,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 676,
											"end": 794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 893,
											"end": 897,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 931,
											"end": 933,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 920,
											"end": 929,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 916,
											"end": 934,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 908,
											"end": 934,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 908,
											"end": 934,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 1012,
											"end": 1013,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1010,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 988,
											"end": 994,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 944,
											"end": 1015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 800,
											"end": 1022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1028,
											"end": 1118,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 1028,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1062,
											"end": 1069,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1105,
											"end": 1110,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1098,
											"end": 1111,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1112,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1080,
											"end": 1112,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1080,
											"end": 1112,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1028,
											"end": 1118,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1028,
											"end": 1118,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1028,
											"end": 1118,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1028,
											"end": 1118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1124,
											"end": 1233,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 1124,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 1220,
											"end": 1225,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 1205,
											"end": 1226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1226,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 1205,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1200,
											"end": 1203,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1193,
											"end": 1227,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1124,
											"end": 1233,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1124,
											"end": 1233,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1124,
											"end": 1233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1239,
											"end": 1449,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1239,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1326,
											"end": 1330,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1364,
											"end": 1366,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1353,
											"end": 1362,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1349,
											"end": 1367,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1367,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1367,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1377,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 1439,
											"end": 1440,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1428,
											"end": 1437,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1424,
											"end": 1441,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1415,
											"end": 1421,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1377,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 1377,
											"end": 1442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1377,
											"end": 1442,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 1377,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1239,
											"end": 1449,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1239,
											"end": 1449,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1239,
											"end": 1449,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1239,
											"end": 1449,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1239,
											"end": 1449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1653,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 1536,
											"end": 1653,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1645,
											"end": 1646,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1642,
											"end": 1643,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1647,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1782,
											"end": 1904,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 1782,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1855,
											"end": 1879,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 1873,
											"end": 1878,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1855,
											"end": 1879,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 1855,
											"end": 1879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1855,
											"end": 1879,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 1855,
											"end": 1879,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1848,
											"end": 1853,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1845,
											"end": 1880,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1835,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 1835,
											"end": 1898,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1894,
											"end": 1895,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1891,
											"end": 1892,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1884,
											"end": 1896,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1835,
											"end": 1898,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 1835,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1782,
											"end": 1904,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1782,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 2049,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 1910,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1956,
											"end": 1961,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1994,
											"end": 2000,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2001,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 2001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 2001,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2010,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 2037,
											"end": 2042,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2010,
											"end": 2043,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2010,
											"end": 2043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2010,
											"end": 2043,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 2010,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 2049,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 2049,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 2049,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 2049,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 2049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2055,
											"end": 2384,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 2055,
											"end": 2384,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2114,
											"end": 2120,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2163,
											"end": 2165,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2151,
											"end": 2160,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2142,
											"end": 2149,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2138,
											"end": 2161,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2134,
											"end": 2166,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2131,
											"end": 2250,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2131,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 2131,
											"end": 2250,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2248,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 2169,
											"end": 2248,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2169,
											"end": 2248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2169,
											"end": 2248,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 2169,
											"end": 2248,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2131,
											"end": 2250,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 2131,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2289,
											"end": 2290,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 2359,
											"end": 2366,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2350,
											"end": 2356,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2339,
											"end": 2348,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2335,
											"end": 2357,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 2314,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 2314,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2304,
											"end": 2367,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2304,
											"end": 2367,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2377,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2055,
											"end": 2384,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2055,
											"end": 2384,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2055,
											"end": 2384,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2055,
											"end": 2384,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2055,
											"end": 2384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2390,
											"end": 2512,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2390,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 2481,
											"end": 2486,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2463,
											"end": 2487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2487,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 2463,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2461,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2453,
											"end": 2488,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2443,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 2443,
											"end": 2506,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2503,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2499,
											"end": 2500,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2492,
											"end": 2504,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2443,
											"end": 2506,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 2443,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2390,
											"end": 2512,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2390,
											"end": 2512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2657,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2518,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2569,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2602,
											"end": 2608,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2589,
											"end": 2609,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2580,
											"end": 2609,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2580,
											"end": 2609,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2618,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 2645,
											"end": 2650,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2618,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2618,
											"end": 2651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2618,
											"end": 2651,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 2618,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2657,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2657,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2657,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2657,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2663,
											"end": 2992,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2663,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2722,
											"end": 2728,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2771,
											"end": 2773,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2759,
											"end": 2768,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2750,
											"end": 2757,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2746,
											"end": 2769,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2742,
											"end": 2774,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2739,
											"end": 2858,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2739,
											"end": 2858,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 2739,
											"end": 2858,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2777,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 2777,
											"end": 2856,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2777,
											"end": 2856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2777,
											"end": 2856,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 2777,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2739,
											"end": 2858,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 2739,
											"end": 2858,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2897,
											"end": 2898,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2922,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 2967,
											"end": 2974,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2958,
											"end": 2964,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2947,
											"end": 2956,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2943,
											"end": 2965,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2922,
											"end": 2975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2975,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 2922,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 2975,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 2975,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2985,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2663,
											"end": 2992,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2663,
											"end": 2992,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2663,
											"end": 2992,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2663,
											"end": 2992,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2663,
											"end": 2992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3167,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 2998,
											"end": 3167,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3082,
											"end": 3093,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3116,
											"end": 3122,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3111,
											"end": 3114,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3104,
											"end": 3123,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3156,
											"end": 3160,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3151,
											"end": 3154,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3147,
											"end": 3161,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3132,
											"end": 3161,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3132,
											"end": 3161,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3167,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3167,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3167,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3167,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2998,
											"end": 3167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3173,
											"end": 3344,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 3173,
											"end": 3344,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3313,
											"end": 3336,
											"name": "PUSH",
											"source": 4,
											"value": "506567207072696365206D757374206265203E20300000000000000000000000"
										},
										{
											"begin": 3309,
											"end": 3310,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3301,
											"end": 3307,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3297,
											"end": 3311,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3290,
											"end": 3337,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3173,
											"end": 3344,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3173,
											"end": 3344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3350,
											"end": 3716,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 3350,
											"end": 3716,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3492,
											"end": 3495,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3513,
											"end": 3580,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 3577,
											"end": 3579,
											"name": "PUSH",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 3572,
											"end": 3575,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3513,
											"end": 3580,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 3513,
											"end": 3580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3513,
											"end": 3580,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 3513,
											"end": 3580,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3506,
											"end": 3580,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3506,
											"end": 3580,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3589,
											"end": 3682,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 3678,
											"end": 3681,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3589,
											"end": 3682,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 3589,
											"end": 3682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3589,
											"end": 3682,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 3589,
											"end": 3682,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3707,
											"end": 3709,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3702,
											"end": 3705,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3710,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3691,
											"end": 3710,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3691,
											"end": 3710,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3350,
											"end": 3716,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3350,
											"end": 3716,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3350,
											"end": 3716,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3350,
											"end": 3716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3722,
											"end": 4141,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 3722,
											"end": 4141,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3888,
											"end": 3892,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3926,
											"end": 3928,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3915,
											"end": 3924,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3911,
											"end": 3929,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3903,
											"end": 3929,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3903,
											"end": 3929,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3975,
											"end": 3984,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3969,
											"end": 3973,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3965,
											"end": 3985,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3961,
											"end": 3962,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3950,
											"end": 3959,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3946,
											"end": 3963,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3939,
											"end": 3986,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4003,
											"end": 4134,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 4129,
											"end": 4133,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4003,
											"end": 4134,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 4003,
											"end": 4134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4003,
											"end": 4134,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 4003,
											"end": 4134,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3995,
											"end": 4134,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3995,
											"end": 4134,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3722,
											"end": 4141,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3722,
											"end": 4141,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3722,
											"end": 4141,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3722,
											"end": 4141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4147,
											"end": 4323,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 4147,
											"end": 4323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4287,
											"end": 4315,
											"name": "PUSH",
											"source": 4,
											"value": "496E76616C69642061676772656761746F722061646472657373000000000000"
										},
										{
											"begin": 4283,
											"end": 4284,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4275,
											"end": 4281,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4271,
											"end": 4285,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4264,
											"end": 4316,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4147,
											"end": 4323,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4147,
											"end": 4323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4329,
											"end": 4695,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 4329,
											"end": 4695,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4471,
											"end": 4474,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4492,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 4556,
											"end": 4558,
											"name": "PUSH",
											"source": 4,
											"value": "1A"
										},
										{
											"begin": 4551,
											"end": 4554,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4492,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 4492,
											"end": 4559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4492,
											"end": 4559,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 4492,
											"end": 4559,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4485,
											"end": 4559,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4485,
											"end": 4559,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4568,
											"end": 4661,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 4657,
											"end": 4660,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4568,
											"end": 4661,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 4568,
											"end": 4661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4568,
											"end": 4661,
											"name": "tag",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 4568,
											"end": 4661,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4686,
											"end": 4688,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4681,
											"end": 4684,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4677,
											"end": 4689,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4670,
											"end": 4689,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4670,
											"end": 4689,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4329,
											"end": 4695,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4329,
											"end": 4695,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4329,
											"end": 4695,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4329,
											"end": 4695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4701,
											"end": 5120,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 4701,
											"end": 5120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4871,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4905,
											"end": 4907,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4894,
											"end": 4903,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4890,
											"end": 4908,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4882,
											"end": 4908,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4882,
											"end": 4908,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4954,
											"end": 4963,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4948,
											"end": 4952,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 4964,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4940,
											"end": 4941,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4929,
											"end": 4938,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4925,
											"end": 4942,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4918,
											"end": 4965,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4982,
											"end": 5113,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 5108,
											"end": 5112,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4982,
											"end": 5113,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 4982,
											"end": 5113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4982,
											"end": 5113,
											"name": "tag",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 4982,
											"end": 5113,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4974,
											"end": 5113,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4974,
											"end": 5113,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4701,
											"end": 5120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4701,
											"end": 5120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4701,
											"end": 5120,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4701,
											"end": 5120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5301,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 5126,
											"end": 5301,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5266,
											"end": 5293,
											"name": "PUSH",
											"source": 4,
											"value": "4E6F7420617574686F72697A65642061676772656761746F7200000000000000"
										},
										{
											"begin": 5262,
											"end": 5263,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5254,
											"end": 5260,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5250,
											"end": 5264,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5243,
											"end": 5294,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5301,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5307,
											"end": 5673,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 5307,
											"end": 5673,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5449,
											"end": 5452,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5470,
											"end": 5537,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 5534,
											"end": 5536,
											"name": "PUSH",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 5529,
											"end": 5532,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5470,
											"end": 5537,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 5470,
											"end": 5537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5470,
											"end": 5537,
											"name": "tag",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 5470,
											"end": 5537,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5463,
											"end": 5537,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5463,
											"end": 5537,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5639,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 5635,
											"end": 5638,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5639,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 5546,
											"end": 5639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5639,
											"name": "tag",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 5546,
											"end": 5639,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5664,
											"end": 5666,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5659,
											"end": 5662,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5655,
											"end": 5667,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5648,
											"end": 5667,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5648,
											"end": 5667,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5307,
											"end": 5673,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5307,
											"end": 5673,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5307,
											"end": 5673,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5307,
											"end": 5673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5679,
											"end": 6098,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 5679,
											"end": 6098,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5845,
											"end": 5849,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5883,
											"end": 5885,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5872,
											"end": 5881,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5868,
											"end": 5886,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5860,
											"end": 5886,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5860,
											"end": 5886,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5932,
											"end": 5941,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5926,
											"end": 5930,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5922,
											"end": 5942,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5918,
											"end": 5919,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5907,
											"end": 5916,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5903,
											"end": 5920,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5896,
											"end": 5943,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5960,
											"end": 6091,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 6086,
											"end": 6090,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5960,
											"end": 6091,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 5960,
											"end": 6091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5960,
											"end": 6091,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 5960,
											"end": 6091,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6091,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5952,
											"end": 6091,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5679,
											"end": 6098,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5679,
											"end": 6098,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5679,
											"end": 6098,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5679,
											"end": 6098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6104,
											"end": 6276,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 6104,
											"end": 6276,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6244,
											"end": 6268,
											"name": "PUSH",
											"source": 4,
											"value": "496E76616C6964207265706F7274656420707269636500000000000000000000"
										},
										{
											"begin": 6240,
											"end": 6241,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6232,
											"end": 6238,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6228,
											"end": 6242,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6221,
											"end": 6269,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6104,
											"end": 6276,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6104,
											"end": 6276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6282,
											"end": 6648,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 6282,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6424,
											"end": 6427,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6445,
											"end": 6512,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 6509,
											"end": 6511,
											"name": "PUSH",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 6504,
											"end": 6507,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6445,
											"end": 6512,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 6445,
											"end": 6512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6445,
											"end": 6512,
											"name": "tag",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 6445,
											"end": 6512,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6438,
											"end": 6512,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6438,
											"end": 6512,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6521,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 6610,
											"end": 6613,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6521,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 6521,
											"end": 6614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6521,
											"end": 6614,
											"name": "tag",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 6521,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6639,
											"end": 6641,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6634,
											"end": 6637,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6630,
											"end": 6642,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6623,
											"end": 6642,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6623,
											"end": 6642,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6282,
											"end": 6648,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6282,
											"end": 6648,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6282,
											"end": 6648,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6282,
											"end": 6648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6654,
											"end": 7073,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 6654,
											"end": 7073,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6820,
											"end": 6824,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6858,
											"end": 6860,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6847,
											"end": 6856,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6843,
											"end": 6861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6835,
											"end": 6861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6835,
											"end": 6861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6907,
											"end": 6916,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6901,
											"end": 6905,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6897,
											"end": 6917,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6893,
											"end": 6894,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6882,
											"end": 6891,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6878,
											"end": 6895,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6871,
											"end": 6918,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6935,
											"end": 7066,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 7061,
											"end": 7065,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6935,
											"end": 7066,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 6935,
											"end": 7066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6935,
											"end": 7066,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 6935,
											"end": 7066,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6927,
											"end": 7066,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6927,
											"end": 7066,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6654,
											"end": 7073,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6654,
											"end": 7073,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6654,
											"end": 7073,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6654,
											"end": 7073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7079,
											"end": 7399,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 7079,
											"end": 7399,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7194,
											"end": 7198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7232,
											"end": 7234,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7221,
											"end": 7230,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7217,
											"end": 7235,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7209,
											"end": 7235,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7209,
											"end": 7235,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7245,
											"end": 7316,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 7313,
											"end": 7314,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7302,
											"end": 7311,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7315,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7289,
											"end": 7295,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7245,
											"end": 7316,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 7245,
											"end": 7316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7245,
											"end": 7316,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 7245,
											"end": 7316,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7326,
											"end": 7392,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 7388,
											"end": 7390,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7377,
											"end": 7386,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7373,
											"end": 7391,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7364,
											"end": 7370,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7326,
											"end": 7392,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 7326,
											"end": 7392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7326,
											"end": 7392,
											"name": "tag",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 7326,
											"end": 7392,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7079,
											"end": 7399,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7079,
											"end": 7399,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7079,
											"end": 7399,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7079,
											"end": 7399,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7079,
											"end": 7399,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7079,
											"end": 7399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7405,
											"end": 7737,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 7405,
											"end": 7737,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7526,
											"end": 7530,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7564,
											"end": 7566,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7562,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7549,
											"end": 7567,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7541,
											"end": 7567,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7541,
											"end": 7567,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7577,
											"end": 7648,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 7645,
											"end": 7646,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7634,
											"end": 7643,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7630,
											"end": 7647,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7621,
											"end": 7627,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7577,
											"end": 7648,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 7577,
											"end": 7648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7577,
											"end": 7648,
											"name": "tag",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 7577,
											"end": 7648,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7658,
											"end": 7730,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 7726,
											"end": 7728,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7715,
											"end": 7724,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7711,
											"end": 7729,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7702,
											"end": 7708,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7658,
											"end": 7730,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 7658,
											"end": 7730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7658,
											"end": 7730,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 7658,
											"end": 7730,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7405,
											"end": 7737,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7405,
											"end": 7737,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7405,
											"end": 7737,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7405,
											"end": 7737,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7405,
											"end": 7737,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7405,
											"end": 7737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7743,
											"end": 7921,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 7743,
											"end": 7921,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7883,
											"end": 7913,
											"name": "PUSH",
											"source": 4,
											"value": "5468726573686F6C6420746F6F206869676820286D6178203230252900000000"
										},
										{
											"begin": 7879,
											"end": 7880,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7871,
											"end": 7877,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7867,
											"end": 7881,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7860,
											"end": 7914,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7743,
											"end": 7921,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7743,
											"end": 7921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7927,
											"end": 8293,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 7927,
											"end": 8293,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8069,
											"end": 8072,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8090,
											"end": 8157,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 8154,
											"end": 8156,
											"name": "PUSH",
											"source": 4,
											"value": "1C"
										},
										{
											"begin": 8149,
											"end": 8152,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8090,
											"end": 8157,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 8090,
											"end": 8157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8090,
											"end": 8157,
											"name": "tag",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 8090,
											"end": 8157,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8083,
											"end": 8157,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8083,
											"end": 8157,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8166,
											"end": 8259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 8255,
											"end": 8258,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8166,
											"end": 8259,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 8166,
											"end": 8259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8166,
											"end": 8259,
											"name": "tag",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 8166,
											"end": 8259,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8284,
											"end": 8286,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8279,
											"end": 8282,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8275,
											"end": 8287,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8268,
											"end": 8287,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8268,
											"end": 8287,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7927,
											"end": 8293,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7927,
											"end": 8293,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7927,
											"end": 8293,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7927,
											"end": 8293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8299,
											"end": 8718,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 8299,
											"end": 8718,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8465,
											"end": 8469,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8503,
											"end": 8505,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8492,
											"end": 8501,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8488,
											"end": 8506,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8480,
											"end": 8506,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8480,
											"end": 8506,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8552,
											"end": 8561,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8546,
											"end": 8550,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8542,
											"end": 8562,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8538,
											"end": 8539,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8527,
											"end": 8536,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8523,
											"end": 8540,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8516,
											"end": 8563,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8580,
											"end": 8711,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 8706,
											"end": 8710,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8580,
											"end": 8711,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 8580,
											"end": 8711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8580,
											"end": 8711,
											"name": "tag",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 8580,
											"end": 8711,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8572,
											"end": 8711,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8572,
											"end": 8711,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8299,
											"end": 8718,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8299,
											"end": 8718,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8299,
											"end": 8718,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8299,
											"end": 8718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8724,
											"end": 8905,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 8724,
											"end": 8905,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8864,
											"end": 8897,
											"name": "PUSH",
											"source": 4,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 8860,
											"end": 8861,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8852,
											"end": 8858,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8848,
											"end": 8862,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8841,
											"end": 8898,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8724,
											"end": 8905,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8724,
											"end": 8905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8911,
											"end": 9277,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 8911,
											"end": 9277,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9053,
											"end": 9056,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9074,
											"end": 9141,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 9138,
											"end": 9140,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 9133,
											"end": 9136,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9074,
											"end": 9141,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 9074,
											"end": 9141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9074,
											"end": 9141,
											"name": "tag",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 9074,
											"end": 9141,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9067,
											"end": 9141,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9067,
											"end": 9141,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 9239,
											"end": 9242,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 9150,
											"end": 9243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9150,
											"end": 9243,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 9150,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9268,
											"end": 9270,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9263,
											"end": 9266,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9259,
											"end": 9271,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9252,
											"end": 9271,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9252,
											"end": 9271,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8911,
											"end": 9277,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8911,
											"end": 9277,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8911,
											"end": 9277,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8911,
											"end": 9277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9283,
											"end": 9702,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 9283,
											"end": 9702,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9449,
											"end": 9453,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9489,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9476,
											"end": 9485,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9472,
											"end": 9490,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9464,
											"end": 9490,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9464,
											"end": 9490,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9536,
											"end": 9545,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9530,
											"end": 9534,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9526,
											"end": 9546,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9522,
											"end": 9523,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9511,
											"end": 9520,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9507,
											"end": 9524,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9500,
											"end": 9547,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9564,
											"end": 9695,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 9690,
											"end": 9694,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9564,
											"end": 9695,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 9564,
											"end": 9695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9564,
											"end": 9695,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 9564,
											"end": 9695,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9556,
											"end": 9695,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9556,
											"end": 9695,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9283,
											"end": 9702,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9283,
											"end": 9702,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9283,
											"end": 9702,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9283,
											"end": 9702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9708,
											"end": 9888,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 9708,
											"end": 9888,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9756,
											"end": 9833,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9753,
											"end": 9754,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9746,
											"end": 9834,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9853,
											"end": 9857,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 9850,
											"end": 9851,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9843,
											"end": 9858,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9877,
											"end": 9881,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 9874,
											"end": 9875,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9867,
											"end": 9882,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9894,
											"end": 10088,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 9894,
											"end": 10088,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9934,
											"end": 9938,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9954,
											"end": 9974,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 9972,
											"end": 9973,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9954,
											"end": 9974,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 9954,
											"end": 9974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9954,
											"end": 9974,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 9954,
											"end": 9974,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 9974,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 9974,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9988,
											"end": 10008,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 10006,
											"end": 10007,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9988,
											"end": 10008,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 9988,
											"end": 10008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9988,
											"end": 10008,
											"name": "tag",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 9988,
											"end": 10008,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9983,
											"end": 10008,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9983,
											"end": 10008,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10032,
											"end": 10033,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10029,
											"end": 10030,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10025,
											"end": 10034,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10017,
											"end": 10034,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10017,
											"end": 10034,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10056,
											"end": 10057,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10050,
											"end": 10054,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10047,
											"end": 10058,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 10044,
											"end": 10081,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10044,
											"end": 10081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 10044,
											"end": 10081,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10079,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 10061,
											"end": 10079,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 10061,
											"end": 10079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10079,
											"name": "tag",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 10061,
											"end": 10079,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10044,
											"end": 10081,
											"name": "tag",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 10044,
											"end": 10081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9894,
											"end": 10088,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9894,
											"end": 10088,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9894,
											"end": 10088,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9894,
											"end": 10088,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9894,
											"end": 10088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10094,
											"end": 10504,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 10094,
											"end": 10504,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10134,
											"end": 10141,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10157,
											"end": 10177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 10175,
											"end": 10176,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10157,
											"end": 10177,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 10157,
											"end": 10177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10157,
											"end": 10177,
											"name": "tag",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 10157,
											"end": 10177,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10152,
											"end": 10177,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10152,
											"end": 10177,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10191,
											"end": 10211,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 10209,
											"end": 10210,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10191,
											"end": 10211,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 10191,
											"end": 10211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10191,
											"end": 10211,
											"name": "tag",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 10191,
											"end": 10211,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10186,
											"end": 10211,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10186,
											"end": 10211,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10246,
											"end": 10247,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10243,
											"end": 10244,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10239,
											"end": 10248,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 10268,
											"end": 10298,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 10286,
											"end": 10297,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10268,
											"end": 10298,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 10268,
											"end": 10298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10268,
											"end": 10298,
											"name": "tag",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 10268,
											"end": 10298,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10257,
											"end": 10298,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10257,
											"end": 10298,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 10448,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10438,
											"end": 10445,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10434,
											"end": 10449,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 10431,
											"end": 10432,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10428,
											"end": 10450,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 10408,
											"end": 10409,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10401,
											"end": 10410,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10381,
											"end": 10464,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 10358,
											"end": 10497,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 10358,
											"end": 10497,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10477,
											"end": 10495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 10477,
											"end": 10495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 10477,
											"end": 10495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10477,
											"end": 10495,
											"name": "tag",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 10477,
											"end": 10495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10358,
											"end": 10497,
											"name": "tag",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 10358,
											"end": 10497,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10142,
											"end": 10504,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10094,
											"end": 10504,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10094,
											"end": 10504,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10094,
											"end": 10504,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10094,
											"end": 10504,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10094,
											"end": 10504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10510,
											"end": 10690,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 10510,
											"end": 10690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10558,
											"end": 10635,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10555,
											"end": 10556,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10548,
											"end": 10636,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10655,
											"end": 10659,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 10652,
											"end": 10653,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10645,
											"end": 10660,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10679,
											"end": 10683,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 10676,
											"end": 10677,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10669,
											"end": 10684,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10696,
											"end": 10881,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 10696,
											"end": 10881,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10736,
											"end": 10737,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10753,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 10771,
											"end": 10772,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10753,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 10753,
											"end": 10773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10753,
											"end": 10773,
											"name": "tag",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 10753,
											"end": 10773,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10748,
											"end": 10773,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10748,
											"end": 10773,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10787,
											"end": 10807,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 10805,
											"end": 10806,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10787,
											"end": 10807,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 10787,
											"end": 10807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10787,
											"end": 10807,
											"name": "tag",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 10787,
											"end": 10807,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10782,
											"end": 10807,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10782,
											"end": 10807,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10826,
											"end": 10827,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10816,
											"end": 10851,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 10816,
											"end": 10851,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10831,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 10831,
											"end": 10849,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 10831,
											"end": 10849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10831,
											"end": 10849,
											"name": "tag",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 10831,
											"end": 10849,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10816,
											"end": 10851,
											"name": "tag",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 10816,
											"end": 10851,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10873,
											"end": 10874,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10870,
											"end": 10871,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10866,
											"end": 10875,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 10861,
											"end": 10875,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10861,
											"end": 10875,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10696,
											"end": 10881,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10696,
											"end": 10881,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10696,
											"end": 10881,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10696,
											"end": 10881,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10696,
											"end": 10881,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"D/depeg.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"isDepegged()": "5a0332a4",
							"lastPrice()": "053f14da",
							"owner()": "8da5cb5b",
							"pegPrice()": "7542f23a",
							"priceAggregator()": "3078fff5",
							"renounceOwnership()": "715018a6",
							"reportPrice(uint256)": "c7f898f0",
							"thresholdBps()": "c1144b71",
							"transferOwnership(address)": "f2fde38b",
							"updateAggregator(address)": "9fe4ee47",
							"updatePegPrice(uint256)": "74de33e4",
							"updateThreshold(uint256)": "d7d7442f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pegPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_thresholdBps\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_priceAggregator\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAggregator\",\"type\":\"address\"}],\"name\":\"AggregatorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Depegged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPegPrice\",\"type\":\"uint256\"}],\"name\":\"PegPriceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reportedPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"depegged\",\"type\":\"bool\"}],\"name\":\"PriceReported\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Repegged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newThresholdBps\",\"type\":\"uint256\"}],\"name\":\"ThresholdUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"isDepegged\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pegPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceAggregator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"reportedPrice\",\"type\":\"uint256\"}],\"name\":\"reportPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"thresholdBps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAggregator\",\"type\":\"address\"}],\"name\":\"updateAggregator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPegPrice\",\"type\":\"uint256\"}],\"name\":\"updatePegPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newThresholdBps\",\"type\":\"uint256\"}],\"name\":\"updateThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_pegPrice\":\"The stablecoin\\u2019s ideal peg price (in scaled integer form).\",\"_priceAggregator\":\"The address authorized to update the price.\",\"_thresholdBps\":\"The basis-point deviation threshold (e.g., 500 for 5%).\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"reportPrice(uint256)\":{\"params\":{\"reportedPrice\":\"The stablecoin\\u2019s reported price (in scaled integer form).\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateAggregator(address)\":{\"params\":{\"newAggregator\":\"The new aggregator address.\"}},\"updatePegPrice(uint256)\":{\"params\":{\"newPegPrice\":\"The new peg price in scaled integer form.\"}},\"updateThreshold(uint256)\":{\"params\":{\"newThresholdBps\":\"The new threshold in basis points.\"}}},\"title\":\"DepegMonitor\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor sets the initial peg price, threshold, aggregator, and owner.\"},\"isDepegged()\":{\"notice\":\"Whether the stablecoin is currently considered depegged.\"},\"lastPrice()\":{\"notice\":\"The last reported price of the stablecoin (scaled integer, e.g., 1.05 USD = 105000000).\"},\"pegPrice()\":{\"notice\":\"The stablecoin\\u2019s ideal peg price in scaled integer form (e.g. 1.0 USD = 1e8).\"},\"priceAggregator()\":{\"notice\":\"Address authorized to update the stablecoin price (e.g., an oracle or aggregator).\"},\"reportPrice(uint256)\":{\"notice\":\"The aggregator reports the stablecoin\\u2019s current price. This function checks if the stablecoin is depegged based on the threshold from pegPrice.\"},\"thresholdBps()\":{\"notice\":\"Deviation threshold in basis points. For instance, 500 = 5%.\"},\"updateAggregator(address)\":{\"notice\":\"Updates the aggregator address allowed to report stablecoin prices. Only callable by the owner.\"},\"updatePegPrice(uint256)\":{\"notice\":\"Updates the stablecoin\\u2019s ideal peg price. Only callable by the owner. e.g., 1.00 USD = 1e8 if using 8 decimal scaling.\"},\"updateThreshold(uint256)\":{\"notice\":\"Updates the deviation threshold in basis points. Only callable by the owner. e.g., 500 means 5%.\"}},\"notice\":\"Monitors the price of a stablecoin and detects when it depegs (i.e., goes beyond a certain threshold from its peg price). The owner can dynamically update the peg price, threshold, and the authorized aggregator that reports prices.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"D/depeg.sol\":\"DepegMonitor\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"D/depeg.sol\":{\"keccak256\":\"0xc8f7d8bd2838520751e742c73f622c17ad63ae6576ac83c61bdd2ba2ba2467f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://026601634e808989ea3f90b695f51b2934d1f76b67ff07772bf54b4db62e7453\",\"dweb:/ipfs/QmWB1x8nWJP5BJP2HUrVSdfdJ7PdQxi1Rby5LtjM5UBbDa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "D/depeg.sol:DepegMonitor",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 158,
								"contract": "D/depeg.sol:DepegMonitor",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 254,
								"contract": "D/depeg.sol:DepegMonitor",
								"label": "pegPrice",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 257,
								"contract": "D/depeg.sol:DepegMonitor",
								"label": "thresholdBps",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 260,
								"contract": "D/depeg.sol:DepegMonitor",
								"label": "lastPrice",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 263,
								"contract": "D/depeg.sol:DepegMonitor",
								"label": "priceAggregator",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 266,
								"contract": "D/depeg.sol:DepegMonitor",
								"label": "isDepegged",
								"offset": 20,
								"slot": "5",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"constructor": {
								"notice": "Constructor sets the initial peg price, threshold, aggregator, and owner."
							},
							"isDepegged()": {
								"notice": "Whether the stablecoin is currently considered depegged."
							},
							"lastPrice()": {
								"notice": "The last reported price of the stablecoin (scaled integer, e.g., 1.05 USD = 105000000)."
							},
							"pegPrice()": {
								"notice": "The stablecoin’s ideal peg price in scaled integer form (e.g. 1.0 USD = 1e8)."
							},
							"priceAggregator()": {
								"notice": "Address authorized to update the stablecoin price (e.g., an oracle or aggregator)."
							},
							"reportPrice(uint256)": {
								"notice": "The aggregator reports the stablecoin’s current price. This function checks if the stablecoin is depegged based on the threshold from pegPrice."
							},
							"thresholdBps()": {
								"notice": "Deviation threshold in basis points. For instance, 500 = 5%."
							},
							"updateAggregator(address)": {
								"notice": "Updates the aggregator address allowed to report stablecoin prices. Only callable by the owner."
							},
							"updatePegPrice(uint256)": {
								"notice": "Updates the stablecoin’s ideal peg price. Only callable by the owner. e.g., 1.00 USD = 1e8 if using 8 decimal scaling."
							},
							"updateThreshold(uint256)": {
								"notice": "Updates the deviation threshold in basis points. Only callable by the owner. e.g., 500 means 5%."
							}
						},
						"notice": "Monitors the price of a stablecoin and detects when it depegs (i.e., goes beyond a certain threshold from its peg price). The owner can dynamically update the peg price, threshold, and the authorized aggregator that reports prices.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							242
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 243,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 242,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 242,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								242
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 224,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							212
						]
					},
					"id": 213,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 212,
							"linearizedBaseContracts": [
								212
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 153,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1676:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 151,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 152,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 156,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1723:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 154,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 155,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 158,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1767:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 157,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "1811:39:1",
										"statements": [
											{
												"expression": {
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 161,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "1821:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 162,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "1831:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:1"
											}
										]
									},
									"id": 166,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:1"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:1"
									},
									"scope": 212,
									"src": "1797:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "2251:79:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 169,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2261:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:1"
											},
											{
												"id": 172,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "2303:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:1"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 177,
									"name": "nonReentrant",
									"nameLocation": "2236:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:1"
									},
									"src": "2227:103:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "2375:248:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 181,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "2468:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 182,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "2479:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:1"
											},
											{
												"expression": {
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 187,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2598:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 188,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "2608:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:1"
											}
										]
									},
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:1"
									},
									"scope": 212,
									"src": "2336:287:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "2667:171:1",
										"statements": [
											{
												"expression": {
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 195,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2809:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 196,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "2819:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:1"
											}
										]
									},
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:1"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:1"
									},
									"scope": 212,
									"src": "2629:209:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "3081:43:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 206,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "3098:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 207,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "3109:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 205,
												"id": 209,
												"nodeType": "Return",
												"src": "3091:26:1"
											}
										]
									},
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:1",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "3075:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:1"
									},
									"scope": 212,
									"src": "3017:107:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 213,
							"src": "888:2238:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							242
						]
					},
					"id": 243,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 214,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 215,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 242,
							"linearizedBaseContracts": [
								242
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 220,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 219,
												"id": 222,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 242,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 232,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 229,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 228,
												"id": 231,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 226,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 242,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 240,
										"nodeType": "Block",
										"src": "935:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 237,
												"id": 239,
												"nodeType": "Return",
												"src": "945:8:2"
											}
										]
									},
									"id": 241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:2"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:2"
									},
									"scope": 242,
									"src": "863:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 243,
							"src": "624:338:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:2"
				},
				"id": 2
			},
			"D/depeg.sol": {
				"ast": {
					"absolutePath": "D/depeg.sol",
					"exportedSymbols": {
						"Context": [
							242
						],
						"DepegMonitor": [
							534
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							212
						]
					},
					"id": 535,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 244,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 245,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 535,
							"sourceUnit": 148,
							"src": "58:52:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 246,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 535,
							"sourceUnit": 213,
							"src": "111:62:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 248,
										"name": "Ownable",
										"nameLocations": [
											"472:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "472:7:3"
									},
									"id": 249,
									"nodeType": "InheritanceSpecifier",
									"src": "472:7:3"
								},
								{
									"baseName": {
										"id": 250,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"481:15:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 212,
										"src": "481:15:3"
									},
									"id": 251,
									"nodeType": "InheritanceSpecifier",
									"src": "481:15:3"
								}
							],
							"canonicalName": "DepegMonitor",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 247,
								"nodeType": "StructuredDocumentation",
								"src": "175:272:3",
								"text": "@title DepegMonitor\n @notice Monitors the price of a stablecoin and detects when it depegs (i.e., goes beyond a certain threshold from its peg price).\n The owner can dynamically update the peg price, threshold, and the authorized aggregator that reports prices."
							},
							"fullyImplemented": true,
							"id": 534,
							"linearizedBaseContracts": [
								534,
								212,
								147,
								242
							],
							"name": "DepegMonitor",
							"nameLocation": "456:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "503:91:3",
										"text": "@notice The stablecoin’s ideal peg price in scaled integer form (e.g. 1.0 USD = 1e8)."
									},
									"functionSelector": "7542f23a",
									"id": 254,
									"mutability": "mutable",
									"name": "pegPrice",
									"nameLocation": "614:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 534,
									"src": "599:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 253,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "599:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "628:72:3",
										"text": "@notice Deviation threshold in basis points. For instance, 500 = 5%."
									},
									"functionSelector": "c1144b71",
									"id": 257,
									"mutability": "mutable",
									"name": "thresholdBps",
									"nameLocation": "720:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 534,
									"src": "705:27:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 256,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "705:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "738:99:3",
										"text": "@notice The last reported price of the stablecoin (scaled integer, e.g., 1.05 USD = 105000000)."
									},
									"functionSelector": "053f14da",
									"id": 260,
									"mutability": "mutable",
									"name": "lastPrice",
									"nameLocation": "857:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 534,
									"src": "842:24:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 259,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "842:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 261,
										"nodeType": "StructuredDocumentation",
										"src": "872:94:3",
										"text": "@notice Address authorized to update the stablecoin price (e.g., an oracle or aggregator)."
									},
									"functionSelector": "3078fff5",
									"id": 263,
									"mutability": "mutable",
									"name": "priceAggregator",
									"nameLocation": "986:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 534,
									"src": "971:30:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 262,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "971:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 264,
										"nodeType": "StructuredDocumentation",
										"src": "1007:68:3",
										"text": "@notice Whether the stablecoin is currently considered depegged."
									},
									"functionSelector": "5a0332a4",
									"id": 266,
									"mutability": "mutable",
									"name": "isDepegged",
									"nameLocation": "1092:10:3",
									"nodeType": "VariableDeclaration",
									"scope": 534,
									"src": "1080:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 265,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1080:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "602cec4b1583b07d071161da5eb9589444d2459201e2fab7753dc941e9351c21",
									"id": 270,
									"name": "AggregatorUpdated",
									"nameLocation": "1137:17:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAggregator",
												"nameLocation": "1171:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "1155:29:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1155:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1154:31:3"
									},
									"src": "1131:55:3"
								},
								{
									"anonymous": false,
									"eventSelector": "adfa8ecb21b6962ebcd0adbd9ab985b7b4c5b5eb3b0dead683171565c7bfe171",
									"id": 274,
									"name": "ThresholdUpdated",
									"nameLocation": "1197:16:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"indexed": false,
												"mutability": "mutable",
												"name": "newThresholdBps",
												"nameLocation": "1222:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "1214:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1214:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1213:25:3"
									},
									"src": "1191:48:3"
								},
								{
									"anonymous": false,
									"eventSelector": "8b4412706cf218351f2b2670d751d9981e4b3e3490911aba339f1dac35103d0b",
									"id": 278,
									"name": "PegPriceUpdated",
									"nameLocation": "1250:15:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"indexed": false,
												"mutability": "mutable",
												"name": "newPegPrice",
												"nameLocation": "1274:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "1266:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1266:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:21:3"
									},
									"src": "1244:43:3"
								},
								{
									"anonymous": false,
									"eventSelector": "8322c40cc8fa3bd54ec84110a078e65c783d8d79ad96adf1b07cd59ed10c2dc2",
									"id": 284,
									"name": "PriceReported",
									"nameLocation": "1298:13:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"indexed": false,
												"mutability": "mutable",
												"name": "reportedPrice",
												"nameLocation": "1320:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "1312:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1312:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"indexed": false,
												"mutability": "mutable",
												"name": "depegged",
												"nameLocation": "1340:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "1335:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 281,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1335:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1311:38:3"
									},
									"src": "1292:58:3"
								},
								{
									"anonymous": false,
									"eventSelector": "43a30a8a621ae0bf221b02b806c2a80d658e4886e1d85e72427b7466c0cd4197",
									"id": 290,
									"name": "Depegged",
									"nameLocation": "1361:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1378:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "1370:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1370:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1397:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "1389:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1389:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1369:34:3"
									},
									"src": "1355:49:3"
								},
								{
									"anonymous": false,
									"eventSelector": "eedd16500c1f2c39ebb8b74fd12984f1e07626acdb1434293dd2707e32ea6eb9",
									"id": 296,
									"name": "Repegged",
									"nameLocation": "1415:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1432:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "1424:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1451:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "1443:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1443:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1423:34:3"
									},
									"src": "1409:49:3"
								},
								{
									"body": {
										"id": 350,
										"nodeType": "Block",
										"src": "1913:356:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 311,
																"name": "_pegPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 299,
																"src": "1931:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 312,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1943:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1931:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506567207072696365206d757374206265203e2030",
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1946:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_12dd0bd5b0fe6bd694aad6aa9c1622ed7fb13899080df8a821a6515487e07564",
																"typeString": "literal_string \"Peg price must be > 0\""
															},
															"value": "Peg price must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_12dd0bd5b0fe6bd694aad6aa9c1622ed7fb13899080df8a821a6515487e07564",
																"typeString": "literal_string \"Peg price must be > 0\""
															}
														],
														"id": 310,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1923:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1923:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 316,
												"nodeType": "ExpressionStatement",
												"src": "1923:47:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 318,
																"name": "_thresholdBps",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "1988:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "32303030",
																"id": 319,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2005:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2000_by_1",
																	"typeString": "int_const 2000"
																},
																"value": "2000"
															},
															"src": "1988:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468726573686f6c6420746f6f206869676820286d61782032302529",
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2011:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a538d00ccaeee824696a630bd8955dad3f6250a448b63391385ebbab0030f6db",
																"typeString": "literal_string \"Threshold too high (max 20%)\""
															},
															"value": "Threshold too high (max 20%)"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a538d00ccaeee824696a630bd8955dad3f6250a448b63391385ebbab0030f6db",
																"typeString": "literal_string \"Threshold too high (max 20%)\""
															}
														],
														"id": 317,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1980:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1980:62:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "1980:62:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 325,
																"name": "_priceAggregator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 303,
																"src": "2060:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2088:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 327,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2080:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 326,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2080:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 329,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2080:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2060:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642061676772656761746f722061646472657373",
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2092:28:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fa814051730ebeb9b66b18fa0637007e08f69a4bf0ce03e54dbb251d25cd23d5",
																"typeString": "literal_string \"Invalid aggregator address\""
															},
															"value": "Invalid aggregator address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fa814051730ebeb9b66b18fa0637007e08f69a4bf0ce03e54dbb251d25cd23d5",
																"typeString": "literal_string \"Invalid aggregator address\""
															}
														],
														"id": 324,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2052:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2052:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "2052:69:3"
											},
											{
												"expression": {
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 334,
														"name": "pegPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "2132:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 335,
														"name": "_pegPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 299,
														"src": "2143:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2132:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 337,
												"nodeType": "ExpressionStatement",
												"src": "2132:20:3"
											},
											{
												"expression": {
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 338,
														"name": "thresholdBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "2162:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 339,
														"name": "_thresholdBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "2177:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2162:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 341,
												"nodeType": "ExpressionStatement",
												"src": "2162:28:3"
											},
											{
												"expression": {
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 342,
														"name": "priceAggregator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 263,
														"src": "2200:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 343,
														"name": "_priceAggregator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "2218:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2200:34:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 345,
												"nodeType": "ExpressionStatement",
												"src": "2200:34:3"
											},
											{
												"expression": {
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 346,
														"name": "isDepegged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "2244:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 347,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2257:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2244:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 349,
												"nodeType": "ExpressionStatement",
												"src": "2244:18:3"
											}
										]
									},
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "1464:332:3",
										"text": "@notice Constructor sets the initial peg price, threshold, aggregator, and owner.\n @param _pegPrice The stablecoin’s ideal peg price (in scaled integer form).\n @param _thresholdBps The basis-point deviation threshold (e.g., 500 for 5%).\n @param _priceAggregator The address authorized to update the price."
									},
									"id": 351,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 306,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1897:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1901:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1897:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 308,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 305,
												"name": "Ownable",
												"nameLocations": [
													"1889:7:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1889:7:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1889:19:3"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "_pegPrice",
												"nameLocation": "1821:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "1813:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "_thresholdBps",
												"nameLocation": "1840:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "1832:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1832:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "_priceAggregator",
												"nameLocation": "1863:16:3",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "1855:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1855:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1812:68:3"
									},
									"returnParameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1913:0:3"
									},
									"scope": 534,
									"src": "1801:468:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 377,
										"nodeType": "Block",
										"src": "2520:171:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 360,
																"name": "newAggregator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 354,
																"src": "2538:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 363,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2563:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2555:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 361,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2555:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 364,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2555:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2538:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642061676772656761746f722061646472657373",
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2567:28:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fa814051730ebeb9b66b18fa0637007e08f69a4bf0ce03e54dbb251d25cd23d5",
																"typeString": "literal_string \"Invalid aggregator address\""
															},
															"value": "Invalid aggregator address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fa814051730ebeb9b66b18fa0637007e08f69a4bf0ce03e54dbb251d25cd23d5",
																"typeString": "literal_string \"Invalid aggregator address\""
															}
														],
														"id": 359,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2530:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2530:66:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "2530:66:3"
											},
											{
												"expression": {
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 369,
														"name": "priceAggregator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 263,
														"src": "2606:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 370,
														"name": "newAggregator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 354,
														"src": "2624:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2606:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "2606:31:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 374,
															"name": "newAggregator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 354,
															"src": "2670:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 373,
														"name": "AggregatorUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 270,
														"src": "2652:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2652:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 376,
												"nodeType": "EmitStatement",
												"src": "2647:37:3"
											}
										]
									},
									"documentation": {
										"id": 352,
										"nodeType": "StructuredDocumentation",
										"src": "2275:172:3",
										"text": "@notice Updates the aggregator address allowed to report stablecoin prices.\n Only callable by the owner.\n @param newAggregator The new aggregator address."
									},
									"functionSelector": "9fe4ee47",
									"id": 378,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 357,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 356,
												"name": "onlyOwner",
												"nameLocations": [
													"2510:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2510:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2510:9:3"
										}
									],
									"name": "updateAggregator",
									"nameLocation": "2461:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "newAggregator",
												"nameLocation": "2486:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "2478:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2478:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2477:23:3"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2520:0:3"
									},
									"scope": 534,
									"src": "2452:239:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "2953:169:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 387,
																"name": "newThresholdBps",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "2971:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "32303030",
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2990:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2000_by_1",
																	"typeString": "int_const 2000"
																},
																"value": "2000"
															},
															"src": "2971:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468726573686f6c6420746f6f206869676820286d61782032302529",
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2996:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a538d00ccaeee824696a630bd8955dad3f6250a448b63391385ebbab0030f6db",
																"typeString": "literal_string \"Threshold too high (max 20%)\""
															},
															"value": "Threshold too high (max 20%)"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a538d00ccaeee824696a630bd8955dad3f6250a448b63391385ebbab0030f6db",
																"typeString": "literal_string \"Threshold too high (max 20%)\""
															}
														],
														"id": 386,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2963:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2963:64:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "ExpressionStatement",
												"src": "2963:64:3"
											},
											{
												"expression": {
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 393,
														"name": "thresholdBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "3037:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 394,
														"name": "newThresholdBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3052:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3037:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 396,
												"nodeType": "ExpressionStatement",
												"src": "3037:30:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 398,
															"name": "newThresholdBps",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "3099:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 397,
														"name": "ThresholdUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 274,
														"src": "3082:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3082:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 400,
												"nodeType": "EmitStatement",
												"src": "3077:38:3"
											}
										]
									},
									"documentation": {
										"id": 379,
										"nodeType": "StructuredDocumentation",
										"src": "2697:182:3",
										"text": "@notice Updates the deviation threshold in basis points. Only callable by the owner.\n e.g., 500 means 5%.\n @param newThresholdBps The new threshold in basis points."
									},
									"functionSelector": "d7d7442f",
									"id": 402,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 384,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 383,
												"name": "onlyOwner",
												"nameLocations": [
													"2943:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2943:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2943:9:3"
										}
									],
									"name": "updateThreshold",
									"nameLocation": "2893:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "newThresholdBps",
												"nameLocation": "2917:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "2909:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2909:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2908:25:3"
									},
									"returnParameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2953:0:3"
									},
									"scope": 534,
									"src": "2884:238:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3406:141:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 411,
																"name": "newPegPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 405,
																"src": "3424:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3438:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3424:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506567207072696365206d757374206265203e2030",
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3441:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_12dd0bd5b0fe6bd694aad6aa9c1622ed7fb13899080df8a821a6515487e07564",
																"typeString": "literal_string \"Peg price must be > 0\""
															},
															"value": "Peg price must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_12dd0bd5b0fe6bd694aad6aa9c1622ed7fb13899080df8a821a6515487e07564",
																"typeString": "literal_string \"Peg price must be > 0\""
															}
														],
														"id": 410,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3416:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:49:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "3416:49:3"
											},
											{
												"expression": {
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 417,
														"name": "pegPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "3475:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 418,
														"name": "newPegPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "3486:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3475:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "3475:22:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 422,
															"name": "newPegPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "3528:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 421,
														"name": "PegPriceUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "3512:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3512:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 424,
												"nodeType": "EmitStatement",
												"src": "3507:33:3"
											}
										]
									},
									"documentation": {
										"id": 403,
										"nodeType": "StructuredDocumentation",
										"src": "3128:209:3",
										"text": "@notice Updates the stablecoin’s ideal peg price. Only callable by the owner.\n e.g., 1.00 USD = 1e8 if using 8 decimal scaling.\n @param newPegPrice The new peg price in scaled integer form."
									},
									"functionSelector": "74de33e4",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 408,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 407,
												"name": "onlyOwner",
												"nameLocations": [
													"3396:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3396:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "3396:9:3"
										}
									],
									"name": "updatePegPrice",
									"nameLocation": "3351:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "newPegPrice",
												"nameLocation": "3374:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3366:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3366:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3365:21:3"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3406:0:3"
									},
									"scope": 534,
									"src": "3342:205:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 496,
										"nodeType": "Block",
										"src": "3878:701:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 435,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3896:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3900:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3896:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 437,
																"name": "priceAggregator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 263,
																"src": "3910:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3896:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420617574686f72697a65642061676772656761746f72",
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3927:27:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1da32b1727104c1bb72198bdeb5aa3d36a7210eafdc67d4728eca087384bd815",
																"typeString": "literal_string \"Not authorized aggregator\""
															},
															"value": "Not authorized aggregator"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1da32b1727104c1bb72198bdeb5aa3d36a7210eafdc67d4728eca087384bd815",
																"typeString": "literal_string \"Not authorized aggregator\""
															}
														],
														"id": 434,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3888:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3888:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "3888:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 443,
																"name": "reportedPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 429,
																"src": "3973:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 444,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3989:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3973:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207265706f72746564207072696365",
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3992:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b079fc7e3ef0cb6e47ccaa10b025eceb7b35370f00a1a7796a9d619400121ece",
																"typeString": "literal_string \"Invalid reported price\""
															},
															"value": "Invalid reported price"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b079fc7e3ef0cb6e47ccaa10b025eceb7b35370f00a1a7796a9d619400121ece",
																"typeString": "literal_string \"Invalid reported price\""
															}
														],
														"id": 442,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3965:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3965:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 448,
												"nodeType": "ExpressionStatement",
												"src": "3965:52:3"
											},
											{
												"expression": {
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 449,
														"name": "lastPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 260,
														"src": "4028:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 450,
														"name": "reportedPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "4040:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4028:25:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 452,
												"nodeType": "ExpressionStatement",
												"src": "4028:25:3"
											},
											{
												"assignments": [
													454
												],
												"declarations": [
													{
														"constant": false,
														"id": 454,
														"mutability": "mutable",
														"name": "currentlyDepegged",
														"nameLocation": "4068:17:3",
														"nodeType": "VariableDeclaration",
														"scope": 496,
														"src": "4063:22:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 453,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4063:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 458,
												"initialValue": {
													"arguments": [
														{
															"id": 456,
															"name": "reportedPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4100:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 455,
														"name": "_checkDepeg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "4088:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (uint256) view returns (bool)"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4088:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4063:51:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 460,
															"name": "reportedPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4144:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 461,
															"name": "currentlyDepegged",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "4159:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 459,
														"name": "PriceReported",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "4130:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,bool)"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4130:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 463,
												"nodeType": "EmitStatement",
												"src": "4125:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 464,
														"name": "currentlyDepegged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "4192:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 466,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4213:11:3",
														"subExpression": {
															"id": 465,
															"name": "isDepegged",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "4214:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4192:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 482,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4387:18:3",
															"subExpression": {
																"id": 479,
																"name": "currentlyDepegged",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 454,
																"src": "4388:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"id": 481,
															"name": "isDepegged",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "4409:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "4387:32:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 494,
													"nodeType": "IfStatement",
													"src": "4383:190:3",
													"trueBody": {
														"id": 493,
														"nodeType": "Block",
														"src": "4421:152:3",
														"statements": [
															{
																"expression": {
																	"id": 485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 483,
																		"name": "isDepegged",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 266,
																		"src": "4485:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "66616c7365",
																		"id": 484,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4498:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	"src": "4485:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 486,
																"nodeType": "ExpressionStatement",
																"src": "4485:18:3"
															},
															{
																"eventCall": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 488,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "4531:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 489,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4537:9:3",
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "4531:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 490,
																			"name": "reportedPrice",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 429,
																			"src": "4548:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 487,
																		"name": "Repegged",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 296,
																		"src": "4522:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																			"typeString": "function (uint256,uint256)"
																		}
																	},
																	"id": 491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4522:40:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 492,
																"nodeType": "EmitStatement",
																"src": "4517:45:3"
															}
														]
													}
												},
												"id": 495,
												"nodeType": "IfStatement",
												"src": "4188:385:3",
												"trueBody": {
													"id": 478,
													"nodeType": "Block",
													"src": "4226:151:3",
													"statements": [
														{
															"expression": {
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 468,
																	"name": "isDepegged",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "4290:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4303:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "4290:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 471,
															"nodeType": "ExpressionStatement",
															"src": "4290:17:3"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 473,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "4335:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4341:9:3",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "4335:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 475,
																		"name": "reportedPrice",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 429,
																		"src": "4352:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 472,
																	"name": "Depegged",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 290,
																	"src": "4326:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256)"
																	}
																},
																"id": 476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4326:40:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 477,
															"nodeType": "EmitStatement",
															"src": "4321:45:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3553:254:3",
										"text": "@notice The aggregator reports the stablecoin’s current price.\n This function checks if the stablecoin is depegged based on the threshold from pegPrice.\n @param reportedPrice The stablecoin’s reported price (in scaled integer form)."
									},
									"functionSelector": "c7f898f0",
									"id": 497,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 432,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 431,
												"name": "nonReentrant",
												"nameLocations": [
													"3865:12:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 177,
												"src": "3865:12:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "3865:12:3"
										}
									],
									"name": "reportPrice",
									"nameLocation": "3821:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "reportedPrice",
												"nameLocation": "3841:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "3833:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3833:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3832:23:3"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3878:0:3"
									},
									"scope": 534,
									"src": "3812:767:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 532,
										"nodeType": "Block",
										"src": "4891:351:3",
										"statements": [
											{
												"assignments": [
													506
												],
												"declarations": [
													{
														"constant": false,
														"id": 506,
														"mutability": "mutable",
														"name": "diff",
														"nameLocation": "4964:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 532,
														"src": "4956:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 505,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4956:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 518,
												"initialValue": {
													"condition": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 509,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 507,
																	"name": "price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 500,
																	"src": "4972:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 508,
																	"name": "pegPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "4980:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4972:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 510,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4971:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 516,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 514,
															"name": "pegPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "5011:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 515,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 500,
															"src": "5022:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5011:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4971:56:3",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 513,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 511,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 500,
															"src": "4992:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 512,
															"name": "pegPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "5000:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4992:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4956:71:3"
											},
											{
												"assignments": [
													520
												],
												"declarations": [
													{
														"constant": false,
														"id": 520,
														"mutability": "mutable",
														"name": "diffBps",
														"nameLocation": "5161:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 532,
														"src": "5153:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 519,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5153:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 527,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 521,
																	"name": "diff",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 506,
																	"src": "5172:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3130303030",
																	"id": 522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5179:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "10000"
																},
																"src": "5172:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 524,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5171:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 525,
														"name": "pegPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "5188:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5171:25:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5153:43:3"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 528,
														"name": "diffBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 520,
														"src": "5213:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 529,
														"name": "thresholdBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "5223:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5213:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 504,
												"id": 531,
												"nodeType": "Return",
												"src": "5206:29:3"
											}
										]
									},
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "4585:236:3",
										"text": "@notice Internal helper that checks if the stablecoin’s current price has depegged.\n @param price The stablecoin’s reported price.\n @return True if the price is outside the threshold from pegPrice, false otherwise."
									},
									"id": 533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkDepeg",
									"nameLocation": "4835:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "4855:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "4847:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4847:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4846:15:3"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "4885:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 502,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4885:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4884:6:3"
									},
									"scope": 534,
									"src": "4826:416:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 535,
							"src": "447:4797:3",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								270,
								274,
								278,
								284,
								290,
								296
							]
						}
					],
					"src": "32:5213:3"
				},
				"id": 3
			}
		}
	}
}