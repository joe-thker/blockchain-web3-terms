{
	"id": "a57ad22e95a837aa20029f4bd678fd2c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"sources": {
			"D/decentralizedStableCoin.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\n/// @title DecentralizedStableCoin\n/// @notice A dynamic, optimized, and secure ERC20 stable coin contract.\n/// Minting and burning are restricted to the owner or authorized minters.\n/// The owner can also update the maximum supply dynamically.\ncontract DecentralizedStableCoin is ERC20, Ownable, ReentrancyGuard {\n    // Mapping to track addresses authorized to mint and burn tokens.\n    mapping(address => bool) public authorizedMinters;\n\n    // Maximum supply of tokens.\n    uint256 public maxSupply;\n\n    // Events\n    event MinterAuthorized(address indexed account);\n    event MinterRevoked(address indexed account);\n    event MaxSupplyUpdated(uint256 newMaxSupply);\n\n    /// @notice Constructor initializes the stable coin with a name, symbol, initial supply, and maximum supply.\n    /// @param name_ The name of the token.\n    /// @param symbol_ The symbol of the token.\n    /// @param initialSupply The initial token supply (in smallest units).\n    /// @param _maxSupply The maximum token supply (must be at least initialSupply).\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        uint256 initialSupply,\n        uint256 _maxSupply\n    ) ERC20(name_, symbol_) Ownable(msg.sender) {\n        require(_maxSupply >= initialSupply, \"Max supply must be >= initial supply\");\n        maxSupply = _maxSupply;\n        _mint(msg.sender, initialSupply);\n    }\n\n    /// @notice Authorizes an account to mint and burn tokens.\n    /// @param account The address to authorize.\n    function authorizeMinter(address account) external onlyOwner {\n        require(account != address(0), \"Invalid address\");\n        authorizedMinters[account] = true;\n        emit MinterAuthorized(account);\n    }\n\n    /// @notice Revokes minting/burning authorization for an account.\n    /// @param account The address to revoke.\n    function revokeMinter(address account) external onlyOwner {\n        require(authorizedMinters[account], \"Address not authorized\");\n        authorizedMinters[account] = false;\n        emit MinterRevoked(account);\n    }\n\n    /// @notice Mints new stable coins to a specified address.\n    /// Only the owner or an authorized minter can mint tokens.\n    /// @param to The recipient address.\n    /// @param amount The token amount to mint (in smallest units).\n    function mint(address to, uint256 amount) external nonReentrant {\n        require(authorizedMinters[msg.sender] || msg.sender == owner(), \"Not authorized to mint\");\n        require(totalSupply() + amount <= maxSupply, \"Exceeds max supply\");\n        _mint(to, amount);\n    }\n\n    /// @notice Burns stable coins from a specified address.\n    /// Only the owner or an authorized minter can burn tokens.\n    /// @param from The address from which tokens will be burned.\n    /// @param amount The token amount to burn (in smallest units).\n    function burn(address from, uint256 amount) external nonReentrant {\n        require(authorizedMinters[msg.sender] || msg.sender == owner(), \"Not authorized to burn\");\n        _burn(from, amount);\n    }\n\n    /// @notice Updates the maximum supply of tokens.\n    /// @param newMaxSupply The new maximum supply (must be >= current total supply).\n    function updateMaxSupply(uint256 newMaxSupply) external onlyOwner {\n        require(newMaxSupply >= totalSupply(), \"New max supply less than total supply\");\n        maxSupply = newMaxSupply;\n        emit MaxSupplyUpdated(newMaxSupply);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 295,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 372,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 378,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 380,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 382,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 384,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"D/decentralizedStableCoin.sol": {
				"DecentralizedStableCoin": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_maxSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newMaxSupply",
									"type": "uint256"
								}
							],
							"name": "MaxSupplyUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "MinterAuthorized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "MinterRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "authorizeMinter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "authorizedMinters",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeMinter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newMaxSupply",
									"type": "uint256"
								}
							],
							"name": "updateMaxSupply",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"authorizeMinter(address)": {
								"params": {
									"account": "The address to authorize."
								}
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(address,uint256)": {
								"params": {
									"amount": "The token amount to burn (in smallest units).",
									"from": "The address from which tokens will be burned."
								}
							},
							"constructor": {
								"params": {
									"_maxSupply": "The maximum token supply (must be at least initialSupply).",
									"initialSupply": "The initial token supply (in smallest units).",
									"name_": "The name of the token.",
									"symbol_": "The symbol of the token."
								}
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"mint(address,uint256)": {
								"params": {
									"amount": "The token amount to mint (in smallest units).",
									"to": "The recipient address."
								}
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"revokeMinter(address)": {
								"params": {
									"account": "The address to revoke."
								}
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"updateMaxSupply(uint256)": {
								"params": {
									"newMaxSupply": "The new maximum supply (must be >= current total supply)."
								}
							}
						},
						"title": "DecentralizedStableCoin",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"D/decentralizedStableCoin.sol\":476:3656  contract DecentralizedStableCoin is ERC20, Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"D/decentralizedStableCoin.sol\":1273:1619  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"D/decentralizedStableCoin.sol\":1440:1450  msg.sender */\n  caller\n    /* \"D/decentralizedStableCoin.sol\":1416:1421  name_ */\n  dup5\n    /* \"D/decentralizedStableCoin.sol\":1423:1430  symbol_ */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_11\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_11:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_13\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_14\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_16\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_17)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x06\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"D/decentralizedStableCoin.sol\":1484:1497  initialSupply */\n  dup2\n    /* \"D/decentralizedStableCoin.sol\":1470:1480  _maxSupply */\n  dup2\n    /* \"D/decentralizedStableCoin.sol\":1470:1497  _maxSupply >= initialSupply */\n  lt\n  iszero\n    /* \"D/decentralizedStableCoin.sol\":1462:1538  require(_maxSupply >= initialSupply, \"Max supply must be >= initial supply\") */\n  tag_20\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_21\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_20:\n    /* \"D/decentralizedStableCoin.sol\":1560:1570  _maxSupply */\n  dup1\n    /* \"D/decentralizedStableCoin.sol\":1548:1557  maxSupply */\n  0x08\n    /* \"D/decentralizedStableCoin.sol\":1548:1570  maxSupply = _maxSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"D/decentralizedStableCoin.sol\":1580:1612  _mint(msg.sender, initialSupply) */\n  tag_23\n    /* \"D/decentralizedStableCoin.sol\":1586:1596  msg.sender */\n  caller\n    /* \"D/decentralizedStableCoin.sol\":1598:1611  initialSupply */\n  dup4\n    /* \"D/decentralizedStableCoin.sol\":1580:1585  _mint */\n  shl(0x20, tag_24)\n    /* \"D/decentralizedStableCoin.sol\":1580:1612  _mint(msg.sender, initialSupply) */\n  0x20\n  shr\n  jump\t// in\ntag_23:\n    /* \"D/decentralizedStableCoin.sol\":1273:1619  constructor(... */\n  pop\n  pop\n  pop\n  pop\n    /* \"D/decentralizedStableCoin.sol\":476:3656  contract DecentralizedStableCoin is ERC20, Ownable, ReentrancyGuard {... */\n  jump(tag_25)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_17:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\ntag_24:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_28\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_29\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_29:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_28:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  tag_30\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n  shl(0x20, tag_31)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_30:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_31:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_33\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_34\n  swap2\n  swap1\n  tag_35\n  jump\t// in\ntag_34:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  jump(tag_36)\ntag_33:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n  iszero\n  tag_37\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_38\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_39\n  jump\t// in\ntag_38:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\ntag_37:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\ntag_36:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  tag_40\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  jump(tag_41)\ntag_40:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\ntag_41:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  mload(0x40)\n  tag_42\n  swap2\n  swap1\n  tag_43\n  jump\t// in\ntag_42:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_44:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_45:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_46:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  0x00\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_47:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  0x00\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_48:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  0x00\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_49:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_50:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_51:\n    /* \"#utility.yul\":957:984   */\n  tag_95\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_49\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_97\n  tag_50\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":1030:1118   */\ntag_96:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_52:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_99\n  tag_44\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_100\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_51\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_53:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_102\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_103\n  tag_50\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":1434:1490   */\ntag_102:\n    /* \"#utility.yul\":1508:1537   */\n  tag_104\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_49\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1749   */\ntag_54:\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1694:1697   */\n  dup2\n    /* \"#utility.yul\":1689:1692   */\n  dup4\n    /* \"#utility.yul\":1683:1706   */\n  mcopy\n    /* \"#utility.yul\":1740:1741   */\n  0x00\n    /* \"#utility.yul\":1731:1737   */\n  dup4\n    /* \"#utility.yul\":1726:1729   */\n  dup4\n    /* \"#utility.yul\":1722:1738   */\n  add\n    /* \"#utility.yul\":1715:1742   */\n  mstore\n    /* \"#utility.yul\":1610:1749   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1755:2189   */\ntag_55:\n    /* \"#utility.yul\":1844:1849   */\n  0x00\n    /* \"#utility.yul\":1869:1935   */\n  tag_107\n    /* \"#utility.yul\":1885:1934   */\n  tag_108\n    /* \"#utility.yul\":1927:1933   */\n  dup5\n    /* \"#utility.yul\":1885:1934   */\n  tag_53\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":1869:1935   */\n  tag_52\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":1860:1935   */\n  swap1\n  pop\n    /* \"#utility.yul\":1958:1964   */\n  dup3\n    /* \"#utility.yul\":1951:1956   */\n  dup2\n    /* \"#utility.yul\":1944:1965   */\n  mstore\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":1989:1994   */\n  dup2\n    /* \"#utility.yul\":1985:2001   */\n  add\n    /* \"#utility.yul\":2034:2037   */\n  dup5\n    /* \"#utility.yul\":2025:2031   */\n  dup5\n    /* \"#utility.yul\":2020:2023   */\n  dup5\n    /* \"#utility.yul\":2016:2032   */\n  add\n    /* \"#utility.yul\":2013:2038   */\n  gt\n    /* \"#utility.yul\":2010:2122   */\n  iszero\n  tag_109\n  jumpi\n    /* \"#utility.yul\":2041:2120   */\n  tag_110\n  tag_48\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":2010:2122   */\ntag_109:\n    /* \"#utility.yul\":2131:2183   */\n  tag_111\n    /* \"#utility.yul\":2176:2182   */\n  dup5\n    /* \"#utility.yul\":2171:2174   */\n  dup3\n    /* \"#utility.yul\":2166:2169   */\n  dup6\n    /* \"#utility.yul\":2131:2183   */\n  tag_54\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":1850:2189   */\n  pop\n    /* \"#utility.yul\":1755:2189   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2209:2564   */\ntag_56:\n    /* \"#utility.yul\":2276:2281   */\n  0x00\n    /* \"#utility.yul\":2325:2328   */\n  dup3\n    /* \"#utility.yul\":2318:2322   */\n  0x1f\n    /* \"#utility.yul\":2310:2316   */\n  dup4\n    /* \"#utility.yul\":2306:2323   */\n  add\n    /* \"#utility.yul\":2302:2329   */\n  slt\n    /* \"#utility.yul\":2292:2414   */\n  tag_113\n  jumpi\n    /* \"#utility.yul\":2333:2412   */\n  tag_114\n  tag_47\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":2292:2414   */\ntag_113:\n    /* \"#utility.yul\":2443:2449   */\n  dup2\n    /* \"#utility.yul\":2437:2450   */\n  mload\n    /* \"#utility.yul\":2468:2558   */\n  tag_115\n    /* \"#utility.yul\":2554:2557   */\n  dup5\n    /* \"#utility.yul\":2546:2552   */\n  dup3\n    /* \"#utility.yul\":2539:2543   */\n  0x20\n    /* \"#utility.yul\":2531:2537   */\n  dup7\n    /* \"#utility.yul\":2527:2544   */\n  add\n    /* \"#utility.yul\":2468:2558   */\n  tag_55\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":2459:2558   */\n  swap2\n  pop\n    /* \"#utility.yul\":2282:2564   */\n  pop\n    /* \"#utility.yul\":2209:2564   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2570:2647   */\ntag_57:\n    /* \"#utility.yul\":2607:2614   */\n  0x00\n    /* \"#utility.yul\":2636:2641   */\n  dup2\n    /* \"#utility.yul\":2625:2641   */\n  swap1\n  pop\n    /* \"#utility.yul\":2570:2647   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2653:2775   */\ntag_58:\n    /* \"#utility.yul\":2726:2750   */\n  tag_118\n    /* \"#utility.yul\":2744:2749   */\n  dup2\n    /* \"#utility.yul\":2726:2750   */\n  tag_57\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":2719:2724   */\n  dup2\n    /* \"#utility.yul\":2716:2751   */\n  eq\n    /* \"#utility.yul\":2706:2769   */\n  tag_119\n  jumpi\n    /* \"#utility.yul\":2765:2766   */\n  0x00\n    /* \"#utility.yul\":2762:2763   */\n  0x00\n    /* \"#utility.yul\":2755:2767   */\n  revert\n    /* \"#utility.yul\":2706:2769   */\ntag_119:\n    /* \"#utility.yul\":2653:2775   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2781:2924   */\ntag_59:\n    /* \"#utility.yul\":2838:2843   */\n  0x00\n    /* \"#utility.yul\":2869:2875   */\n  dup2\n    /* \"#utility.yul\":2863:2876   */\n  mload\n    /* \"#utility.yul\":2854:2876   */\n  swap1\n  pop\n    /* \"#utility.yul\":2885:2918   */\n  tag_121\n    /* \"#utility.yul\":2912:2917   */\n  dup2\n    /* \"#utility.yul\":2885:2918   */\n  tag_58\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":2781:2924   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2930:4096   */\ntag_3:\n    /* \"#utility.yul\":3047:3053   */\n  0x00\n    /* \"#utility.yul\":3055:3061   */\n  0x00\n    /* \"#utility.yul\":3063:3069   */\n  0x00\n    /* \"#utility.yul\":3071:3077   */\n  0x00\n    /* \"#utility.yul\":3120:3123   */\n  0x80\n    /* \"#utility.yul\":3108:3117   */\n  dup6\n    /* \"#utility.yul\":3099:3106   */\n  dup8\n    /* \"#utility.yul\":3095:3118   */\n  sub\n    /* \"#utility.yul\":3091:3124   */\n  slt\n    /* \"#utility.yul\":3088:3208   */\n  iszero\n  tag_123\n  jumpi\n    /* \"#utility.yul\":3127:3206   */\n  tag_124\n  tag_45\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":3088:3208   */\ntag_123:\n    /* \"#utility.yul\":3268:3269   */\n  0x00\n    /* \"#utility.yul\":3257:3266   */\n  dup6\n    /* \"#utility.yul\":3253:3270   */\n  add\n    /* \"#utility.yul\":3247:3271   */\n  mload\n    /* \"#utility.yul\":3298:3316   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3290:3296   */\n  dup2\n    /* \"#utility.yul\":3287:3317   */\n  gt\n    /* \"#utility.yul\":3284:3401   */\n  iszero\n  tag_125\n  jumpi\n    /* \"#utility.yul\":3320:3399   */\n  tag_126\n  tag_46\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":3284:3401   */\ntag_125:\n    /* \"#utility.yul\":3425:3499   */\n  tag_127\n    /* \"#utility.yul\":3491:3498   */\n  dup8\n    /* \"#utility.yul\":3482:3488   */\n  dup3\n    /* \"#utility.yul\":3471:3480   */\n  dup9\n    /* \"#utility.yul\":3467:3489   */\n  add\n    /* \"#utility.yul\":3425:3499   */\n  tag_56\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":3415:3499   */\n  swap5\n  pop\n    /* \"#utility.yul\":3218:3509   */\n  pop\n    /* \"#utility.yul\":3569:3571   */\n  0x20\n    /* \"#utility.yul\":3558:3567   */\n  dup6\n    /* \"#utility.yul\":3554:3572   */\n  add\n    /* \"#utility.yul\":3548:3573   */\n  mload\n    /* \"#utility.yul\":3600:3618   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3592:3598   */\n  dup2\n    /* \"#utility.yul\":3589:3619   */\n  gt\n    /* \"#utility.yul\":3586:3703   */\n  iszero\n  tag_128\n  jumpi\n    /* \"#utility.yul\":3622:3701   */\n  tag_129\n  tag_46\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":3586:3703   */\ntag_128:\n    /* \"#utility.yul\":3727:3801   */\n  tag_130\n    /* \"#utility.yul\":3793:3800   */\n  dup8\n    /* \"#utility.yul\":3784:3790   */\n  dup3\n    /* \"#utility.yul\":3773:3782   */\n  dup9\n    /* \"#utility.yul\":3769:3791   */\n  add\n    /* \"#utility.yul\":3727:3801   */\n  tag_56\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":3717:3801   */\n  swap4\n  pop\n    /* \"#utility.yul\":3519:3811   */\n  pop\n    /* \"#utility.yul\":3850:3852   */\n  0x40\n    /* \"#utility.yul\":3876:3940   */\n  tag_131\n    /* \"#utility.yul\":3932:3939   */\n  dup8\n    /* \"#utility.yul\":3923:3929   */\n  dup3\n    /* \"#utility.yul\":3912:3921   */\n  dup9\n    /* \"#utility.yul\":3908:3930   */\n  add\n    /* \"#utility.yul\":3876:3940   */\n  tag_59\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":3866:3940   */\n  swap3\n  pop\n    /* \"#utility.yul\":3821:3950   */\n  pop\n    /* \"#utility.yul\":3989:3991   */\n  0x60\n    /* \"#utility.yul\":4015:4079   */\n  tag_132\n    /* \"#utility.yul\":4071:4078   */\n  dup8\n    /* \"#utility.yul\":4062:4068   */\n  dup3\n    /* \"#utility.yul\":4051:4060   */\n  dup9\n    /* \"#utility.yul\":4047:4069   */\n  add\n    /* \"#utility.yul\":4015:4079   */\n  tag_59\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":4005:4079   */\n  swap2\n  pop\n    /* \"#utility.yul\":3960:4089   */\n  pop\n    /* \"#utility.yul\":2930:4096   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4102:4201   */\ntag_60:\n    /* \"#utility.yul\":4154:4160   */\n  0x00\n    /* \"#utility.yul\":4188:4193   */\n  dup2\n    /* \"#utility.yul\":4182:4194   */\n  mload\n    /* \"#utility.yul\":4172:4194   */\n  swap1\n  pop\n    /* \"#utility.yul\":4102:4201   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4207:4387   */\ntag_61:\n    /* \"#utility.yul\":4255:4332   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4252:4253   */\n  0x00\n    /* \"#utility.yul\":4245:4333   */\n  mstore\n    /* \"#utility.yul\":4352:4356   */\n  0x22\n    /* \"#utility.yul\":4349:4350   */\n  0x04\n    /* \"#utility.yul\":4342:4357   */\n  mstore\n    /* \"#utility.yul\":4376:4380   */\n  0x24\n    /* \"#utility.yul\":4373:4374   */\n  0x00\n    /* \"#utility.yul\":4366:4381   */\n  revert\n    /* \"#utility.yul\":4393:4713   */\ntag_62:\n    /* \"#utility.yul\":4437:4443   */\n  0x00\n    /* \"#utility.yul\":4474:4475   */\n  0x02\n    /* \"#utility.yul\":4468:4472   */\n  dup3\n    /* \"#utility.yul\":4464:4476   */\n  div\n    /* \"#utility.yul\":4454:4476   */\n  swap1\n  pop\n    /* \"#utility.yul\":4521:4522   */\n  0x01\n    /* \"#utility.yul\":4515:4519   */\n  dup3\n    /* \"#utility.yul\":4511:4523   */\n  and\n    /* \"#utility.yul\":4542:4560   */\n  dup1\n    /* \"#utility.yul\":4532:4613   */\n  tag_136\n  jumpi\n    /* \"#utility.yul\":4598:4602   */\n  0x7f\n    /* \"#utility.yul\":4590:4596   */\n  dup3\n    /* \"#utility.yul\":4586:4603   */\n  and\n    /* \"#utility.yul\":4576:4603   */\n  swap2\n  pop\n    /* \"#utility.yul\":4532:4613   */\ntag_136:\n    /* \"#utility.yul\":4660:4662   */\n  0x20\n    /* \"#utility.yul\":4652:4658   */\n  dup3\n    /* \"#utility.yul\":4649:4663   */\n  lt\n    /* \"#utility.yul\":4629:4647   */\n  dup2\n    /* \"#utility.yul\":4626:4664   */\n  sub\n    /* \"#utility.yul\":4623:4707   */\n  tag_137\n  jumpi\n    /* \"#utility.yul\":4679:4697   */\n  tag_138\n  tag_61\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":4623:4707   */\ntag_137:\n    /* \"#utility.yul\":4444:4713   */\n  pop\n    /* \"#utility.yul\":4393:4713   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4719:4860   */\ntag_63:\n    /* \"#utility.yul\":4768:4772   */\n  0x00\n    /* \"#utility.yul\":4791:4794   */\n  dup2\n    /* \"#utility.yul\":4783:4794   */\n  swap1\n  pop\n    /* \"#utility.yul\":4814:4817   */\n  dup2\n    /* \"#utility.yul\":4811:4812   */\n  0x00\n    /* \"#utility.yul\":4804:4818   */\n  mstore\n    /* \"#utility.yul\":4848:4852   */\n  0x20\n    /* \"#utility.yul\":4845:4846   */\n  0x00\n    /* \"#utility.yul\":4835:4853   */\n  keccak256\n    /* \"#utility.yul\":4827:4853   */\n  swap1\n  pop\n    /* \"#utility.yul\":4719:4860   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4866:4959   */\ntag_64:\n    /* \"#utility.yul\":4903:4909   */\n  0x00\n    /* \"#utility.yul\":4950:4952   */\n  0x20\n    /* \"#utility.yul\":4945:4947   */\n  0x1f\n    /* \"#utility.yul\":4938:4943   */\n  dup4\n    /* \"#utility.yul\":4934:4948   */\n  add\n    /* \"#utility.yul\":4930:4953   */\n  div\n    /* \"#utility.yul\":4920:4953   */\n  swap1\n  pop\n    /* \"#utility.yul\":4866:4959   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4965:5072   */\ntag_65:\n    /* \"#utility.yul\":5009:5017   */\n  0x00\n    /* \"#utility.yul\":5059:5064   */\n  dup3\n    /* \"#utility.yul\":5053:5057   */\n  dup3\n    /* \"#utility.yul\":5049:5065   */\n  shl\n    /* \"#utility.yul\":5028:5065   */\n  swap1\n  pop\n    /* \"#utility.yul\":4965:5072   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5078:5471   */\ntag_66:\n    /* \"#utility.yul\":5147:5153   */\n  0x00\n    /* \"#utility.yul\":5197:5198   */\n  0x08\n    /* \"#utility.yul\":5185:5195   */\n  dup4\n    /* \"#utility.yul\":5181:5199   */\n  mul\n    /* \"#utility.yul\":5220:5317   */\n  tag_143\n    /* \"#utility.yul\":5250:5316   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5239:5248   */\n  dup3\n    /* \"#utility.yul\":5220:5317   */\n  tag_65\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":5338:5377   */\n  tag_144\n    /* \"#utility.yul\":5368:5376   */\n  dup7\n    /* \"#utility.yul\":5357:5366   */\n  dup4\n    /* \"#utility.yul\":5338:5377   */\n  tag_65\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":5326:5377   */\n  swap6\n  pop\n    /* \"#utility.yul\":5410:5414   */\n  dup1\n    /* \"#utility.yul\":5406:5415   */\n  not\n    /* \"#utility.yul\":5399:5404   */\n  dup5\n    /* \"#utility.yul\":5395:5416   */\n  and\n    /* \"#utility.yul\":5386:5416   */\n  swap4\n  pop\n    /* \"#utility.yul\":5459:5463   */\n  dup1\n    /* \"#utility.yul\":5449:5457   */\n  dup7\n    /* \"#utility.yul\":5445:5464   */\n  and\n    /* \"#utility.yul\":5438:5443   */\n  dup5\n    /* \"#utility.yul\":5435:5465   */\n  or\n    /* \"#utility.yul\":5425:5465   */\n  swap3\n  pop\n    /* \"#utility.yul\":5154:5471   */\n  pop\n  pop\n    /* \"#utility.yul\":5078:5471   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5477:5537   */\ntag_67:\n    /* \"#utility.yul\":5505:5508   */\n  0x00\n    /* \"#utility.yul\":5526:5531   */\n  dup2\n    /* \"#utility.yul\":5519:5531   */\n  swap1\n  pop\n    /* \"#utility.yul\":5477:5537   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5543:5685   */\ntag_68:\n    /* \"#utility.yul\":5593:5602   */\n  0x00\n    /* \"#utility.yul\":5626:5679   */\n  tag_147\n    /* \"#utility.yul\":5644:5678   */\n  tag_148\n    /* \"#utility.yul\":5653:5677   */\n  tag_149\n    /* \"#utility.yul\":5671:5676   */\n  dup5\n    /* \"#utility.yul\":5653:5677   */\n  tag_57\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":5644:5678   */\n  tag_67\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":5626:5679   */\n  tag_57\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":5613:5679   */\n  swap1\n  pop\n    /* \"#utility.yul\":5543:5685   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5691:5766   */\ntag_69:\n    /* \"#utility.yul\":5734:5737   */\n  0x00\n    /* \"#utility.yul\":5755:5760   */\n  dup2\n    /* \"#utility.yul\":5748:5760   */\n  swap1\n  pop\n    /* \"#utility.yul\":5691:5766   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5772:6041   */\ntag_70:\n    /* \"#utility.yul\":5882:5921   */\n  tag_152\n    /* \"#utility.yul\":5913:5920   */\n  dup4\n    /* \"#utility.yul\":5882:5921   */\n  tag_68\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":5943:6034   */\n  tag_153\n    /* \"#utility.yul\":5992:6033   */\n  tag_154\n    /* \"#utility.yul\":6016:6032   */\n  dup3\n    /* \"#utility.yul\":5992:6033   */\n  tag_69\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":5984:5990   */\n  dup5\n    /* \"#utility.yul\":5977:5981   */\n  dup5\n    /* \"#utility.yul\":5971:5982   */\n  sload\n    /* \"#utility.yul\":5943:6034   */\n  tag_66\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":5937:5941   */\n  dup3\n    /* \"#utility.yul\":5930:6035   */\n  sstore\n    /* \"#utility.yul\":5848:6041   */\n  pop\n    /* \"#utility.yul\":5772:6041   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6047:6120   */\ntag_71:\n    /* \"#utility.yul\":6092:6095   */\n  0x00\n    /* \"#utility.yul\":6113:6114   */\n  0x00\n    /* \"#utility.yul\":6106:6114   */\n  swap1\n  pop\n    /* \"#utility.yul\":6047:6120   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6126:6315   */\ntag_72:\n    /* \"#utility.yul\":6203:6235   */\n  tag_157\n  tag_71\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":6244:6309   */\n  tag_158\n    /* \"#utility.yul\":6302:6308   */\n  dup2\n    /* \"#utility.yul\":6294:6300   */\n  dup5\n    /* \"#utility.yul\":6288:6292   */\n  dup5\n    /* \"#utility.yul\":6244:6309   */\n  tag_70\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":6179:6315   */\n  pop\n    /* \"#utility.yul\":6126:6315   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6321:6507   */\ntag_73:\n    /* \"#utility.yul\":6381:6501   */\ntag_160:\n    /* \"#utility.yul\":6398:6401   */\n  dup2\n    /* \"#utility.yul\":6391:6396   */\n  dup2\n    /* \"#utility.yul\":6388:6402   */\n  lt\n    /* \"#utility.yul\":6381:6501   */\n  iszero\n  tag_162\n  jumpi\n    /* \"#utility.yul\":6452:6491   */\n  tag_163\n    /* \"#utility.yul\":6489:6490   */\n  0x00\n    /* \"#utility.yul\":6482:6487   */\n  dup3\n    /* \"#utility.yul\":6452:6491   */\n  tag_72\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":6425:6426   */\n  0x01\n    /* \"#utility.yul\":6418:6423   */\n  dup2\n    /* \"#utility.yul\":6414:6427   */\n  add\n    /* \"#utility.yul\":6405:6427   */\n  swap1\n  pop\n    /* \"#utility.yul\":6381:6501   */\n  jump(tag_160)\ntag_162:\n    /* \"#utility.yul\":6321:6507   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6513:7056   */\ntag_74:\n    /* \"#utility.yul\":6614:6616   */\n  0x1f\n    /* \"#utility.yul\":6609:6612   */\n  dup3\n    /* \"#utility.yul\":6606:6617   */\n  gt\n    /* \"#utility.yul\":6603:7049   */\n  iszero\n  tag_165\n  jumpi\n    /* \"#utility.yul\":6648:6686   */\n  tag_166\n    /* \"#utility.yul\":6680:6685   */\n  dup2\n    /* \"#utility.yul\":6648:6686   */\n  tag_63\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":6732:6761   */\n  tag_167\n    /* \"#utility.yul\":6750:6760   */\n  dup5\n    /* \"#utility.yul\":6732:6761   */\n  tag_64\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":6722:6730   */\n  dup2\n    /* \"#utility.yul\":6718:6762   */\n  add\n    /* \"#utility.yul\":6915:6917   */\n  0x20\n    /* \"#utility.yul\":6903:6913   */\n  dup6\n    /* \"#utility.yul\":6900:6918   */\n  lt\n    /* \"#utility.yul\":6897:6946   */\n  iszero\n  tag_168\n  jumpi\n    /* \"#utility.yul\":6936:6944   */\n  dup2\n    /* \"#utility.yul\":6921:6944   */\n  swap1\n  pop\n    /* \"#utility.yul\":6897:6946   */\ntag_168:\n    /* \"#utility.yul\":6959:7039   */\n  tag_169\n    /* \"#utility.yul\":7015:7037   */\n  tag_170\n    /* \"#utility.yul\":7033:7036   */\n  dup6\n    /* \"#utility.yul\":7015:7037   */\n  tag_64\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":7005:7013   */\n  dup4\n    /* \"#utility.yul\":7001:7038   */\n  add\n    /* \"#utility.yul\":6988:6999   */\n  dup3\n    /* \"#utility.yul\":6959:7039   */\n  tag_73\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":6618:7049   */\n  pop\n  pop\n    /* \"#utility.yul\":6603:7049   */\ntag_165:\n    /* \"#utility.yul\":6513:7056   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7062:7179   */\ntag_75:\n    /* \"#utility.yul\":7116:7124   */\n  0x00\n    /* \"#utility.yul\":7166:7171   */\n  dup3\n    /* \"#utility.yul\":7160:7164   */\n  dup3\n    /* \"#utility.yul\":7156:7172   */\n  shr\n    /* \"#utility.yul\":7135:7172   */\n  swap1\n  pop\n    /* \"#utility.yul\":7062:7179   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7185:7354   */\ntag_76:\n    /* \"#utility.yul\":7229:7235   */\n  0x00\n    /* \"#utility.yul\":7262:7313   */\n  tag_173\n    /* \"#utility.yul\":7310:7311   */\n  0x00\n    /* \"#utility.yul\":7306:7312   */\n  not\n    /* \"#utility.yul\":7298:7303   */\n  dup5\n    /* \"#utility.yul\":7295:7296   */\n  0x08\n    /* \"#utility.yul\":7291:7304   */\n  mul\n    /* \"#utility.yul\":7262:7313   */\n  tag_75\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":7258:7314   */\n  not\n    /* \"#utility.yul\":7343:7347   */\n  dup1\n    /* \"#utility.yul\":7337:7341   */\n  dup4\n    /* \"#utility.yul\":7333:7348   */\n  and\n    /* \"#utility.yul\":7323:7348   */\n  swap2\n  pop\n    /* \"#utility.yul\":7236:7354   */\n  pop\n    /* \"#utility.yul\":7185:7354   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7359:7654   */\ntag_77:\n    /* \"#utility.yul\":7435:7439   */\n  0x00\n    /* \"#utility.yul\":7581:7610   */\n  tag_175\n    /* \"#utility.yul\":7606:7609   */\n  dup4\n    /* \"#utility.yul\":7600:7604   */\n  dup4\n    /* \"#utility.yul\":7581:7610   */\n  tag_76\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":7573:7610   */\n  swap2\n  pop\n    /* \"#utility.yul\":7643:7646   */\n  dup3\n    /* \"#utility.yul\":7640:7641   */\n  0x02\n    /* \"#utility.yul\":7636:7647   */\n  mul\n    /* \"#utility.yul\":7630:7634   */\n  dup3\n    /* \"#utility.yul\":7627:7648   */\n  or\n    /* \"#utility.yul\":7619:7648   */\n  swap1\n  pop\n    /* \"#utility.yul\":7359:7654   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7659:9054   */\ntag_10:\n    /* \"#utility.yul\":7776:7813   */\n  tag_177\n    /* \"#utility.yul\":7809:7812   */\n  dup3\n    /* \"#utility.yul\":7776:7813   */\n  tag_60\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":7878:7896   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7870:7876   */\n  dup2\n    /* \"#utility.yul\":7867:7897   */\n  gt\n    /* \"#utility.yul\":7864:7920   */\n  iszero\n  tag_178\n  jumpi\n    /* \"#utility.yul\":7900:7918   */\n  tag_179\n  tag_50\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":7864:7920   */\ntag_178:\n    /* \"#utility.yul\":7944:7982   */\n  tag_180\n    /* \"#utility.yul\":7976:7980   */\n  dup3\n    /* \"#utility.yul\":7970:7981   */\n  sload\n    /* \"#utility.yul\":7944:7982   */\n  tag_62\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":8029:8096   */\n  tag_181\n    /* \"#utility.yul\":8089:8095   */\n  dup3\n    /* \"#utility.yul\":8081:8087   */\n  dup3\n    /* \"#utility.yul\":8075:8079   */\n  dup6\n    /* \"#utility.yul\":8029:8096   */\n  tag_74\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":8123:8124   */\n  0x00\n    /* \"#utility.yul\":8147:8151   */\n  0x20\n    /* \"#utility.yul\":8134:8151   */\n  swap1\n  pop\n    /* \"#utility.yul\":8179:8181   */\n  0x1f\n    /* \"#utility.yul\":8171:8177   */\n  dup4\n    /* \"#utility.yul\":8168:8182   */\n  gt\n    /* \"#utility.yul\":8196:8197   */\n  0x01\n    /* \"#utility.yul\":8191:8809   */\n  dup2\n  eq\n  tag_183\n  jumpi\n    /* \"#utility.yul\":8853:8854   */\n  0x00\n    /* \"#utility.yul\":8870:8876   */\n  dup5\n    /* \"#utility.yul\":8867:8944   */\n  iszero\n  tag_184\n  jumpi\n    /* \"#utility.yul\":8919:8928   */\n  dup3\n    /* \"#utility.yul\":8914:8917   */\n  dup8\n    /* \"#utility.yul\":8910:8929   */\n  add\n    /* \"#utility.yul\":8904:8930   */\n  mload\n    /* \"#utility.yul\":8895:8930   */\n  swap1\n  pop\n    /* \"#utility.yul\":8867:8944   */\ntag_184:\n    /* \"#utility.yul\":8970:9037   */\n  tag_185\n    /* \"#utility.yul\":9030:9036   */\n  dup6\n    /* \"#utility.yul\":9023:9028   */\n  dup3\n    /* \"#utility.yul\":8970:9037   */\n  tag_77\n  jump\t// in\ntag_185:\n    /* \"#utility.yul\":8964:8968   */\n  dup7\n    /* \"#utility.yul\":8957:9038   */\n  sstore\n    /* \"#utility.yul\":8826:9048   */\n  pop\n    /* \"#utility.yul\":8161:9048   */\n  jump(tag_182)\n    /* \"#utility.yul\":8191:8809   */\ntag_183:\n    /* \"#utility.yul\":8243:8247   */\n  0x1f\n    /* \"#utility.yul\":8239:8248   */\n  not\n    /* \"#utility.yul\":8231:8237   */\n  dup5\n    /* \"#utility.yul\":8227:8249   */\n  and\n    /* \"#utility.yul\":8277:8314   */\n  tag_186\n    /* \"#utility.yul\":8309:8313   */\n  dup7\n    /* \"#utility.yul\":8277:8314   */\n  tag_63\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":8336:8337   */\n  0x00\n    /* \"#utility.yul\":8350:8558   */\ntag_187:\n    /* \"#utility.yul\":8364:8371   */\n  dup3\n    /* \"#utility.yul\":8361:8362   */\n  dup2\n    /* \"#utility.yul\":8358:8372   */\n  lt\n    /* \"#utility.yul\":8350:8558   */\n  iszero\n  tag_189\n  jumpi\n    /* \"#utility.yul\":8443:8452   */\n  dup5\n    /* \"#utility.yul\":8438:8441   */\n  dup10\n    /* \"#utility.yul\":8434:8453   */\n  add\n    /* \"#utility.yul\":8428:8454   */\n  mload\n    /* \"#utility.yul\":8420:8426   */\n  dup3\n    /* \"#utility.yul\":8413:8455   */\n  sstore\n    /* \"#utility.yul\":8494:8495   */\n  0x01\n    /* \"#utility.yul\":8486:8492   */\n  dup3\n    /* \"#utility.yul\":8482:8496   */\n  add\n    /* \"#utility.yul\":8472:8496   */\n  swap2\n  pop\n    /* \"#utility.yul\":8541:8543   */\n  0x20\n    /* \"#utility.yul\":8530:8539   */\n  dup6\n    /* \"#utility.yul\":8526:8544   */\n  add\n    /* \"#utility.yul\":8513:8544   */\n  swap5\n  pop\n    /* \"#utility.yul\":8387:8391   */\n  0x20\n    /* \"#utility.yul\":8384:8385   */\n  dup2\n    /* \"#utility.yul\":8380:8392   */\n  add\n    /* \"#utility.yul\":8375:8392   */\n  swap1\n  pop\n    /* \"#utility.yul\":8350:8558   */\n  jump(tag_187)\ntag_189:\n    /* \"#utility.yul\":8586:8592   */\n  dup7\n    /* \"#utility.yul\":8577:8584   */\n  dup4\n    /* \"#utility.yul\":8574:8593   */\n  lt\n    /* \"#utility.yul\":8571:8750   */\n  iszero\n  tag_190\n  jumpi\n    /* \"#utility.yul\":8644:8653   */\n  dup5\n    /* \"#utility.yul\":8639:8642   */\n  dup10\n    /* \"#utility.yul\":8635:8654   */\n  add\n    /* \"#utility.yul\":8629:8655   */\n  mload\n    /* \"#utility.yul\":8687:8735   */\n  tag_191\n    /* \"#utility.yul\":8729:8733   */\n  0x1f\n    /* \"#utility.yul\":8721:8727   */\n  dup10\n    /* \"#utility.yul\":8717:8734   */\n  and\n    /* \"#utility.yul\":8706:8715   */\n  dup3\n    /* \"#utility.yul\":8687:8735   */\n  tag_76\n  jump\t// in\ntag_191:\n    /* \"#utility.yul\":8679:8685   */\n  dup4\n    /* \"#utility.yul\":8672:8736   */\n  sstore\n    /* \"#utility.yul\":8594:8750   */\n  pop\n    /* \"#utility.yul\":8571:8750   */\ntag_190:\n    /* \"#utility.yul\":8796:8797   */\n  0x01\n    /* \"#utility.yul\":8792:8793   */\n  0x02\n    /* \"#utility.yul\":8784:8790   */\n  dup9\n    /* \"#utility.yul\":8780:8794   */\n  mul\n    /* \"#utility.yul\":8776:8798   */\n  add\n    /* \"#utility.yul\":8770:8774   */\n  dup9\n    /* \"#utility.yul\":8763:8799   */\n  sstore\n    /* \"#utility.yul\":8198:8809   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8161:9048   */\ntag_182:\n  pop\n    /* \"#utility.yul\":7751:9054   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7659:9054   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9060:9186   */\ntag_78:\n    /* \"#utility.yul\":9097:9104   */\n  0x00\n    /* \"#utility.yul\":9137:9179   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":9130:9135   */\n  dup3\n    /* \"#utility.yul\":9126:9180   */\n  and\n    /* \"#utility.yul\":9115:9180   */\n  swap1\n  pop\n    /* \"#utility.yul\":9060:9186   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9192:9288   */\ntag_79:\n    /* \"#utility.yul\":9229:9236   */\n  0x00\n    /* \"#utility.yul\":9258:9282   */\n  tag_194\n    /* \"#utility.yul\":9276:9281   */\n  dup3\n    /* \"#utility.yul\":9258:9282   */\n  tag_78\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":9247:9282   */\n  swap1\n  pop\n    /* \"#utility.yul\":9192:9288   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9294:9412   */\ntag_80:\n    /* \"#utility.yul\":9381:9405   */\n  tag_196\n    /* \"#utility.yul\":9399:9404   */\n  dup2\n    /* \"#utility.yul\":9381:9405   */\n  tag_79\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":9376:9379   */\n  dup3\n    /* \"#utility.yul\":9369:9406   */\n  mstore\n    /* \"#utility.yul\":9294:9412   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9418:9640   */\ntag_15:\n    /* \"#utility.yul\":9511:9515   */\n  0x00\n    /* \"#utility.yul\":9549:9551   */\n  0x20\n    /* \"#utility.yul\":9538:9547   */\n  dup3\n    /* \"#utility.yul\":9534:9552   */\n  add\n    /* \"#utility.yul\":9526:9552   */\n  swap1\n  pop\n    /* \"#utility.yul\":9562:9633   */\n  tag_198\n    /* \"#utility.yul\":9630:9631   */\n  0x00\n    /* \"#utility.yul\":9619:9628   */\n  dup4\n    /* \"#utility.yul\":9615:9632   */\n  add\n    /* \"#utility.yul\":9606:9612   */\n  dup5\n    /* \"#utility.yul\":9562:9633   */\n  tag_80\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":9418:9640   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9646:9815   */\ntag_81:\n    /* \"#utility.yul\":9730:9741   */\n  0x00\n    /* \"#utility.yul\":9764:9770   */\n  dup3\n    /* \"#utility.yul\":9759:9762   */\n  dup3\n    /* \"#utility.yul\":9752:9771   */\n  mstore\n    /* \"#utility.yul\":9804:9808   */\n  0x20\n    /* \"#utility.yul\":9799:9802   */\n  dup3\n    /* \"#utility.yul\":9795:9809   */\n  add\n    /* \"#utility.yul\":9780:9809   */\n  swap1\n  pop\n    /* \"#utility.yul\":9646:9815   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9821:10044   */\ntag_82:\n    /* \"#utility.yul\":9961:9995   */\n  0x4d617820737570706c79206d757374206265203e3d20696e697469616c207375\n    /* \"#utility.yul\":9957:9958   */\n  0x00\n    /* \"#utility.yul\":9949:9955   */\n  dup3\n    /* \"#utility.yul\":9945:9959   */\n  add\n    /* \"#utility.yul\":9938:9996   */\n  mstore\n    /* \"#utility.yul\":10030:10036   */\n  0x70706c7900000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":10025:10027   */\n  0x20\n    /* \"#utility.yul\":10017:10023   */\n  dup3\n    /* \"#utility.yul\":10013:10028   */\n  add\n    /* \"#utility.yul\":10006:10037   */\n  mstore\n    /* \"#utility.yul\":9821:10044   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10050:10416   */\ntag_83:\n    /* \"#utility.yul\":10192:10195   */\n  0x00\n    /* \"#utility.yul\":10213:10280   */\n  tag_202\n    /* \"#utility.yul\":10277:10279   */\n  0x24\n    /* \"#utility.yul\":10272:10275   */\n  dup4\n    /* \"#utility.yul\":10213:10280   */\n  tag_81\n  jump\t// in\ntag_202:\n    /* \"#utility.yul\":10206:10280   */\n  swap2\n  pop\n    /* \"#utility.yul\":10289:10382   */\n  tag_203\n    /* \"#utility.yul\":10378:10381   */\n  dup3\n    /* \"#utility.yul\":10289:10382   */\n  tag_82\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":10407:10409   */\n  0x40\n    /* \"#utility.yul\":10402:10405   */\n  dup3\n    /* \"#utility.yul\":10398:10410   */\n  add\n    /* \"#utility.yul\":10391:10410   */\n  swap1\n  pop\n    /* \"#utility.yul\":10050:10416   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10422:10841   */\ntag_22:\n    /* \"#utility.yul\":10588:10592   */\n  0x00\n    /* \"#utility.yul\":10626:10628   */\n  0x20\n    /* \"#utility.yul\":10615:10624   */\n  dup3\n    /* \"#utility.yul\":10611:10629   */\n  add\n    /* \"#utility.yul\":10603:10629   */\n  swap1\n  pop\n    /* \"#utility.yul\":10675:10684   */\n  dup2\n    /* \"#utility.yul\":10669:10673   */\n  dup2\n    /* \"#utility.yul\":10665:10685   */\n  sub\n    /* \"#utility.yul\":10661:10662   */\n  0x00\n    /* \"#utility.yul\":10650:10659   */\n  dup4\n    /* \"#utility.yul\":10646:10663   */\n  add\n    /* \"#utility.yul\":10639:10686   */\n  mstore\n    /* \"#utility.yul\":10703:10834   */\n  tag_205\n    /* \"#utility.yul\":10829:10833   */\n  dup2\n    /* \"#utility.yul\":10703:10834   */\n  tag_83\n  jump\t// in\ntag_205:\n    /* \"#utility.yul\":10695:10834   */\n  swap1\n  pop\n    /* \"#utility.yul\":10422:10841   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10847:11027   */\ntag_84:\n    /* \"#utility.yul\":10895:10972   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":10892:10893   */\n  0x00\n    /* \"#utility.yul\":10885:10973   */\n  mstore\n    /* \"#utility.yul\":10992:10996   */\n  0x11\n    /* \"#utility.yul\":10989:10990   */\n  0x04\n    /* \"#utility.yul\":10982:10997   */\n  mstore\n    /* \"#utility.yul\":11016:11020   */\n  0x24\n    /* \"#utility.yul\":11013:11014   */\n  0x00\n    /* \"#utility.yul\":11006:11021   */\n  revert\n    /* \"#utility.yul\":11033:11224   */\ntag_35:\n    /* \"#utility.yul\":11073:11076   */\n  0x00\n    /* \"#utility.yul\":11092:11112   */\n  tag_208\n    /* \"#utility.yul\":11110:11111   */\n  dup3\n    /* \"#utility.yul\":11092:11112   */\n  tag_57\n  jump\t// in\ntag_208:\n    /* \"#utility.yul\":11087:11112   */\n  swap2\n  pop\n    /* \"#utility.yul\":11126:11146   */\n  tag_209\n    /* \"#utility.yul\":11144:11145   */\n  dup4\n    /* \"#utility.yul\":11126:11146   */\n  tag_57\n  jump\t// in\ntag_209:\n    /* \"#utility.yul\":11121:11146   */\n  swap3\n  pop\n    /* \"#utility.yul\":11169:11170   */\n  dup3\n    /* \"#utility.yul\":11166:11167   */\n  dup3\n    /* \"#utility.yul\":11162:11171   */\n  add\n    /* \"#utility.yul\":11155:11171   */\n  swap1\n  pop\n    /* \"#utility.yul\":11190:11193   */\n  dup1\n    /* \"#utility.yul\":11187:11188   */\n  dup3\n    /* \"#utility.yul\":11184:11194   */\n  gt\n    /* \"#utility.yul\":11181:11217   */\n  iszero\n  tag_210\n  jumpi\n    /* \"#utility.yul\":11197:11215   */\n  tag_211\n  tag_84\n  jump\t// in\ntag_211:\n    /* \"#utility.yul\":11181:11217   */\ntag_210:\n    /* \"#utility.yul\":11033:11224   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11230:11348   */\ntag_85:\n    /* \"#utility.yul\":11317:11341   */\n  tag_213\n    /* \"#utility.yul\":11335:11340   */\n  dup2\n    /* \"#utility.yul\":11317:11341   */\n  tag_57\n  jump\t// in\ntag_213:\n    /* \"#utility.yul\":11312:11315   */\n  dup3\n    /* \"#utility.yul\":11305:11342   */\n  mstore\n    /* \"#utility.yul\":11230:11348   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11354:11796   */\ntag_39:\n    /* \"#utility.yul\":11503:11507   */\n  0x00\n    /* \"#utility.yul\":11541:11543   */\n  0x60\n    /* \"#utility.yul\":11530:11539   */\n  dup3\n    /* \"#utility.yul\":11526:11544   */\n  add\n    /* \"#utility.yul\":11518:11544   */\n  swap1\n  pop\n    /* \"#utility.yul\":11554:11625   */\n  tag_215\n    /* \"#utility.yul\":11622:11623   */\n  0x00\n    /* \"#utility.yul\":11611:11620   */\n  dup4\n    /* \"#utility.yul\":11607:11624   */\n  add\n    /* \"#utility.yul\":11598:11604   */\n  dup7\n    /* \"#utility.yul\":11554:11625   */\n  tag_80\n  jump\t// in\ntag_215:\n    /* \"#utility.yul\":11635:11707   */\n  tag_216\n    /* \"#utility.yul\":11703:11705   */\n  0x20\n    /* \"#utility.yul\":11692:11701   */\n  dup4\n    /* \"#utility.yul\":11688:11706   */\n  add\n    /* \"#utility.yul\":11679:11685   */\n  dup6\n    /* \"#utility.yul\":11635:11707   */\n  tag_85\n  jump\t// in\ntag_216:\n    /* \"#utility.yul\":11717:11789   */\n  tag_217\n    /* \"#utility.yul\":11785:11787   */\n  0x40\n    /* \"#utility.yul\":11774:11783   */\n  dup4\n    /* \"#utility.yul\":11770:11788   */\n  add\n    /* \"#utility.yul\":11761:11767   */\n  dup5\n    /* \"#utility.yul\":11717:11789   */\n  tag_85\n  jump\t// in\ntag_217:\n    /* \"#utility.yul\":11354:11796   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11802:12024   */\ntag_43:\n    /* \"#utility.yul\":11895:11899   */\n  0x00\n    /* \"#utility.yul\":11933:11935   */\n  0x20\n    /* \"#utility.yul\":11922:11931   */\n  dup3\n    /* \"#utility.yul\":11918:11936   */\n  add\n    /* \"#utility.yul\":11910:11936   */\n  swap1\n  pop\n    /* \"#utility.yul\":11946:12017   */\n  tag_219\n    /* \"#utility.yul\":12014:12015   */\n  0x00\n    /* \"#utility.yul\":12003:12012   */\n  dup4\n    /* \"#utility.yul\":11999:12016   */\n  add\n    /* \"#utility.yul\":11990:11996   */\n  dup5\n    /* \"#utility.yul\":11946:12017   */\n  tag_85\n  jump\t// in\ntag_219:\n    /* \"#utility.yul\":11802:12024   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"D/decentralizedStableCoin.sol\":476:3656  contract DecentralizedStableCoin is ERC20, Ownable, ReentrancyGuard {... */\ntag_25:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"D/decentralizedStableCoin.sol\":476:3656  contract DecentralizedStableCoin is ERC20, Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xcfbd4885\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xcfbd4885\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xd5abeb01\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf103b433\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x9dc29fac\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xaa2fe91b\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x23b872dd\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0c984832\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"D/decentralizedStableCoin.sol\":1737:1947  function authorizeMinter(address account) external onlyOwner {... */\n    tag_5:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"D/decentralizedStableCoin.sol\":2528:2801  function mint(address to, uint256 amount) external nonReentrant {... */\n    tag_9:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n    tag_52:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_10:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_12:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_13:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"D/decentralizedStableCoin.sol\":3066:3267  function burn(address from, uint256 amount) external nonReentrant {... */\n    tag_14:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n    tag_68:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_15:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"D/decentralizedStableCoin.sol\":620:669  mapping(address => bool) public authorizedMinters */\n    tag_16:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"D/decentralizedStableCoin.sol\":2069:2286  function revokeMinter(address account) external onlyOwner {... */\n    tag_17:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n    tag_79:\n      stop\n        /* \"D/decentralizedStableCoin.sol\":709:733  uint256 public maxSupply */\n    tag_18:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_19:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      tag_88\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"D/decentralizedStableCoin.sol\":3413:3654  function updateMaxSupply(uint256 newMaxSupply) external onlyOwner {... */\n    tag_20:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      tag_93\n      jump\t// in\n    tag_90:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_21:\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_95:\n      tag_96\n      jump\t// in\n    tag_94:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_98\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_100\n      swap1\n      tag_99\n      jump\t// in\n    tag_100:\n      dup1\n      iszero\n      tag_101\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_102\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_101)\n    tag_102:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_103:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_103\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_101:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_107\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"D/decentralizedStableCoin.sol\":1737:1947  function authorizeMinter(address account) external onlyOwner {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_110\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_111\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_110:\n        /* \"D/decentralizedStableCoin.sol\":1835:1836  0 */\n      0x00\n        /* \"D/decentralizedStableCoin.sol\":1816:1837  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"D/decentralizedStableCoin.sol\":1816:1823  account */\n      dup2\n        /* \"D/decentralizedStableCoin.sol\":1816:1837  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"D/decentralizedStableCoin.sol\":1808:1857  require(account != address(0), \"Invalid address\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_113:\n        /* \"D/decentralizedStableCoin.sol\":1896:1900  true */\n      0x01\n        /* \"D/decentralizedStableCoin.sol\":1867:1884  authorizedMinters */\n      0x07\n        /* \"D/decentralizedStableCoin.sol\":1867:1893  authorizedMinters[account] */\n      0x00\n        /* \"D/decentralizedStableCoin.sol\":1885:1892  account */\n      dup4\n        /* \"D/decentralizedStableCoin.sol\":1867:1893  authorizedMinters[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"D/decentralizedStableCoin.sol\":1867:1900  authorizedMinters[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"D/decentralizedStableCoin.sol\":1932:1939  account */\n      dup1\n        /* \"D/decentralizedStableCoin.sol\":1915:1940  MinterAuthorized(account) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x83b05b6735acd4b85e3bded8e72c851d1a87718f81e3c8e6f0c9d9a2baa88e46\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"D/decentralizedStableCoin.sol\":1737:1947  function authorizeMinter(address account) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_118\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_119\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_120\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_121\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"D/decentralizedStableCoin.sol\":2528:2801  function mint(address to, uint256 amount) external nonReentrant {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_125\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_126\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_125:\n        /* \"D/decentralizedStableCoin.sol\":2610:2627  authorizedMinters */\n      0x07\n        /* \"D/decentralizedStableCoin.sol\":2610:2639  authorizedMinters[msg.sender] */\n      0x00\n        /* \"D/decentralizedStableCoin.sol\":2628:2638  msg.sender */\n      caller\n        /* \"D/decentralizedStableCoin.sol\":2610:2639  authorizedMinters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"D/decentralizedStableCoin.sol\":2610:2664  authorizedMinters[msg.sender] || msg.sender == owner() */\n      dup1\n      tag_128\n      jumpi\n      pop\n        /* \"D/decentralizedStableCoin.sol\":2657:2664  owner() */\n      tag_129\n        /* \"D/decentralizedStableCoin.sol\":2657:2662  owner */\n      tag_62\n        /* \"D/decentralizedStableCoin.sol\":2657:2664  owner() */\n      jump\t// in\n    tag_129:\n        /* \"D/decentralizedStableCoin.sol\":2643:2664  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"D/decentralizedStableCoin.sol\":2643:2653  msg.sender */\n      caller\n        /* \"D/decentralizedStableCoin.sol\":2643:2664  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"D/decentralizedStableCoin.sol\":2610:2664  authorizedMinters[msg.sender] || msg.sender == owner() */\n    tag_128:\n        /* \"D/decentralizedStableCoin.sol\":2602:2691  require(authorizedMinters[msg.sender] || msg.sender == owner(), \"Not authorized to mint\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_130:\n        /* \"D/decentralizedStableCoin.sol\":2735:2744  maxSupply */\n      sload(0x08)\n        /* \"D/decentralizedStableCoin.sol\":2725:2731  amount */\n      dup2\n        /* \"D/decentralizedStableCoin.sol\":2709:2722  totalSupply() */\n      tag_133\n        /* \"D/decentralizedStableCoin.sol\":2709:2720  totalSupply */\n      tag_40\n        /* \"D/decentralizedStableCoin.sol\":2709:2722  totalSupply() */\n      jump\t// in\n    tag_133:\n        /* \"D/decentralizedStableCoin.sol\":2709:2731  totalSupply() + amount */\n      tag_134\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n        /* \"D/decentralizedStableCoin.sol\":2709:2744  totalSupply() + amount <= maxSupply */\n      gt\n      iszero\n        /* \"D/decentralizedStableCoin.sol\":2701:2767  require(totalSupply() + amount <= maxSupply, \"Exceeds max supply\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_137\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_136:\n        /* \"D/decentralizedStableCoin.sol\":2777:2794  _mint(to, amount) */\n      tag_139\n        /* \"D/decentralizedStableCoin.sol\":2783:2785  to */\n      dup3\n        /* \"D/decentralizedStableCoin.sol\":2787:2793  amount */\n      dup3\n        /* \"D/decentralizedStableCoin.sol\":2777:2782  _mint */\n      tag_140\n        /* \"D/decentralizedStableCoin.sol\":2777:2794  _mint(to, amount) */\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_141\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_142\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_141:\n        /* \"D/decentralizedStableCoin.sol\":2528:2801  function mint(address to, uint256 amount) external nonReentrant {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_111\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_147\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_148\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_147:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_151\n      swap1\n      tag_99\n      jump\t// in\n    tag_151:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_152\n      swap1\n      tag_99\n      jump\t// in\n    tag_152:\n      dup1\n      iszero\n      tag_153\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_154\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_153)\n    tag_154:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_155:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_155\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_153:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"D/decentralizedStableCoin.sol\":3066:3267  function burn(address from, uint256 amount) external nonReentrant {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_157\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_126\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_157:\n        /* \"D/decentralizedStableCoin.sol\":3150:3167  authorizedMinters */\n      0x07\n        /* \"D/decentralizedStableCoin.sol\":3150:3179  authorizedMinters[msg.sender] */\n      0x00\n        /* \"D/decentralizedStableCoin.sol\":3168:3178  msg.sender */\n      caller\n        /* \"D/decentralizedStableCoin.sol\":3150:3179  authorizedMinters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"D/decentralizedStableCoin.sol\":3150:3204  authorizedMinters[msg.sender] || msg.sender == owner() */\n      dup1\n      tag_159\n      jumpi\n      pop\n        /* \"D/decentralizedStableCoin.sol\":3197:3204  owner() */\n      tag_160\n        /* \"D/decentralizedStableCoin.sol\":3197:3202  owner */\n      tag_62\n        /* \"D/decentralizedStableCoin.sol\":3197:3204  owner() */\n      jump\t// in\n    tag_160:\n        /* \"D/decentralizedStableCoin.sol\":3183:3204  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"D/decentralizedStableCoin.sol\":3183:3193  msg.sender */\n      caller\n        /* \"D/decentralizedStableCoin.sol\":3183:3204  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"D/decentralizedStableCoin.sol\":3150:3204  authorizedMinters[msg.sender] || msg.sender == owner() */\n    tag_159:\n        /* \"D/decentralizedStableCoin.sol\":3142:3231  require(authorizedMinters[msg.sender] || msg.sender == owner(), \"Not authorized to burn\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_161:\n        /* \"D/decentralizedStableCoin.sol\":3241:3260  _burn(from, amount) */\n      tag_164\n        /* \"D/decentralizedStableCoin.sol\":3247:3251  from */\n      dup3\n        /* \"D/decentralizedStableCoin.sol\":3253:3259  amount */\n      dup3\n        /* \"D/decentralizedStableCoin.sol\":3241:3246  _burn */\n      tag_165\n        /* \"D/decentralizedStableCoin.sol\":3241:3260  _burn(from, amount) */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_166\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_142\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_166:\n        /* \"D/decentralizedStableCoin.sol\":3066:3267  function burn(address from, uint256 amount) external nonReentrant {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_169:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"D/decentralizedStableCoin.sol\":620:669  mapping(address => bool) public authorizedMinters */\n    tag_77:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"D/decentralizedStableCoin.sol\":2069:2286  function revokeMinter(address account) external onlyOwner {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_171\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_111\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_171:\n        /* \"D/decentralizedStableCoin.sol\":2145:2162  authorizedMinters */\n      0x07\n        /* \"D/decentralizedStableCoin.sol\":2145:2171  authorizedMinters[account] */\n      0x00\n        /* \"D/decentralizedStableCoin.sol\":2163:2170  account */\n      dup3\n        /* \"D/decentralizedStableCoin.sol\":2145:2171  authorizedMinters[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"D/decentralizedStableCoin.sol\":2137:2198  require(authorizedMinters[account], \"Address not authorized\") */\n      tag_173\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_173:\n        /* \"D/decentralizedStableCoin.sol\":2237:2242  false */\n      0x00\n        /* \"D/decentralizedStableCoin.sol\":2208:2225  authorizedMinters */\n      0x07\n        /* \"D/decentralizedStableCoin.sol\":2208:2234  authorizedMinters[account] */\n      0x00\n        /* \"D/decentralizedStableCoin.sol\":2226:2233  account */\n      dup4\n        /* \"D/decentralizedStableCoin.sol\":2208:2234  authorizedMinters[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"D/decentralizedStableCoin.sol\":2208:2242  authorizedMinters[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"D/decentralizedStableCoin.sol\":2271:2278  account */\n      dup1\n        /* \"D/decentralizedStableCoin.sol\":2257:2279  MinterRevoked(account) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x44f4322f8daa225d5f4877ad0f7d3dfba248a774396f3ca99405ed40a044fe81\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"D/decentralizedStableCoin.sol\":2069:2286  function revokeMinter(address account) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"D/decentralizedStableCoin.sol\":709:733  uint256 public maxSupply */\n    tag_83:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"D/decentralizedStableCoin.sol\":3413:3654  function updateMaxSupply(uint256 newMaxSupply) external onlyOwner {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_178\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_111\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_178:\n        /* \"D/decentralizedStableCoin.sol\":3513:3526  totalSupply() */\n      tag_180\n        /* \"D/decentralizedStableCoin.sol\":3513:3524  totalSupply */\n      tag_40\n        /* \"D/decentralizedStableCoin.sol\":3513:3526  totalSupply() */\n      jump\t// in\n    tag_180:\n        /* \"D/decentralizedStableCoin.sol\":3497:3509  newMaxSupply */\n      dup2\n        /* \"D/decentralizedStableCoin.sol\":3497:3526  newMaxSupply >= totalSupply() */\n      lt\n      iszero\n        /* \"D/decentralizedStableCoin.sol\":3489:3568  require(newMaxSupply >= totalSupply(), \"New max supply less than total supply\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_181:\n        /* \"D/decentralizedStableCoin.sol\":3590:3602  newMaxSupply */\n      dup1\n        /* \"D/decentralizedStableCoin.sol\":3578:3587  maxSupply */\n      0x08\n        /* \"D/decentralizedStableCoin.sol\":3578:3602  maxSupply = newMaxSupply */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"D/decentralizedStableCoin.sol\":3617:3647  MaxSupplyUpdated(newMaxSupply) */\n      0x7810bd47de260c3e9ee10061cf438099dd12256c79485f12f94dbccc981e806c\n        /* \"D/decentralizedStableCoin.sol\":3634:3646  newMaxSupply */\n      dup2\n        /* \"D/decentralizedStableCoin.sol\":3617:3647  MaxSupplyUpdated(newMaxSupply) */\n      mload(0x40)\n      tag_184\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"D/decentralizedStableCoin.sol\":3413:3654  function updateMaxSupply(uint256 newMaxSupply) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_186\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_111\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_188\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_188:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_190\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_148\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_193\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_194\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_196\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_106\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_197\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_62\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_197:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_198\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_199\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_106\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_198:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_202\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_88\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10599:10616  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10616  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_203\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10655:10660  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10652  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10660  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n      iszero\n      tag_204\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10714:10721  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10723:10739  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10741:10746  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      tag_207\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10812:10817  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10819:10826  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10847:10852  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10852  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10854:10859  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10811  _approve */\n      tag_194\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_207:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n    tag_203:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10891  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_209\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_210\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_211\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_212\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_213\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_214\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_213:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x06)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_216\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_217\n      swap1\n      tag_218\n      jump\t// in\n    tag_217:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_216:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n      tag_220\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_221\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      tag_222\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n      tag_214\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      jump\t// in\n    tag_222:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8073:8074  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8061  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n      tag_226\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8125:8126  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8098:8128  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_227\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_227:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n    tag_226:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      tag_228\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8156:8163  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8173:8174  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8177:8182  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8155  _update */\n      tag_214\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      jump\t// in\n    tag_228:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_230\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_231\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_230:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_232\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_233\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_233:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_232:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_234\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_235\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_235:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_234:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_237\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_238\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_238:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_239)\n    tag_237:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_240\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_241\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_241:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_240:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_242\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_243)\n    tag_242:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_243:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_244\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_244:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_245:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_246:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_247:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_248:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_249:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_288\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_245\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":711:782   */\n      tag_289\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_246\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_290\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_247\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":881:910   */\n      tag_291\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_248\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_28:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_293\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_249\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_251:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_253:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_254:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_299\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_253\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_255:\n        /* \"#utility.yul\":1876:1900   */\n      tag_301\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_254\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_302\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_302:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_256:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_304\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_255\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_257:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_258:\n        /* \"#utility.yul\":2232:2256   */\n      tag_307\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_257\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_308\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      0x00\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_308:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_259:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_310\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_258\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_31:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      0x00\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_313\n      tag_251\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":2525:2644   */\n    tag_312:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_314\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_256\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_315\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_259\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_260:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_261:\n        /* \"#utility.yul\":3089:3110   */\n      tag_318\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_260\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_34:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_320\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_261\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3668   */\n    tag_37:\n        /* \"#utility.yul\":3398:3404   */\n      0x00\n        /* \"#utility.yul\":3447:3449   */\n      0x20\n        /* \"#utility.yul\":3435:3444   */\n      dup3\n        /* \"#utility.yul\":3426:3433   */\n      dup5\n        /* \"#utility.yul\":3422:3445   */\n      sub\n        /* \"#utility.yul\":3418:3450   */\n      slt\n        /* \"#utility.yul\":3415:3534   */\n      iszero\n      tag_322\n      jumpi\n        /* \"#utility.yul\":3453:3532   */\n      tag_323\n      tag_251\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":3415:3534   */\n    tag_322:\n        /* \"#utility.yul\":3573:3574   */\n      0x00\n        /* \"#utility.yul\":3598:3651   */\n      tag_324\n        /* \"#utility.yul\":3643:3650   */\n      dup5\n        /* \"#utility.yul\":3634:3640   */\n      dup3\n        /* \"#utility.yul\":3623:3632   */\n      dup6\n        /* \"#utility.yul\":3619:3641   */\n      add\n        /* \"#utility.yul\":3598:3651   */\n      tag_256\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":3588:3651   */\n      swap2\n      pop\n        /* \"#utility.yul\":3544:3661   */\n      pop\n        /* \"#utility.yul\":3339:3668   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3674:3792   */\n    tag_262:\n        /* \"#utility.yul\":3761:3785   */\n      tag_326\n        /* \"#utility.yul\":3779:3784   */\n      dup2\n        /* \"#utility.yul\":3761:3785   */\n      tag_257\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":3756:3759   */\n      dup3\n        /* \"#utility.yul\":3749:3786   */\n      mstore\n        /* \"#utility.yul\":3674:3792   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4020   */\n    tag_42:\n        /* \"#utility.yul\":3891:3895   */\n      0x00\n        /* \"#utility.yul\":3929:3931   */\n      0x20\n        /* \"#utility.yul\":3918:3927   */\n      dup3\n        /* \"#utility.yul\":3914:3932   */\n      add\n        /* \"#utility.yul\":3906:3932   */\n      swap1\n      pop\n        /* \"#utility.yul\":3942:4013   */\n      tag_328\n        /* \"#utility.yul\":4010:4011   */\n      0x00\n        /* \"#utility.yul\":3999:4008   */\n      dup4\n        /* \"#utility.yul\":3995:4012   */\n      add\n        /* \"#utility.yul\":3986:3992   */\n      dup5\n        /* \"#utility.yul\":3942:4013   */\n      tag_262\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":3798:4020   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4026:4645   */\n    tag_45:\n        /* \"#utility.yul\":4103:4109   */\n      0x00\n        /* \"#utility.yul\":4111:4117   */\n      0x00\n        /* \"#utility.yul\":4119:4125   */\n      0x00\n        /* \"#utility.yul\":4168:4170   */\n      0x60\n        /* \"#utility.yul\":4156:4165   */\n      dup5\n        /* \"#utility.yul\":4147:4154   */\n      dup7\n        /* \"#utility.yul\":4143:4166   */\n      sub\n        /* \"#utility.yul\":4139:4171   */\n      slt\n        /* \"#utility.yul\":4136:4255   */\n      iszero\n      tag_330\n      jumpi\n        /* \"#utility.yul\":4174:4253   */\n      tag_331\n      tag_251\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":4136:4255   */\n    tag_330:\n        /* \"#utility.yul\":4294:4295   */\n      0x00\n        /* \"#utility.yul\":4319:4372   */\n      tag_332\n        /* \"#utility.yul\":4364:4371   */\n      dup7\n        /* \"#utility.yul\":4355:4361   */\n      dup3\n        /* \"#utility.yul\":4344:4353   */\n      dup8\n        /* \"#utility.yul\":4340:4362   */\n      add\n        /* \"#utility.yul\":4319:4372   */\n      tag_256\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":4309:4372   */\n      swap4\n      pop\n        /* \"#utility.yul\":4265:4382   */\n      pop\n        /* \"#utility.yul\":4421:4423   */\n      0x20\n        /* \"#utility.yul\":4447:4500   */\n      tag_333\n        /* \"#utility.yul\":4492:4499   */\n      dup7\n        /* \"#utility.yul\":4483:4489   */\n      dup3\n        /* \"#utility.yul\":4472:4481   */\n      dup8\n        /* \"#utility.yul\":4468:4490   */\n      add\n        /* \"#utility.yul\":4447:4500   */\n      tag_256\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":4437:4500   */\n      swap3\n      pop\n        /* \"#utility.yul\":4392:4510   */\n      pop\n        /* \"#utility.yul\":4549:4551   */\n      0x40\n        /* \"#utility.yul\":4575:4628   */\n      tag_334\n        /* \"#utility.yul\":4620:4627   */\n      dup7\n        /* \"#utility.yul\":4611:4617   */\n      dup3\n        /* \"#utility.yul\":4600:4609   */\n      dup8\n        /* \"#utility.yul\":4596:4618   */\n      add\n        /* \"#utility.yul\":4575:4628   */\n      tag_259\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":4565:4628   */\n      swap2\n      pop\n        /* \"#utility.yul\":4520:4638   */\n      pop\n        /* \"#utility.yul\":4026:4645   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4651:4737   */\n    tag_263:\n        /* \"#utility.yul\":4686:4693   */\n      0x00\n        /* \"#utility.yul\":4726:4730   */\n      0xff\n        /* \"#utility.yul\":4719:4724   */\n      dup3\n        /* \"#utility.yul\":4715:4731   */\n      and\n        /* \"#utility.yul\":4704:4731   */\n      swap1\n      pop\n        /* \"#utility.yul\":4651:4737   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4743:4855   */\n    tag_264:\n        /* \"#utility.yul\":4826:4848   */\n      tag_337\n        /* \"#utility.yul\":4842:4847   */\n      dup2\n        /* \"#utility.yul\":4826:4848   */\n      tag_263\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":4821:4824   */\n      dup3\n        /* \"#utility.yul\":4814:4849   */\n      mstore\n        /* \"#utility.yul\":4743:4855   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4861:5075   */\n    tag_51:\n        /* \"#utility.yul\":4950:4954   */\n      0x00\n        /* \"#utility.yul\":4988:4990   */\n      0x20\n        /* \"#utility.yul\":4977:4986   */\n      dup3\n        /* \"#utility.yul\":4973:4991   */\n      add\n        /* \"#utility.yul\":4965:4991   */\n      swap1\n      pop\n        /* \"#utility.yul\":5001:5068   */\n      tag_339\n        /* \"#utility.yul\":5065:5066   */\n      0x00\n        /* \"#utility.yul\":5054:5063   */\n      dup4\n        /* \"#utility.yul\":5050:5067   */\n      add\n        /* \"#utility.yul\":5041:5047   */\n      dup5\n        /* \"#utility.yul\":5001:5068   */\n      tag_264\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":4861:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5199   */\n    tag_265:\n        /* \"#utility.yul\":5168:5192   */\n      tag_341\n        /* \"#utility.yul\":5186:5191   */\n      dup2\n        /* \"#utility.yul\":5168:5192   */\n      tag_254\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":5163:5166   */\n      dup3\n        /* \"#utility.yul\":5156:5193   */\n      mstore\n        /* \"#utility.yul\":5081:5199   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5205:5427   */\n    tag_64:\n        /* \"#utility.yul\":5298:5302   */\n      0x00\n        /* \"#utility.yul\":5336:5338   */\n      0x20\n        /* \"#utility.yul\":5325:5334   */\n      dup3\n        /* \"#utility.yul\":5321:5339   */\n      add\n        /* \"#utility.yul\":5313:5339   */\n      swap1\n      pop\n        /* \"#utility.yul\":5349:5420   */\n      tag_343\n        /* \"#utility.yul\":5417:5418   */\n      0x00\n        /* \"#utility.yul\":5406:5415   */\n      dup4\n        /* \"#utility.yul\":5402:5419   */\n      add\n        /* \"#utility.yul\":5393:5399   */\n      dup5\n        /* \"#utility.yul\":5349:5420   */\n      tag_265\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":5205:5427   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5433:5907   */\n    tag_87:\n        /* \"#utility.yul\":5501:5507   */\n      0x00\n        /* \"#utility.yul\":5509:5515   */\n      0x00\n        /* \"#utility.yul\":5558:5560   */\n      0x40\n        /* \"#utility.yul\":5546:5555   */\n      dup4\n        /* \"#utility.yul\":5537:5544   */\n      dup6\n        /* \"#utility.yul\":5533:5556   */\n      sub\n        /* \"#utility.yul\":5529:5561   */\n      slt\n        /* \"#utility.yul\":5526:5645   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":5564:5643   */\n      tag_346\n      tag_251\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":5526:5645   */\n    tag_345:\n        /* \"#utility.yul\":5684:5685   */\n      0x00\n        /* \"#utility.yul\":5709:5762   */\n      tag_347\n        /* \"#utility.yul\":5754:5761   */\n      dup6\n        /* \"#utility.yul\":5745:5751   */\n      dup3\n        /* \"#utility.yul\":5734:5743   */\n      dup7\n        /* \"#utility.yul\":5730:5752   */\n      add\n        /* \"#utility.yul\":5709:5762   */\n      tag_256\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":5699:5762   */\n      swap3\n      pop\n        /* \"#utility.yul\":5655:5772   */\n      pop\n        /* \"#utility.yul\":5811:5813   */\n      0x20\n        /* \"#utility.yul\":5837:5890   */\n      tag_348\n        /* \"#utility.yul\":5882:5889   */\n      dup6\n        /* \"#utility.yul\":5873:5879   */\n      dup3\n        /* \"#utility.yul\":5862:5871   */\n      dup7\n        /* \"#utility.yul\":5858:5880   */\n      add\n        /* \"#utility.yul\":5837:5890   */\n      tag_256\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":5827:5890   */\n      swap2\n      pop\n        /* \"#utility.yul\":5782:5900   */\n      pop\n        /* \"#utility.yul\":5433:5907   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5913:6242   */\n    tag_92:\n        /* \"#utility.yul\":5972:5978   */\n      0x00\n        /* \"#utility.yul\":6021:6023   */\n      0x20\n        /* \"#utility.yul\":6009:6018   */\n      dup3\n        /* \"#utility.yul\":6000:6007   */\n      dup5\n        /* \"#utility.yul\":5996:6019   */\n      sub\n        /* \"#utility.yul\":5992:6024   */\n      slt\n        /* \"#utility.yul\":5989:6108   */\n      iszero\n      tag_350\n      jumpi\n        /* \"#utility.yul\":6027:6106   */\n      tag_351\n      tag_251\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":5989:6108   */\n    tag_350:\n        /* \"#utility.yul\":6147:6148   */\n      0x00\n        /* \"#utility.yul\":6172:6225   */\n      tag_352\n        /* \"#utility.yul\":6217:6224   */\n      dup5\n        /* \"#utility.yul\":6208:6214   */\n      dup3\n        /* \"#utility.yul\":6197:6206   */\n      dup6\n        /* \"#utility.yul\":6193:6215   */\n      add\n        /* \"#utility.yul\":6172:6225   */\n      tag_259\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":6162:6225   */\n      swap2\n      pop\n        /* \"#utility.yul\":6118:6235   */\n      pop\n        /* \"#utility.yul\":5913:6242   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6248:6428   */\n    tag_266:\n        /* \"#utility.yul\":6296:6373   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6293:6294   */\n      0x00\n        /* \"#utility.yul\":6286:6374   */\n      mstore\n        /* \"#utility.yul\":6393:6397   */\n      0x22\n        /* \"#utility.yul\":6390:6391   */\n      0x04\n        /* \"#utility.yul\":6383:6398   */\n      mstore\n        /* \"#utility.yul\":6417:6421   */\n      0x24\n        /* \"#utility.yul\":6414:6415   */\n      0x00\n        /* \"#utility.yul\":6407:6422   */\n      revert\n        /* \"#utility.yul\":6434:6754   */\n    tag_99:\n        /* \"#utility.yul\":6478:6484   */\n      0x00\n        /* \"#utility.yul\":6515:6516   */\n      0x02\n        /* \"#utility.yul\":6509:6513   */\n      dup3\n        /* \"#utility.yul\":6505:6517   */\n      div\n        /* \"#utility.yul\":6495:6517   */\n      swap1\n      pop\n        /* \"#utility.yul\":6562:6563   */\n      0x01\n        /* \"#utility.yul\":6556:6560   */\n      dup3\n        /* \"#utility.yul\":6552:6564   */\n      and\n        /* \"#utility.yul\":6583:6601   */\n      dup1\n        /* \"#utility.yul\":6573:6654   */\n      tag_355\n      jumpi\n        /* \"#utility.yul\":6639:6643   */\n      0x7f\n        /* \"#utility.yul\":6631:6637   */\n      dup3\n        /* \"#utility.yul\":6627:6644   */\n      and\n        /* \"#utility.yul\":6617:6644   */\n      swap2\n      pop\n        /* \"#utility.yul\":6573:6654   */\n    tag_355:\n        /* \"#utility.yul\":6701:6703   */\n      0x20\n        /* \"#utility.yul\":6693:6699   */\n      dup3\n        /* \"#utility.yul\":6690:6704   */\n      lt\n        /* \"#utility.yul\":6670:6688   */\n      dup2\n        /* \"#utility.yul\":6667:6705   */\n      sub\n        /* \"#utility.yul\":6664:6748   */\n      tag_356\n      jumpi\n        /* \"#utility.yul\":6720:6738   */\n      tag_357\n      tag_266\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":6664:6748   */\n    tag_356:\n        /* \"#utility.yul\":6485:6754   */\n      pop\n        /* \"#utility.yul\":6434:6754   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6760:6925   */\n    tag_267:\n        /* \"#utility.yul\":6900:6917   */\n      0x496e76616c696420616464726573730000000000000000000000000000000000\n        /* \"#utility.yul\":6896:6897   */\n      0x00\n        /* \"#utility.yul\":6888:6894   */\n      dup3\n        /* \"#utility.yul\":6884:6898   */\n      add\n        /* \"#utility.yul\":6877:6918   */\n      mstore\n        /* \"#utility.yul\":6760:6925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6931:7297   */\n    tag_268:\n        /* \"#utility.yul\":7073:7076   */\n      0x00\n        /* \"#utility.yul\":7094:7161   */\n      tag_360\n        /* \"#utility.yul\":7158:7160   */\n      0x0f\n        /* \"#utility.yul\":7153:7156   */\n      dup4\n        /* \"#utility.yul\":7094:7161   */\n      tag_246\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":7087:7161   */\n      swap2\n      pop\n        /* \"#utility.yul\":7170:7263   */\n      tag_361\n        /* \"#utility.yul\":7259:7262   */\n      dup3\n        /* \"#utility.yul\":7170:7263   */\n      tag_267\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":7288:7290   */\n      0x20\n        /* \"#utility.yul\":7283:7286   */\n      dup3\n        /* \"#utility.yul\":7279:7291   */\n      add\n        /* \"#utility.yul\":7272:7291   */\n      swap1\n      pop\n        /* \"#utility.yul\":6931:7297   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7303:7722   */\n    tag_115:\n        /* \"#utility.yul\":7469:7473   */\n      0x00\n        /* \"#utility.yul\":7507:7509   */\n      0x20\n        /* \"#utility.yul\":7496:7505   */\n      dup3\n        /* \"#utility.yul\":7492:7510   */\n      add\n        /* \"#utility.yul\":7484:7510   */\n      swap1\n      pop\n        /* \"#utility.yul\":7556:7565   */\n      dup2\n        /* \"#utility.yul\":7550:7554   */\n      dup2\n        /* \"#utility.yul\":7546:7566   */\n      sub\n        /* \"#utility.yul\":7542:7543   */\n      0x00\n        /* \"#utility.yul\":7531:7540   */\n      dup4\n        /* \"#utility.yul\":7527:7544   */\n      add\n        /* \"#utility.yul\":7520:7567   */\n      mstore\n        /* \"#utility.yul\":7584:7715   */\n      tag_363\n        /* \"#utility.yul\":7710:7714   */\n      dup2\n        /* \"#utility.yul\":7584:7715   */\n      tag_268\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":7576:7715   */\n      swap1\n      pop\n        /* \"#utility.yul\":7303:7722   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7728:7900   */\n    tag_269:\n        /* \"#utility.yul\":7868:7892   */\n      0x4e6f7420617574686f72697a656420746f206d696e7400000000000000000000\n        /* \"#utility.yul\":7864:7865   */\n      0x00\n        /* \"#utility.yul\":7856:7862   */\n      dup3\n        /* \"#utility.yul\":7852:7866   */\n      add\n        /* \"#utility.yul\":7845:7893   */\n      mstore\n        /* \"#utility.yul\":7728:7900   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7906:8272   */\n    tag_270:\n        /* \"#utility.yul\":8048:8051   */\n      0x00\n        /* \"#utility.yul\":8069:8136   */\n      tag_366\n        /* \"#utility.yul\":8133:8135   */\n      0x16\n        /* \"#utility.yul\":8128:8131   */\n      dup4\n        /* \"#utility.yul\":8069:8136   */\n      tag_246\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":8062:8136   */\n      swap2\n      pop\n        /* \"#utility.yul\":8145:8238   */\n      tag_367\n        /* \"#utility.yul\":8234:8237   */\n      dup3\n        /* \"#utility.yul\":8145:8238   */\n      tag_269\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":8263:8265   */\n      0x20\n        /* \"#utility.yul\":8258:8261   */\n      dup3\n        /* \"#utility.yul\":8254:8266   */\n      add\n        /* \"#utility.yul\":8247:8266   */\n      swap1\n      pop\n        /* \"#utility.yul\":7906:8272   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8278:8697   */\n    tag_132:\n        /* \"#utility.yul\":8444:8448   */\n      0x00\n        /* \"#utility.yul\":8482:8484   */\n      0x20\n        /* \"#utility.yul\":8471:8480   */\n      dup3\n        /* \"#utility.yul\":8467:8485   */\n      add\n        /* \"#utility.yul\":8459:8485   */\n      swap1\n      pop\n        /* \"#utility.yul\":8531:8540   */\n      dup2\n        /* \"#utility.yul\":8525:8529   */\n      dup2\n        /* \"#utility.yul\":8521:8541   */\n      sub\n        /* \"#utility.yul\":8517:8518   */\n      0x00\n        /* \"#utility.yul\":8506:8515   */\n      dup4\n        /* \"#utility.yul\":8502:8519   */\n      add\n        /* \"#utility.yul\":8495:8542   */\n      mstore\n        /* \"#utility.yul\":8559:8690   */\n      tag_369\n        /* \"#utility.yul\":8685:8689   */\n      dup2\n        /* \"#utility.yul\":8559:8690   */\n      tag_270\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":8551:8690   */\n      swap1\n      pop\n        /* \"#utility.yul\":8278:8697   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8703:8883   */\n    tag_271:\n        /* \"#utility.yul\":8751:8828   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8748:8749   */\n      0x00\n        /* \"#utility.yul\":8741:8829   */\n      mstore\n        /* \"#utility.yul\":8848:8852   */\n      0x11\n        /* \"#utility.yul\":8845:8846   */\n      0x04\n        /* \"#utility.yul\":8838:8853   */\n      mstore\n        /* \"#utility.yul\":8872:8876   */\n      0x24\n        /* \"#utility.yul\":8869:8870   */\n      0x00\n        /* \"#utility.yul\":8862:8877   */\n      revert\n        /* \"#utility.yul\":8889:9080   */\n    tag_135:\n        /* \"#utility.yul\":8929:8932   */\n      0x00\n        /* \"#utility.yul\":8948:8968   */\n      tag_372\n        /* \"#utility.yul\":8966:8967   */\n      dup3\n        /* \"#utility.yul\":8948:8968   */\n      tag_257\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":8943:8968   */\n      swap2\n      pop\n        /* \"#utility.yul\":8982:9002   */\n      tag_373\n        /* \"#utility.yul\":9000:9001   */\n      dup4\n        /* \"#utility.yul\":8982:9002   */\n      tag_257\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":8977:9002   */\n      swap3\n      pop\n        /* \"#utility.yul\":9025:9026   */\n      dup3\n        /* \"#utility.yul\":9022:9023   */\n      dup3\n        /* \"#utility.yul\":9018:9027   */\n      add\n        /* \"#utility.yul\":9011:9027   */\n      swap1\n      pop\n        /* \"#utility.yul\":9046:9049   */\n      dup1\n        /* \"#utility.yul\":9043:9044   */\n      dup3\n        /* \"#utility.yul\":9040:9050   */\n      gt\n        /* \"#utility.yul\":9037:9073   */\n      iszero\n      tag_374\n      jumpi\n        /* \"#utility.yul\":9053:9071   */\n      tag_375\n      tag_271\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":9037:9073   */\n    tag_374:\n        /* \"#utility.yul\":8889:9080   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9086:9254   */\n    tag_272:\n        /* \"#utility.yul\":9226:9246   */\n      0x45786365656473206d617820737570706c790000000000000000000000000000\n        /* \"#utility.yul\":9222:9223   */\n      0x00\n        /* \"#utility.yul\":9214:9220   */\n      dup3\n        /* \"#utility.yul\":9210:9224   */\n      add\n        /* \"#utility.yul\":9203:9247   */\n      mstore\n        /* \"#utility.yul\":9086:9254   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9260:9626   */\n    tag_273:\n        /* \"#utility.yul\":9402:9405   */\n      0x00\n        /* \"#utility.yul\":9423:9490   */\n      tag_378\n        /* \"#utility.yul\":9487:9489   */\n      0x12\n        /* \"#utility.yul\":9482:9485   */\n      dup4\n        /* \"#utility.yul\":9423:9490   */\n      tag_246\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":9416:9490   */\n      swap2\n      pop\n        /* \"#utility.yul\":9499:9592   */\n      tag_379\n        /* \"#utility.yul\":9588:9591   */\n      dup3\n        /* \"#utility.yul\":9499:9592   */\n      tag_272\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":9617:9619   */\n      0x20\n        /* \"#utility.yul\":9612:9615   */\n      dup3\n        /* \"#utility.yul\":9608:9620   */\n      add\n        /* \"#utility.yul\":9601:9620   */\n      swap1\n      pop\n        /* \"#utility.yul\":9260:9626   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9632:10051   */\n    tag_138:\n        /* \"#utility.yul\":9798:9802   */\n      0x00\n        /* \"#utility.yul\":9836:9838   */\n      0x20\n        /* \"#utility.yul\":9825:9834   */\n      dup3\n        /* \"#utility.yul\":9821:9839   */\n      add\n        /* \"#utility.yul\":9813:9839   */\n      swap1\n      pop\n        /* \"#utility.yul\":9885:9894   */\n      dup2\n        /* \"#utility.yul\":9879:9883   */\n      dup2\n        /* \"#utility.yul\":9875:9895   */\n      sub\n        /* \"#utility.yul\":9871:9872   */\n      0x00\n        /* \"#utility.yul\":9860:9869   */\n      dup4\n        /* \"#utility.yul\":9856:9873   */\n      add\n        /* \"#utility.yul\":9849:9896   */\n      mstore\n        /* \"#utility.yul\":9913:10044   */\n      tag_381\n        /* \"#utility.yul\":10039:10043   */\n      dup2\n        /* \"#utility.yul\":9913:10044   */\n      tag_273\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":9905:10044   */\n      swap1\n      pop\n        /* \"#utility.yul\":9632:10051   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10057:10229   */\n    tag_274:\n        /* \"#utility.yul\":10197:10221   */\n      0x4e6f7420617574686f72697a656420746f206275726e00000000000000000000\n        /* \"#utility.yul\":10193:10194   */\n      0x00\n        /* \"#utility.yul\":10185:10191   */\n      dup3\n        /* \"#utility.yul\":10181:10195   */\n      add\n        /* \"#utility.yul\":10174:10222   */\n      mstore\n        /* \"#utility.yul\":10057:10229   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10235:10601   */\n    tag_275:\n        /* \"#utility.yul\":10377:10380   */\n      0x00\n        /* \"#utility.yul\":10398:10465   */\n      tag_384\n        /* \"#utility.yul\":10462:10464   */\n      0x16\n        /* \"#utility.yul\":10457:10460   */\n      dup4\n        /* \"#utility.yul\":10398:10465   */\n      tag_246\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":10391:10465   */\n      swap2\n      pop\n        /* \"#utility.yul\":10474:10567   */\n      tag_385\n        /* \"#utility.yul\":10563:10566   */\n      dup3\n        /* \"#utility.yul\":10474:10567   */\n      tag_274\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":10592:10594   */\n      0x20\n        /* \"#utility.yul\":10587:10590   */\n      dup3\n        /* \"#utility.yul\":10583:10595   */\n      add\n        /* \"#utility.yul\":10576:10595   */\n      swap1\n      pop\n        /* \"#utility.yul\":10235:10601   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10607:11026   */\n    tag_163:\n        /* \"#utility.yul\":10773:10777   */\n      0x00\n        /* \"#utility.yul\":10811:10813   */\n      0x20\n        /* \"#utility.yul\":10800:10809   */\n      dup3\n        /* \"#utility.yul\":10796:10814   */\n      add\n        /* \"#utility.yul\":10788:10814   */\n      swap1\n      pop\n        /* \"#utility.yul\":10860:10869   */\n      dup2\n        /* \"#utility.yul\":10854:10858   */\n      dup2\n        /* \"#utility.yul\":10850:10870   */\n      sub\n        /* \"#utility.yul\":10846:10847   */\n      0x00\n        /* \"#utility.yul\":10835:10844   */\n      dup4\n        /* \"#utility.yul\":10831:10848   */\n      add\n        /* \"#utility.yul\":10824:10871   */\n      mstore\n        /* \"#utility.yul\":10888:11019   */\n      tag_387\n        /* \"#utility.yul\":11014:11018   */\n      dup2\n        /* \"#utility.yul\":10888:11019   */\n      tag_275\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":10880:11019   */\n      swap1\n      pop\n        /* \"#utility.yul\":10607:11026   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11032:11204   */\n    tag_276:\n        /* \"#utility.yul\":11172:11196   */\n      0x41646472657373206e6f7420617574686f72697a656400000000000000000000\n        /* \"#utility.yul\":11168:11169   */\n      0x00\n        /* \"#utility.yul\":11160:11166   */\n      dup3\n        /* \"#utility.yul\":11156:11170   */\n      add\n        /* \"#utility.yul\":11149:11197   */\n      mstore\n        /* \"#utility.yul\":11032:11204   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11210:11576   */\n    tag_277:\n        /* \"#utility.yul\":11352:11355   */\n      0x00\n        /* \"#utility.yul\":11373:11440   */\n      tag_390\n        /* \"#utility.yul\":11437:11439   */\n      0x16\n        /* \"#utility.yul\":11432:11435   */\n      dup4\n        /* \"#utility.yul\":11373:11440   */\n      tag_246\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":11366:11440   */\n      swap2\n      pop\n        /* \"#utility.yul\":11449:11542   */\n      tag_391\n        /* \"#utility.yul\":11538:11541   */\n      dup3\n        /* \"#utility.yul\":11449:11542   */\n      tag_276\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":11567:11569   */\n      0x20\n        /* \"#utility.yul\":11562:11565   */\n      dup3\n        /* \"#utility.yul\":11558:11570   */\n      add\n        /* \"#utility.yul\":11551:11570   */\n      swap1\n      pop\n        /* \"#utility.yul\":11210:11576   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11582:12001   */\n    tag_175:\n        /* \"#utility.yul\":11748:11752   */\n      0x00\n        /* \"#utility.yul\":11786:11788   */\n      0x20\n        /* \"#utility.yul\":11775:11784   */\n      dup3\n        /* \"#utility.yul\":11771:11789   */\n      add\n        /* \"#utility.yul\":11763:11789   */\n      swap1\n      pop\n        /* \"#utility.yul\":11835:11844   */\n      dup2\n        /* \"#utility.yul\":11829:11833   */\n      dup2\n        /* \"#utility.yul\":11825:11845   */\n      sub\n        /* \"#utility.yul\":11821:11822   */\n      0x00\n        /* \"#utility.yul\":11810:11819   */\n      dup4\n        /* \"#utility.yul\":11806:11823   */\n      add\n        /* \"#utility.yul\":11799:11846   */\n      mstore\n        /* \"#utility.yul\":11863:11994   */\n      tag_393\n        /* \"#utility.yul\":11989:11993   */\n      dup2\n        /* \"#utility.yul\":11863:11994   */\n      tag_277\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":11855:11994   */\n      swap1\n      pop\n        /* \"#utility.yul\":11582:12001   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12007:12231   */\n    tag_278:\n        /* \"#utility.yul\":12147:12181   */\n      0x4e6577206d617820737570706c79206c657373207468616e20746f74616c2073\n        /* \"#utility.yul\":12143:12144   */\n      0x00\n        /* \"#utility.yul\":12135:12141   */\n      dup3\n        /* \"#utility.yul\":12131:12145   */\n      add\n        /* \"#utility.yul\":12124:12182   */\n      mstore\n        /* \"#utility.yul\":12216:12223   */\n      0x7570706c79000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12211:12213   */\n      0x20\n        /* \"#utility.yul\":12203:12209   */\n      dup3\n        /* \"#utility.yul\":12199:12214   */\n      add\n        /* \"#utility.yul\":12192:12224   */\n      mstore\n        /* \"#utility.yul\":12007:12231   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12237:12603   */\n    tag_279:\n        /* \"#utility.yul\":12379:12382   */\n      0x00\n        /* \"#utility.yul\":12400:12467   */\n      tag_396\n        /* \"#utility.yul\":12464:12466   */\n      0x25\n        /* \"#utility.yul\":12459:12462   */\n      dup4\n        /* \"#utility.yul\":12400:12467   */\n      tag_246\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":12393:12467   */\n      swap2\n      pop\n        /* \"#utility.yul\":12476:12569   */\n      tag_397\n        /* \"#utility.yul\":12565:12568   */\n      dup3\n        /* \"#utility.yul\":12476:12569   */\n      tag_278\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":12594:12596   */\n      0x40\n        /* \"#utility.yul\":12589:12592   */\n      dup3\n        /* \"#utility.yul\":12585:12597   */\n      add\n        /* \"#utility.yul\":12578:12597   */\n      swap1\n      pop\n        /* \"#utility.yul\":12237:12603   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12609:13028   */\n    tag_183:\n        /* \"#utility.yul\":12775:12779   */\n      0x00\n        /* \"#utility.yul\":12813:12815   */\n      0x20\n        /* \"#utility.yul\":12802:12811   */\n      dup3\n        /* \"#utility.yul\":12798:12816   */\n      add\n        /* \"#utility.yul\":12790:12816   */\n      swap1\n      pop\n        /* \"#utility.yul\":12862:12871   */\n      dup2\n        /* \"#utility.yul\":12856:12860   */\n      dup2\n        /* \"#utility.yul\":12852:12872   */\n      sub\n        /* \"#utility.yul\":12848:12849   */\n      0x00\n        /* \"#utility.yul\":12837:12846   */\n      dup4\n        /* \"#utility.yul\":12833:12850   */\n      add\n        /* \"#utility.yul\":12826:12873   */\n      mstore\n        /* \"#utility.yul\":12890:13021   */\n      tag_399\n        /* \"#utility.yul\":13016:13020   */\n      dup2\n        /* \"#utility.yul\":12890:13021   */\n      tag_279\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":12882:13021   */\n      swap1\n      pop\n        /* \"#utility.yul\":12609:13028   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13034:13476   */\n    tag_206:\n        /* \"#utility.yul\":13183:13187   */\n      0x00\n        /* \"#utility.yul\":13221:13223   */\n      0x60\n        /* \"#utility.yul\":13210:13219   */\n      dup3\n        /* \"#utility.yul\":13206:13224   */\n      add\n        /* \"#utility.yul\":13198:13224   */\n      swap1\n      pop\n        /* \"#utility.yul\":13234:13305   */\n      tag_401\n        /* \"#utility.yul\":13302:13303   */\n      0x00\n        /* \"#utility.yul\":13291:13300   */\n      dup4\n        /* \"#utility.yul\":13287:13304   */\n      add\n        /* \"#utility.yul\":13278:13284   */\n      dup7\n        /* \"#utility.yul\":13234:13305   */\n      tag_265\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":13315:13387   */\n      tag_402\n        /* \"#utility.yul\":13383:13385   */\n      0x20\n        /* \"#utility.yul\":13372:13381   */\n      dup4\n        /* \"#utility.yul\":13368:13386   */\n      add\n        /* \"#utility.yul\":13359:13365   */\n      dup6\n        /* \"#utility.yul\":13315:13387   */\n      tag_262\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":13397:13469   */\n      tag_403\n        /* \"#utility.yul\":13465:13467   */\n      0x40\n        /* \"#utility.yul\":13454:13463   */\n      dup4\n        /* \"#utility.yul\":13450:13468   */\n      add\n        /* \"#utility.yul\":13441:13447   */\n      dup5\n        /* \"#utility.yul\":13397:13469   */\n      tag_262\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":13034:13476   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13482:13663   */\n    tag_280:\n        /* \"#utility.yul\":13622:13655   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":13618:13619   */\n      0x00\n        /* \"#utility.yul\":13610:13616   */\n      dup3\n        /* \"#utility.yul\":13606:13620   */\n      add\n        /* \"#utility.yul\":13599:13656   */\n      mstore\n        /* \"#utility.yul\":13482:13663   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13669:14035   */\n    tag_281:\n        /* \"#utility.yul\":13811:13814   */\n      0x00\n        /* \"#utility.yul\":13832:13899   */\n      tag_406\n        /* \"#utility.yul\":13896:13898   */\n      0x1f\n        /* \"#utility.yul\":13891:13894   */\n      dup4\n        /* \"#utility.yul\":13832:13899   */\n      tag_246\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":13825:13899   */\n      swap2\n      pop\n        /* \"#utility.yul\":13908:14001   */\n      tag_407\n        /* \"#utility.yul\":13997:14000   */\n      dup3\n        /* \"#utility.yul\":13908:14001   */\n      tag_280\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":14026:14028   */\n      0x20\n        /* \"#utility.yul\":14021:14024   */\n      dup3\n        /* \"#utility.yul\":14017:14029   */\n      add\n        /* \"#utility.yul\":14010:14029   */\n      swap1\n      pop\n        /* \"#utility.yul\":13669:14035   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14041:14460   */\n    tag_218:\n        /* \"#utility.yul\":14207:14211   */\n      0x00\n        /* \"#utility.yul\":14245:14247   */\n      0x20\n        /* \"#utility.yul\":14234:14243   */\n      dup3\n        /* \"#utility.yul\":14230:14248   */\n      add\n        /* \"#utility.yul\":14222:14248   */\n      swap1\n      pop\n        /* \"#utility.yul\":14294:14303   */\n      dup2\n        /* \"#utility.yul\":14288:14292   */\n      dup2\n        /* \"#utility.yul\":14284:14304   */\n      sub\n        /* \"#utility.yul\":14280:14281   */\n      0x00\n        /* \"#utility.yul\":14269:14278   */\n      dup4\n        /* \"#utility.yul\":14265:14282   */\n      add\n        /* \"#utility.yul\":14258:14305   */\n      mstore\n        /* \"#utility.yul\":14322:14453   */\n      tag_409\n        /* \"#utility.yul\":14448:14452   */\n      dup2\n        /* \"#utility.yul\":14322:14453   */\n      tag_281\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":14314:14453   */\n      swap1\n      pop\n        /* \"#utility.yul\":14041:14460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220250ac314adaffebd817c3a27012ee3c583e3d759cebef78a53d25f4726c9930a64736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1066": {
									"entryPoint": null,
									"id": 1066,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_303": {
									"entryPoint": null,
									"id": 303,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_401": {
									"entryPoint": null,
									"id": 401,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_704": {
									"entryPoint": 516,
									"id": 704,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 321,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_671": {
									"entryPoint": 649,
									"id": 671,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1409,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1474,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1550,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256_fromMemory": {
									"entryPoint": 1570,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2500,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_dd2cc46d89b7e80556543904a4da36625fe95b49f98b73acbd5ea91d7a0f099b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2634,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2794,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2515,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2809,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dd2cc46d89b7e80556543904a4da36625fe95b49f98b73acbd5ea91d7a0f099b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2668,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2862,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1321,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1186,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1829,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1726,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2540,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2743,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2108,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2483,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2452,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2074,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1964,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2245,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1395,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1847,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1781,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1955,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2190,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2698,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1736,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1227,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1997,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1203,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1207,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1199,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1195,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1211,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1862,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2050,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_dd2cc46d89b7e80556543904a4da36625fe95b49f98b73acbd5ea91d7a0f099b": {
									"entryPoint": 2556,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1874,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2006,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2043,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:12027:8",
										"nodeType": "YulBlock",
										"src": "0:12027:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:8",
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nativeSrc": "57:19:8",
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:8",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nativeSrc": "67:9:8",
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:8",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nativeSrc": "177:28:8",
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:8",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:8",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nativeSrc": "187:12:8",
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nativeSrc": "187:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nativeSrc": "300:28:8",
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:8",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:8",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nativeSrc": "310:12:8",
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nativeSrc": "310:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nativeSrc": "423:28:8",
													"nodeType": "YulBlock",
													"src": "423:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:8",
																		"nodeType": "YulLiteral",
																		"src": "440:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:8",
																		"nodeType": "YulLiteral",
																		"src": "443:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:8"
																},
																"nativeSrc": "433:12:8",
																"nodeType": "YulFunctionCall",
																"src": "433:12:8"
															},
															"nativeSrc": "433:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:8"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:8"
											},
											{
												"body": {
													"nativeSrc": "546:28:8",
													"nodeType": "YulBlock",
													"src": "546:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:8",
																		"nodeType": "YulLiteral",
																		"src": "563:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:8",
																		"nodeType": "YulLiteral",
																		"src": "566:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:8"
																},
																"nativeSrc": "556:12:8",
																"nodeType": "YulFunctionCall",
																"src": "556:12:8"
															},
															"nativeSrc": "556:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:8"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:8"
											},
											{
												"body": {
													"nativeSrc": "628:54:8",
													"nodeType": "YulBlock",
													"src": "628:54:8",
													"statements": [
														{
															"nativeSrc": "638:38:8",
															"nodeType": "YulAssignment",
															"src": "638:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:8",
																				"nodeType": "YulLiteral",
																				"src": "663:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:8"
																		},
																		"nativeSrc": "652:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:8",
																				"nodeType": "YulLiteral",
																				"src": "672:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:8"
																		},
																		"nativeSrc": "668:7:8",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:8"
																},
																"nativeSrc": "648:28:8",
																"nodeType": "YulFunctionCall",
																"src": "648:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:8",
														"nodeType": "YulTypedName",
														"src": "611:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:8",
														"nodeType": "YulTypedName",
														"src": "621:6:8",
														"type": ""
													}
												],
												"src": "580:102:8"
											},
											{
												"body": {
													"nativeSrc": "716:152:8",
													"nodeType": "YulBlock",
													"src": "716:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:8",
																		"nodeType": "YulLiteral",
																		"src": "733:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:8",
																		"nodeType": "YulLiteral",
																		"src": "736:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:8"
																},
																"nativeSrc": "726:88:8",
																"nodeType": "YulFunctionCall",
																"src": "726:88:8"
															},
															"nativeSrc": "726:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:8",
																		"nodeType": "YulLiteral",
																		"src": "830:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:8",
																		"nodeType": "YulLiteral",
																		"src": "833:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:8"
																},
																"nativeSrc": "823:15:8",
																"nodeType": "YulFunctionCall",
																"src": "823:15:8"
															},
															"nativeSrc": "823:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:8",
																		"nodeType": "YulLiteral",
																		"src": "854:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:8",
																		"nodeType": "YulLiteral",
																		"src": "857:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:8"
																},
																"nativeSrc": "847:15:8",
																"nodeType": "YulFunctionCall",
																"src": "847:15:8"
															},
															"nativeSrc": "847:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:8"
											},
											{
												"body": {
													"nativeSrc": "917:238:8",
													"nodeType": "YulBlock",
													"src": "917:238:8",
													"statements": [
														{
															"nativeSrc": "927:58:8",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:8",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:8"
																		},
																		"nativeSrc": "957:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:8"
																},
																"nativeSrc": "945:40:8",
																"nodeType": "YulFunctionCall",
																"src": "945:40:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:8",
																	"nodeType": "YulTypedName",
																	"src": "931:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:8",
																"nodeType": "YulBlock",
																"src": "1096:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:8"
																			},
																			"nativeSrc": "1098:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:8"
																		},
																		"nativeSrc": "1098:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:8",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:8"
																		},
																		"nativeSrc": "1036:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:8"
																		},
																		"nativeSrc": "1072:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:8"
																},
																"nativeSrc": "1033:62:8",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:8"
															},
															"nativeSrc": "1030:88:8",
															"nodeType": "YulIf",
															"src": "1030:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:8"
																},
																"nativeSrc": "1127:22:8",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:8"
															},
															"nativeSrc": "1127:22:8",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:8"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:8",
														"nodeType": "YulTypedName",
														"src": "903:6:8",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:8",
														"nodeType": "YulTypedName",
														"src": "911:4:8",
														"type": ""
													}
												],
												"src": "874:281:8"
											},
											{
												"body": {
													"nativeSrc": "1202:88:8",
													"nodeType": "YulBlock",
													"src": "1202:88:8",
													"statements": [
														{
															"nativeSrc": "1212:30:8",
															"nodeType": "YulAssignment",
															"src": "1212:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:8"
																},
																"nativeSrc": "1222:20:8",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:8"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:8"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:8",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:8"
																},
																"nativeSrc": "1251:33:8",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:8"
															},
															"nativeSrc": "1251:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:8"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:8",
														"nodeType": "YulTypedName",
														"src": "1186:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:8",
														"nodeType": "YulTypedName",
														"src": "1195:6:8",
														"type": ""
													}
												],
												"src": "1161:129:8"
											},
											{
												"body": {
													"nativeSrc": "1363:241:8",
													"nodeType": "YulBlock",
													"src": "1363:241:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:8",
																"nodeType": "YulBlock",
																"src": "1468:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:8"
																			},
																			"nativeSrc": "1470:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:8"
																		},
																		"nativeSrc": "1470:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:8",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:8"
																},
																"nativeSrc": "1437:30:8",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:8"
															},
															"nativeSrc": "1434:56:8",
															"nodeType": "YulIf",
															"src": "1434:56:8"
														},
														{
															"nativeSrc": "1500:37:8",
															"nodeType": "YulAssignment",
															"src": "1500:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:8"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:8",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:8"
																},
																"nativeSrc": "1508:29:8",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:8"
																}
															]
														},
														{
															"nativeSrc": "1574:23:8",
															"nodeType": "YulAssignment",
															"src": "1574:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:8"
																},
																"nativeSrc": "1582:15:8",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:8"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:8",
														"nodeType": "YulTypedName",
														"src": "1347:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:8",
														"nodeType": "YulTypedName",
														"src": "1358:4:8",
														"type": ""
													}
												],
												"src": "1296:308:8"
											},
											{
												"body": {
													"nativeSrc": "1672:77:8",
													"nodeType": "YulBlock",
													"src": "1672:77:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1689:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1689:3:8"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1694:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1694:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1699:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:8"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1683:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1683:5:8"
																},
																"nativeSrc": "1683:23:8",
																"nodeType": "YulFunctionCall",
																"src": "1683:23:8"
															},
															"nativeSrc": "1683:23:8",
															"nodeType": "YulExpressionStatement",
															"src": "1683:23:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1726:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "1726:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1731:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1731:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1722:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1722:3:8"
																		},
																		"nativeSrc": "1722:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1722:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1740:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1715:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1715:6:8"
																},
																"nativeSrc": "1715:27:8",
																"nodeType": "YulFunctionCall",
																"src": "1715:27:8"
															},
															"nativeSrc": "1715:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "1715:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:8",
														"nodeType": "YulTypedName",
														"src": "1654:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:8",
														"nodeType": "YulTypedName",
														"src": "1659:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:8",
														"nodeType": "YulTypedName",
														"src": "1664:6:8",
														"type": ""
													}
												],
												"src": "1610:139:8"
											},
											{
												"body": {
													"nativeSrc": "1850:339:8",
													"nodeType": "YulBlock",
													"src": "1850:339:8",
													"statements": [
														{
															"nativeSrc": "1860:75:8",
															"nodeType": "YulAssignment",
															"src": "1860:75:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1927:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1927:6:8"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1885:41:8",
																			"nodeType": "YulIdentifier",
																			"src": "1885:41:8"
																		},
																		"nativeSrc": "1885:49:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1885:49:8"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1869:15:8",
																	"nodeType": "YulIdentifier",
																	"src": "1869:15:8"
																},
																"nativeSrc": "1869:66:8",
																"nodeType": "YulFunctionCall",
																"src": "1869:66:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1860:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1860:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1951:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1951:5:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1958:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1958:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1944:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:8"
																},
																"nativeSrc": "1944:21:8",
																"nodeType": "YulFunctionCall",
																"src": "1944:21:8"
															},
															"nativeSrc": "1944:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "1944:21:8"
														},
														{
															"nativeSrc": "1974:27:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1974:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1989:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1989:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1996:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1996:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1985:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:8"
																},
																"nativeSrc": "1985:16:8",
																"nodeType": "YulFunctionCall",
																"src": "1985:16:8"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1978:3:8",
																	"nodeType": "YulTypedName",
																	"src": "1978:3:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2039:83:8",
																"nodeType": "YulBlock",
																"src": "2039:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2041:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "2041:77:8"
																			},
																			"nativeSrc": "2041:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2041:79:8"
																		},
																		"nativeSrc": "2041:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2041:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2020:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2020:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2025:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2025:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2016:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2016:3:8"
																		},
																		"nativeSrc": "2016:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2016:16:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2034:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2034:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2013:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2013:2:8"
																},
																"nativeSrc": "2013:25:8",
																"nodeType": "YulFunctionCall",
																"src": "2013:25:8"
															},
															"nativeSrc": "2010:112:8",
															"nodeType": "YulIf",
															"src": "2010:112:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:8"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2131:34:8",
																	"nodeType": "YulIdentifier",
																	"src": "2131:34:8"
																},
																"nativeSrc": "2131:52:8",
																"nodeType": "YulFunctionCall",
																"src": "2131:52:8"
															},
															"nativeSrc": "2131:52:8",
															"nodeType": "YulExpressionStatement",
															"src": "2131:52:8"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1755:434:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1823:3:8",
														"nodeType": "YulTypedName",
														"src": "1823:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1828:6:8",
														"nodeType": "YulTypedName",
														"src": "1828:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1836:3:8",
														"nodeType": "YulTypedName",
														"src": "1836:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1844:5:8",
														"nodeType": "YulTypedName",
														"src": "1844:5:8",
														"type": ""
													}
												],
												"src": "1755:434:8"
											},
											{
												"body": {
													"nativeSrc": "2282:282:8",
													"nodeType": "YulBlock",
													"src": "2282:282:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2331:83:8",
																"nodeType": "YulBlock",
																"src": "2331:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2333:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "2333:77:8"
																			},
																			"nativeSrc": "2333:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2333:79:8"
																		},
																		"nativeSrc": "2333:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2333:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2310:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2310:6:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2318:4:8",
																						"nodeType": "YulLiteral",
																						"src": "2318:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2306:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2306:3:8"
																				},
																				"nativeSrc": "2306:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2306:17:8"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2325:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2325:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2302:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:8"
																		},
																		"nativeSrc": "2302:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2295:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2295:6:8"
																},
																"nativeSrc": "2295:35:8",
																"nodeType": "YulFunctionCall",
																"src": "2295:35:8"
															},
															"nativeSrc": "2292:122:8",
															"nodeType": "YulIf",
															"src": "2292:122:8"
														},
														{
															"nativeSrc": "2423:27:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2423:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2443:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2443:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2437:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2437:5:8"
																},
																"nativeSrc": "2437:13:8",
																"nodeType": "YulFunctionCall",
																"src": "2437:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2427:6:8",
																	"nodeType": "YulTypedName",
																	"src": "2427:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2459:99:8",
															"nodeType": "YulAssignment",
															"src": "2459:99:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2531:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2539:4:8",
																				"nodeType": "YulLiteral",
																				"src": "2539:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:8"
																		},
																		"nativeSrc": "2527:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:17:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2546:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2546:6:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2554:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2554:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2468:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "2468:58:8"
																},
																"nativeSrc": "2468:90:8",
																"nodeType": "YulFunctionCall",
																"src": "2468:90:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2459:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2459:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2209:355:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2260:6:8",
														"nodeType": "YulTypedName",
														"src": "2260:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2268:3:8",
														"nodeType": "YulTypedName",
														"src": "2268:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2276:5:8",
														"nodeType": "YulTypedName",
														"src": "2276:5:8",
														"type": ""
													}
												],
												"src": "2209:355:8"
											},
											{
												"body": {
													"nativeSrc": "2615:32:8",
													"nodeType": "YulBlock",
													"src": "2615:32:8",
													"statements": [
														{
															"nativeSrc": "2625:16:8",
															"nodeType": "YulAssignment",
															"src": "2625:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "2636:5:8",
																"nodeType": "YulIdentifier",
																"src": "2636:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2625:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2625:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2570:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2597:5:8",
														"nodeType": "YulTypedName",
														"src": "2597:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2607:7:8",
														"nodeType": "YulTypedName",
														"src": "2607:7:8",
														"type": ""
													}
												],
												"src": "2570:77:8"
											},
											{
												"body": {
													"nativeSrc": "2696:79:8",
													"nodeType": "YulBlock",
													"src": "2696:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2753:16:8",
																"nodeType": "YulBlock",
																"src": "2753:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2762:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2762:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2765:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2765:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2755:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2755:6:8"
																			},
																			"nativeSrc": "2755:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2755:12:8"
																		},
																		"nativeSrc": "2755:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2755:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2719:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2719:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2744:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2744:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2726:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "2726:17:8"
																				},
																				"nativeSrc": "2726:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2726:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2716:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2716:2:8"
																		},
																		"nativeSrc": "2716:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2716:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2709:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2709:6:8"
																},
																"nativeSrc": "2709:43:8",
																"nodeType": "YulFunctionCall",
																"src": "2709:43:8"
															},
															"nativeSrc": "2706:63:8",
															"nodeType": "YulIf",
															"src": "2706:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2653:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2689:5:8",
														"nodeType": "YulTypedName",
														"src": "2689:5:8",
														"type": ""
													}
												],
												"src": "2653:122:8"
											},
											{
												"body": {
													"nativeSrc": "2844:80:8",
													"nodeType": "YulBlock",
													"src": "2844:80:8",
													"statements": [
														{
															"nativeSrc": "2854:22:8",
															"nodeType": "YulAssignment",
															"src": "2854:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2869:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2869:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2863:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2863:5:8"
																},
																"nativeSrc": "2863:13:8",
																"nodeType": "YulFunctionCall",
																"src": "2863:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2854:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2854:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2912:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2912:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2885:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2885:26:8"
																},
																"nativeSrc": "2885:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2885:33:8"
															},
															"nativeSrc": "2885:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2885:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "2781:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2822:6:8",
														"nodeType": "YulTypedName",
														"src": "2822:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2830:3:8",
														"nodeType": "YulTypedName",
														"src": "2830:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2838:5:8",
														"nodeType": "YulTypedName",
														"src": "2838:5:8",
														"type": ""
													}
												],
												"src": "2781:143:8"
											},
											{
												"body": {
													"nativeSrc": "3078:1018:8",
													"nodeType": "YulBlock",
													"src": "3078:1018:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3125:83:8",
																"nodeType": "YulBlock",
																"src": "3125:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3127:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "3127:77:8"
																			},
																			"nativeSrc": "3127:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3127:79:8"
																		},
																		"nativeSrc": "3127:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3127:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3099:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3099:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3108:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3108:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3095:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3095:3:8"
																		},
																		"nativeSrc": "3095:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3095:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3120:3:8",
																		"nodeType": "YulLiteral",
																		"src": "3120:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3091:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3091:3:8"
																},
																"nativeSrc": "3091:33:8",
																"nodeType": "YulFunctionCall",
																"src": "3091:33:8"
															},
															"nativeSrc": "3088:120:8",
															"nodeType": "YulIf",
															"src": "3088:120:8"
														},
														{
															"nativeSrc": "3218:291:8",
															"nodeType": "YulBlock",
															"src": "3218:291:8",
															"statements": [
																{
																	"nativeSrc": "3233:38:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3233:38:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3257:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3257:9:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3268:1:8",
																						"nodeType": "YulLiteral",
																						"src": "3268:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3253:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3253:3:8"
																				},
																				"nativeSrc": "3253:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3253:17:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3247:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "3247:5:8"
																		},
																		"nativeSrc": "3247:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3247:24:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3237:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3237:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3318:83:8",
																		"nodeType": "YulBlock",
																		"src": "3318:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3320:77:8",
																						"nodeType": "YulIdentifier",
																						"src": "3320:77:8"
																					},
																					"nativeSrc": "3320:79:8",
																					"nodeType": "YulFunctionCall",
																					"src": "3320:79:8"
																				},
																				"nativeSrc": "3320:79:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "3320:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3290:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3290:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3298:18:8",
																				"nodeType": "YulLiteral",
																				"src": "3298:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3287:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "3287:2:8"
																		},
																		"nativeSrc": "3287:30:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3287:30:8"
																	},
																	"nativeSrc": "3284:117:8",
																	"nodeType": "YulIf",
																	"src": "3284:117:8"
																},
																{
																	"nativeSrc": "3415:84:8",
																	"nodeType": "YulAssignment",
																	"src": "3415:84:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3471:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3471:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3482:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3482:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3467:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3467:3:8"
																				},
																				"nativeSrc": "3467:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3467:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3491:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3491:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3425:41:8",
																			"nodeType": "YulIdentifier",
																			"src": "3425:41:8"
																		},
																		"nativeSrc": "3425:74:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3425:74:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3415:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3415:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3519:292:8",
															"nodeType": "YulBlock",
															"src": "3519:292:8",
															"statements": [
																{
																	"nativeSrc": "3534:39:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3534:39:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3558:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3558:9:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3569:2:8",
																						"nodeType": "YulLiteral",
																						"src": "3569:2:8",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3554:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3554:3:8"
																				},
																				"nativeSrc": "3554:18:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3554:18:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3548:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "3548:5:8"
																		},
																		"nativeSrc": "3548:25:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3548:25:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3538:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3538:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3620:83:8",
																		"nodeType": "YulBlock",
																		"src": "3620:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3622:77:8",
																						"nodeType": "YulIdentifier",
																						"src": "3622:77:8"
																					},
																					"nativeSrc": "3622:79:8",
																					"nodeType": "YulFunctionCall",
																					"src": "3622:79:8"
																				},
																				"nativeSrc": "3622:79:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "3622:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3592:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3592:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3600:18:8",
																				"nodeType": "YulLiteral",
																				"src": "3600:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3589:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "3589:2:8"
																		},
																		"nativeSrc": "3589:30:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3589:30:8"
																	},
																	"nativeSrc": "3586:117:8",
																	"nodeType": "YulIf",
																	"src": "3586:117:8"
																},
																{
																	"nativeSrc": "3717:84:8",
																	"nodeType": "YulAssignment",
																	"src": "3717:84:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3773:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3773:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3784:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3784:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3769:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3769:3:8"
																				},
																				"nativeSrc": "3769:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3769:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3793:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3793:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3727:41:8",
																			"nodeType": "YulIdentifier",
																			"src": "3727:41:8"
																		},
																		"nativeSrc": "3727:74:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3727:74:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3717:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3717:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3821:129:8",
															"nodeType": "YulBlock",
															"src": "3821:129:8",
															"statements": [
																{
																	"nativeSrc": "3836:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3836:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3850:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3850:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3840:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3840:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3866:74:8",
																	"nodeType": "YulAssignment",
																	"src": "3866:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3912:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3912:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3923:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3923:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3908:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3908:3:8"
																				},
																				"nativeSrc": "3908:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3908:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3932:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3932:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "3876:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "3876:31:8"
																		},
																		"nativeSrc": "3876:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3876:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3866:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3866:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3960:129:8",
															"nodeType": "YulBlock",
															"src": "3960:129:8",
															"statements": [
																{
																	"nativeSrc": "3975:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3975:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3989:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3989:2:8",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3979:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3979:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4005:74:8",
																	"nodeType": "YulAssignment",
																	"src": "4005:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4051:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4051:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4062:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4062:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4047:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4047:3:8"
																				},
																				"nativeSrc": "4047:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4047:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4071:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4071:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "4015:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "4015:31:8"
																		},
																		"nativeSrc": "4015:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4015:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "4005:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4005:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256_fromMemory",
												"nativeSrc": "2930:1166:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3024:9:8",
														"nodeType": "YulTypedName",
														"src": "3024:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3035:7:8",
														"nodeType": "YulTypedName",
														"src": "3035:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3047:6:8",
														"nodeType": "YulTypedName",
														"src": "3047:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3055:6:8",
														"nodeType": "YulTypedName",
														"src": "3055:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3063:6:8",
														"nodeType": "YulTypedName",
														"src": "3063:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3071:6:8",
														"nodeType": "YulTypedName",
														"src": "3071:6:8",
														"type": ""
													}
												],
												"src": "2930:1166:8"
											},
											{
												"body": {
													"nativeSrc": "4161:40:8",
													"nodeType": "YulBlock",
													"src": "4161:40:8",
													"statements": [
														{
															"nativeSrc": "4172:22:8",
															"nodeType": "YulAssignment",
															"src": "4172:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4188:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4188:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4182:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "4182:5:8"
																},
																"nativeSrc": "4182:12:8",
																"nodeType": "YulFunctionCall",
																"src": "4182:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4172:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4172:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4102:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4144:5:8",
														"nodeType": "YulTypedName",
														"src": "4144:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4154:6:8",
														"nodeType": "YulTypedName",
														"src": "4154:6:8",
														"type": ""
													}
												],
												"src": "4102:99:8"
											},
											{
												"body": {
													"nativeSrc": "4235:152:8",
													"nodeType": "YulBlock",
													"src": "4235:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4252:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4252:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4255:77:8",
																		"nodeType": "YulLiteral",
																		"src": "4255:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4245:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4245:6:8"
																},
																"nativeSrc": "4245:88:8",
																"nodeType": "YulFunctionCall",
																"src": "4245:88:8"
															},
															"nativeSrc": "4245:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "4245:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4349:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4349:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4352:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4352:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4342:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4342:6:8"
																},
																"nativeSrc": "4342:15:8",
																"nodeType": "YulFunctionCall",
																"src": "4342:15:8"
															},
															"nativeSrc": "4342:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "4342:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4373:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4373:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4376:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4376:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4366:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4366:6:8"
																},
																"nativeSrc": "4366:15:8",
																"nodeType": "YulFunctionCall",
																"src": "4366:15:8"
															},
															"nativeSrc": "4366:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "4366:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4207:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "4207:180:8"
											},
											{
												"body": {
													"nativeSrc": "4444:269:8",
													"nodeType": "YulBlock",
													"src": "4444:269:8",
													"statements": [
														{
															"nativeSrc": "4454:22:8",
															"nodeType": "YulAssignment",
															"src": "4454:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4468:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4468:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4474:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4474:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4464:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4464:3:8"
																},
																"nativeSrc": "4464:12:8",
																"nodeType": "YulFunctionCall",
																"src": "4464:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4454:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4454:6:8"
																}
															]
														},
														{
															"nativeSrc": "4485:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "4485:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4515:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4515:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4521:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4521:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4511:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4511:3:8"
																},
																"nativeSrc": "4511:12:8",
																"nodeType": "YulFunctionCall",
																"src": "4511:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4489:18:8",
																	"nodeType": "YulTypedName",
																	"src": "4489:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4562:51:8",
																"nodeType": "YulBlock",
																"src": "4562:51:8",
																"statements": [
																	{
																		"nativeSrc": "4576:27:8",
																		"nodeType": "YulAssignment",
																		"src": "4576:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4590:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "4590:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4598:4:8",
																					"nodeType": "YulLiteral",
																					"src": "4598:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4586:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "4586:3:8"
																			},
																			"nativeSrc": "4586:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4586:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4576:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4576:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4542:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "4542:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4535:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4535:6:8"
																},
																"nativeSrc": "4535:26:8",
																"nodeType": "YulFunctionCall",
																"src": "4535:26:8"
															},
															"nativeSrc": "4532:81:8",
															"nodeType": "YulIf",
															"src": "4532:81:8"
														},
														{
															"body": {
																"nativeSrc": "4665:42:8",
																"nodeType": "YulBlock",
																"src": "4665:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4679:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "4679:16:8"
																			},
																			"nativeSrc": "4679:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4679:18:8"
																		},
																		"nativeSrc": "4679:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4679:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4629:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "4629:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4652:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4652:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4660:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4660:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4649:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "4649:2:8"
																		},
																		"nativeSrc": "4649:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4649:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4626:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4626:2:8"
																},
																"nativeSrc": "4626:38:8",
																"nodeType": "YulFunctionCall",
																"src": "4626:38:8"
															},
															"nativeSrc": "4623:84:8",
															"nodeType": "YulIf",
															"src": "4623:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4393:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4428:4:8",
														"nodeType": "YulTypedName",
														"src": "4428:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4437:6:8",
														"nodeType": "YulTypedName",
														"src": "4437:6:8",
														"type": ""
													}
												],
												"src": "4393:320:8"
											},
											{
												"body": {
													"nativeSrc": "4773:87:8",
													"nodeType": "YulBlock",
													"src": "4773:87:8",
													"statements": [
														{
															"nativeSrc": "4783:11:8",
															"nodeType": "YulAssignment",
															"src": "4783:11:8",
															"value": {
																"name": "ptr",
																"nativeSrc": "4791:3:8",
																"nodeType": "YulIdentifier",
																"src": "4791:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4783:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4783:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4811:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4811:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4814:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4814:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4804:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4804:6:8"
																},
																"nativeSrc": "4804:14:8",
																"nodeType": "YulFunctionCall",
																"src": "4804:14:8"
															},
															"nativeSrc": "4804:14:8",
															"nodeType": "YulExpressionStatement",
															"src": "4804:14:8"
														},
														{
															"nativeSrc": "4827:26:8",
															"nodeType": "YulAssignment",
															"src": "4827:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4845:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4845:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4848:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4848:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4835:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "4835:9:8"
																},
																"nativeSrc": "4835:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4835:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4827:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4827:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4719:141:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4760:3:8",
														"nodeType": "YulTypedName",
														"src": "4760:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4768:4:8",
														"nodeType": "YulTypedName",
														"src": "4768:4:8",
														"type": ""
													}
												],
												"src": "4719:141:8"
											},
											{
												"body": {
													"nativeSrc": "4910:49:8",
													"nodeType": "YulBlock",
													"src": "4910:49:8",
													"statements": [
														{
															"nativeSrc": "4920:33:8",
															"nodeType": "YulAssignment",
															"src": "4920:33:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4938:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4938:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4945:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4945:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4934:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4934:3:8"
																		},
																		"nativeSrc": "4934:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4934:14:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4950:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4950:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4930:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4930:3:8"
																},
																"nativeSrc": "4930:23:8",
																"nodeType": "YulFunctionCall",
																"src": "4930:23:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4920:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4920:6:8"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "4866:93:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4893:5:8",
														"nodeType": "YulTypedName",
														"src": "4893:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4903:6:8",
														"nodeType": "YulTypedName",
														"src": "4903:6:8",
														"type": ""
													}
												],
												"src": "4866:93:8"
											},
											{
												"body": {
													"nativeSrc": "5018:54:8",
													"nodeType": "YulBlock",
													"src": "5018:54:8",
													"statements": [
														{
															"nativeSrc": "5028:37:8",
															"nodeType": "YulAssignment",
															"src": "5028:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5053:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5053:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5059:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5059:5:8"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5049:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5049:3:8"
																},
																"nativeSrc": "5049:16:8",
																"nodeType": "YulFunctionCall",
																"src": "5049:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5028:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "5028:8:8"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "4965:107:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4993:4:8",
														"nodeType": "YulTypedName",
														"src": "4993:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4999:5:8",
														"nodeType": "YulTypedName",
														"src": "4999:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5009:8:8",
														"nodeType": "YulTypedName",
														"src": "5009:8:8",
														"type": ""
													}
												],
												"src": "4965:107:8"
											},
											{
												"body": {
													"nativeSrc": "5154:317:8",
													"nodeType": "YulBlock",
													"src": "5154:317:8",
													"statements": [
														{
															"nativeSrc": "5164:35:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5164:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5185:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "5185:10:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5197:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5197:1:8",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5181:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5181:3:8"
																},
																"nativeSrc": "5181:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5181:18:8"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5168:9:8",
																	"nodeType": "YulTypedName",
																	"src": "5168:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5208:109:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5208:109:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5239:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5239:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5250:66:8",
																		"nodeType": "YulLiteral",
																		"src": "5250:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5220:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "5220:18:8"
																},
																"nativeSrc": "5220:97:8",
																"nodeType": "YulFunctionCall",
																"src": "5220:97:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5212:4:8",
																	"nodeType": "YulTypedName",
																	"src": "5212:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5326:51:8",
															"nodeType": "YulAssignment",
															"src": "5326:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5357:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5357:9:8"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5368:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "5368:8:8"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5338:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "5338:18:8"
																},
																"nativeSrc": "5338:39:8",
																"nodeType": "YulFunctionCall",
																"src": "5338:39:8"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5326:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "5326:8:8"
																}
															]
														},
														{
															"nativeSrc": "5386:30:8",
															"nodeType": "YulAssignment",
															"src": "5386:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5399:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5399:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5410:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "5410:4:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5406:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5406:3:8"
																		},
																		"nativeSrc": "5406:9:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5406:9:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5395:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5395:3:8"
																},
																"nativeSrc": "5395:21:8",
																"nodeType": "YulFunctionCall",
																"src": "5395:21:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5386:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "5386:5:8"
																}
															]
														},
														{
															"nativeSrc": "5425:40:8",
															"nodeType": "YulAssignment",
															"src": "5425:40:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5438:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5438:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5449:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "5449:8:8"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5459:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "5459:4:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5445:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5445:3:8"
																		},
																		"nativeSrc": "5445:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5445:19:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5435:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5435:2:8"
																},
																"nativeSrc": "5435:30:8",
																"nodeType": "YulFunctionCall",
																"src": "5435:30:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5425:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5425:6:8"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5078:393:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5115:5:8",
														"nodeType": "YulTypedName",
														"src": "5115:5:8",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5122:10:8",
														"nodeType": "YulTypedName",
														"src": "5122:10:8",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5134:8:8",
														"nodeType": "YulTypedName",
														"src": "5134:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5147:6:8",
														"nodeType": "YulTypedName",
														"src": "5147:6:8",
														"type": ""
													}
												],
												"src": "5078:393:8"
											},
											{
												"body": {
													"nativeSrc": "5509:28:8",
													"nodeType": "YulBlock",
													"src": "5509:28:8",
													"statements": [
														{
															"nativeSrc": "5519:12:8",
															"nodeType": "YulAssignment",
															"src": "5519:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "5526:5:8",
																"nodeType": "YulIdentifier",
																"src": "5526:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5519:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5519:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5477:60:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5495:5:8",
														"nodeType": "YulTypedName",
														"src": "5495:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5505:3:8",
														"nodeType": "YulTypedName",
														"src": "5505:3:8",
														"type": ""
													}
												],
												"src": "5477:60:8"
											},
											{
												"body": {
													"nativeSrc": "5603:82:8",
													"nodeType": "YulBlock",
													"src": "5603:82:8",
													"statements": [
														{
															"nativeSrc": "5613:66:8",
															"nodeType": "YulAssignment",
															"src": "5613:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5671:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "5671:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5653:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "5653:17:8"
																				},
																				"nativeSrc": "5653:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5644:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "5644:8:8"
																		},
																		"nativeSrc": "5644:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5644:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5626:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "5626:17:8"
																},
																"nativeSrc": "5626:53:8",
																"nodeType": "YulFunctionCall",
																"src": "5626:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5613:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "5613:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5543:142:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5583:5:8",
														"nodeType": "YulTypedName",
														"src": "5583:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5593:9:8",
														"nodeType": "YulTypedName",
														"src": "5593:9:8",
														"type": ""
													}
												],
												"src": "5543:142:8"
											},
											{
												"body": {
													"nativeSrc": "5738:28:8",
													"nodeType": "YulBlock",
													"src": "5738:28:8",
													"statements": [
														{
															"nativeSrc": "5748:12:8",
															"nodeType": "YulAssignment",
															"src": "5748:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "5755:5:8",
																"nodeType": "YulIdentifier",
																"src": "5755:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5748:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5748:3:8"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5691:75:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5724:5:8",
														"nodeType": "YulTypedName",
														"src": "5724:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5734:3:8",
														"nodeType": "YulTypedName",
														"src": "5734:3:8",
														"type": ""
													}
												],
												"src": "5691:75:8"
											},
											{
												"body": {
													"nativeSrc": "5848:193:8",
													"nodeType": "YulBlock",
													"src": "5848:193:8",
													"statements": [
														{
															"nativeSrc": "5858:63:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5858:63:8",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "5913:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "5913:7:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "5882:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "5882:30:8"
																},
																"nativeSrc": "5882:39:8",
																"nodeType": "YulFunctionCall",
																"src": "5882:39:8"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "5862:16:8",
																	"nodeType": "YulTypedName",
																	"src": "5862:16:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5937:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5937:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "5977:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "5977:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "5971:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "5971:5:8"
																				},
																				"nativeSrc": "5971:11:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5971:11:8"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5984:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5984:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6016:16:8",
																						"nodeType": "YulIdentifier",
																						"src": "6016:16:8"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "5992:23:8",
																					"nodeType": "YulIdentifier",
																					"src": "5992:23:8"
																				},
																				"nativeSrc": "5992:41:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5992:41:8"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "5943:27:8",
																			"nodeType": "YulIdentifier",
																			"src": "5943:27:8"
																		},
																		"nativeSrc": "5943:91:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5943:91:8"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "5930:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5930:6:8"
																},
																"nativeSrc": "5930:105:8",
																"nodeType": "YulFunctionCall",
																"src": "5930:105:8"
															},
															"nativeSrc": "5930:105:8",
															"nodeType": "YulExpressionStatement",
															"src": "5930:105:8"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5772:269:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5825:4:8",
														"nodeType": "YulTypedName",
														"src": "5825:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5831:6:8",
														"nodeType": "YulTypedName",
														"src": "5831:6:8",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5839:7:8",
														"nodeType": "YulTypedName",
														"src": "5839:7:8",
														"type": ""
													}
												],
												"src": "5772:269:8"
											},
											{
												"body": {
													"nativeSrc": "6096:24:8",
													"nodeType": "YulBlock",
													"src": "6096:24:8",
													"statements": [
														{
															"nativeSrc": "6106:8:8",
															"nodeType": "YulAssignment",
															"src": "6106:8:8",
															"value": {
																"kind": "number",
																"nativeSrc": "6113:1:8",
																"nodeType": "YulLiteral",
																"src": "6113:1:8",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6106:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6106:3:8"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "6047:73:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6092:3:8",
														"nodeType": "YulTypedName",
														"src": "6092:3:8",
														"type": ""
													}
												],
												"src": "6047:73:8"
											},
											{
												"body": {
													"nativeSrc": "6179:136:8",
													"nodeType": "YulBlock",
													"src": "6179:136:8",
													"statements": [
														{
															"nativeSrc": "6189:46:8",
															"nodeType": "YulVariableDeclaration",
															"src": "6189:46:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6203:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "6203:30:8"
																},
																"nativeSrc": "6203:32:8",
																"nodeType": "YulFunctionCall",
																"src": "6203:32:8"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6193:6:8",
																	"nodeType": "YulTypedName",
																	"src": "6193:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6288:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6288:4:8"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6294:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6294:6:8"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6302:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6302:6:8"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6244:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "6244:43:8"
																},
																"nativeSrc": "6244:65:8",
																"nodeType": "YulFunctionCall",
																"src": "6244:65:8"
															},
															"nativeSrc": "6244:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "6244:65:8"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6126:189:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6165:4:8",
														"nodeType": "YulTypedName",
														"src": "6165:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6171:6:8",
														"nodeType": "YulTypedName",
														"src": "6171:6:8",
														"type": ""
													}
												],
												"src": "6126:189:8"
											},
											{
												"body": {
													"nativeSrc": "6371:136:8",
													"nodeType": "YulBlock",
													"src": "6371:136:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "6438:63:8",
																"nodeType": "YulBlock",
																"src": "6438:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6482:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "6482:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6489:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6489:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6452:29:8",
																				"nodeType": "YulIdentifier",
																				"src": "6452:29:8"
																			},
																			"nativeSrc": "6452:39:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6452:39:8"
																		},
																		"nativeSrc": "6452:39:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6452:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6391:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "6391:5:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6398:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6398:3:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6388:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6388:2:8"
																},
																"nativeSrc": "6388:14:8",
																"nodeType": "YulFunctionCall",
																"src": "6388:14:8"
															},
															"nativeSrc": "6381:120:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6403:26:8",
																"nodeType": "YulBlock",
																"src": "6403:26:8",
																"statements": [
																	{
																		"nativeSrc": "6405:22:8",
																		"nodeType": "YulAssignment",
																		"src": "6405:22:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6418:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "6418:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6425:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6425:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6414:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "6414:3:8"
																			},
																			"nativeSrc": "6414:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6414:13:8"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6405:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6405:5:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6385:2:8",
																"nodeType": "YulBlock",
																"src": "6385:2:8",
																"statements": []
															},
															"src": "6381:120:8"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6321:186:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6359:5:8",
														"nodeType": "YulTypedName",
														"src": "6359:5:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6366:3:8",
														"nodeType": "YulTypedName",
														"src": "6366:3:8",
														"type": ""
													}
												],
												"src": "6321:186:8"
											},
											{
												"body": {
													"nativeSrc": "6592:464:8",
													"nodeType": "YulBlock",
													"src": "6592:464:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "6618:431:8",
																"nodeType": "YulBlock",
																"src": "6618:431:8",
																"statements": [
																	{
																		"nativeSrc": "6632:54:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6632:54:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6680:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "6680:5:8"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6648:31:8",
																				"nodeType": "YulIdentifier",
																				"src": "6648:31:8"
																			},
																			"nativeSrc": "6648:38:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6648:38:8"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6636:8:8",
																				"nodeType": "YulTypedName",
																				"src": "6636:8:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6699:63:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6699:63:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6722:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "6722:8:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6750:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "6750:10:8"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6732:17:8",
																						"nodeType": "YulIdentifier",
																						"src": "6732:17:8"
																					},
																					"nativeSrc": "6732:29:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6732:29:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6718:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "6718:3:8"
																			},
																			"nativeSrc": "6718:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6718:44:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6703:11:8",
																				"nodeType": "YulTypedName",
																				"src": "6703:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6919:27:8",
																			"nodeType": "YulBlock",
																			"src": "6919:27:8",
																			"statements": [
																				{
																					"nativeSrc": "6921:23:8",
																					"nodeType": "YulAssignment",
																					"src": "6921:23:8",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "6936:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "6936:8:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6921:11:8",
																							"nodeType": "YulIdentifier",
																							"src": "6921:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6903:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "6903:10:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6915:2:8",
																					"nodeType": "YulLiteral",
																					"src": "6915:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6900:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "6900:2:8"
																			},
																			"nativeSrc": "6900:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6900:18:8"
																		},
																		"nativeSrc": "6897:49:8",
																		"nodeType": "YulIf",
																		"src": "6897:49:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "6988:11:8",
																					"nodeType": "YulIdentifier",
																					"src": "6988:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "7005:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "7005:8:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7033:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "7033:3:8"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "7015:17:8",
																								"nodeType": "YulIdentifier",
																								"src": "7015:17:8"
																							},
																							"nativeSrc": "7015:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "7015:22:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7001:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "7001:3:8"
																					},
																					"nativeSrc": "7001:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "7001:37:8"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "6959:28:8",
																				"nodeType": "YulIdentifier",
																				"src": "6959:28:8"
																			},
																			"nativeSrc": "6959:80:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6959:80:8"
																		},
																		"nativeSrc": "6959:80:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6959:80:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6609:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6609:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6614:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6614:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6606:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6606:2:8"
																},
																"nativeSrc": "6606:11:8",
																"nodeType": "YulFunctionCall",
																"src": "6606:11:8"
															},
															"nativeSrc": "6603:446:8",
															"nodeType": "YulIf",
															"src": "6603:446:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6513:543:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6568:5:8",
														"nodeType": "YulTypedName",
														"src": "6568:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6575:3:8",
														"nodeType": "YulTypedName",
														"src": "6575:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6580:10:8",
														"nodeType": "YulTypedName",
														"src": "6580:10:8",
														"type": ""
													}
												],
												"src": "6513:543:8"
											},
											{
												"body": {
													"nativeSrc": "7125:54:8",
													"nodeType": "YulBlock",
													"src": "7125:54:8",
													"statements": [
														{
															"nativeSrc": "7135:37:8",
															"nodeType": "YulAssignment",
															"src": "7135:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7160:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7160:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7166:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7166:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7156:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7156:3:8"
																},
																"nativeSrc": "7156:16:8",
																"nodeType": "YulFunctionCall",
																"src": "7156:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7135:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "7135:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7062:117:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7100:4:8",
														"nodeType": "YulTypedName",
														"src": "7100:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7106:5:8",
														"nodeType": "YulTypedName",
														"src": "7106:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7116:8:8",
														"nodeType": "YulTypedName",
														"src": "7116:8:8",
														"type": ""
													}
												],
												"src": "7062:117:8"
											},
											{
												"body": {
													"nativeSrc": "7236:118:8",
													"nodeType": "YulBlock",
													"src": "7236:118:8",
													"statements": [
														{
															"nativeSrc": "7246:68:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7246:68:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7295:1:8",
																						"nodeType": "YulLiteral",
																						"src": "7295:1:8",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7298:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "7298:5:8"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7291:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "7291:3:8"
																				},
																				"nativeSrc": "7291:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7291:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7310:1:8",
																						"nodeType": "YulLiteral",
																						"src": "7310:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7306:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "7306:3:8"
																				},
																				"nativeSrc": "7306:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7306:6:8"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7262:28:8",
																			"nodeType": "YulIdentifier",
																			"src": "7262:28:8"
																		},
																		"nativeSrc": "7262:51:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7262:51:8"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7258:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7258:3:8"
																},
																"nativeSrc": "7258:56:8",
																"nodeType": "YulFunctionCall",
																"src": "7258:56:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7250:4:8",
																	"nodeType": "YulTypedName",
																	"src": "7250:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7323:25:8",
															"nodeType": "YulAssignment",
															"src": "7323:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7337:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7337:4:8"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7343:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7343:4:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7333:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7333:3:8"
																},
																"nativeSrc": "7333:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7333:15:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7323:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7323:6:8"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7185:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7213:4:8",
														"nodeType": "YulTypedName",
														"src": "7213:4:8",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7219:5:8",
														"nodeType": "YulTypedName",
														"src": "7219:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7229:6:8",
														"nodeType": "YulTypedName",
														"src": "7229:6:8",
														"type": ""
													}
												],
												"src": "7185:169:8"
											},
											{
												"body": {
													"nativeSrc": "7440:214:8",
													"nodeType": "YulBlock",
													"src": "7440:214:8",
													"statements": [
														{
															"nativeSrc": "7573:37:8",
															"nodeType": "YulAssignment",
															"src": "7573:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7600:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7600:4:8"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7606:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7606:3:8"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7581:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "7581:18:8"
																},
																"nativeSrc": "7581:29:8",
																"nodeType": "YulFunctionCall",
																"src": "7581:29:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7573:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7573:4:8"
																}
															]
														},
														{
															"nativeSrc": "7619:29:8",
															"nodeType": "YulAssignment",
															"src": "7619:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7630:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7630:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7640:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7640:1:8",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7643:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "7643:3:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7636:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7636:3:8"
																		},
																		"nativeSrc": "7636:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7636:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7627:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "7627:2:8"
																},
																"nativeSrc": "7627:21:8",
																"nodeType": "YulFunctionCall",
																"src": "7627:21:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7619:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7619:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7359:295:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7421:4:8",
														"nodeType": "YulTypedName",
														"src": "7421:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7427:3:8",
														"nodeType": "YulTypedName",
														"src": "7427:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7435:4:8",
														"nodeType": "YulTypedName",
														"src": "7435:4:8",
														"type": ""
													}
												],
												"src": "7359:295:8"
											},
											{
												"body": {
													"nativeSrc": "7751:1303:8",
													"nodeType": "YulBlock",
													"src": "7751:1303:8",
													"statements": [
														{
															"nativeSrc": "7762:51:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7762:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7809:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7809:3:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7776:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "7776:32:8"
																},
																"nativeSrc": "7776:37:8",
																"nodeType": "YulFunctionCall",
																"src": "7776:37:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7766:6:8",
																	"nodeType": "YulTypedName",
																	"src": "7766:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7898:22:8",
																"nodeType": "YulBlock",
																"src": "7898:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7900:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "7900:16:8"
																			},
																			"nativeSrc": "7900:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7900:18:8"
																		},
																		"nativeSrc": "7900:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7900:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7870:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7870:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7878:18:8",
																		"nodeType": "YulLiteral",
																		"src": "7878:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7867:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "7867:2:8"
																},
																"nativeSrc": "7867:30:8",
																"nodeType": "YulFunctionCall",
																"src": "7867:30:8"
															},
															"nativeSrc": "7864:56:8",
															"nodeType": "YulIf",
															"src": "7864:56:8"
														},
														{
															"nativeSrc": "7930:52:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7930:52:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "7976:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7976:4:8"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "7970:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "7970:5:8"
																		},
																		"nativeSrc": "7970:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7970:11:8"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "7944:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "7944:25:8"
																},
																"nativeSrc": "7944:38:8",
																"nodeType": "YulFunctionCall",
																"src": "7944:38:8"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "7934:6:8",
																	"nodeType": "YulTypedName",
																	"src": "7934:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8075:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "8075:4:8"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8081:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8081:6:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8089:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8089:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "8029:45:8",
																	"nodeType": "YulIdentifier",
																	"src": "8029:45:8"
																},
																"nativeSrc": "8029:67:8",
																"nodeType": "YulFunctionCall",
																"src": "8029:67:8"
															},
															"nativeSrc": "8029:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "8029:67:8"
														},
														{
															"nativeSrc": "8106:18:8",
															"nodeType": "YulVariableDeclaration",
															"src": "8106:18:8",
															"value": {
																"kind": "number",
																"nativeSrc": "8123:1:8",
																"nodeType": "YulLiteral",
																"src": "8123:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8110:9:8",
																	"nodeType": "YulTypedName",
																	"src": "8110:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8134:17:8",
															"nodeType": "YulAssignment",
															"src": "8134:17:8",
															"value": {
																"kind": "number",
																"nativeSrc": "8147:4:8",
																"nodeType": "YulLiteral",
																"src": "8147:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8134:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "8134:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8198:611:8",
																		"nodeType": "YulBlock",
																		"src": "8198:611:8",
																		"statements": [
																			{
																				"nativeSrc": "8212:37:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8212:37:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8231:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "8231:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8243:4:8",
																									"nodeType": "YulLiteral",
																									"src": "8243:4:8",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8239:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "8239:3:8"
																							},
																							"nativeSrc": "8239:9:8",
																							"nodeType": "YulFunctionCall",
																							"src": "8239:9:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8227:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "8227:3:8"
																					},
																					"nativeSrc": "8227:22:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8227:22:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8216:7:8",
																						"nodeType": "YulTypedName",
																						"src": "8216:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8263:51:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8263:51:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8309:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "8309:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8277:31:8",
																						"nodeType": "YulIdentifier",
																						"src": "8277:31:8"
																					},
																					"nativeSrc": "8277:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8277:37:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8267:6:8",
																						"nodeType": "YulTypedName",
																						"src": "8267:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8327:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8327:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8336:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8336:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8331:1:8",
																						"nodeType": "YulTypedName",
																						"src": "8331:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8395:163:8",
																					"nodeType": "YulBlock",
																					"src": "8395:163:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8420:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "8420:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8438:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "8438:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8443:9:8",
																														"nodeType": "YulIdentifier",
																														"src": "8443:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8434:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "8434:3:8"
																												},
																												"nativeSrc": "8434:19:8",
																												"nodeType": "YulFunctionCall",
																												"src": "8434:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8428:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "8428:5:8"
																										},
																										"nativeSrc": "8428:26:8",
																										"nodeType": "YulFunctionCall",
																										"src": "8428:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8413:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "8413:6:8"
																								},
																								"nativeSrc": "8413:42:8",
																								"nodeType": "YulFunctionCall",
																								"src": "8413:42:8"
																							},
																							"nativeSrc": "8413:42:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "8413:42:8"
																						},
																						{
																							"nativeSrc": "8472:24:8",
																							"nodeType": "YulAssignment",
																							"src": "8472:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8486:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "8486:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8494:1:8",
																										"nodeType": "YulLiteral",
																										"src": "8494:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8482:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "8482:3:8"
																								},
																								"nativeSrc": "8482:14:8",
																								"nodeType": "YulFunctionCall",
																								"src": "8482:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8472:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "8472:6:8"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8513:31:8",
																							"nodeType": "YulAssignment",
																							"src": "8513:31:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8530:9:8",
																										"nodeType": "YulIdentifier",
																										"src": "8530:9:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8541:2:8",
																										"nodeType": "YulLiteral",
																										"src": "8541:2:8",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8526:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "8526:3:8"
																								},
																								"nativeSrc": "8526:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "8526:18:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8513:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "8513:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8361:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "8361:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8364:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "8364:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8358:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "8358:2:8"
																					},
																					"nativeSrc": "8358:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8358:14:8"
																				},
																				"nativeSrc": "8350:208:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8373:21:8",
																					"nodeType": "YulBlock",
																					"src": "8373:21:8",
																					"statements": [
																						{
																							"nativeSrc": "8375:17:8",
																							"nodeType": "YulAssignment",
																							"src": "8375:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8384:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "8384:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8387:4:8",
																										"nodeType": "YulLiteral",
																										"src": "8387:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8380:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "8380:3:8"
																								},
																								"nativeSrc": "8380:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "8380:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8375:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "8375:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8354:3:8",
																					"nodeType": "YulBlock",
																					"src": "8354:3:8",
																					"statements": []
																				},
																				"src": "8350:208:8"
																			},
																			{
																				"body": {
																					"nativeSrc": "8594:156:8",
																					"nodeType": "YulBlock",
																					"src": "8594:156:8",
																					"statements": [
																						{
																							"nativeSrc": "8612:43:8",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8612:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8639:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "8639:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8644:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "8644:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8635:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "8635:3:8"
																										},
																										"nativeSrc": "8635:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "8635:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8629:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "8629:5:8"
																								},
																								"nativeSrc": "8629:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "8629:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8616:9:8",
																									"nodeType": "YulTypedName",
																									"src": "8616:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8679:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "8679:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8706:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "8706:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8721:6:8",
																														"nodeType": "YulIdentifier",
																														"src": "8721:6:8"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8729:4:8",
																														"nodeType": "YulLiteral",
																														"src": "8729:4:8",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8717:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "8717:3:8"
																												},
																												"nativeSrc": "8717:17:8",
																												"nodeType": "YulFunctionCall",
																												"src": "8717:17:8"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8687:18:8",
																											"nodeType": "YulIdentifier",
																											"src": "8687:18:8"
																										},
																										"nativeSrc": "8687:48:8",
																										"nodeType": "YulFunctionCall",
																										"src": "8687:48:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8672:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "8672:6:8"
																								},
																								"nativeSrc": "8672:64:8",
																								"nodeType": "YulFunctionCall",
																								"src": "8672:64:8"
																							},
																							"nativeSrc": "8672:64:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "8672:64:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8577:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "8577:7:8"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8586:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "8586:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8574:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "8574:2:8"
																					},
																					"nativeSrc": "8574:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8574:19:8"
																				},
																				"nativeSrc": "8571:179:8",
																				"nodeType": "YulIf",
																				"src": "8571:179:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8770:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "8770:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8784:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "8784:6:8"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8792:1:8",
																											"nodeType": "YulLiteral",
																											"src": "8792:1:8",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8780:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "8780:3:8"
																									},
																									"nativeSrc": "8780:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "8780:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8796:1:8",
																									"nodeType": "YulLiteral",
																									"src": "8796:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8776:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "8776:3:8"
																							},
																							"nativeSrc": "8776:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "8776:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8763:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "8763:6:8"
																					},
																					"nativeSrc": "8763:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8763:36:8"
																				},
																				"nativeSrc": "8763:36:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "8763:36:8"
																			}
																		]
																	},
																	"nativeSrc": "8191:618:8",
																	"nodeType": "YulCase",
																	"src": "8191:618:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8196:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8196:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8826:222:8",
																		"nodeType": "YulBlock",
																		"src": "8826:222:8",
																		"statements": [
																			{
																				"nativeSrc": "8840:14:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8840:14:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8853:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8853:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8844:5:8",
																						"nodeType": "YulTypedName",
																						"src": "8844:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8877:67:8",
																					"nodeType": "YulBlock",
																					"src": "8877:67:8",
																					"statements": [
																						{
																							"nativeSrc": "8895:35:8",
																							"nodeType": "YulAssignment",
																							"src": "8895:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8914:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "8914:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8919:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "8919:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8910:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "8910:3:8"
																										},
																										"nativeSrc": "8910:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "8910:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8904:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "8904:5:8"
																								},
																								"nativeSrc": "8904:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "8904:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8895:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "8895:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8870:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "8870:6:8"
																				},
																				"nativeSrc": "8867:77:8",
																				"nodeType": "YulIf",
																				"src": "8867:77:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8964:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "8964:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9023:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "9023:5:8"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9030:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "9030:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "8970:52:8",
																								"nodeType": "YulIdentifier",
																								"src": "8970:52:8"
																							},
																							"nativeSrc": "8970:67:8",
																							"nodeType": "YulFunctionCall",
																							"src": "8970:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8957:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "8957:6:8"
																					},
																					"nativeSrc": "8957:81:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8957:81:8"
																				},
																				"nativeSrc": "8957:81:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "8957:81:8"
																			}
																		]
																	},
																	"nativeSrc": "8818:230:8",
																	"nodeType": "YulCase",
																	"src": "8818:230:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8171:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8171:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8179:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8179:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8168:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "8168:2:8"
																},
																"nativeSrc": "8168:14:8",
																"nodeType": "YulFunctionCall",
																"src": "8168:14:8"
															},
															"nativeSrc": "8161:887:8",
															"nodeType": "YulSwitch",
															"src": "8161:887:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7659:1395:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7740:4:8",
														"nodeType": "YulTypedName",
														"src": "7740:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7746:3:8",
														"nodeType": "YulTypedName",
														"src": "7746:3:8",
														"type": ""
													}
												],
												"src": "7659:1395:8"
											},
											{
												"body": {
													"nativeSrc": "9105:81:8",
													"nodeType": "YulBlock",
													"src": "9105:81:8",
													"statements": [
														{
															"nativeSrc": "9115:65:8",
															"nodeType": "YulAssignment",
															"src": "9115:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9130:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "9130:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9137:42:8",
																		"nodeType": "YulLiteral",
																		"src": "9137:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9126:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9126:3:8"
																},
																"nativeSrc": "9126:54:8",
																"nodeType": "YulFunctionCall",
																"src": "9126:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9115:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "9115:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "9060:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9087:5:8",
														"nodeType": "YulTypedName",
														"src": "9087:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9097:7:8",
														"nodeType": "YulTypedName",
														"src": "9097:7:8",
														"type": ""
													}
												],
												"src": "9060:126:8"
											},
											{
												"body": {
													"nativeSrc": "9237:51:8",
													"nodeType": "YulBlock",
													"src": "9237:51:8",
													"statements": [
														{
															"nativeSrc": "9247:35:8",
															"nodeType": "YulAssignment",
															"src": "9247:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9276:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "9276:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "9258:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "9258:17:8"
																},
																"nativeSrc": "9258:24:8",
																"nodeType": "YulFunctionCall",
																"src": "9258:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9247:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "9247:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "9192:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9219:5:8",
														"nodeType": "YulTypedName",
														"src": "9219:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9229:7:8",
														"nodeType": "YulTypedName",
														"src": "9229:7:8",
														"type": ""
													}
												],
												"src": "9192:96:8"
											},
											{
												"body": {
													"nativeSrc": "9359:53:8",
													"nodeType": "YulBlock",
													"src": "9359:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9376:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9376:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9399:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "9399:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9381:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "9381:17:8"
																		},
																		"nativeSrc": "9381:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9381:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9369:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9369:6:8"
																},
																"nativeSrc": "9369:37:8",
																"nodeType": "YulFunctionCall",
																"src": "9369:37:8"
															},
															"nativeSrc": "9369:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "9369:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9294:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9347:5:8",
														"nodeType": "YulTypedName",
														"src": "9347:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9354:3:8",
														"nodeType": "YulTypedName",
														"src": "9354:3:8",
														"type": ""
													}
												],
												"src": "9294:118:8"
											},
											{
												"body": {
													"nativeSrc": "9516:124:8",
													"nodeType": "YulBlock",
													"src": "9516:124:8",
													"statements": [
														{
															"nativeSrc": "9526:26:8",
															"nodeType": "YulAssignment",
															"src": "9526:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9538:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9538:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9549:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9549:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9534:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9534:3:8"
																},
																"nativeSrc": "9534:18:8",
																"nodeType": "YulFunctionCall",
																"src": "9534:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9526:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9526:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9606:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9606:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9619:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9619:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9630:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9630:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9615:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9615:3:8"
																		},
																		"nativeSrc": "9615:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9615:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9562:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "9562:43:8"
																},
																"nativeSrc": "9562:71:8",
																"nodeType": "YulFunctionCall",
																"src": "9562:71:8"
															},
															"nativeSrc": "9562:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "9562:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9418:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9488:9:8",
														"nodeType": "YulTypedName",
														"src": "9488:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9500:6:8",
														"nodeType": "YulTypedName",
														"src": "9500:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9511:4:8",
														"nodeType": "YulTypedName",
														"src": "9511:4:8",
														"type": ""
													}
												],
												"src": "9418:222:8"
											},
											{
												"body": {
													"nativeSrc": "9742:73:8",
													"nodeType": "YulBlock",
													"src": "9742:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9759:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9759:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9764:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9764:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9752:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9752:6:8"
																},
																"nativeSrc": "9752:19:8",
																"nodeType": "YulFunctionCall",
																"src": "9752:19:8"
															},
															"nativeSrc": "9752:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "9752:19:8"
														},
														{
															"nativeSrc": "9780:29:8",
															"nodeType": "YulAssignment",
															"src": "9780:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9799:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9799:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9804:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9804:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9795:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9795:3:8"
																},
																"nativeSrc": "9795:14:8",
																"nodeType": "YulFunctionCall",
																"src": "9795:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9780:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "9780:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "9646:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9714:3:8",
														"nodeType": "YulTypedName",
														"src": "9714:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9719:6:8",
														"nodeType": "YulTypedName",
														"src": "9719:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9730:11:8",
														"nodeType": "YulTypedName",
														"src": "9730:11:8",
														"type": ""
													}
												],
												"src": "9646:169:8"
											},
											{
												"body": {
													"nativeSrc": "9927:117:8",
													"nodeType": "YulBlock",
													"src": "9927:117:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9949:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9949:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9957:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9957:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9945:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9945:3:8"
																		},
																		"nativeSrc": "9945:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9945:14:8"
																	},
																	{
																		"hexValue": "4d617820737570706c79206d757374206265203e3d20696e697469616c207375",
																		"kind": "string",
																		"nativeSrc": "9961:34:8",
																		"nodeType": "YulLiteral",
																		"src": "9961:34:8",
																		"type": "",
																		"value": "Max supply must be >= initial su"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9938:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9938:6:8"
																},
																"nativeSrc": "9938:58:8",
																"nodeType": "YulFunctionCall",
																"src": "9938:58:8"
															},
															"nativeSrc": "9938:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "9938:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10017:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "10017:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10025:2:8",
																				"nodeType": "YulLiteral",
																				"src": "10025:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10013:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10013:3:8"
																		},
																		"nativeSrc": "10013:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10013:15:8"
																	},
																	{
																		"hexValue": "70706c79",
																		"kind": "string",
																		"nativeSrc": "10030:6:8",
																		"nodeType": "YulLiteral",
																		"src": "10030:6:8",
																		"type": "",
																		"value": "pply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10006:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10006:6:8"
																},
																"nativeSrc": "10006:31:8",
																"nodeType": "YulFunctionCall",
																"src": "10006:31:8"
															},
															"nativeSrc": "10006:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "10006:31:8"
														}
													]
												},
												"name": "store_literal_in_memory_dd2cc46d89b7e80556543904a4da36625fe95b49f98b73acbd5ea91d7a0f099b",
												"nativeSrc": "9821:223:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9919:6:8",
														"nodeType": "YulTypedName",
														"src": "9919:6:8",
														"type": ""
													}
												],
												"src": "9821:223:8"
											},
											{
												"body": {
													"nativeSrc": "10196:220:8",
													"nodeType": "YulBlock",
													"src": "10196:220:8",
													"statements": [
														{
															"nativeSrc": "10206:74:8",
															"nodeType": "YulAssignment",
															"src": "10206:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10272:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10272:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10277:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10277:2:8",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10213:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "10213:58:8"
																},
																"nativeSrc": "10213:67:8",
																"nodeType": "YulFunctionCall",
																"src": "10213:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10206:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10206:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10378:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10378:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_dd2cc46d89b7e80556543904a4da36625fe95b49f98b73acbd5ea91d7a0f099b",
																	"nativeSrc": "10289:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "10289:88:8"
																},
																"nativeSrc": "10289:93:8",
																"nodeType": "YulFunctionCall",
																"src": "10289:93:8"
															},
															"nativeSrc": "10289:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "10289:93:8"
														},
														{
															"nativeSrc": "10391:19:8",
															"nodeType": "YulAssignment",
															"src": "10391:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10402:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10402:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10407:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10407:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10398:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10398:3:8"
																},
																"nativeSrc": "10398:12:8",
																"nodeType": "YulFunctionCall",
																"src": "10398:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10391:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10391:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_dd2cc46d89b7e80556543904a4da36625fe95b49f98b73acbd5ea91d7a0f099b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10050:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10184:3:8",
														"nodeType": "YulTypedName",
														"src": "10184:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10192:3:8",
														"nodeType": "YulTypedName",
														"src": "10192:3:8",
														"type": ""
													}
												],
												"src": "10050:366:8"
											},
											{
												"body": {
													"nativeSrc": "10593:248:8",
													"nodeType": "YulBlock",
													"src": "10593:248:8",
													"statements": [
														{
															"nativeSrc": "10603:26:8",
															"nodeType": "YulAssignment",
															"src": "10603:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10615:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10615:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10626:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10626:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10611:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10611:3:8"
																},
																"nativeSrc": "10611:18:8",
																"nodeType": "YulFunctionCall",
																"src": "10611:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10603:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10603:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10650:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10650:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10661:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10661:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10646:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10646:3:8"
																		},
																		"nativeSrc": "10646:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10646:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10669:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "10669:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10675:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10675:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10665:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10665:3:8"
																		},
																		"nativeSrc": "10665:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10665:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10639:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10639:6:8"
																},
																"nativeSrc": "10639:47:8",
																"nodeType": "YulFunctionCall",
																"src": "10639:47:8"
															},
															"nativeSrc": "10639:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "10639:47:8"
														},
														{
															"nativeSrc": "10695:139:8",
															"nodeType": "YulAssignment",
															"src": "10695:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10829:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "10829:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_dd2cc46d89b7e80556543904a4da36625fe95b49f98b73acbd5ea91d7a0f099b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10703:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "10703:124:8"
																},
																"nativeSrc": "10703:131:8",
																"nodeType": "YulFunctionCall",
																"src": "10703:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10695:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10695:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dd2cc46d89b7e80556543904a4da36625fe95b49f98b73acbd5ea91d7a0f099b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10422:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10573:9:8",
														"nodeType": "YulTypedName",
														"src": "10573:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10588:4:8",
														"nodeType": "YulTypedName",
														"src": "10588:4:8",
														"type": ""
													}
												],
												"src": "10422:419:8"
											},
											{
												"body": {
													"nativeSrc": "10875:152:8",
													"nodeType": "YulBlock",
													"src": "10875:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10892:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10892:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10895:77:8",
																		"nodeType": "YulLiteral",
																		"src": "10895:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10885:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10885:6:8"
																},
																"nativeSrc": "10885:88:8",
																"nodeType": "YulFunctionCall",
																"src": "10885:88:8"
															},
															"nativeSrc": "10885:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "10885:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10989:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10989:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10992:4:8",
																		"nodeType": "YulLiteral",
																		"src": "10992:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10982:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10982:6:8"
																},
																"nativeSrc": "10982:15:8",
																"nodeType": "YulFunctionCall",
																"src": "10982:15:8"
															},
															"nativeSrc": "10982:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "10982:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11013:1:8",
																		"nodeType": "YulLiteral",
																		"src": "11013:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11016:4:8",
																		"nodeType": "YulLiteral",
																		"src": "11016:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11006:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11006:6:8"
																},
																"nativeSrc": "11006:15:8",
																"nodeType": "YulFunctionCall",
																"src": "11006:15:8"
															},
															"nativeSrc": "11006:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "11006:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "10847:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "10847:180:8"
											},
											{
												"body": {
													"nativeSrc": "11077:147:8",
													"nodeType": "YulBlock",
													"src": "11077:147:8",
													"statements": [
														{
															"nativeSrc": "11087:25:8",
															"nodeType": "YulAssignment",
															"src": "11087:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11110:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11110:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11092:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "11092:17:8"
																},
																"nativeSrc": "11092:20:8",
																"nodeType": "YulFunctionCall",
																"src": "11092:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11087:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "11087:1:8"
																}
															]
														},
														{
															"nativeSrc": "11121:25:8",
															"nodeType": "YulAssignment",
															"src": "11121:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11144:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11144:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11126:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "11126:17:8"
																},
																"nativeSrc": "11126:20:8",
																"nodeType": "YulFunctionCall",
																"src": "11126:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11121:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "11121:1:8"
																}
															]
														},
														{
															"nativeSrc": "11155:16:8",
															"nodeType": "YulAssignment",
															"src": "11155:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11166:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11166:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11169:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11169:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11162:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11162:3:8"
																},
																"nativeSrc": "11162:9:8",
																"nodeType": "YulFunctionCall",
																"src": "11162:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "11155:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11155:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11195:22:8",
																"nodeType": "YulBlock",
																"src": "11195:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11197:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "11197:16:8"
																			},
																			"nativeSrc": "11197:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "11197:18:8"
																		},
																		"nativeSrc": "11197:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "11197:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11187:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "11187:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "11190:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11190:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11184:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "11184:2:8"
																},
																"nativeSrc": "11184:10:8",
																"nodeType": "YulFunctionCall",
																"src": "11184:10:8"
															},
															"nativeSrc": "11181:36:8",
															"nodeType": "YulIf",
															"src": "11181:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "11033:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11064:1:8",
														"nodeType": "YulTypedName",
														"src": "11064:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11067:1:8",
														"nodeType": "YulTypedName",
														"src": "11067:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "11073:3:8",
														"nodeType": "YulTypedName",
														"src": "11073:3:8",
														"type": ""
													}
												],
												"src": "11033:191:8"
											},
											{
												"body": {
													"nativeSrc": "11295:53:8",
													"nodeType": "YulBlock",
													"src": "11295:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11312:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11312:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11335:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "11335:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "11317:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "11317:17:8"
																		},
																		"nativeSrc": "11317:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11317:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11305:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11305:6:8"
																},
																"nativeSrc": "11305:37:8",
																"nodeType": "YulFunctionCall",
																"src": "11305:37:8"
															},
															"nativeSrc": "11305:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "11305:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "11230:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11283:5:8",
														"nodeType": "YulTypedName",
														"src": "11283:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11290:3:8",
														"nodeType": "YulTypedName",
														"src": "11290:3:8",
														"type": ""
													}
												],
												"src": "11230:118:8"
											},
											{
												"body": {
													"nativeSrc": "11508:288:8",
													"nodeType": "YulBlock",
													"src": "11508:288:8",
													"statements": [
														{
															"nativeSrc": "11518:26:8",
															"nodeType": "YulAssignment",
															"src": "11518:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11530:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11530:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11541:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11541:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11526:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11526:3:8"
																},
																"nativeSrc": "11526:18:8",
																"nodeType": "YulFunctionCall",
																"src": "11526:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11518:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11518:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11598:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11598:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11611:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11611:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11622:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11622:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11607:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11607:3:8"
																		},
																		"nativeSrc": "11607:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11607:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11554:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11554:43:8"
																},
																"nativeSrc": "11554:71:8",
																"nodeType": "YulFunctionCall",
																"src": "11554:71:8"
															},
															"nativeSrc": "11554:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "11554:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11679:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11679:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11692:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11692:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11703:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11703:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11688:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11688:3:8"
																		},
																		"nativeSrc": "11688:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11688:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11635:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11635:43:8"
																},
																"nativeSrc": "11635:72:8",
																"nodeType": "YulFunctionCall",
																"src": "11635:72:8"
															},
															"nativeSrc": "11635:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "11635:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11761:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11761:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11774:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11774:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11785:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11785:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11770:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11770:3:8"
																		},
																		"nativeSrc": "11770:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11770:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11717:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11717:43:8"
																},
																"nativeSrc": "11717:72:8",
																"nodeType": "YulFunctionCall",
																"src": "11717:72:8"
															},
															"nativeSrc": "11717:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "11717:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11354:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11464:9:8",
														"nodeType": "YulTypedName",
														"src": "11464:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11476:6:8",
														"nodeType": "YulTypedName",
														"src": "11476:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11484:6:8",
														"nodeType": "YulTypedName",
														"src": "11484:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11492:6:8",
														"nodeType": "YulTypedName",
														"src": "11492:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11503:4:8",
														"nodeType": "YulTypedName",
														"src": "11503:4:8",
														"type": ""
													}
												],
												"src": "11354:442:8"
											},
											{
												"body": {
													"nativeSrc": "11900:124:8",
													"nodeType": "YulBlock",
													"src": "11900:124:8",
													"statements": [
														{
															"nativeSrc": "11910:26:8",
															"nodeType": "YulAssignment",
															"src": "11910:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11922:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11922:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11933:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11933:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11918:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11918:3:8"
																},
																"nativeSrc": "11918:18:8",
																"nodeType": "YulFunctionCall",
																"src": "11918:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11910:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11910:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11990:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11990:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12003:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12003:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12014:1:8",
																				"nodeType": "YulLiteral",
																				"src": "12014:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11999:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11999:3:8"
																		},
																		"nativeSrc": "11999:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11999:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11946:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "11946:43:8"
																},
																"nativeSrc": "11946:71:8",
																"nodeType": "YulFunctionCall",
																"src": "11946:71:8"
															},
															"nativeSrc": "11946:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "11946:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "11802:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11872:9:8",
														"nodeType": "YulTypedName",
														"src": "11872:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11884:6:8",
														"nodeType": "YulTypedName",
														"src": "11884:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11895:4:8",
														"nodeType": "YulTypedName",
														"src": "11895:4:8",
														"type": ""
													}
												],
												"src": "11802:222:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_dd2cc46d89b7e80556543904a4da36625fe95b49f98b73acbd5ea91d7a0f099b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Max supply must be >= initial su\")\n\n        mstore(add(memPtr, 32), \"pply\")\n\n    }\n\n    function abi_encode_t_stringliteral_dd2cc46d89b7e80556543904a4da36625fe95b49f98b73acbd5ea91d7a0f099b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_dd2cc46d89b7e80556543904a4da36625fe95b49f98b73acbd5ea91d7a0f099b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_dd2cc46d89b7e80556543904a4da36625fe95b49f98b73acbd5ea91d7a0f099b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dd2cc46d89b7e80556543904a4da36625fe95b49f98b73acbd5ea91d7a0f099b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060405161267c38038061267c83398181016040528101906100319190610622565b338484816003908161004391906108c5565b50806004908161005391906108c5565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100c6575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100bd91906109d3565b60405180910390fd5b6100d58161014160201b60201c565b50600160068190555081811015610121576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011890610a6c565b60405180910390fd5b80600881905550610138338361020460201b60201c565b50505050610b47565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610274575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161026b91906109d3565b60405180910390fd5b6102855f838361028960201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036102d9578060025f8282546102cd9190610ab7565b925050819055506103a7565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610362578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161035993929190610af9565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036103ee578060025f8282540392505081905550610438565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516104959190610b2e565b60405180910390a3505050565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610501826104bb565b810181811067ffffffffffffffff821117156105205761051f6104cb565b5b80604052505050565b5f6105326104a2565b905061053e82826104f8565b919050565b5f67ffffffffffffffff82111561055d5761055c6104cb565b5b610566826104bb565b9050602081019050919050565b8281835e5f83830152505050565b5f61059361058e84610543565b610529565b9050828152602081018484840111156105af576105ae6104b7565b5b6105ba848285610573565b509392505050565b5f82601f8301126105d6576105d56104b3565b5b81516105e6848260208601610581565b91505092915050565b5f819050919050565b610601816105ef565b811461060b575f5ffd5b50565b5f8151905061061c816105f8565b92915050565b5f5f5f5f6080858703121561063a576106396104ab565b5b5f85015167ffffffffffffffff811115610657576106566104af565b5b610663878288016105c2565b945050602085015167ffffffffffffffff811115610684576106836104af565b5b610690878288016105c2565b93505060406106a18782880161060e565b92505060606106b28782880161060e565b91505092959194509250565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061070c57607f821691505b60208210810361071f5761071e6106c8565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026107817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610746565b61078b8683610746565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6107c66107c16107bc846105ef565b6107a3565b6105ef565b9050919050565b5f819050919050565b6107df836107ac565b6107f36107eb826107cd565b848454610752565b825550505050565b5f5f905090565b61080a6107fb565b6108158184846107d6565b505050565b5b818110156108385761082d5f82610802565b60018101905061081b565b5050565b601f82111561087d5761084e81610725565b61085784610737565b81016020851015610866578190505b61087a61087285610737565b83018261081a565b50505b505050565b5f82821c905092915050565b5f61089d5f1984600802610882565b1980831691505092915050565b5f6108b5838361088e565b9150826002028217905092915050565b6108ce826106be565b67ffffffffffffffff8111156108e7576108e66104cb565b5b6108f182546106f5565b6108fc82828561083c565b5f60209050601f83116001811461092d575f841561091b578287015190505b61092585826108aa565b86555061098c565b601f19841661093b86610725565b5f5b828110156109625784890151825560018201915060208501945060208101905061093d565b8683101561097f578489015161097b601f89168261088e565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6109bd82610994565b9050919050565b6109cd816109b3565b82525050565b5f6020820190506109e65f8301846109c4565b92915050565b5f82825260208201905092915050565b7f4d617820737570706c79206d757374206265203e3d20696e697469616c2073755f8201527f70706c7900000000000000000000000000000000000000000000000000000000602082015250565b5f610a566024836109ec565b9150610a61826109fc565b604082019050919050565b5f6020820190508181035f830152610a8381610a4a565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610ac1826105ef565b9150610acc836105ef565b9250828201905080821115610ae457610ae3610a8a565b5b92915050565b610af3816105ef565b82525050565b5f606082019050610b0c5f8301866109c4565b610b196020830185610aea565b610b266040830184610aea565b949350505050565b5f602082019050610b415f830184610aea565b92915050565b611b2880610b545f395ff3fe608060405234801561000f575f5ffd5b506004361061011f575f3560e01c80638da5cb5b116100ab578063cfbd48851161006f578063cfbd488514610307578063d5abeb0114610323578063dd62ed3e14610341578063f103b43314610371578063f2fde38b1461038d5761011f565b80638da5cb5b1461024f57806395d89b411461026d5780639dc29fac1461028b578063a9059cbb146102a7578063aa2fe91b146102d75761011f565b806323b872dd116100f257806323b872dd146101ab578063313ce567146101db57806340c10f19146101f957806370a0823114610215578063715018a6146102455761011f565b806306fdde0314610123578063095ea7b3146101415780630c9848321461017157806318160ddd1461018d575b5f5ffd5b61012b6103a9565b6040516101389190611478565b60405180910390f35b61015b60048036038101906101569190611529565b610439565b6040516101689190611581565b60405180910390f35b61018b6004803603810190610186919061159a565b61045b565b005b61019561056c565b6040516101a291906115d4565b60405180910390f35b6101c560048036038101906101c091906115ed565b610575565b6040516101d29190611581565b60405180910390f35b6101e36105a3565b6040516101f09190611658565b60405180910390f35b610213600480360381019061020e9190611529565b6105ab565b005b61022f600480360381019061022a919061159a565b6106e6565b60405161023c91906115d4565b60405180910390f35b61024d61072b565b005b61025761073e565b6040516102649190611680565b60405180910390f35b610275610766565b6040516102829190611478565b60405180910390f35b6102a560048036038101906102a09190611529565b6107f6565b005b6102c160048036038101906102bc9190611529565b6108da565b6040516102ce9190611581565b60405180910390f35b6102f160048036038101906102ec919061159a565b6108fc565b6040516102fe9190611581565b60405180910390f35b610321600480360381019061031c919061159a565b610919565b005b61032b610a44565b60405161033891906115d4565b60405180910390f35b61035b60048036038101906103569190611699565b610a4a565b60405161036891906115d4565b60405180910390f35b61038b600480360381019061038691906116d7565b610acc565b005b6103a760048036038101906103a2919061159a565b610b5f565b005b6060600380546103b89061172f565b80601f01602080910402602001604051908101604052809291908181526020018280546103e49061172f565b801561042f5780601f106104065761010080835404028352916020019161042f565b820191905f5260205f20905b81548152906001019060200180831161041257829003601f168201915b5050505050905090565b5f5f610443610be3565b9050610450818585610bea565b600191505092915050565b610463610bfc565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036104d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c8906117a9565b60405180910390fd5b600160075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f83b05b6735acd4b85e3bded8e72c851d1a87718f81e3c8e6f0c9d9a2baa88e4660405160405180910390a250565b5f600254905090565b5f5f61057f610be3565b905061058c858285610c83565b610597858585610d16565b60019150509392505050565b5f6012905090565b6105b3610e06565b60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff168061063a575061060b61073e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610679576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067090611811565b60405180910390fd5b6008548161068561056c565b61068f919061185c565b11156106d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c7906118d9565b60405180910390fd5b6106da8282610e55565b6106e2610ed4565b5050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610733610bfc565b61073c5f610ede565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546107759061172f565b80601f01602080910402602001604051908101604052809291908181526020018280546107a19061172f565b80156107ec5780601f106107c3576101008083540402835291602001916107ec565b820191905f5260205f20905b8154815290600101906020018083116107cf57829003601f168201915b5050505050905090565b6107fe610e06565b60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1680610885575061085661073e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6108c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108bb90611941565b60405180910390fd5b6108ce8282610fa1565b6108d6610ed4565b5050565b5f5f6108e4610be3565b90506108f1818585610d16565b600191505092915050565b6007602052805f5260405f205f915054906101000a900460ff1681565b610921610bfc565b60075f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff166109aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a1906119a9565b60405180910390fd5b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f44f4322f8daa225d5f4877ad0f7d3dfba248a774396f3ca99405ed40a044fe8160405160405180910390a250565b60085481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610ad4610bfc565b610adc61056c565b811015610b1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1590611a37565b60405180910390fd5b806008819055507f7810bd47de260c3e9ee10061cf438099dd12256c79485f12f94dbccc981e806c81604051610b5491906115d4565b60405180910390a150565b610b67610bfc565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610bd7575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610bce9190611680565b60405180910390fd5b610be081610ede565b50565b5f33905090565b610bf78383836001611020565b505050565b610c04610be3565b73ffffffffffffffffffffffffffffffffffffffff16610c2261073e565b73ffffffffffffffffffffffffffffffffffffffff1614610c8157610c45610be3565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610c789190611680565b60405180910390fd5b565b5f610c8e8484610a4a565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610d105781811015610d01578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610cf893929190611a55565b60405180910390fd5b610d0f84848484035f611020565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d86575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610d7d9190611680565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610df6575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610ded9190611680565b60405180910390fd5b610e018383836111ef565b505050565b600260065403610e4b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4290611ad4565b60405180910390fd5b6002600681905550565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ec5575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610ebc9190611680565b60405180910390fd5b610ed05f83836111ef565b5050565b6001600681905550565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611011575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016110089190611680565b60405180910390fd5b61101c825f836111ef565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611090575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016110879190611680565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611100575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016110f79190611680565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156111e9578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516111e091906115d4565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361123f578060025f828254611233919061185c565b9250508190555061130d565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156112c8578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016112bf93929190611a55565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611354578060025f828254039250508190555061139e565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516113fb91906115d4565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61144a82611408565b6114548185611412565b9350611464818560208601611422565b61146d81611430565b840191505092915050565b5f6020820190508181035f8301526114908184611440565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6114c58261149c565b9050919050565b6114d5816114bb565b81146114df575f5ffd5b50565b5f813590506114f0816114cc565b92915050565b5f819050919050565b611508816114f6565b8114611512575f5ffd5b50565b5f81359050611523816114ff565b92915050565b5f5f6040838503121561153f5761153e611498565b5b5f61154c858286016114e2565b925050602061155d85828601611515565b9150509250929050565b5f8115159050919050565b61157b81611567565b82525050565b5f6020820190506115945f830184611572565b92915050565b5f602082840312156115af576115ae611498565b5b5f6115bc848285016114e2565b91505092915050565b6115ce816114f6565b82525050565b5f6020820190506115e75f8301846115c5565b92915050565b5f5f5f6060848603121561160457611603611498565b5b5f611611868287016114e2565b9350506020611622868287016114e2565b925050604061163386828701611515565b9150509250925092565b5f60ff82169050919050565b6116528161163d565b82525050565b5f60208201905061166b5f830184611649565b92915050565b61167a816114bb565b82525050565b5f6020820190506116935f830184611671565b92915050565b5f5f604083850312156116af576116ae611498565b5b5f6116bc858286016114e2565b92505060206116cd858286016114e2565b9150509250929050565b5f602082840312156116ec576116eb611498565b5b5f6116f984828501611515565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061174657607f821691505b60208210810361175957611758611702565b5b50919050565b7f496e76616c6964206164647265737300000000000000000000000000000000005f82015250565b5f611793600f83611412565b915061179e8261175f565b602082019050919050565b5f6020820190508181035f8301526117c081611787565b9050919050565b7f4e6f7420617574686f72697a656420746f206d696e74000000000000000000005f82015250565b5f6117fb601683611412565b9150611806826117c7565b602082019050919050565b5f6020820190508181035f830152611828816117ef565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611866826114f6565b9150611871836114f6565b92508282019050808211156118895761188861182f565b5b92915050565b7f45786365656473206d617820737570706c7900000000000000000000000000005f82015250565b5f6118c3601283611412565b91506118ce8261188f565b602082019050919050565b5f6020820190508181035f8301526118f0816118b7565b9050919050565b7f4e6f7420617574686f72697a656420746f206275726e000000000000000000005f82015250565b5f61192b601683611412565b9150611936826118f7565b602082019050919050565b5f6020820190508181035f8301526119588161191f565b9050919050565b7f41646472657373206e6f7420617574686f72697a6564000000000000000000005f82015250565b5f611993601683611412565b915061199e8261195f565b602082019050919050565b5f6020820190508181035f8301526119c081611987565b9050919050565b7f4e6577206d617820737570706c79206c657373207468616e20746f74616c20735f8201527f7570706c79000000000000000000000000000000000000000000000000000000602082015250565b5f611a21602583611412565b9150611a2c826119c7565b604082019050919050565b5f6020820190508181035f830152611a4e81611a15565b9050919050565b5f606082019050611a685f830186611671565b611a7560208301856115c5565b611a8260408301846115c5565b949350505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f611abe601f83611412565b9150611ac982611a8a565b602082019050919050565b5f6020820190508181035f830152611aeb81611ab2565b905091905056fea2646970667358221220250ac314adaffebd817c3a27012ee3c583e3d759cebef78a53d25f4726c9930a64736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x267C CODESIZE SUB DUP1 PUSH2 0x267C DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x622 JUMP JUMPDEST CALLER DUP5 DUP5 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x43 SWAP2 SWAP1 PUSH2 0x8C5 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x53 SWAP2 SWAP1 PUSH2 0x8C5 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x9D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD5 DUP2 PUSH2 0x141 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP2 DUP2 LT ISZERO PUSH2 0x121 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x118 SWAP1 PUSH2 0xA6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0x138 CALLER DUP4 PUSH2 0x204 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP PUSH2 0xB47 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x274 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x9D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x285 PUSH0 DUP4 DUP4 PUSH2 0x289 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2D9 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0xAB7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3A7 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x362 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x359 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xAF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3EE JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x438 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x495 SWAP2 SWAP1 PUSH2 0xB2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x501 DUP3 PUSH2 0x4BB JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x520 JUMPI PUSH2 0x51F PUSH2 0x4CB JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x532 PUSH2 0x4A2 JUMP JUMPDEST SWAP1 POP PUSH2 0x53E DUP3 DUP3 PUSH2 0x4F8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x55D JUMPI PUSH2 0x55C PUSH2 0x4CB JUMP JUMPDEST JUMPDEST PUSH2 0x566 DUP3 PUSH2 0x4BB JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x593 PUSH2 0x58E DUP5 PUSH2 0x543 JUMP JUMPDEST PUSH2 0x529 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x5AF JUMPI PUSH2 0x5AE PUSH2 0x4B7 JUMP JUMPDEST JUMPDEST PUSH2 0x5BA DUP5 DUP3 DUP6 PUSH2 0x573 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5D6 JUMPI PUSH2 0x5D5 PUSH2 0x4B3 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x5E6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x581 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x601 DUP2 PUSH2 0x5EF JUMP JUMPDEST DUP2 EQ PUSH2 0x60B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x61C DUP2 PUSH2 0x5F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x63A JUMPI PUSH2 0x639 PUSH2 0x4AB JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x657 JUMPI PUSH2 0x656 PUSH2 0x4AF JUMP JUMPDEST JUMPDEST PUSH2 0x663 DUP8 DUP3 DUP9 ADD PUSH2 0x5C2 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x684 JUMPI PUSH2 0x683 PUSH2 0x4AF JUMP JUMPDEST JUMPDEST PUSH2 0x690 DUP8 DUP3 DUP9 ADD PUSH2 0x5C2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x6A1 DUP8 DUP3 DUP9 ADD PUSH2 0x60E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x6B2 DUP8 DUP3 DUP9 ADD PUSH2 0x60E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x70C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x71F JUMPI PUSH2 0x71E PUSH2 0x6C8 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x781 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x746 JUMP JUMPDEST PUSH2 0x78B DUP7 DUP4 PUSH2 0x746 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7C6 PUSH2 0x7C1 PUSH2 0x7BC DUP5 PUSH2 0x5EF JUMP JUMPDEST PUSH2 0x7A3 JUMP JUMPDEST PUSH2 0x5EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7DF DUP4 PUSH2 0x7AC JUMP JUMPDEST PUSH2 0x7F3 PUSH2 0x7EB DUP3 PUSH2 0x7CD JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x752 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x80A PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x815 DUP2 DUP5 DUP5 PUSH2 0x7D6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x838 JUMPI PUSH2 0x82D PUSH0 DUP3 PUSH2 0x802 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x81B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x87D JUMPI PUSH2 0x84E DUP2 PUSH2 0x725 JUMP JUMPDEST PUSH2 0x857 DUP5 PUSH2 0x737 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x866 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x87A PUSH2 0x872 DUP6 PUSH2 0x737 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x81A JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x89D PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x882 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8B5 DUP4 DUP4 PUSH2 0x88E JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8CE DUP3 PUSH2 0x6BE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8E7 JUMPI PUSH2 0x8E6 PUSH2 0x4CB JUMP JUMPDEST JUMPDEST PUSH2 0x8F1 DUP3 SLOAD PUSH2 0x6F5 JUMP JUMPDEST PUSH2 0x8FC DUP3 DUP3 DUP6 PUSH2 0x83C JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x92D JUMPI PUSH0 DUP5 ISZERO PUSH2 0x91B JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x925 DUP6 DUP3 PUSH2 0x8AA JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x98C JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x93B DUP7 PUSH2 0x725 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x962 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x93D JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x97F JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x97B PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x88E JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9BD DUP3 PUSH2 0x994 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9CD DUP2 PUSH2 0x9B3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9E6 PUSH0 DUP4 ADD DUP5 PUSH2 0x9C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D617820737570706C79206D757374206265203E3D20696E697469616C207375 PUSH0 DUP3 ADD MSTORE PUSH32 0x70706C7900000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA56 PUSH1 0x24 DUP4 PUSH2 0x9EC JUMP JUMPDEST SWAP2 POP PUSH2 0xA61 DUP3 PUSH2 0x9FC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA83 DUP2 PUSH2 0xA4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xAC1 DUP3 PUSH2 0x5EF JUMP JUMPDEST SWAP2 POP PUSH2 0xACC DUP4 PUSH2 0x5EF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xAE4 JUMPI PUSH2 0xAE3 PUSH2 0xA8A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAF3 DUP2 PUSH2 0x5EF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xB0C PUSH0 DUP4 ADD DUP7 PUSH2 0x9C4 JUMP JUMPDEST PUSH2 0xB19 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xAEA JUMP JUMPDEST PUSH2 0xB26 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xAEA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB41 PUSH0 DUP4 ADD DUP5 PUSH2 0xAEA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B28 DUP1 PUSH2 0xB54 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xCFBD4885 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xCFBD4885 EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x341 JUMPI DUP1 PUSH4 0xF103B433 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x38D JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0xAA2FE91B EQ PUSH2 0x2D7 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x245 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0xC984832 EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x18D JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x12B PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x1478 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x1529 JUMP JUMPDEST PUSH2 0x439 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x1581 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x159A JUMP JUMPDEST PUSH2 0x45B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x195 PUSH2 0x56C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0x15D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x15ED JUMP JUMPDEST PUSH2 0x575 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x1581 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E3 PUSH2 0x5A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x1658 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x213 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x1529 JUMP JUMPDEST PUSH2 0x5AB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x159A JUMP JUMPDEST PUSH2 0x6E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23C SWAP2 SWAP1 PUSH2 0x15D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24D PUSH2 0x72B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x257 PUSH2 0x73E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x1680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x275 PUSH2 0x766 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x1478 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0x1529 JUMP JUMPDEST PUSH2 0x7F6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x1529 JUMP JUMPDEST PUSH2 0x8DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x1581 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x159A JUMP JUMPDEST PUSH2 0x8FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x1581 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x321 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x159A JUMP JUMPDEST PUSH2 0x919 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32B PUSH2 0xA44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x338 SWAP2 SWAP1 PUSH2 0x15D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x356 SWAP2 SWAP1 PUSH2 0x1699 JUMP JUMPDEST PUSH2 0xA4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x15D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x386 SWAP2 SWAP1 PUSH2 0x16D7 JUMP JUMPDEST PUSH2 0xACC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A2 SWAP2 SWAP1 PUSH2 0x159A JUMP JUMPDEST PUSH2 0xB5F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3B8 SWAP1 PUSH2 0x172F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3E4 SWAP1 PUSH2 0x172F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x42F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x406 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x42F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x412 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x443 PUSH2 0xBE3 JUMP JUMPDEST SWAP1 POP PUSH2 0x450 DUP2 DUP6 DUP6 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x463 PUSH2 0xBFC JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C8 SWAP1 PUSH2 0x17A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x83B05B6735ACD4B85E3BDED8E72C851D1A87718F81E3C8E6F0C9D9A2BAA88E46 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x57F PUSH2 0xBE3 JUMP JUMPDEST SWAP1 POP PUSH2 0x58C DUP6 DUP3 DUP6 PUSH2 0xC83 JUMP JUMPDEST PUSH2 0x597 DUP6 DUP6 DUP6 PUSH2 0xD16 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5B3 PUSH2 0xE06 JUMP JUMPDEST PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x63A JUMPI POP PUSH2 0x60B PUSH2 0x73E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x679 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x670 SWAP1 PUSH2 0x1811 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD DUP2 PUSH2 0x685 PUSH2 0x56C JUMP JUMPDEST PUSH2 0x68F SWAP2 SWAP1 PUSH2 0x185C JUMP JUMPDEST GT ISZERO PUSH2 0x6D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C7 SWAP1 PUSH2 0x18D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6DA DUP3 DUP3 PUSH2 0xE55 JUMP JUMPDEST PUSH2 0x6E2 PUSH2 0xED4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x733 PUSH2 0xBFC JUMP JUMPDEST PUSH2 0x73C PUSH0 PUSH2 0xEDE JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x775 SWAP1 PUSH2 0x172F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7A1 SWAP1 PUSH2 0x172F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7EC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7C3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7EC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7CF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7FE PUSH2 0xE06 JUMP JUMPDEST PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x885 JUMPI POP PUSH2 0x856 PUSH2 0x73E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x8C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8BB SWAP1 PUSH2 0x1941 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8CE DUP3 DUP3 PUSH2 0xFA1 JUMP JUMPDEST PUSH2 0x8D6 PUSH2 0xED4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x8E4 PUSH2 0xBE3 JUMP JUMPDEST SWAP1 POP PUSH2 0x8F1 DUP2 DUP6 DUP6 PUSH2 0xD16 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x921 PUSH2 0xBFC JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x9AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A1 SWAP1 PUSH2 0x19A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x44F4322F8DAA225D5F4877AD0F7D3DFBA248A774396F3CA99405ED40A044FE81 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAD4 PUSH2 0xBFC JUMP JUMPDEST PUSH2 0xADC PUSH2 0x56C JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xB1E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB15 SWAP1 PUSH2 0x1A37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH32 0x7810BD47DE260C3E9EE10061CF438099DD12256C79485F12F94DBCCC981E806C DUP2 PUSH1 0x40 MLOAD PUSH2 0xB54 SWAP2 SWAP1 PUSH2 0x15D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xB67 PUSH2 0xBFC JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBD7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCE SWAP2 SWAP1 PUSH2 0x1680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBE0 DUP2 PUSH2 0xEDE JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBF7 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1020 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xC04 PUSH2 0xBE3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC22 PUSH2 0x73E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC81 JUMPI PUSH2 0xC45 PUSH2 0xBE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC78 SWAP2 SWAP1 PUSH2 0x1680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0xC8E DUP5 DUP5 PUSH2 0xA4A JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xD10 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xD01 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD0F DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1020 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD86 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD7D SWAP2 SWAP1 PUSH2 0x1680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDF6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDED SWAP2 SWAP1 PUSH2 0x1680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE01 DUP4 DUP4 DUP4 PUSH2 0x11EF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0xE4B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE42 SWAP1 PUSH2 0x1AD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEC5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEBC SWAP2 SWAP1 PUSH2 0x1680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xED0 PUSH0 DUP4 DUP4 PUSH2 0x11EF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1011 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1008 SWAP2 SWAP1 PUSH2 0x1680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x101C DUP3 PUSH0 DUP4 PUSH2 0x11EF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1090 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1087 SWAP2 SWAP1 PUSH2 0x1680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1100 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F7 SWAP2 SWAP1 PUSH2 0x1680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x11E9 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x11E0 SWAP2 SWAP1 PUSH2 0x15D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x123F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1233 SWAP2 SWAP1 PUSH2 0x185C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x130D JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x12C8 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12BF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1354 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x139E JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x13FB SWAP2 SWAP1 PUSH2 0x15D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x144A DUP3 PUSH2 0x1408 JUMP JUMPDEST PUSH2 0x1454 DUP2 DUP6 PUSH2 0x1412 JUMP JUMPDEST SWAP4 POP PUSH2 0x1464 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1422 JUMP JUMPDEST PUSH2 0x146D DUP2 PUSH2 0x1430 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1490 DUP2 DUP5 PUSH2 0x1440 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14C5 DUP3 PUSH2 0x149C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14D5 DUP2 PUSH2 0x14BB JUMP JUMPDEST DUP2 EQ PUSH2 0x14DF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14F0 DUP2 PUSH2 0x14CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1508 DUP2 PUSH2 0x14F6 JUMP JUMPDEST DUP2 EQ PUSH2 0x1512 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1523 DUP2 PUSH2 0x14FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x153F JUMPI PUSH2 0x153E PUSH2 0x1498 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x154C DUP6 DUP3 DUP7 ADD PUSH2 0x14E2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x155D DUP6 DUP3 DUP7 ADD PUSH2 0x1515 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x157B DUP2 PUSH2 0x1567 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1594 PUSH0 DUP4 ADD DUP5 PUSH2 0x1572 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15AF JUMPI PUSH2 0x15AE PUSH2 0x1498 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15BC DUP5 DUP3 DUP6 ADD PUSH2 0x14E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15CE DUP2 PUSH2 0x14F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15E7 PUSH0 DUP4 ADD DUP5 PUSH2 0x15C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1604 JUMPI PUSH2 0x1603 PUSH2 0x1498 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1611 DUP7 DUP3 DUP8 ADD PUSH2 0x14E2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1622 DUP7 DUP3 DUP8 ADD PUSH2 0x14E2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1633 DUP7 DUP3 DUP8 ADD PUSH2 0x1515 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1652 DUP2 PUSH2 0x163D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x166B PUSH0 DUP4 ADD DUP5 PUSH2 0x1649 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x167A DUP2 PUSH2 0x14BB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1693 PUSH0 DUP4 ADD DUP5 PUSH2 0x1671 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16AF JUMPI PUSH2 0x16AE PUSH2 0x1498 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16BC DUP6 DUP3 DUP7 ADD PUSH2 0x14E2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16CD DUP6 DUP3 DUP7 ADD PUSH2 0x14E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16EC JUMPI PUSH2 0x16EB PUSH2 0x1498 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16F9 DUP5 DUP3 DUP6 ADD PUSH2 0x1515 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1746 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1759 JUMPI PUSH2 0x1758 PUSH2 0x1702 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1793 PUSH1 0xF DUP4 PUSH2 0x1412 JUMP JUMPDEST SWAP2 POP PUSH2 0x179E DUP3 PUSH2 0x175F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17C0 DUP2 PUSH2 0x1787 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A656420746F206D696E7400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17FB PUSH1 0x16 DUP4 PUSH2 0x1412 JUMP JUMPDEST SWAP2 POP PUSH2 0x1806 DUP3 PUSH2 0x17C7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1828 DUP2 PUSH2 0x17EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1866 DUP3 PUSH2 0x14F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1871 DUP4 PUSH2 0x14F6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1889 JUMPI PUSH2 0x1888 PUSH2 0x182F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45786365656473206D617820737570706C790000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18C3 PUSH1 0x12 DUP4 PUSH2 0x1412 JUMP JUMPDEST SWAP2 POP PUSH2 0x18CE DUP3 PUSH2 0x188F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18F0 DUP2 PUSH2 0x18B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A656420746F206275726E00000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x192B PUSH1 0x16 DUP4 PUSH2 0x1412 JUMP JUMPDEST SWAP2 POP PUSH2 0x1936 DUP3 PUSH2 0x18F7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1958 DUP2 PUSH2 0x191F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x41646472657373206E6F7420617574686F72697A656400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1993 PUSH1 0x16 DUP4 PUSH2 0x1412 JUMP JUMPDEST SWAP2 POP PUSH2 0x199E DUP3 PUSH2 0x195F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19C0 DUP2 PUSH2 0x1987 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6577206D617820737570706C79206C657373207468616E20746F74616C2073 PUSH0 DUP3 ADD MSTORE PUSH32 0x7570706C79000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A21 PUSH1 0x25 DUP4 PUSH2 0x1412 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A2C DUP3 PUSH2 0x19C7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A4E DUP2 PUSH2 0x1A15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1A68 PUSH0 DUP4 ADD DUP7 PUSH2 0x1671 JUMP JUMPDEST PUSH2 0x1A75 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x15C5 JUMP JUMPDEST PUSH2 0x1A82 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15C5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1ABE PUSH1 0x1F DUP4 PUSH2 0x1412 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AC9 DUP3 PUSH2 0x1A8A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AEB DUP2 PUSH2 0x1AB2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 EXP 0xC3 EQ 0xAD 0xAF INVALID 0xBD DUP2 PUSH29 0x3A27012EE3C583E3D759CEBEF78A53D25F4726C9930A64736F6C634300 ADDMOD SAR STOP CALLER ",
							"sourceMap": "476:3180:7:-:0;;;1273:346;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1440:10;1416:5;1423:7;1675:5:3;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:2;1821:7;:22;;;;1484:13:7::2;1470:10;:27;;1462:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;1560:10;1548:9;:22;;;;1580:32;1586:10;1598:13;1580:5;;;:32;;:::i;:::-;1273:346:::0;;;;476:3180;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7458:208:3:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:75:8:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:139::-;1699:6;1694:3;1689;1683:23;1740:1;1731:6;1726:3;1722:16;1715:27;1610:139;;;:::o;1755:434::-;1844:5;1869:66;1885:49;1927:6;1885:49;:::i;:::-;1869:66;:::i;:::-;1860:75;;1958:6;1951:5;1944:21;1996:4;1989:5;1985:16;2034:3;2025:6;2020:3;2016:16;2013:25;2010:112;;;2041:79;;:::i;:::-;2010:112;2131:52;2176:6;2171:3;2166;2131:52;:::i;:::-;1850:339;1755:434;;;;;:::o;2209:355::-;2276:5;2325:3;2318:4;2310:6;2306:17;2302:27;2292:122;;2333:79;;:::i;:::-;2292:122;2443:6;2437:13;2468:90;2554:3;2546:6;2539:4;2531:6;2527:17;2468:90;:::i;:::-;2459:99;;2282:282;2209:355;;;;:::o;2570:77::-;2607:7;2636:5;2625:16;;2570:77;;;:::o;2653:122::-;2726:24;2744:5;2726:24;:::i;:::-;2719:5;2716:35;2706:63;;2765:1;2762;2755:12;2706:63;2653:122;:::o;2781:143::-;2838:5;2869:6;2863:13;2854:22;;2885:33;2912:5;2885:33;:::i;:::-;2781:143;;;;:::o;2930:1166::-;3047:6;3055;3063;3071;3120:3;3108:9;3099:7;3095:23;3091:33;3088:120;;;3127:79;;:::i;:::-;3088:120;3268:1;3257:9;3253:17;3247:24;3298:18;3290:6;3287:30;3284:117;;;3320:79;;:::i;:::-;3284:117;3425:74;3491:7;3482:6;3471:9;3467:22;3425:74;:::i;:::-;3415:84;;3218:291;3569:2;3558:9;3554:18;3548:25;3600:18;3592:6;3589:30;3586:117;;;3622:79;;:::i;:::-;3586:117;3727:74;3793:7;3784:6;3773:9;3769:22;3727:74;:::i;:::-;3717:84;;3519:292;3850:2;3876:64;3932:7;3923:6;3912:9;3908:22;3876:64;:::i;:::-;3866:74;;3821:129;3989:2;4015:64;4071:7;4062:6;4051:9;4047:22;4015:64;:::i;:::-;4005:74;;3960:129;2930:1166;;;;;;;:::o;4102:99::-;4154:6;4188:5;4182:12;4172:22;;4102:99;;;:::o;4207:180::-;4255:77;4252:1;4245:88;4352:4;4349:1;4342:15;4376:4;4373:1;4366:15;4393:320;4437:6;4474:1;4468:4;4464:12;4454:22;;4521:1;4515:4;4511:12;4542:18;4532:81;;4598:4;4590:6;4586:17;4576:27;;4532:81;4660:2;4652:6;4649:14;4629:18;4626:38;4623:84;;4679:18;;:::i;:::-;4623:84;4444:269;4393:320;;;:::o;4719:141::-;4768:4;4791:3;4783:11;;4814:3;4811:1;4804:14;4848:4;4845:1;4835:18;4827:26;;4719:141;;;:::o;4866:93::-;4903:6;4950:2;4945;4938:5;4934:14;4930:23;4920:33;;4866:93;;;:::o;4965:107::-;5009:8;5059:5;5053:4;5049:16;5028:37;;4965:107;;;;:::o;5078:393::-;5147:6;5197:1;5185:10;5181:18;5220:97;5250:66;5239:9;5220:97;:::i;:::-;5338:39;5368:8;5357:9;5338:39;:::i;:::-;5326:51;;5410:4;5406:9;5399:5;5395:21;5386:30;;5459:4;5449:8;5445:19;5438:5;5435:30;5425:40;;5154:317;;5078:393;;;;;:::o;5477:60::-;5505:3;5526:5;5519:12;;5477:60;;;:::o;5543:142::-;5593:9;5626:53;5644:34;5653:24;5671:5;5653:24;:::i;:::-;5644:34;:::i;:::-;5626:53;:::i;:::-;5613:66;;5543:142;;;:::o;5691:75::-;5734:3;5755:5;5748:12;;5691:75;;;:::o;5772:269::-;5882:39;5913:7;5882:39;:::i;:::-;5943:91;5992:41;6016:16;5992:41;:::i;:::-;5984:6;5977:4;5971:11;5943:91;:::i;:::-;5937:4;5930:105;5848:193;5772:269;;;:::o;6047:73::-;6092:3;6113:1;6106:8;;6047:73;:::o;6126:189::-;6203:32;;:::i;:::-;6244:65;6302:6;6294;6288:4;6244:65;:::i;:::-;6179:136;6126:189;;:::o;6321:186::-;6381:120;6398:3;6391:5;6388:14;6381:120;;;6452:39;6489:1;6482:5;6452:39;:::i;:::-;6425:1;6418:5;6414:13;6405:22;;6381:120;;;6321:186;;:::o;6513:543::-;6614:2;6609:3;6606:11;6603:446;;;6648:38;6680:5;6648:38;:::i;:::-;6732:29;6750:10;6732:29;:::i;:::-;6722:8;6718:44;6915:2;6903:10;6900:18;6897:49;;;6936:8;6921:23;;6897:49;6959:80;7015:22;7033:3;7015:22;:::i;:::-;7005:8;7001:37;6988:11;6959:80;:::i;:::-;6618:431;;6603:446;6513:543;;;:::o;7062:117::-;7116:8;7166:5;7160:4;7156:16;7135:37;;7062:117;;;;:::o;7185:169::-;7229:6;7262:51;7310:1;7306:6;7298:5;7295:1;7291:13;7262:51;:::i;:::-;7258:56;7343:4;7337;7333:15;7323:25;;7236:118;7185:169;;;;:::o;7359:295::-;7435:4;7581:29;7606:3;7600:4;7581:29;:::i;:::-;7573:37;;7643:3;7640:1;7636:11;7630:4;7627:21;7619:29;;7359:295;;;;:::o;7659:1395::-;7776:37;7809:3;7776:37;:::i;:::-;7878:18;7870:6;7867:30;7864:56;;;7900:18;;:::i;:::-;7864:56;7944:38;7976:4;7970:11;7944:38;:::i;:::-;8029:67;8089:6;8081;8075:4;8029:67;:::i;:::-;8123:1;8147:4;8134:17;;8179:2;8171:6;8168:14;8196:1;8191:618;;;;8853:1;8870:6;8867:77;;;8919:9;8914:3;8910:19;8904:26;8895:35;;8867:77;8970:67;9030:6;9023:5;8970:67;:::i;:::-;8964:4;8957:81;8826:222;8161:887;;8191:618;8243:4;8239:9;8231:6;8227:22;8277:37;8309:4;8277:37;:::i;:::-;8336:1;8350:208;8364:7;8361:1;8358:14;8350:208;;;8443:9;8438:3;8434:19;8428:26;8420:6;8413:42;8494:1;8486:6;8482:14;8472:24;;8541:2;8530:9;8526:18;8513:31;;8387:4;8384:1;8380:12;8375:17;;8350:208;;;8586:6;8577:7;8574:19;8571:179;;;8644:9;8639:3;8635:19;8629:26;8687:48;8729:4;8721:6;8717:17;8706:9;8687:48;:::i;:::-;8679:6;8672:64;8594:156;8571:179;8796:1;8792;8784:6;8780:14;8776:22;8770:4;8763:36;8198:611;;;8161:887;;7751:1303;;;7659:1395;;:::o;9060:126::-;9097:7;9137:42;9130:5;9126:54;9115:65;;9060:126;;;:::o;9192:96::-;9229:7;9258:24;9276:5;9258:24;:::i;:::-;9247:35;;9192:96;;;:::o;9294:118::-;9381:24;9399:5;9381:24;:::i;:::-;9376:3;9369:37;9294:118;;:::o;9418:222::-;9511:4;9549:2;9538:9;9534:18;9526:26;;9562:71;9630:1;9619:9;9615:17;9606:6;9562:71;:::i;:::-;9418:222;;;;:::o;9646:169::-;9730:11;9764:6;9759:3;9752:19;9804:4;9799:3;9795:14;9780:29;;9646:169;;;;:::o;9821:223::-;9961:34;9957:1;9949:6;9945:14;9938:58;10030:6;10025:2;10017:6;10013:15;10006:31;9821:223;:::o;10050:366::-;10192:3;10213:67;10277:2;10272:3;10213:67;:::i;:::-;10206:74;;10289:93;10378:3;10289:93;:::i;:::-;10407:2;10402:3;10398:12;10391:19;;10050:366;;;:::o;10422:419::-;10588:4;10626:2;10615:9;10611:18;10603:26;;10675:9;10669:4;10665:20;10661:1;10650:9;10646:17;10639:47;10703:131;10829:4;10703:131;:::i;:::-;10695:139;;10422:419;;;:::o;10847:180::-;10895:77;10892:1;10885:88;10992:4;10989:1;10982:15;11016:4;11013:1;11006:15;11033:191;11073:3;11092:20;11110:1;11092:20;:::i;:::-;11087:25;;11126:20;11144:1;11126:20;:::i;:::-;11121:25;;11169:1;11166;11162:9;11155:16;;11190:3;11187:1;11184:10;11181:36;;;11197:18;;:::i;:::-;11181:36;11033:191;;;;:::o;11230:118::-;11317:24;11335:5;11317:24;:::i;:::-;11312:3;11305:37;11230:118;;:::o;11354:442::-;11503:4;11541:2;11530:9;11526:18;11518:26;;11554:71;11622:1;11611:9;11607:17;11598:6;11554:71;:::i;:::-;11635:72;11703:2;11692:9;11688:18;11679:6;11635:72;:::i;:::-;11717;11785:2;11774:9;11770:18;11761:6;11717:72;:::i;:::-;11354:442;;;;;;:::o;11802:222::-;11895:4;11933:2;11922:9;11918:18;11910:26;;11946:71;12014:1;12003:9;11999:17;11990:6;11946:71;:::i;:::-;11802:222;;;;:::o;476:3180:7:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_755": {
									"entryPoint": 3050,
									"id": 755,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_815": {
									"entryPoint": 4128,
									"id": 815,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_737": {
									"entryPoint": 4001,
									"id": 737,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3068,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_704": {
									"entryPoint": 3669,
									"id": 704,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_980": {
									"entryPoint": 3043,
									"id": 980,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_337": {
									"entryPoint": 3796,
									"id": 337,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_329": {
									"entryPoint": 3590,
									"id": 329,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_863": {
									"entryPoint": 3203,
									"id": 863,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3806,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_594": {
									"entryPoint": 3350,
									"id": 594,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_671": {
									"entryPoint": 4591,
									"id": 671,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_491": {
									"entryPoint": 2634,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_515": {
									"entryPoint": 1081,
									"id": 515,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@authorizeMinter_1095": {
									"entryPoint": 1115,
									"id": 1095,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@authorizedMinters_1014": {
									"entryPoint": 2300,
									"id": 1014,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@balanceOf_450": {
									"entryPoint": 1766,
									"id": 450,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_1191": {
									"entryPoint": 2038,
									"id": 1191,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@decimals_428": {
									"entryPoint": 1443,
									"id": 428,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@maxSupply_1016": {
									"entryPoint": 2628,
									"id": 1016,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_1161": {
									"entryPoint": 1451,
									"id": 1161,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_410": {
									"entryPoint": 937,
									"id": 410,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1854,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1835,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@revokeMinter_1121": {
									"entryPoint": 2329,
									"id": 1121,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_419": {
									"entryPoint": 1894,
									"id": 419,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_437": {
									"entryPoint": 1388,
									"id": 437,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_547": {
									"entryPoint": 1397,
									"id": 547,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 2911,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_474": {
									"entryPoint": 2266,
									"id": 474,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@updateMaxSupply_1216": {
									"entryPoint": 2764,
									"id": 1216,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5346,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5397,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5530,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5785,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5847,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5745,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6023,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1c55c28d6e77df84f6ee9e97d5866859c436c1f0b9dd5c76a092ffa91ca40816_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6431,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6127,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6327,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9e506c47a9bc4b9f15c3c811bfc88c16276f1a6c914414d94276ae51ced75ede_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6677,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ad374ded824b798cdc9deee0988a6fca0aedb782bc5a3214c075a7763e678f0d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6535,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6834,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5573,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5705,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6741,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5505,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5240,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6057,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1c55c28d6e77df84f6ee9e97d5866859c436c1f0b9dd5c76a092ffa91ca40816__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6465,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6161,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6361,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9e506c47a9bc4b9f15c3c811bfc88c16276f1a6c914414d94276ae51ced75ede__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6711,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ad374ded824b798cdc9deee0988a6fca0aedb782bc5a3214c075a7763e678f0d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6569,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6868,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5588,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5720,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5128,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5138,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6236,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5307,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5479,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5276,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5366,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5154,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5935,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6191,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5890,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5272,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5168,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226": {
									"entryPoint": 5983,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1c55c28d6e77df84f6ee9e97d5866859c436c1f0b9dd5c76a092ffa91ca40816": {
									"entryPoint": 6391,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b": {
									"entryPoint": 6087,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611": {
									"entryPoint": 6287,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9e506c47a9bc4b9f15c3c811bfc88c16276f1a6c914414d94276ae51ced75ede": {
									"entryPoint": 6599,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ad374ded824b798cdc9deee0988a6fca0aedb782bc5a3214c075a7763e678f0d": {
									"entryPoint": 6495,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 6794,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5324,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14463:8",
										"nodeType": "YulBlock",
										"src": "0:14463:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:8",
													"nodeType": "YulBlock",
													"src": "66:40:8",
													"statements": [
														{
															"nativeSrc": "77:22:8",
															"nodeType": "YulAssignment",
															"src": "77:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:8"
																},
																"nativeSrc": "87:12:8",
																"nodeType": "YulFunctionCall",
																"src": "87:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:8",
														"nodeType": "YulTypedName",
														"src": "49:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:8",
														"nodeType": "YulTypedName",
														"src": "59:6:8",
														"type": ""
													}
												],
												"src": "7:99:8"
											},
											{
												"body": {
													"nativeSrc": "208:73:8",
													"nodeType": "YulBlock",
													"src": "208:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:8"
																},
																"nativeSrc": "218:19:8",
																"nodeType": "YulFunctionCall",
																"src": "218:19:8"
															},
															"nativeSrc": "218:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:8"
														},
														{
															"nativeSrc": "246:29:8",
															"nodeType": "YulAssignment",
															"src": "246:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:8",
																		"nodeType": "YulLiteral",
																		"src": "270:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:8"
																},
																"nativeSrc": "261:14:8",
																"nodeType": "YulFunctionCall",
																"src": "261:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:8",
														"nodeType": "YulTypedName",
														"src": "180:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:8",
														"nodeType": "YulTypedName",
														"src": "185:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:8",
														"nodeType": "YulTypedName",
														"src": "196:11:8",
														"type": ""
													}
												],
												"src": "112:169:8"
											},
											{
												"body": {
													"nativeSrc": "349:77:8",
													"nodeType": "YulBlock",
													"src": "349:77:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:8"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:8"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:8"
																},
																"nativeSrc": "360:23:8",
																"nodeType": "YulFunctionCall",
																"src": "360:23:8"
															},
															"nativeSrc": "360:23:8",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:8"
																		},
																		"nativeSrc": "399:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:8",
																		"nodeType": "YulLiteral",
																		"src": "417:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:8"
																},
																"nativeSrc": "392:27:8",
																"nodeType": "YulFunctionCall",
																"src": "392:27:8"
															},
															"nativeSrc": "392:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:8",
														"nodeType": "YulTypedName",
														"src": "331:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:8",
														"nodeType": "YulTypedName",
														"src": "336:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:8",
														"nodeType": "YulTypedName",
														"src": "341:6:8",
														"type": ""
													}
												],
												"src": "287:139:8"
											},
											{
												"body": {
													"nativeSrc": "480:54:8",
													"nodeType": "YulBlock",
													"src": "480:54:8",
													"statements": [
														{
															"nativeSrc": "490:38:8",
															"nodeType": "YulAssignment",
															"src": "490:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:8",
																				"nodeType": "YulLiteral",
																				"src": "515:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:8"
																		},
																		"nativeSrc": "504:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:8",
																				"nodeType": "YulLiteral",
																				"src": "524:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:8"
																		},
																		"nativeSrc": "520:7:8",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:8"
																},
																"nativeSrc": "500:28:8",
																"nodeType": "YulFunctionCall",
																"src": "500:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:8",
														"nodeType": "YulTypedName",
														"src": "463:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:8",
														"nodeType": "YulTypedName",
														"src": "473:6:8",
														"type": ""
													}
												],
												"src": "432:102:8"
											},
											{
												"body": {
													"nativeSrc": "632:285:8",
													"nodeType": "YulBlock",
													"src": "632:285:8",
													"statements": [
														{
															"nativeSrc": "642:53:8",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:8"
																},
																"nativeSrc": "656:39:8",
																"nodeType": "YulFunctionCall",
																"src": "656:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:8",
																	"nodeType": "YulTypedName",
																	"src": "646:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:8",
															"nodeType": "YulAssignment",
															"src": "704:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:8"
																},
																"nativeSrc": "711:71:8",
																"nodeType": "YulFunctionCall",
																"src": "711:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:8",
																				"nodeType": "YulLiteral",
																				"src": "837:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:8"
																		},
																		"nativeSrc": "826:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:8",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:8"
																},
																"nativeSrc": "791:65:8",
																"nodeType": "YulFunctionCall",
																"src": "791:65:8"
															},
															"nativeSrc": "791:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:8"
														},
														{
															"nativeSrc": "865:46:8",
															"nodeType": "YulAssignment",
															"src": "865:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:8",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:8"
																		},
																		"nativeSrc": "881:29:8",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:8"
																},
																"nativeSrc": "872:39:8",
																"nodeType": "YulFunctionCall",
																"src": "872:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:8",
														"nodeType": "YulTypedName",
														"src": "613:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:8",
														"nodeType": "YulTypedName",
														"src": "620:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:8",
														"nodeType": "YulTypedName",
														"src": "628:3:8",
														"type": ""
													}
												],
												"src": "540:377:8"
											},
											{
												"body": {
													"nativeSrc": "1041:195:8",
													"nodeType": "YulBlock",
													"src": "1041:195:8",
													"statements": [
														{
															"nativeSrc": "1051:26:8",
															"nodeType": "YulAssignment",
															"src": "1051:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:8"
																},
																"nativeSrc": "1059:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:8"
																		},
																		"nativeSrc": "1094:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:8"
																		},
																		"nativeSrc": "1113:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:8"
																},
																"nativeSrc": "1087:47:8",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:8"
															},
															"nativeSrc": "1087:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:8"
														},
														{
															"nativeSrc": "1143:86:8",
															"nodeType": "YulAssignment",
															"src": "1143:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:8"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:8",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:8"
																},
																"nativeSrc": "1151:78:8",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:8",
														"nodeType": "YulTypedName",
														"src": "1013:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:8",
														"nodeType": "YulTypedName",
														"src": "1025:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:8",
														"nodeType": "YulTypedName",
														"src": "1036:4:8",
														"type": ""
													}
												],
												"src": "923:313:8"
											},
											{
												"body": {
													"nativeSrc": "1282:35:8",
													"nodeType": "YulBlock",
													"src": "1282:35:8",
													"statements": [
														{
															"nativeSrc": "1292:19:8",
															"nodeType": "YulAssignment",
															"src": "1292:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:8"
																},
																"nativeSrc": "1302:9:8",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:8",
														"nodeType": "YulTypedName",
														"src": "1275:6:8",
														"type": ""
													}
												],
												"src": "1242:75:8"
											},
											{
												"body": {
													"nativeSrc": "1412:28:8",
													"nodeType": "YulBlock",
													"src": "1412:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:8"
																},
																"nativeSrc": "1422:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:8"
															},
															"nativeSrc": "1422:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:8"
											},
											{
												"body": {
													"nativeSrc": "1535:28:8",
													"nodeType": "YulBlock",
													"src": "1535:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:8"
																},
																"nativeSrc": "1545:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:8"
															},
															"nativeSrc": "1545:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:8"
											},
											{
												"body": {
													"nativeSrc": "1614:81:8",
													"nodeType": "YulBlock",
													"src": "1614:81:8",
													"statements": [
														{
															"nativeSrc": "1624:65:8",
															"nodeType": "YulAssignment",
															"src": "1624:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:8",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:8"
																},
																"nativeSrc": "1635:54:8",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:8",
														"nodeType": "YulTypedName",
														"src": "1596:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:8",
														"nodeType": "YulTypedName",
														"src": "1606:7:8",
														"type": ""
													}
												],
												"src": "1569:126:8"
											},
											{
												"body": {
													"nativeSrc": "1746:51:8",
													"nodeType": "YulBlock",
													"src": "1746:51:8",
													"statements": [
														{
															"nativeSrc": "1756:35:8",
															"nodeType": "YulAssignment",
															"src": "1756:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:8"
																},
																"nativeSrc": "1767:24:8",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:8",
														"nodeType": "YulTypedName",
														"src": "1728:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:8",
														"nodeType": "YulTypedName",
														"src": "1738:7:8",
														"type": ""
													}
												],
												"src": "1701:96:8"
											},
											{
												"body": {
													"nativeSrc": "1846:79:8",
													"nodeType": "YulBlock",
													"src": "1846:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:8",
																"nodeType": "YulBlock",
																"src": "1903:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:8"
																			},
																			"nativeSrc": "1905:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:8"
																		},
																		"nativeSrc": "1905:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:8"
																				},
																				"nativeSrc": "1876:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:8"
																		},
																		"nativeSrc": "1866:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:8"
																},
																"nativeSrc": "1859:43:8",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:8"
															},
															"nativeSrc": "1856:63:8",
															"nodeType": "YulIf",
															"src": "1856:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:8",
														"nodeType": "YulTypedName",
														"src": "1839:5:8",
														"type": ""
													}
												],
												"src": "1803:122:8"
											},
											{
												"body": {
													"nativeSrc": "1983:87:8",
													"nodeType": "YulBlock",
													"src": "1983:87:8",
													"statements": [
														{
															"nativeSrc": "1993:29:8",
															"nodeType": "YulAssignment",
															"src": "1993:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:8"
																},
																"nativeSrc": "2002:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:8"
																},
																"nativeSrc": "2031:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:8"
															},
															"nativeSrc": "2031:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:8",
														"nodeType": "YulTypedName",
														"src": "1961:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:8",
														"nodeType": "YulTypedName",
														"src": "1969:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:8",
														"nodeType": "YulTypedName",
														"src": "1977:5:8",
														"type": ""
													}
												],
												"src": "1931:139:8"
											},
											{
												"body": {
													"nativeSrc": "2121:32:8",
													"nodeType": "YulBlock",
													"src": "2121:32:8",
													"statements": [
														{
															"nativeSrc": "2131:16:8",
															"nodeType": "YulAssignment",
															"src": "2131:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:8",
																"nodeType": "YulIdentifier",
																"src": "2142:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:8",
														"nodeType": "YulTypedName",
														"src": "2103:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:8",
														"nodeType": "YulTypedName",
														"src": "2113:7:8",
														"type": ""
													}
												],
												"src": "2076:77:8"
											},
											{
												"body": {
													"nativeSrc": "2202:79:8",
													"nodeType": "YulBlock",
													"src": "2202:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:8",
																"nodeType": "YulBlock",
																"src": "2259:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:8"
																			},
																			"nativeSrc": "2261:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:8"
																		},
																		"nativeSrc": "2261:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:8"
																				},
																				"nativeSrc": "2232:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:8"
																		},
																		"nativeSrc": "2222:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:8"
																},
																"nativeSrc": "2215:43:8",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:8"
															},
															"nativeSrc": "2212:63:8",
															"nodeType": "YulIf",
															"src": "2212:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:8",
														"nodeType": "YulTypedName",
														"src": "2195:5:8",
														"type": ""
													}
												],
												"src": "2159:122:8"
											},
											{
												"body": {
													"nativeSrc": "2339:87:8",
													"nodeType": "YulBlock",
													"src": "2339:87:8",
													"statements": [
														{
															"nativeSrc": "2349:29:8",
															"nodeType": "YulAssignment",
															"src": "2349:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:8"
																},
																"nativeSrc": "2358:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:8"
																},
																"nativeSrc": "2387:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:8"
															},
															"nativeSrc": "2387:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:8",
														"nodeType": "YulTypedName",
														"src": "2317:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:8",
														"nodeType": "YulTypedName",
														"src": "2325:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:8",
														"nodeType": "YulTypedName",
														"src": "2333:5:8",
														"type": ""
													}
												],
												"src": "2287:139:8"
											},
											{
												"body": {
													"nativeSrc": "2515:391:8",
													"nodeType": "YulBlock",
													"src": "2515:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:8",
																"nodeType": "YulBlock",
																"src": "2561:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:8"
																			},
																			"nativeSrc": "2563:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:8"
																		},
																		"nativeSrc": "2563:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:8"
																		},
																		"nativeSrc": "2532:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:8"
																},
																"nativeSrc": "2528:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:8"
															},
															"nativeSrc": "2525:119:8",
															"nodeType": "YulIf",
															"src": "2525:119:8"
														},
														{
															"nativeSrc": "2654:117:8",
															"nodeType": "YulBlock",
															"src": "2654:117:8",
															"statements": [
																{
																	"nativeSrc": "2669:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:8"
																				},
																				"nativeSrc": "2729:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:8"
																		},
																		"nativeSrc": "2708:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:8",
															"nodeType": "YulBlock",
															"src": "2781:118:8",
															"statements": [
																{
																	"nativeSrc": "2796:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:8"
																				},
																				"nativeSrc": "2857:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:8"
																		},
																		"nativeSrc": "2836:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:8",
														"nodeType": "YulTypedName",
														"src": "2477:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:8",
														"nodeType": "YulTypedName",
														"src": "2488:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:8",
														"nodeType": "YulTypedName",
														"src": "2500:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:8",
														"nodeType": "YulTypedName",
														"src": "2508:6:8",
														"type": ""
													}
												],
												"src": "2432:474:8"
											},
											{
												"body": {
													"nativeSrc": "2954:48:8",
													"nodeType": "YulBlock",
													"src": "2954:48:8",
													"statements": [
														{
															"nativeSrc": "2964:32:8",
															"nodeType": "YulAssignment",
															"src": "2964:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:8"
																		},
																		"nativeSrc": "2982:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:8"
																},
																"nativeSrc": "2975:21:8",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:8",
														"nodeType": "YulTypedName",
														"src": "2936:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:8",
														"nodeType": "YulTypedName",
														"src": "2946:7:8",
														"type": ""
													}
												],
												"src": "2912:90:8"
											},
											{
												"body": {
													"nativeSrc": "3067:50:8",
													"nodeType": "YulBlock",
													"src": "3067:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:8",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:8"
																		},
																		"nativeSrc": "3089:21:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:8"
																},
																"nativeSrc": "3077:34:8",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:8"
															},
															"nativeSrc": "3077:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:8",
														"nodeType": "YulTypedName",
														"src": "3055:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:8",
														"nodeType": "YulTypedName",
														"src": "3062:3:8",
														"type": ""
													}
												],
												"src": "3008:109:8"
											},
											{
												"body": {
													"nativeSrc": "3215:118:8",
													"nodeType": "YulBlock",
													"src": "3215:118:8",
													"statements": [
														{
															"nativeSrc": "3225:26:8",
															"nodeType": "YulAssignment",
															"src": "3225:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:8"
																},
																"nativeSrc": "3233:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:8"
																		},
																		"nativeSrc": "3308:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:8"
																},
																"nativeSrc": "3261:65:8",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:8"
															},
															"nativeSrc": "3261:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:8",
														"nodeType": "YulTypedName",
														"src": "3187:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:8",
														"nodeType": "YulTypedName",
														"src": "3199:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:8",
														"nodeType": "YulTypedName",
														"src": "3210:4:8",
														"type": ""
													}
												],
												"src": "3123:210:8"
											},
											{
												"body": {
													"nativeSrc": "3405:263:8",
													"nodeType": "YulBlock",
													"src": "3405:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3451:83:8",
																"nodeType": "YulBlock",
																"src": "3451:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3453:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "3453:77:8"
																			},
																			"nativeSrc": "3453:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3453:79:8"
																		},
																		"nativeSrc": "3453:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3453:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3426:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3426:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3435:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3435:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3422:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3422:3:8"
																		},
																		"nativeSrc": "3422:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3422:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3447:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3447:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3418:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3418:3:8"
																},
																"nativeSrc": "3418:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3418:32:8"
															},
															"nativeSrc": "3415:119:8",
															"nodeType": "YulIf",
															"src": "3415:119:8"
														},
														{
															"nativeSrc": "3544:117:8",
															"nodeType": "YulBlock",
															"src": "3544:117:8",
															"statements": [
																{
																	"nativeSrc": "3559:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3559:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3573:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3573:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3563:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3563:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3588:63:8",
																	"nodeType": "YulAssignment",
																	"src": "3588:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3623:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3623:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3634:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3634:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3619:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3619:3:8"
																				},
																				"nativeSrc": "3619:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3619:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3643:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3643:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3598:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "3598:20:8"
																		},
																		"nativeSrc": "3598:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3598:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3588:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3588:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3339:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3375:9:8",
														"nodeType": "YulTypedName",
														"src": "3375:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3386:7:8",
														"nodeType": "YulTypedName",
														"src": "3386:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3398:6:8",
														"nodeType": "YulTypedName",
														"src": "3398:6:8",
														"type": ""
													}
												],
												"src": "3339:329:8"
											},
											{
												"body": {
													"nativeSrc": "3739:53:8",
													"nodeType": "YulBlock",
													"src": "3739:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3756:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3756:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3779:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3779:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3761:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "3761:17:8"
																		},
																		"nativeSrc": "3761:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3761:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3749:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3749:6:8"
																},
																"nativeSrc": "3749:37:8",
																"nodeType": "YulFunctionCall",
																"src": "3749:37:8"
															},
															"nativeSrc": "3749:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "3749:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3674:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3727:5:8",
														"nodeType": "YulTypedName",
														"src": "3727:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3734:3:8",
														"nodeType": "YulTypedName",
														"src": "3734:3:8",
														"type": ""
													}
												],
												"src": "3674:118:8"
											},
											{
												"body": {
													"nativeSrc": "3896:124:8",
													"nodeType": "YulBlock",
													"src": "3896:124:8",
													"statements": [
														{
															"nativeSrc": "3906:26:8",
															"nodeType": "YulAssignment",
															"src": "3906:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3918:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3918:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3929:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3929:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3914:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3914:3:8"
																},
																"nativeSrc": "3914:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3914:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3906:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3906:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3986:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3986:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3999:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3999:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4010:1:8",
																				"nodeType": "YulLiteral",
																				"src": "4010:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3995:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3995:3:8"
																		},
																		"nativeSrc": "3995:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3995:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3942:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "3942:43:8"
																},
																"nativeSrc": "3942:71:8",
																"nodeType": "YulFunctionCall",
																"src": "3942:71:8"
															},
															"nativeSrc": "3942:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "3942:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3798:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3868:9:8",
														"nodeType": "YulTypedName",
														"src": "3868:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3880:6:8",
														"nodeType": "YulTypedName",
														"src": "3880:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3891:4:8",
														"nodeType": "YulTypedName",
														"src": "3891:4:8",
														"type": ""
													}
												],
												"src": "3798:222:8"
											},
											{
												"body": {
													"nativeSrc": "4126:519:8",
													"nodeType": "YulBlock",
													"src": "4126:519:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4172:83:8",
																"nodeType": "YulBlock",
																"src": "4172:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4174:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "4174:77:8"
																			},
																			"nativeSrc": "4174:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4174:79:8"
																		},
																		"nativeSrc": "4174:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4174:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4147:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4147:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4156:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4156:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4143:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4143:3:8"
																		},
																		"nativeSrc": "4143:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4143:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4168:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4168:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4139:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4139:3:8"
																},
																"nativeSrc": "4139:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4139:32:8"
															},
															"nativeSrc": "4136:119:8",
															"nodeType": "YulIf",
															"src": "4136:119:8"
														},
														{
															"nativeSrc": "4265:117:8",
															"nodeType": "YulBlock",
															"src": "4265:117:8",
															"statements": [
																{
																	"nativeSrc": "4280:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4280:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4294:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4294:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4284:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4284:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4309:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4309:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4344:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4344:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4355:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4355:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4340:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4340:3:8"
																				},
																				"nativeSrc": "4340:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4340:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4364:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4364:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4319:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4319:20:8"
																		},
																		"nativeSrc": "4319:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4319:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4309:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4309:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4392:118:8",
															"nodeType": "YulBlock",
															"src": "4392:118:8",
															"statements": [
																{
																	"nativeSrc": "4407:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4407:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4421:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4421:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4411:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4411:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4437:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4437:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4472:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4472:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4483:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4483:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4468:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4468:3:8"
																				},
																				"nativeSrc": "4468:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4468:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4492:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4492:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4447:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4447:20:8"
																		},
																		"nativeSrc": "4447:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4447:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4437:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4437:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4520:118:8",
															"nodeType": "YulBlock",
															"src": "4520:118:8",
															"statements": [
																{
																	"nativeSrc": "4535:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4535:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4549:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4549:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4539:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4539:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4565:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4565:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4600:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4600:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4611:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4611:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4596:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4596:3:8"
																				},
																				"nativeSrc": "4596:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4596:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4620:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4620:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4575:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4575:20:8"
																		},
																		"nativeSrc": "4575:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4575:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4565:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4565:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4026:619:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4080:9:8",
														"nodeType": "YulTypedName",
														"src": "4080:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4091:7:8",
														"nodeType": "YulTypedName",
														"src": "4091:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4103:6:8",
														"nodeType": "YulTypedName",
														"src": "4103:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4111:6:8",
														"nodeType": "YulTypedName",
														"src": "4111:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4119:6:8",
														"nodeType": "YulTypedName",
														"src": "4119:6:8",
														"type": ""
													}
												],
												"src": "4026:619:8"
											},
											{
												"body": {
													"nativeSrc": "4694:43:8",
													"nodeType": "YulBlock",
													"src": "4694:43:8",
													"statements": [
														{
															"nativeSrc": "4704:27:8",
															"nodeType": "YulAssignment",
															"src": "4704:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4719:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4719:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4726:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4726:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4715:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4715:3:8"
																},
																"nativeSrc": "4715:16:8",
																"nodeType": "YulFunctionCall",
																"src": "4715:16:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4704:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "4704:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4651:86:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4676:5:8",
														"nodeType": "YulTypedName",
														"src": "4676:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4686:7:8",
														"nodeType": "YulTypedName",
														"src": "4686:7:8",
														"type": ""
													}
												],
												"src": "4651:86:8"
											},
											{
												"body": {
													"nativeSrc": "4804:51:8",
													"nodeType": "YulBlock",
													"src": "4804:51:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4821:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4821:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4842:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4842:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4826:15:8",
																			"nodeType": "YulIdentifier",
																			"src": "4826:15:8"
																		},
																		"nativeSrc": "4826:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4826:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4814:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4814:6:8"
																},
																"nativeSrc": "4814:35:8",
																"nodeType": "YulFunctionCall",
																"src": "4814:35:8"
															},
															"nativeSrc": "4814:35:8",
															"nodeType": "YulExpressionStatement",
															"src": "4814:35:8"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4743:112:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4792:5:8",
														"nodeType": "YulTypedName",
														"src": "4792:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4799:3:8",
														"nodeType": "YulTypedName",
														"src": "4799:3:8",
														"type": ""
													}
												],
												"src": "4743:112:8"
											},
											{
												"body": {
													"nativeSrc": "4955:120:8",
													"nodeType": "YulBlock",
													"src": "4955:120:8",
													"statements": [
														{
															"nativeSrc": "4965:26:8",
															"nodeType": "YulAssignment",
															"src": "4965:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4977:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4977:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4988:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4988:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4973:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4973:3:8"
																},
																"nativeSrc": "4973:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4973:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4965:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4965:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5041:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5041:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5054:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5054:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5065:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5065:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5050:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5050:3:8"
																		},
																		"nativeSrc": "5050:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5050:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5001:39:8",
																	"nodeType": "YulIdentifier",
																	"src": "5001:39:8"
																},
																"nativeSrc": "5001:67:8",
																"nodeType": "YulFunctionCall",
																"src": "5001:67:8"
															},
															"nativeSrc": "5001:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "5001:67:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4861:214:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4927:9:8",
														"nodeType": "YulTypedName",
														"src": "4927:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4939:6:8",
														"nodeType": "YulTypedName",
														"src": "4939:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4950:4:8",
														"nodeType": "YulTypedName",
														"src": "4950:4:8",
														"type": ""
													}
												],
												"src": "4861:214:8"
											},
											{
												"body": {
													"nativeSrc": "5146:53:8",
													"nodeType": "YulBlock",
													"src": "5146:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5163:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5163:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5186:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5186:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5168:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "5168:17:8"
																		},
																		"nativeSrc": "5168:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5168:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5156:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5156:6:8"
																},
																"nativeSrc": "5156:37:8",
																"nodeType": "YulFunctionCall",
																"src": "5156:37:8"
															},
															"nativeSrc": "5156:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "5156:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5081:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5134:5:8",
														"nodeType": "YulTypedName",
														"src": "5134:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5141:3:8",
														"nodeType": "YulTypedName",
														"src": "5141:3:8",
														"type": ""
													}
												],
												"src": "5081:118:8"
											},
											{
												"body": {
													"nativeSrc": "5303:124:8",
													"nodeType": "YulBlock",
													"src": "5303:124:8",
													"statements": [
														{
															"nativeSrc": "5313:26:8",
															"nodeType": "YulAssignment",
															"src": "5313:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5325:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5325:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5336:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5336:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5321:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5321:3:8"
																},
																"nativeSrc": "5321:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5321:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5313:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5313:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5393:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5393:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5406:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5406:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5417:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5417:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5402:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5402:3:8"
																		},
																		"nativeSrc": "5402:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5402:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5349:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "5349:43:8"
																},
																"nativeSrc": "5349:71:8",
																"nodeType": "YulFunctionCall",
																"src": "5349:71:8"
															},
															"nativeSrc": "5349:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "5349:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5205:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5275:9:8",
														"nodeType": "YulTypedName",
														"src": "5275:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5287:6:8",
														"nodeType": "YulTypedName",
														"src": "5287:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5298:4:8",
														"nodeType": "YulTypedName",
														"src": "5298:4:8",
														"type": ""
													}
												],
												"src": "5205:222:8"
											},
											{
												"body": {
													"nativeSrc": "5516:391:8",
													"nodeType": "YulBlock",
													"src": "5516:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5562:83:8",
																"nodeType": "YulBlock",
																"src": "5562:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5564:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "5564:77:8"
																			},
																			"nativeSrc": "5564:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5564:79:8"
																		},
																		"nativeSrc": "5564:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5564:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5537:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5537:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5546:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5546:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5533:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5533:3:8"
																		},
																		"nativeSrc": "5533:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5533:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5558:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5558:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5529:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5529:3:8"
																},
																"nativeSrc": "5529:32:8",
																"nodeType": "YulFunctionCall",
																"src": "5529:32:8"
															},
															"nativeSrc": "5526:119:8",
															"nodeType": "YulIf",
															"src": "5526:119:8"
														},
														{
															"nativeSrc": "5655:117:8",
															"nodeType": "YulBlock",
															"src": "5655:117:8",
															"statements": [
																{
																	"nativeSrc": "5670:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5670:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5684:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5684:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5674:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5674:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5699:63:8",
																	"nodeType": "YulAssignment",
																	"src": "5699:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5734:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5734:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5745:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5745:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5730:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5730:3:8"
																				},
																				"nativeSrc": "5730:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5730:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5754:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5754:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5709:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5709:20:8"
																		},
																		"nativeSrc": "5709:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5709:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5699:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5699:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5782:118:8",
															"nodeType": "YulBlock",
															"src": "5782:118:8",
															"statements": [
																{
																	"nativeSrc": "5797:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5797:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5811:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5811:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5801:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5801:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5827:63:8",
																	"nodeType": "YulAssignment",
																	"src": "5827:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5862:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5862:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5873:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5873:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5858:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5858:3:8"
																				},
																				"nativeSrc": "5858:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5858:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5882:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5882:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5837:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5837:20:8"
																		},
																		"nativeSrc": "5837:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5837:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5827:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5827:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5433:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5478:9:8",
														"nodeType": "YulTypedName",
														"src": "5478:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5489:7:8",
														"nodeType": "YulTypedName",
														"src": "5489:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5501:6:8",
														"nodeType": "YulTypedName",
														"src": "5501:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5509:6:8",
														"nodeType": "YulTypedName",
														"src": "5509:6:8",
														"type": ""
													}
												],
												"src": "5433:474:8"
											},
											{
												"body": {
													"nativeSrc": "5979:263:8",
													"nodeType": "YulBlock",
													"src": "5979:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "6025:83:8",
																"nodeType": "YulBlock",
																"src": "6025:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6027:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "6027:77:8"
																			},
																			"nativeSrc": "6027:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6027:79:8"
																		},
																		"nativeSrc": "6027:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6027:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6000:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6000:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6009:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6009:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5996:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5996:3:8"
																		},
																		"nativeSrc": "5996:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5996:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6021:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6021:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5992:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5992:3:8"
																},
																"nativeSrc": "5992:32:8",
																"nodeType": "YulFunctionCall",
																"src": "5992:32:8"
															},
															"nativeSrc": "5989:119:8",
															"nodeType": "YulIf",
															"src": "5989:119:8"
														},
														{
															"nativeSrc": "6118:117:8",
															"nodeType": "YulBlock",
															"src": "6118:117:8",
															"statements": [
																{
																	"nativeSrc": "6133:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6133:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6147:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6147:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6137:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6137:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6162:63:8",
																	"nodeType": "YulAssignment",
																	"src": "6162:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6197:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6197:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6208:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6208:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6193:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6193:3:8"
																				},
																				"nativeSrc": "6193:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6193:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6217:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6217:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6172:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "6172:20:8"
																		},
																		"nativeSrc": "6172:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6172:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6162:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6162:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "5913:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5949:9:8",
														"nodeType": "YulTypedName",
														"src": "5949:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5960:7:8",
														"nodeType": "YulTypedName",
														"src": "5960:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5972:6:8",
														"nodeType": "YulTypedName",
														"src": "5972:6:8",
														"type": ""
													}
												],
												"src": "5913:329:8"
											},
											{
												"body": {
													"nativeSrc": "6276:152:8",
													"nodeType": "YulBlock",
													"src": "6276:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6293:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6293:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6296:77:8",
																		"nodeType": "YulLiteral",
																		"src": "6296:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6286:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6286:6:8"
																},
																"nativeSrc": "6286:88:8",
																"nodeType": "YulFunctionCall",
																"src": "6286:88:8"
															},
															"nativeSrc": "6286:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "6286:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6390:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6390:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6393:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6393:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6383:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6383:6:8"
																},
																"nativeSrc": "6383:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6383:15:8"
															},
															"nativeSrc": "6383:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "6383:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6414:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6414:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6417:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6417:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6407:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6407:6:8"
																},
																"nativeSrc": "6407:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6407:15:8"
															},
															"nativeSrc": "6407:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "6407:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6248:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "6248:180:8"
											},
											{
												"body": {
													"nativeSrc": "6485:269:8",
													"nodeType": "YulBlock",
													"src": "6485:269:8",
													"statements": [
														{
															"nativeSrc": "6495:22:8",
															"nodeType": "YulAssignment",
															"src": "6495:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6509:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6509:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6515:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6515:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6505:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6505:3:8"
																},
																"nativeSrc": "6505:12:8",
																"nodeType": "YulFunctionCall",
																"src": "6505:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6495:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6495:6:8"
																}
															]
														},
														{
															"nativeSrc": "6526:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "6526:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6556:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6556:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6562:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6562:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6552:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6552:3:8"
																},
																"nativeSrc": "6552:12:8",
																"nodeType": "YulFunctionCall",
																"src": "6552:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6530:18:8",
																	"nodeType": "YulTypedName",
																	"src": "6530:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6603:51:8",
																"nodeType": "YulBlock",
																"src": "6603:51:8",
																"statements": [
																	{
																		"nativeSrc": "6617:27:8",
																		"nodeType": "YulAssignment",
																		"src": "6617:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6631:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "6631:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6639:4:8",
																					"nodeType": "YulLiteral",
																					"src": "6639:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6627:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "6627:3:8"
																			},
																			"nativeSrc": "6627:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6627:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6617:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6617:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6583:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "6583:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6576:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6576:6:8"
																},
																"nativeSrc": "6576:26:8",
																"nodeType": "YulFunctionCall",
																"src": "6576:26:8"
															},
															"nativeSrc": "6573:81:8",
															"nodeType": "YulIf",
															"src": "6573:81:8"
														},
														{
															"body": {
																"nativeSrc": "6706:42:8",
																"nodeType": "YulBlock",
																"src": "6706:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6720:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "6720:16:8"
																			},
																			"nativeSrc": "6720:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6720:18:8"
																		},
																		"nativeSrc": "6720:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6720:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6670:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "6670:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6693:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6693:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6701:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6701:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6690:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "6690:2:8"
																		},
																		"nativeSrc": "6690:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6690:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6667:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6667:2:8"
																},
																"nativeSrc": "6667:38:8",
																"nodeType": "YulFunctionCall",
																"src": "6667:38:8"
															},
															"nativeSrc": "6664:84:8",
															"nodeType": "YulIf",
															"src": "6664:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6434:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6469:4:8",
														"nodeType": "YulTypedName",
														"src": "6469:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6478:6:8",
														"nodeType": "YulTypedName",
														"src": "6478:6:8",
														"type": ""
													}
												],
												"src": "6434:320:8"
											},
											{
												"body": {
													"nativeSrc": "6866:59:8",
													"nodeType": "YulBlock",
													"src": "6866:59:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6888:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6888:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6896:1:8",
																				"nodeType": "YulLiteral",
																				"src": "6896:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6884:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6884:3:8"
																		},
																		"nativeSrc": "6884:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6884:14:8"
																	},
																	{
																		"hexValue": "496e76616c69642061646472657373",
																		"kind": "string",
																		"nativeSrc": "6900:17:8",
																		"nodeType": "YulLiteral",
																		"src": "6900:17:8",
																		"type": "",
																		"value": "Invalid address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6877:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6877:6:8"
																},
																"nativeSrc": "6877:41:8",
																"nodeType": "YulFunctionCall",
																"src": "6877:41:8"
															},
															"nativeSrc": "6877:41:8",
															"nodeType": "YulExpressionStatement",
															"src": "6877:41:8"
														}
													]
												},
												"name": "store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
												"nativeSrc": "6760:165:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6858:6:8",
														"nodeType": "YulTypedName",
														"src": "6858:6:8",
														"type": ""
													}
												],
												"src": "6760:165:8"
											},
											{
												"body": {
													"nativeSrc": "7077:220:8",
													"nodeType": "YulBlock",
													"src": "7077:220:8",
													"statements": [
														{
															"nativeSrc": "7087:74:8",
															"nodeType": "YulAssignment",
															"src": "7087:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7153:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7153:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7158:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7158:2:8",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7094:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "7094:58:8"
																},
																"nativeSrc": "7094:67:8",
																"nodeType": "YulFunctionCall",
																"src": "7094:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7087:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7087:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7259:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7259:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																	"nativeSrc": "7170:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "7170:88:8"
																},
																"nativeSrc": "7170:93:8",
																"nodeType": "YulFunctionCall",
																"src": "7170:93:8"
															},
															"nativeSrc": "7170:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "7170:93:8"
														},
														{
															"nativeSrc": "7272:19:8",
															"nodeType": "YulAssignment",
															"src": "7272:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7283:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7283:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7288:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7288:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7279:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7279:3:8"
																},
																"nativeSrc": "7279:12:8",
																"nodeType": "YulFunctionCall",
																"src": "7279:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7272:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7272:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6931:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7065:3:8",
														"nodeType": "YulTypedName",
														"src": "7065:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7073:3:8",
														"nodeType": "YulTypedName",
														"src": "7073:3:8",
														"type": ""
													}
												],
												"src": "6931:366:8"
											},
											{
												"body": {
													"nativeSrc": "7474:248:8",
													"nodeType": "YulBlock",
													"src": "7474:248:8",
													"statements": [
														{
															"nativeSrc": "7484:26:8",
															"nodeType": "YulAssignment",
															"src": "7484:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7496:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7496:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7507:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7507:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7492:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7492:3:8"
																},
																"nativeSrc": "7492:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7492:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7484:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7484:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7531:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7531:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7542:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7542:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7527:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7527:3:8"
																		},
																		"nativeSrc": "7527:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7527:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7550:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7550:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7556:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7556:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7546:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7546:3:8"
																		},
																		"nativeSrc": "7546:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7546:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7520:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7520:6:8"
																},
																"nativeSrc": "7520:47:8",
																"nodeType": "YulFunctionCall",
																"src": "7520:47:8"
															},
															"nativeSrc": "7520:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "7520:47:8"
														},
														{
															"nativeSrc": "7576:139:8",
															"nodeType": "YulAssignment",
															"src": "7576:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7710:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7710:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7584:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "7584:124:8"
																},
																"nativeSrc": "7584:131:8",
																"nodeType": "YulFunctionCall",
																"src": "7584:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7576:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7576:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7303:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7454:9:8",
														"nodeType": "YulTypedName",
														"src": "7454:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7469:4:8",
														"nodeType": "YulTypedName",
														"src": "7469:4:8",
														"type": ""
													}
												],
												"src": "7303:419:8"
											},
											{
												"body": {
													"nativeSrc": "7834:66:8",
													"nodeType": "YulBlock",
													"src": "7834:66:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7856:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7856:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7864:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7864:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7852:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7852:3:8"
																		},
																		"nativeSrc": "7852:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7852:14:8"
																	},
																	{
																		"hexValue": "4e6f7420617574686f72697a656420746f206d696e74",
																		"kind": "string",
																		"nativeSrc": "7868:24:8",
																		"nodeType": "YulLiteral",
																		"src": "7868:24:8",
																		"type": "",
																		"value": "Not authorized to mint"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7845:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7845:6:8"
																},
																"nativeSrc": "7845:48:8",
																"nodeType": "YulFunctionCall",
																"src": "7845:48:8"
															},
															"nativeSrc": "7845:48:8",
															"nodeType": "YulExpressionStatement",
															"src": "7845:48:8"
														}
													]
												},
												"name": "store_literal_in_memory_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b",
												"nativeSrc": "7728:172:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7826:6:8",
														"nodeType": "YulTypedName",
														"src": "7826:6:8",
														"type": ""
													}
												],
												"src": "7728:172:8"
											},
											{
												"body": {
													"nativeSrc": "8052:220:8",
													"nodeType": "YulBlock",
													"src": "8052:220:8",
													"statements": [
														{
															"nativeSrc": "8062:74:8",
															"nodeType": "YulAssignment",
															"src": "8062:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8128:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8128:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8133:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8133:2:8",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8069:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "8069:58:8"
																},
																"nativeSrc": "8069:67:8",
																"nodeType": "YulFunctionCall",
																"src": "8069:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8062:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8062:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8234:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8234:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b",
																	"nativeSrc": "8145:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "8145:88:8"
																},
																"nativeSrc": "8145:93:8",
																"nodeType": "YulFunctionCall",
																"src": "8145:93:8"
															},
															"nativeSrc": "8145:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "8145:93:8"
														},
														{
															"nativeSrc": "8247:19:8",
															"nodeType": "YulAssignment",
															"src": "8247:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8258:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8258:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8263:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8263:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8254:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8254:3:8"
																},
																"nativeSrc": "8254:12:8",
																"nodeType": "YulFunctionCall",
																"src": "8254:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8247:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8247:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7906:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8040:3:8",
														"nodeType": "YulTypedName",
														"src": "8040:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8048:3:8",
														"nodeType": "YulTypedName",
														"src": "8048:3:8",
														"type": ""
													}
												],
												"src": "7906:366:8"
											},
											{
												"body": {
													"nativeSrc": "8449:248:8",
													"nodeType": "YulBlock",
													"src": "8449:248:8",
													"statements": [
														{
															"nativeSrc": "8459:26:8",
															"nodeType": "YulAssignment",
															"src": "8459:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8471:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8471:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8482:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8482:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8467:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8467:3:8"
																},
																"nativeSrc": "8467:18:8",
																"nodeType": "YulFunctionCall",
																"src": "8467:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8459:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8459:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8506:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8506:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8517:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8517:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8502:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8502:3:8"
																		},
																		"nativeSrc": "8502:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8502:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8525:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "8525:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8531:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8531:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8521:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8521:3:8"
																		},
																		"nativeSrc": "8521:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8521:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8495:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8495:6:8"
																},
																"nativeSrc": "8495:47:8",
																"nodeType": "YulFunctionCall",
																"src": "8495:47:8"
															},
															"nativeSrc": "8495:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "8495:47:8"
														},
														{
															"nativeSrc": "8551:139:8",
															"nodeType": "YulAssignment",
															"src": "8551:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8685:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "8685:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8559:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "8559:124:8"
																},
																"nativeSrc": "8559:131:8",
																"nodeType": "YulFunctionCall",
																"src": "8559:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8551:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8551:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8278:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8429:9:8",
														"nodeType": "YulTypedName",
														"src": "8429:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8444:4:8",
														"nodeType": "YulTypedName",
														"src": "8444:4:8",
														"type": ""
													}
												],
												"src": "8278:419:8"
											},
											{
												"body": {
													"nativeSrc": "8731:152:8",
													"nodeType": "YulBlock",
													"src": "8731:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8748:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8748:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8751:77:8",
																		"nodeType": "YulLiteral",
																		"src": "8751:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8741:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8741:6:8"
																},
																"nativeSrc": "8741:88:8",
																"nodeType": "YulFunctionCall",
																"src": "8741:88:8"
															},
															"nativeSrc": "8741:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "8741:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8845:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8845:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8848:4:8",
																		"nodeType": "YulLiteral",
																		"src": "8848:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8838:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8838:6:8"
																},
																"nativeSrc": "8838:15:8",
																"nodeType": "YulFunctionCall",
																"src": "8838:15:8"
															},
															"nativeSrc": "8838:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "8838:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8869:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8869:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8872:4:8",
																		"nodeType": "YulLiteral",
																		"src": "8872:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8862:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8862:6:8"
																},
																"nativeSrc": "8862:15:8",
																"nodeType": "YulFunctionCall",
																"src": "8862:15:8"
															},
															"nativeSrc": "8862:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "8862:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8703:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "8703:180:8"
											},
											{
												"body": {
													"nativeSrc": "8933:147:8",
													"nodeType": "YulBlock",
													"src": "8933:147:8",
													"statements": [
														{
															"nativeSrc": "8943:25:8",
															"nodeType": "YulAssignment",
															"src": "8943:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8966:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8966:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8948:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "8948:17:8"
																},
																"nativeSrc": "8948:20:8",
																"nodeType": "YulFunctionCall",
																"src": "8948:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8943:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "8943:1:8"
																}
															]
														},
														{
															"nativeSrc": "8977:25:8",
															"nodeType": "YulAssignment",
															"src": "8977:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9000:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9000:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8982:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "8982:17:8"
																},
																"nativeSrc": "8982:20:8",
																"nodeType": "YulFunctionCall",
																"src": "8982:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8977:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "8977:1:8"
																}
															]
														},
														{
															"nativeSrc": "9011:16:8",
															"nodeType": "YulAssignment",
															"src": "9011:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9022:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9022:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9025:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9025:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9018:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9018:3:8"
																},
																"nativeSrc": "9018:9:8",
																"nodeType": "YulFunctionCall",
																"src": "9018:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9011:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9011:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9051:22:8",
																"nodeType": "YulBlock",
																"src": "9051:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9053:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "9053:16:8"
																			},
																			"nativeSrc": "9053:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9053:18:8"
																		},
																		"nativeSrc": "9053:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9053:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9043:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "9043:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9046:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9046:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9040:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "9040:2:8"
																},
																"nativeSrc": "9040:10:8",
																"nodeType": "YulFunctionCall",
																"src": "9040:10:8"
															},
															"nativeSrc": "9037:36:8",
															"nodeType": "YulIf",
															"src": "9037:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8889:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8920:1:8",
														"nodeType": "YulTypedName",
														"src": "8920:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8923:1:8",
														"nodeType": "YulTypedName",
														"src": "8923:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8929:3:8",
														"nodeType": "YulTypedName",
														"src": "8929:3:8",
														"type": ""
													}
												],
												"src": "8889:191:8"
											},
											{
												"body": {
													"nativeSrc": "9192:62:8",
													"nodeType": "YulBlock",
													"src": "9192:62:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9214:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9214:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9222:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9222:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9210:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9210:3:8"
																		},
																		"nativeSrc": "9210:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9210:14:8"
																	},
																	{
																		"hexValue": "45786365656473206d617820737570706c79",
																		"kind": "string",
																		"nativeSrc": "9226:20:8",
																		"nodeType": "YulLiteral",
																		"src": "9226:20:8",
																		"type": "",
																		"value": "Exceeds max supply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9203:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9203:6:8"
																},
																"nativeSrc": "9203:44:8",
																"nodeType": "YulFunctionCall",
																"src": "9203:44:8"
															},
															"nativeSrc": "9203:44:8",
															"nodeType": "YulExpressionStatement",
															"src": "9203:44:8"
														}
													]
												},
												"name": "store_literal_in_memory_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611",
												"nativeSrc": "9086:168:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9184:6:8",
														"nodeType": "YulTypedName",
														"src": "9184:6:8",
														"type": ""
													}
												],
												"src": "9086:168:8"
											},
											{
												"body": {
													"nativeSrc": "9406:220:8",
													"nodeType": "YulBlock",
													"src": "9406:220:8",
													"statements": [
														{
															"nativeSrc": "9416:74:8",
															"nodeType": "YulAssignment",
															"src": "9416:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9482:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9482:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9487:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9487:2:8",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9423:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "9423:58:8"
																},
																"nativeSrc": "9423:67:8",
																"nodeType": "YulFunctionCall",
																"src": "9423:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9416:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9416:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9588:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9588:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611",
																	"nativeSrc": "9499:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "9499:88:8"
																},
																"nativeSrc": "9499:93:8",
																"nodeType": "YulFunctionCall",
																"src": "9499:93:8"
															},
															"nativeSrc": "9499:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "9499:93:8"
														},
														{
															"nativeSrc": "9601:19:8",
															"nodeType": "YulAssignment",
															"src": "9601:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9612:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9612:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9617:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9617:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9608:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9608:3:8"
																},
																"nativeSrc": "9608:12:8",
																"nodeType": "YulFunctionCall",
																"src": "9608:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9601:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9601:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9260:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9394:3:8",
														"nodeType": "YulTypedName",
														"src": "9394:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9402:3:8",
														"nodeType": "YulTypedName",
														"src": "9402:3:8",
														"type": ""
													}
												],
												"src": "9260:366:8"
											},
											{
												"body": {
													"nativeSrc": "9803:248:8",
													"nodeType": "YulBlock",
													"src": "9803:248:8",
													"statements": [
														{
															"nativeSrc": "9813:26:8",
															"nodeType": "YulAssignment",
															"src": "9813:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9825:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9825:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9836:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9836:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9821:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9821:3:8"
																},
																"nativeSrc": "9821:18:8",
																"nodeType": "YulFunctionCall",
																"src": "9821:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9813:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9813:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9860:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9860:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9871:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9871:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9856:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9856:3:8"
																		},
																		"nativeSrc": "9856:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9856:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9879:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9879:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9885:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9885:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9875:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9875:3:8"
																		},
																		"nativeSrc": "9875:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9875:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9849:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9849:6:8"
																},
																"nativeSrc": "9849:47:8",
																"nodeType": "YulFunctionCall",
																"src": "9849:47:8"
															},
															"nativeSrc": "9849:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "9849:47:8"
														},
														{
															"nativeSrc": "9905:139:8",
															"nodeType": "YulAssignment",
															"src": "9905:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10039:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "10039:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9913:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "9913:124:8"
																},
																"nativeSrc": "9913:131:8",
																"nodeType": "YulFunctionCall",
																"src": "9913:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9905:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9905:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9632:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9783:9:8",
														"nodeType": "YulTypedName",
														"src": "9783:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9798:4:8",
														"nodeType": "YulTypedName",
														"src": "9798:4:8",
														"type": ""
													}
												],
												"src": "9632:419:8"
											},
											{
												"body": {
													"nativeSrc": "10163:66:8",
													"nodeType": "YulBlock",
													"src": "10163:66:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10185:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "10185:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10193:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10193:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10181:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10181:3:8"
																		},
																		"nativeSrc": "10181:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10181:14:8"
																	},
																	{
																		"hexValue": "4e6f7420617574686f72697a656420746f206275726e",
																		"kind": "string",
																		"nativeSrc": "10197:24:8",
																		"nodeType": "YulLiteral",
																		"src": "10197:24:8",
																		"type": "",
																		"value": "Not authorized to burn"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10174:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10174:6:8"
																},
																"nativeSrc": "10174:48:8",
																"nodeType": "YulFunctionCall",
																"src": "10174:48:8"
															},
															"nativeSrc": "10174:48:8",
															"nodeType": "YulExpressionStatement",
															"src": "10174:48:8"
														}
													]
												},
												"name": "store_literal_in_memory_1c55c28d6e77df84f6ee9e97d5866859c436c1f0b9dd5c76a092ffa91ca40816",
												"nativeSrc": "10057:172:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10155:6:8",
														"nodeType": "YulTypedName",
														"src": "10155:6:8",
														"type": ""
													}
												],
												"src": "10057:172:8"
											},
											{
												"body": {
													"nativeSrc": "10381:220:8",
													"nodeType": "YulBlock",
													"src": "10381:220:8",
													"statements": [
														{
															"nativeSrc": "10391:74:8",
															"nodeType": "YulAssignment",
															"src": "10391:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10457:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10457:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10462:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10462:2:8",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10398:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "10398:58:8"
																},
																"nativeSrc": "10398:67:8",
																"nodeType": "YulFunctionCall",
																"src": "10398:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10391:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10391:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10563:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10563:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1c55c28d6e77df84f6ee9e97d5866859c436c1f0b9dd5c76a092ffa91ca40816",
																	"nativeSrc": "10474:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "10474:88:8"
																},
																"nativeSrc": "10474:93:8",
																"nodeType": "YulFunctionCall",
																"src": "10474:93:8"
															},
															"nativeSrc": "10474:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "10474:93:8"
														},
														{
															"nativeSrc": "10576:19:8",
															"nodeType": "YulAssignment",
															"src": "10576:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10587:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10587:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10592:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10592:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10583:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10583:3:8"
																},
																"nativeSrc": "10583:12:8",
																"nodeType": "YulFunctionCall",
																"src": "10583:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10576:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10576:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1c55c28d6e77df84f6ee9e97d5866859c436c1f0b9dd5c76a092ffa91ca40816_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10235:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10369:3:8",
														"nodeType": "YulTypedName",
														"src": "10369:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10377:3:8",
														"nodeType": "YulTypedName",
														"src": "10377:3:8",
														"type": ""
													}
												],
												"src": "10235:366:8"
											},
											{
												"body": {
													"nativeSrc": "10778:248:8",
													"nodeType": "YulBlock",
													"src": "10778:248:8",
													"statements": [
														{
															"nativeSrc": "10788:26:8",
															"nodeType": "YulAssignment",
															"src": "10788:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10800:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10800:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10811:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10811:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10796:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10796:3:8"
																},
																"nativeSrc": "10796:18:8",
																"nodeType": "YulFunctionCall",
																"src": "10796:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10788:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10788:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10835:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10835:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10846:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10846:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10831:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10831:3:8"
																		},
																		"nativeSrc": "10831:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10831:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10854:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "10854:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10860:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10860:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10850:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10850:3:8"
																		},
																		"nativeSrc": "10850:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10850:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10824:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10824:6:8"
																},
																"nativeSrc": "10824:47:8",
																"nodeType": "YulFunctionCall",
																"src": "10824:47:8"
															},
															"nativeSrc": "10824:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "10824:47:8"
														},
														{
															"nativeSrc": "10880:139:8",
															"nodeType": "YulAssignment",
															"src": "10880:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11014:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "11014:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1c55c28d6e77df84f6ee9e97d5866859c436c1f0b9dd5c76a092ffa91ca40816_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10888:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "10888:124:8"
																},
																"nativeSrc": "10888:131:8",
																"nodeType": "YulFunctionCall",
																"src": "10888:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10880:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10880:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1c55c28d6e77df84f6ee9e97d5866859c436c1f0b9dd5c76a092ffa91ca40816__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10607:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10758:9:8",
														"nodeType": "YulTypedName",
														"src": "10758:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10773:4:8",
														"nodeType": "YulTypedName",
														"src": "10773:4:8",
														"type": ""
													}
												],
												"src": "10607:419:8"
											},
											{
												"body": {
													"nativeSrc": "11138:66:8",
													"nodeType": "YulBlock",
													"src": "11138:66:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11160:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "11160:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11168:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11168:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11156:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11156:3:8"
																		},
																		"nativeSrc": "11156:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11156:14:8"
																	},
																	{
																		"hexValue": "41646472657373206e6f7420617574686f72697a6564",
																		"kind": "string",
																		"nativeSrc": "11172:24:8",
																		"nodeType": "YulLiteral",
																		"src": "11172:24:8",
																		"type": "",
																		"value": "Address not authorized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11149:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11149:6:8"
																},
																"nativeSrc": "11149:48:8",
																"nodeType": "YulFunctionCall",
																"src": "11149:48:8"
															},
															"nativeSrc": "11149:48:8",
															"nodeType": "YulExpressionStatement",
															"src": "11149:48:8"
														}
													]
												},
												"name": "store_literal_in_memory_ad374ded824b798cdc9deee0988a6fca0aedb782bc5a3214c075a7763e678f0d",
												"nativeSrc": "11032:172:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11130:6:8",
														"nodeType": "YulTypedName",
														"src": "11130:6:8",
														"type": ""
													}
												],
												"src": "11032:172:8"
											},
											{
												"body": {
													"nativeSrc": "11356:220:8",
													"nodeType": "YulBlock",
													"src": "11356:220:8",
													"statements": [
														{
															"nativeSrc": "11366:74:8",
															"nodeType": "YulAssignment",
															"src": "11366:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11432:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11432:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11437:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11437:2:8",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11373:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "11373:58:8"
																},
																"nativeSrc": "11373:67:8",
																"nodeType": "YulFunctionCall",
																"src": "11373:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11366:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11366:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11538:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11538:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ad374ded824b798cdc9deee0988a6fca0aedb782bc5a3214c075a7763e678f0d",
																	"nativeSrc": "11449:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "11449:88:8"
																},
																"nativeSrc": "11449:93:8",
																"nodeType": "YulFunctionCall",
																"src": "11449:93:8"
															},
															"nativeSrc": "11449:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "11449:93:8"
														},
														{
															"nativeSrc": "11551:19:8",
															"nodeType": "YulAssignment",
															"src": "11551:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11562:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11562:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11567:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11567:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11558:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11558:3:8"
																},
																"nativeSrc": "11558:12:8",
																"nodeType": "YulFunctionCall",
																"src": "11558:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11551:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11551:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ad374ded824b798cdc9deee0988a6fca0aedb782bc5a3214c075a7763e678f0d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11210:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11344:3:8",
														"nodeType": "YulTypedName",
														"src": "11344:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11352:3:8",
														"nodeType": "YulTypedName",
														"src": "11352:3:8",
														"type": ""
													}
												],
												"src": "11210:366:8"
											},
											{
												"body": {
													"nativeSrc": "11753:248:8",
													"nodeType": "YulBlock",
													"src": "11753:248:8",
													"statements": [
														{
															"nativeSrc": "11763:26:8",
															"nodeType": "YulAssignment",
															"src": "11763:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11775:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11775:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11786:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11786:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11771:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11771:3:8"
																},
																"nativeSrc": "11771:18:8",
																"nodeType": "YulFunctionCall",
																"src": "11771:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11763:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11763:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11810:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11810:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11821:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11821:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11806:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11806:3:8"
																		},
																		"nativeSrc": "11806:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11806:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11829:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "11829:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11835:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11835:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11825:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11825:3:8"
																		},
																		"nativeSrc": "11825:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11825:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11799:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11799:6:8"
																},
																"nativeSrc": "11799:47:8",
																"nodeType": "YulFunctionCall",
																"src": "11799:47:8"
															},
															"nativeSrc": "11799:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "11799:47:8"
														},
														{
															"nativeSrc": "11855:139:8",
															"nodeType": "YulAssignment",
															"src": "11855:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11989:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "11989:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ad374ded824b798cdc9deee0988a6fca0aedb782bc5a3214c075a7763e678f0d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11863:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "11863:124:8"
																},
																"nativeSrc": "11863:131:8",
																"nodeType": "YulFunctionCall",
																"src": "11863:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11855:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11855:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ad374ded824b798cdc9deee0988a6fca0aedb782bc5a3214c075a7763e678f0d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11582:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11733:9:8",
														"nodeType": "YulTypedName",
														"src": "11733:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11748:4:8",
														"nodeType": "YulTypedName",
														"src": "11748:4:8",
														"type": ""
													}
												],
												"src": "11582:419:8"
											},
											{
												"body": {
													"nativeSrc": "12113:118:8",
													"nodeType": "YulBlock",
													"src": "12113:118:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12135:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "12135:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12143:1:8",
																				"nodeType": "YulLiteral",
																				"src": "12143:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12131:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12131:3:8"
																		},
																		"nativeSrc": "12131:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12131:14:8"
																	},
																	{
																		"hexValue": "4e6577206d617820737570706c79206c657373207468616e20746f74616c2073",
																		"kind": "string",
																		"nativeSrc": "12147:34:8",
																		"nodeType": "YulLiteral",
																		"src": "12147:34:8",
																		"type": "",
																		"value": "New max supply less than total s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12124:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12124:6:8"
																},
																"nativeSrc": "12124:58:8",
																"nodeType": "YulFunctionCall",
																"src": "12124:58:8"
															},
															"nativeSrc": "12124:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "12124:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12203:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "12203:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12211:2:8",
																				"nodeType": "YulLiteral",
																				"src": "12211:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12199:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12199:3:8"
																		},
																		"nativeSrc": "12199:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12199:15:8"
																	},
																	{
																		"hexValue": "7570706c79",
																		"kind": "string",
																		"nativeSrc": "12216:7:8",
																		"nodeType": "YulLiteral",
																		"src": "12216:7:8",
																		"type": "",
																		"value": "upply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12192:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12192:6:8"
																},
																"nativeSrc": "12192:32:8",
																"nodeType": "YulFunctionCall",
																"src": "12192:32:8"
															},
															"nativeSrc": "12192:32:8",
															"nodeType": "YulExpressionStatement",
															"src": "12192:32:8"
														}
													]
												},
												"name": "store_literal_in_memory_9e506c47a9bc4b9f15c3c811bfc88c16276f1a6c914414d94276ae51ced75ede",
												"nativeSrc": "12007:224:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12105:6:8",
														"nodeType": "YulTypedName",
														"src": "12105:6:8",
														"type": ""
													}
												],
												"src": "12007:224:8"
											},
											{
												"body": {
													"nativeSrc": "12383:220:8",
													"nodeType": "YulBlock",
													"src": "12383:220:8",
													"statements": [
														{
															"nativeSrc": "12393:74:8",
															"nodeType": "YulAssignment",
															"src": "12393:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12459:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12459:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12464:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12464:2:8",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12400:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "12400:58:8"
																},
																"nativeSrc": "12400:67:8",
																"nodeType": "YulFunctionCall",
																"src": "12400:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12393:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12393:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12565:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12565:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9e506c47a9bc4b9f15c3c811bfc88c16276f1a6c914414d94276ae51ced75ede",
																	"nativeSrc": "12476:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "12476:88:8"
																},
																"nativeSrc": "12476:93:8",
																"nodeType": "YulFunctionCall",
																"src": "12476:93:8"
															},
															"nativeSrc": "12476:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "12476:93:8"
														},
														{
															"nativeSrc": "12578:19:8",
															"nodeType": "YulAssignment",
															"src": "12578:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12589:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12589:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12594:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12594:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12585:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12585:3:8"
																},
																"nativeSrc": "12585:12:8",
																"nodeType": "YulFunctionCall",
																"src": "12585:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12578:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12578:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9e506c47a9bc4b9f15c3c811bfc88c16276f1a6c914414d94276ae51ced75ede_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12237:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12371:3:8",
														"nodeType": "YulTypedName",
														"src": "12371:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12379:3:8",
														"nodeType": "YulTypedName",
														"src": "12379:3:8",
														"type": ""
													}
												],
												"src": "12237:366:8"
											},
											{
												"body": {
													"nativeSrc": "12780:248:8",
													"nodeType": "YulBlock",
													"src": "12780:248:8",
													"statements": [
														{
															"nativeSrc": "12790:26:8",
															"nodeType": "YulAssignment",
															"src": "12790:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12802:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "12802:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12813:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12813:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12798:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12798:3:8"
																},
																"nativeSrc": "12798:18:8",
																"nodeType": "YulFunctionCall",
																"src": "12798:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12790:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "12790:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12837:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12837:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12848:1:8",
																				"nodeType": "YulLiteral",
																				"src": "12848:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12833:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12833:3:8"
																		},
																		"nativeSrc": "12833:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12833:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12856:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "12856:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12862:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12862:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12852:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12852:3:8"
																		},
																		"nativeSrc": "12852:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12852:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12826:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12826:6:8"
																},
																"nativeSrc": "12826:47:8",
																"nodeType": "YulFunctionCall",
																"src": "12826:47:8"
															},
															"nativeSrc": "12826:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "12826:47:8"
														},
														{
															"nativeSrc": "12882:139:8",
															"nodeType": "YulAssignment",
															"src": "12882:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13016:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "13016:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9e506c47a9bc4b9f15c3c811bfc88c16276f1a6c914414d94276ae51ced75ede_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12890:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "12890:124:8"
																},
																"nativeSrc": "12890:131:8",
																"nodeType": "YulFunctionCall",
																"src": "12890:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12882:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "12882:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9e506c47a9bc4b9f15c3c811bfc88c16276f1a6c914414d94276ae51ced75ede__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12609:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12760:9:8",
														"nodeType": "YulTypedName",
														"src": "12760:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12775:4:8",
														"nodeType": "YulTypedName",
														"src": "12775:4:8",
														"type": ""
													}
												],
												"src": "12609:419:8"
											},
											{
												"body": {
													"nativeSrc": "13188:288:8",
													"nodeType": "YulBlock",
													"src": "13188:288:8",
													"statements": [
														{
															"nativeSrc": "13198:26:8",
															"nodeType": "YulAssignment",
															"src": "13198:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13210:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "13210:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13221:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13221:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13206:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13206:3:8"
																},
																"nativeSrc": "13206:18:8",
																"nodeType": "YulFunctionCall",
																"src": "13206:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13198:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "13198:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13278:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "13278:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13291:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13291:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13302:1:8",
																				"nodeType": "YulLiteral",
																				"src": "13302:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13287:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13287:3:8"
																		},
																		"nativeSrc": "13287:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13287:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13234:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "13234:43:8"
																},
																"nativeSrc": "13234:71:8",
																"nodeType": "YulFunctionCall",
																"src": "13234:71:8"
															},
															"nativeSrc": "13234:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "13234:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13359:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "13359:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13372:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13372:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13383:2:8",
																				"nodeType": "YulLiteral",
																				"src": "13383:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13368:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13368:3:8"
																		},
																		"nativeSrc": "13368:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13368:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13315:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "13315:43:8"
																},
																"nativeSrc": "13315:72:8",
																"nodeType": "YulFunctionCall",
																"src": "13315:72:8"
															},
															"nativeSrc": "13315:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "13315:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13441:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "13441:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13454:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13454:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13465:2:8",
																				"nodeType": "YulLiteral",
																				"src": "13465:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13450:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13450:3:8"
																		},
																		"nativeSrc": "13450:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13450:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13397:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "13397:43:8"
																},
																"nativeSrc": "13397:72:8",
																"nodeType": "YulFunctionCall",
																"src": "13397:72:8"
															},
															"nativeSrc": "13397:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "13397:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "13034:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13144:9:8",
														"nodeType": "YulTypedName",
														"src": "13144:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13156:6:8",
														"nodeType": "YulTypedName",
														"src": "13156:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13164:6:8",
														"nodeType": "YulTypedName",
														"src": "13164:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13172:6:8",
														"nodeType": "YulTypedName",
														"src": "13172:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13183:4:8",
														"nodeType": "YulTypedName",
														"src": "13183:4:8",
														"type": ""
													}
												],
												"src": "13034:442:8"
											},
											{
												"body": {
													"nativeSrc": "13588:75:8",
													"nodeType": "YulBlock",
													"src": "13588:75:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13610:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "13610:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13618:1:8",
																				"nodeType": "YulLiteral",
																				"src": "13618:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13606:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13606:3:8"
																		},
																		"nativeSrc": "13606:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13606:14:8"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "13622:33:8",
																		"nodeType": "YulLiteral",
																		"src": "13622:33:8",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13599:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13599:6:8"
																},
																"nativeSrc": "13599:57:8",
																"nodeType": "YulFunctionCall",
																"src": "13599:57:8"
															},
															"nativeSrc": "13599:57:8",
															"nodeType": "YulExpressionStatement",
															"src": "13599:57:8"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "13482:181:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13580:6:8",
														"nodeType": "YulTypedName",
														"src": "13580:6:8",
														"type": ""
													}
												],
												"src": "13482:181:8"
											},
											{
												"body": {
													"nativeSrc": "13815:220:8",
													"nodeType": "YulBlock",
													"src": "13815:220:8",
													"statements": [
														{
															"nativeSrc": "13825:74:8",
															"nodeType": "YulAssignment",
															"src": "13825:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13891:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13891:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13896:2:8",
																		"nodeType": "YulLiteral",
																		"src": "13896:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13832:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "13832:58:8"
																},
																"nativeSrc": "13832:67:8",
																"nodeType": "YulFunctionCall",
																"src": "13832:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13825:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13825:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13997:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13997:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "13908:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "13908:88:8"
																},
																"nativeSrc": "13908:93:8",
																"nodeType": "YulFunctionCall",
																"src": "13908:93:8"
															},
															"nativeSrc": "13908:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "13908:93:8"
														},
														{
															"nativeSrc": "14010:19:8",
															"nodeType": "YulAssignment",
															"src": "14010:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14021:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "14021:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14026:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14026:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14017:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14017:3:8"
																},
																"nativeSrc": "14017:12:8",
																"nodeType": "YulFunctionCall",
																"src": "14017:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14010:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14010:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13669:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13803:3:8",
														"nodeType": "YulTypedName",
														"src": "13803:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13811:3:8",
														"nodeType": "YulTypedName",
														"src": "13811:3:8",
														"type": ""
													}
												],
												"src": "13669:366:8"
											},
											{
												"body": {
													"nativeSrc": "14212:248:8",
													"nodeType": "YulBlock",
													"src": "14212:248:8",
													"statements": [
														{
															"nativeSrc": "14222:26:8",
															"nodeType": "YulAssignment",
															"src": "14222:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14234:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "14234:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14245:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14245:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14230:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14230:3:8"
																},
																"nativeSrc": "14230:18:8",
																"nodeType": "YulFunctionCall",
																"src": "14230:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14222:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "14222:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14269:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14269:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14280:1:8",
																				"nodeType": "YulLiteral",
																				"src": "14280:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14265:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14265:3:8"
																		},
																		"nativeSrc": "14265:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14265:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14288:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "14288:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14294:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14294:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14284:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14284:3:8"
																		},
																		"nativeSrc": "14284:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14284:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14258:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14258:6:8"
																},
																"nativeSrc": "14258:47:8",
																"nodeType": "YulFunctionCall",
																"src": "14258:47:8"
															},
															"nativeSrc": "14258:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "14258:47:8"
														},
														{
															"nativeSrc": "14314:139:8",
															"nodeType": "YulAssignment",
															"src": "14314:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14448:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "14448:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14322:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "14322:124:8"
																},
																"nativeSrc": "14322:131:8",
																"nodeType": "YulFunctionCall",
																"src": "14322:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14314:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "14314:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14041:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14192:9:8",
														"nodeType": "YulTypedName",
														"src": "14192:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14207:4:8",
														"nodeType": "YulTypedName",
														"src": "14207:4:8",
														"type": ""
													}
												],
												"src": "14041:419:8"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid address\")\n\n    }\n\n    function abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not authorized to mint\")\n\n    }\n\n    function abi_encode_t_stringliteral_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611(memPtr) {\n\n        mstore(add(memPtr, 0), \"Exceeds max supply\")\n\n    }\n\n    function abi_encode_t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1c55c28d6e77df84f6ee9e97d5866859c436c1f0b9dd5c76a092ffa91ca40816(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not authorized to burn\")\n\n    }\n\n    function abi_encode_t_stringliteral_1c55c28d6e77df84f6ee9e97d5866859c436c1f0b9dd5c76a092ffa91ca40816_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_1c55c28d6e77df84f6ee9e97d5866859c436c1f0b9dd5c76a092ffa91ca40816(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1c55c28d6e77df84f6ee9e97d5866859c436c1f0b9dd5c76a092ffa91ca40816__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1c55c28d6e77df84f6ee9e97d5866859c436c1f0b9dd5c76a092ffa91ca40816_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ad374ded824b798cdc9deee0988a6fca0aedb782bc5a3214c075a7763e678f0d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address not authorized\")\n\n    }\n\n    function abi_encode_t_stringliteral_ad374ded824b798cdc9deee0988a6fca0aedb782bc5a3214c075a7763e678f0d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_ad374ded824b798cdc9deee0988a6fca0aedb782bc5a3214c075a7763e678f0d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ad374ded824b798cdc9deee0988a6fca0aedb782bc5a3214c075a7763e678f0d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ad374ded824b798cdc9deee0988a6fca0aedb782bc5a3214c075a7763e678f0d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9e506c47a9bc4b9f15c3c811bfc88c16276f1a6c914414d94276ae51ced75ede(memPtr) {\n\n        mstore(add(memPtr, 0), \"New max supply less than total s\")\n\n        mstore(add(memPtr, 32), \"upply\")\n\n    }\n\n    function abi_encode_t_stringliteral_9e506c47a9bc4b9f15c3c811bfc88c16276f1a6c914414d94276ae51ced75ede_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_9e506c47a9bc4b9f15c3c811bfc88c16276f1a6c914414d94276ae51ced75ede(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9e506c47a9bc4b9f15c3c811bfc88c16276f1a6c914414d94276ae51ced75ede__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9e506c47a9bc4b9f15c3c811bfc88c16276f1a6c914414d94276ae51ced75ede_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xCFBD4885 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xCFBD4885 EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x341 JUMPI DUP1 PUSH4 0xF103B433 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x38D JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0xAA2FE91B EQ PUSH2 0x2D7 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x245 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0xC984832 EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x18D JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x12B PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x1478 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x1529 JUMP JUMPDEST PUSH2 0x439 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x1581 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x159A JUMP JUMPDEST PUSH2 0x45B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x195 PUSH2 0x56C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0x15D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x15ED JUMP JUMPDEST PUSH2 0x575 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x1581 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E3 PUSH2 0x5A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x1658 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x213 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x1529 JUMP JUMPDEST PUSH2 0x5AB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x159A JUMP JUMPDEST PUSH2 0x6E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23C SWAP2 SWAP1 PUSH2 0x15D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24D PUSH2 0x72B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x257 PUSH2 0x73E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x1680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x275 PUSH2 0x766 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x1478 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0x1529 JUMP JUMPDEST PUSH2 0x7F6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x1529 JUMP JUMPDEST PUSH2 0x8DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x1581 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x159A JUMP JUMPDEST PUSH2 0x8FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x1581 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x321 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x159A JUMP JUMPDEST PUSH2 0x919 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32B PUSH2 0xA44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x338 SWAP2 SWAP1 PUSH2 0x15D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x356 SWAP2 SWAP1 PUSH2 0x1699 JUMP JUMPDEST PUSH2 0xA4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x368 SWAP2 SWAP1 PUSH2 0x15D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x386 SWAP2 SWAP1 PUSH2 0x16D7 JUMP JUMPDEST PUSH2 0xACC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A2 SWAP2 SWAP1 PUSH2 0x159A JUMP JUMPDEST PUSH2 0xB5F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3B8 SWAP1 PUSH2 0x172F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3E4 SWAP1 PUSH2 0x172F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x42F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x406 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x42F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x412 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x443 PUSH2 0xBE3 JUMP JUMPDEST SWAP1 POP PUSH2 0x450 DUP2 DUP6 DUP6 PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x463 PUSH2 0xBFC JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C8 SWAP1 PUSH2 0x17A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x83B05B6735ACD4B85E3BDED8E72C851D1A87718F81E3C8E6F0C9D9A2BAA88E46 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x57F PUSH2 0xBE3 JUMP JUMPDEST SWAP1 POP PUSH2 0x58C DUP6 DUP3 DUP6 PUSH2 0xC83 JUMP JUMPDEST PUSH2 0x597 DUP6 DUP6 DUP6 PUSH2 0xD16 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5B3 PUSH2 0xE06 JUMP JUMPDEST PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x63A JUMPI POP PUSH2 0x60B PUSH2 0x73E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x679 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x670 SWAP1 PUSH2 0x1811 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD DUP2 PUSH2 0x685 PUSH2 0x56C JUMP JUMPDEST PUSH2 0x68F SWAP2 SWAP1 PUSH2 0x185C JUMP JUMPDEST GT ISZERO PUSH2 0x6D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C7 SWAP1 PUSH2 0x18D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6DA DUP3 DUP3 PUSH2 0xE55 JUMP JUMPDEST PUSH2 0x6E2 PUSH2 0xED4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x733 PUSH2 0xBFC JUMP JUMPDEST PUSH2 0x73C PUSH0 PUSH2 0xEDE JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x775 SWAP1 PUSH2 0x172F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7A1 SWAP1 PUSH2 0x172F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7EC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7C3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7EC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7CF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7FE PUSH2 0xE06 JUMP JUMPDEST PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x885 JUMPI POP PUSH2 0x856 PUSH2 0x73E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x8C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8BB SWAP1 PUSH2 0x1941 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8CE DUP3 DUP3 PUSH2 0xFA1 JUMP JUMPDEST PUSH2 0x8D6 PUSH2 0xED4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x8E4 PUSH2 0xBE3 JUMP JUMPDEST SWAP1 POP PUSH2 0x8F1 DUP2 DUP6 DUP6 PUSH2 0xD16 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x921 PUSH2 0xBFC JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x9AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A1 SWAP1 PUSH2 0x19A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x44F4322F8DAA225D5F4877AD0F7D3DFBA248A774396F3CA99405ED40A044FE81 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAD4 PUSH2 0xBFC JUMP JUMPDEST PUSH2 0xADC PUSH2 0x56C JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xB1E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB15 SWAP1 PUSH2 0x1A37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH32 0x7810BD47DE260C3E9EE10061CF438099DD12256C79485F12F94DBCCC981E806C DUP2 PUSH1 0x40 MLOAD PUSH2 0xB54 SWAP2 SWAP1 PUSH2 0x15D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xB67 PUSH2 0xBFC JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBD7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCE SWAP2 SWAP1 PUSH2 0x1680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBE0 DUP2 PUSH2 0xEDE JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBF7 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1020 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xC04 PUSH2 0xBE3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC22 PUSH2 0x73E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC81 JUMPI PUSH2 0xC45 PUSH2 0xBE3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC78 SWAP2 SWAP1 PUSH2 0x1680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0xC8E DUP5 DUP5 PUSH2 0xA4A JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xD10 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xD01 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD0F DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1020 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD86 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD7D SWAP2 SWAP1 PUSH2 0x1680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDF6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDED SWAP2 SWAP1 PUSH2 0x1680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE01 DUP4 DUP4 DUP4 PUSH2 0x11EF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0xE4B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE42 SWAP1 PUSH2 0x1AD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEC5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEBC SWAP2 SWAP1 PUSH2 0x1680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xED0 PUSH0 DUP4 DUP4 PUSH2 0x11EF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1011 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1008 SWAP2 SWAP1 PUSH2 0x1680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x101C DUP3 PUSH0 DUP4 PUSH2 0x11EF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1090 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1087 SWAP2 SWAP1 PUSH2 0x1680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1100 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F7 SWAP2 SWAP1 PUSH2 0x1680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x11E9 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x11E0 SWAP2 SWAP1 PUSH2 0x15D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x123F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1233 SWAP2 SWAP1 PUSH2 0x185C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x130D JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x12C8 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12BF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1354 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x139E JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x13FB SWAP2 SWAP1 PUSH2 0x15D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x144A DUP3 PUSH2 0x1408 JUMP JUMPDEST PUSH2 0x1454 DUP2 DUP6 PUSH2 0x1412 JUMP JUMPDEST SWAP4 POP PUSH2 0x1464 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1422 JUMP JUMPDEST PUSH2 0x146D DUP2 PUSH2 0x1430 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1490 DUP2 DUP5 PUSH2 0x1440 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14C5 DUP3 PUSH2 0x149C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14D5 DUP2 PUSH2 0x14BB JUMP JUMPDEST DUP2 EQ PUSH2 0x14DF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14F0 DUP2 PUSH2 0x14CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1508 DUP2 PUSH2 0x14F6 JUMP JUMPDEST DUP2 EQ PUSH2 0x1512 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1523 DUP2 PUSH2 0x14FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x153F JUMPI PUSH2 0x153E PUSH2 0x1498 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x154C DUP6 DUP3 DUP7 ADD PUSH2 0x14E2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x155D DUP6 DUP3 DUP7 ADD PUSH2 0x1515 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x157B DUP2 PUSH2 0x1567 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1594 PUSH0 DUP4 ADD DUP5 PUSH2 0x1572 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15AF JUMPI PUSH2 0x15AE PUSH2 0x1498 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15BC DUP5 DUP3 DUP6 ADD PUSH2 0x14E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15CE DUP2 PUSH2 0x14F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15E7 PUSH0 DUP4 ADD DUP5 PUSH2 0x15C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1604 JUMPI PUSH2 0x1603 PUSH2 0x1498 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1611 DUP7 DUP3 DUP8 ADD PUSH2 0x14E2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1622 DUP7 DUP3 DUP8 ADD PUSH2 0x14E2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1633 DUP7 DUP3 DUP8 ADD PUSH2 0x1515 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1652 DUP2 PUSH2 0x163D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x166B PUSH0 DUP4 ADD DUP5 PUSH2 0x1649 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x167A DUP2 PUSH2 0x14BB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1693 PUSH0 DUP4 ADD DUP5 PUSH2 0x1671 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16AF JUMPI PUSH2 0x16AE PUSH2 0x1498 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16BC DUP6 DUP3 DUP7 ADD PUSH2 0x14E2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16CD DUP6 DUP3 DUP7 ADD PUSH2 0x14E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16EC JUMPI PUSH2 0x16EB PUSH2 0x1498 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16F9 DUP5 DUP3 DUP6 ADD PUSH2 0x1515 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1746 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1759 JUMPI PUSH2 0x1758 PUSH2 0x1702 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1793 PUSH1 0xF DUP4 PUSH2 0x1412 JUMP JUMPDEST SWAP2 POP PUSH2 0x179E DUP3 PUSH2 0x175F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17C0 DUP2 PUSH2 0x1787 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A656420746F206D696E7400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17FB PUSH1 0x16 DUP4 PUSH2 0x1412 JUMP JUMPDEST SWAP2 POP PUSH2 0x1806 DUP3 PUSH2 0x17C7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1828 DUP2 PUSH2 0x17EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1866 DUP3 PUSH2 0x14F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1871 DUP4 PUSH2 0x14F6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1889 JUMPI PUSH2 0x1888 PUSH2 0x182F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45786365656473206D617820737570706C790000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18C3 PUSH1 0x12 DUP4 PUSH2 0x1412 JUMP JUMPDEST SWAP2 POP PUSH2 0x18CE DUP3 PUSH2 0x188F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18F0 DUP2 PUSH2 0x18B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A656420746F206275726E00000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x192B PUSH1 0x16 DUP4 PUSH2 0x1412 JUMP JUMPDEST SWAP2 POP PUSH2 0x1936 DUP3 PUSH2 0x18F7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1958 DUP2 PUSH2 0x191F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x41646472657373206E6F7420617574686F72697A656400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1993 PUSH1 0x16 DUP4 PUSH2 0x1412 JUMP JUMPDEST SWAP2 POP PUSH2 0x199E DUP3 PUSH2 0x195F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19C0 DUP2 PUSH2 0x1987 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6577206D617820737570706C79206C657373207468616E20746F74616C2073 PUSH0 DUP3 ADD MSTORE PUSH32 0x7570706C79000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A21 PUSH1 0x25 DUP4 PUSH2 0x1412 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A2C DUP3 PUSH2 0x19C7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A4E DUP2 PUSH2 0x1A15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1A68 PUSH0 DUP4 ADD DUP7 PUSH2 0x1671 JUMP JUMPDEST PUSH2 0x1A75 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x15C5 JUMP JUMPDEST PUSH2 0x1A82 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15C5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1ABE PUSH1 0x1F DUP4 PUSH2 0x1412 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AC9 DUP3 PUSH2 0x1A8A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AEB DUP2 PUSH2 0x1AB2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 EXP 0xC3 EQ 0xAD 0xAF INVALID 0xBD DUP2 PUSH29 0x3A27012EE3C583E3D759CEBEF78A53D25F4726C9930A64736F6C634300 ADDMOD SAR STOP CALLER ",
							"sourceMap": "476:3180:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1737:210:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2849:97:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2528:273:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3004:116:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3066:201:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3315:178:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;620:49:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2069:217;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;709:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3413:241:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1779:89:3;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;1737:210:7:-;1531:13:0;:11;:13::i;:::-;1835:1:7::1;1816:21;;:7;:21;;::::0;1808:49:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1896:4;1867:17;:26;1885:7;1867:26;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;1932:7;1915:25;;;;;;;;;;;;1737:210:::0;:::o;2849:97:3:-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;2707:82::-;2756:5;2780:2;2773:9;;2707:82;:::o;2528:273:7:-;2261:21:2;:19;:21::i;:::-;2610:17:7::1;:29;2628:10;2610:29;;;;;;;;;;;;;;;;;;;;;;;;;:54;;;;2657:7;:5;:7::i;:::-;2643:21;;:10;:21;;;2610:54;2602:89;;;;;;;;;;;;:::i;:::-;;;;;;;;;2735:9;;2725:6;2709:13;:11;:13::i;:::-;:22;;;;:::i;:::-;:35;;2701:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;2777:17;2783:2;2787:6;2777:5;:17::i;:::-;2303:20:2::0;:18;:20::i;:::-;2528:273:7;;:::o;3004:116:3:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1981:93:3:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;3066:201:7:-;2261:21:2;:19;:21::i;:::-;3150:17:7::1;:29;3168:10;3150:29;;;;;;;;;;;;;;;;;;;;;;;;;:54;;;;3197:7;:5;:7::i;:::-;3183:21;;:10;:21;;;3150:54;3142:89;;;;;;;;;;;;:::i;:::-;;;;;;;;;3241:19;3247:4;3253:6;3241:5;:19::i;:::-;2303:20:2::0;:18;:20::i;:::-;3066:201:7;;:::o;3315:178:3:-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;620:49:7:-;;;;;;;;;;;;;;;;;;;;;;:::o;2069:217::-;1531:13:0;:11;:13::i;:::-;2145:17:7::1;:26;2163:7;2145:26;;;;;;;;;;;;;;;;;;;;;;;;;2137:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;2237:5;2208:17;:26;2226:7;2208:26;;;;;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;2271:7;2257:22;;;;;;;;;;;;2069:217:::0;:::o;709:24::-;;;;:::o;3551:140:3:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;3413:241:7:-;1531:13:0;:11;:13::i;:::-;3513::7::1;:11;:13::i;:::-;3497:12;:29;;3489:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;3590:12;3578:9;:24;;;;3617:30;3634:12;3617:30;;;;;;:::i;:::-;;;;;;;;3413:241:::0;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;8726:128:3:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;10415:476:3:-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10599:17;10580:16;:36;10576:309;;;10655:5;10636:16;:24;10632:130;;;10714:7;10723:16;10741:5;10687:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10632:130;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10576:309;10504:387;10415:476;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;2336:287:2:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;7458:208:3:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;2629:209:2:-;1716:1;2809:7;:22;;;;2629:209::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7984:206:3:-;8073:1;8054:21;;:7;:21;;;8050:89;;8125:1;8098:30;;;;;;;;;;;:::i;:::-;;;;;;;;8050:89;8148:35;8156:7;8173:1;8177:5;8148:7;:35::i;:::-;7984:206;;:::o;9701:432::-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:8:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:329::-;3398:6;3447:2;3435:9;3426:7;3422:23;3418:32;3415:119;;;3453:79;;:::i;:::-;3415:119;3573:1;3598:53;3643:7;3634:6;3623:9;3619:22;3598:53;:::i;:::-;3588:63;;3544:117;3339:329;;;;:::o;3674:118::-;3761:24;3779:5;3761:24;:::i;:::-;3756:3;3749:37;3674:118;;:::o;3798:222::-;3891:4;3929:2;3918:9;3914:18;3906:26;;3942:71;4010:1;3999:9;3995:17;3986:6;3942:71;:::i;:::-;3798:222;;;;:::o;4026:619::-;4103:6;4111;4119;4168:2;4156:9;4147:7;4143:23;4139:32;4136:119;;;4174:79;;:::i;:::-;4136:119;4294:1;4319:53;4364:7;4355:6;4344:9;4340:22;4319:53;:::i;:::-;4309:63;;4265:117;4421:2;4447:53;4492:7;4483:6;4472:9;4468:22;4447:53;:::i;:::-;4437:63;;4392:118;4549:2;4575:53;4620:7;4611:6;4600:9;4596:22;4575:53;:::i;:::-;4565:63;;4520:118;4026:619;;;;;:::o;4651:86::-;4686:7;4726:4;4719:5;4715:16;4704:27;;4651:86;;;:::o;4743:112::-;4826:22;4842:5;4826:22;:::i;:::-;4821:3;4814:35;4743:112;;:::o;4861:214::-;4950:4;4988:2;4977:9;4973:18;4965:26;;5001:67;5065:1;5054:9;5050:17;5041:6;5001:67;:::i;:::-;4861:214;;;;:::o;5081:118::-;5168:24;5186:5;5168:24;:::i;:::-;5163:3;5156:37;5081:118;;:::o;5205:222::-;5298:4;5336:2;5325:9;5321:18;5313:26;;5349:71;5417:1;5406:9;5402:17;5393:6;5349:71;:::i;:::-;5205:222;;;;:::o;5433:474::-;5501:6;5509;5558:2;5546:9;5537:7;5533:23;5529:32;5526:119;;;5564:79;;:::i;:::-;5526:119;5684:1;5709:53;5754:7;5745:6;5734:9;5730:22;5709:53;:::i;:::-;5699:63;;5655:117;5811:2;5837:53;5882:7;5873:6;5862:9;5858:22;5837:53;:::i;:::-;5827:63;;5782:118;5433:474;;;;;:::o;5913:329::-;5972:6;6021:2;6009:9;6000:7;5996:23;5992:32;5989:119;;;6027:79;;:::i;:::-;5989:119;6147:1;6172:53;6217:7;6208:6;6197:9;6193:22;6172:53;:::i;:::-;6162:63;;6118:117;5913:329;;;;:::o;6248:180::-;6296:77;6293:1;6286:88;6393:4;6390:1;6383:15;6417:4;6414:1;6407:15;6434:320;6478:6;6515:1;6509:4;6505:12;6495:22;;6562:1;6556:4;6552:12;6583:18;6573:81;;6639:4;6631:6;6627:17;6617:27;;6573:81;6701:2;6693:6;6690:14;6670:18;6667:38;6664:84;;6720:18;;:::i;:::-;6664:84;6485:269;6434:320;;;:::o;6760:165::-;6900:17;6896:1;6888:6;6884:14;6877:41;6760:165;:::o;6931:366::-;7073:3;7094:67;7158:2;7153:3;7094:67;:::i;:::-;7087:74;;7170:93;7259:3;7170:93;:::i;:::-;7288:2;7283:3;7279:12;7272:19;;6931:366;;;:::o;7303:419::-;7469:4;7507:2;7496:9;7492:18;7484:26;;7556:9;7550:4;7546:20;7542:1;7531:9;7527:17;7520:47;7584:131;7710:4;7584:131;:::i;:::-;7576:139;;7303:419;;;:::o;7728:172::-;7868:24;7864:1;7856:6;7852:14;7845:48;7728:172;:::o;7906:366::-;8048:3;8069:67;8133:2;8128:3;8069:67;:::i;:::-;8062:74;;8145:93;8234:3;8145:93;:::i;:::-;8263:2;8258:3;8254:12;8247:19;;7906:366;;;:::o;8278:419::-;8444:4;8482:2;8471:9;8467:18;8459:26;;8531:9;8525:4;8521:20;8517:1;8506:9;8502:17;8495:47;8559:131;8685:4;8559:131;:::i;:::-;8551:139;;8278:419;;;:::o;8703:180::-;8751:77;8748:1;8741:88;8848:4;8845:1;8838:15;8872:4;8869:1;8862:15;8889:191;8929:3;8948:20;8966:1;8948:20;:::i;:::-;8943:25;;8982:20;9000:1;8982:20;:::i;:::-;8977:25;;9025:1;9022;9018:9;9011:16;;9046:3;9043:1;9040:10;9037:36;;;9053:18;;:::i;:::-;9037:36;8889:191;;;;:::o;9086:168::-;9226:20;9222:1;9214:6;9210:14;9203:44;9086:168;:::o;9260:366::-;9402:3;9423:67;9487:2;9482:3;9423:67;:::i;:::-;9416:74;;9499:93;9588:3;9499:93;:::i;:::-;9617:2;9612:3;9608:12;9601:19;;9260:366;;;:::o;9632:419::-;9798:4;9836:2;9825:9;9821:18;9813:26;;9885:9;9879:4;9875:20;9871:1;9860:9;9856:17;9849:47;9913:131;10039:4;9913:131;:::i;:::-;9905:139;;9632:419;;;:::o;10057:172::-;10197:24;10193:1;10185:6;10181:14;10174:48;10057:172;:::o;10235:366::-;10377:3;10398:67;10462:2;10457:3;10398:67;:::i;:::-;10391:74;;10474:93;10563:3;10474:93;:::i;:::-;10592:2;10587:3;10583:12;10576:19;;10235:366;;;:::o;10607:419::-;10773:4;10811:2;10800:9;10796:18;10788:26;;10860:9;10854:4;10850:20;10846:1;10835:9;10831:17;10824:47;10888:131;11014:4;10888:131;:::i;:::-;10880:139;;10607:419;;;:::o;11032:172::-;11172:24;11168:1;11160:6;11156:14;11149:48;11032:172;:::o;11210:366::-;11352:3;11373:67;11437:2;11432:3;11373:67;:::i;:::-;11366:74;;11449:93;11538:3;11449:93;:::i;:::-;11567:2;11562:3;11558:12;11551:19;;11210:366;;;:::o;11582:419::-;11748:4;11786:2;11775:9;11771:18;11763:26;;11835:9;11829:4;11825:20;11821:1;11810:9;11806:17;11799:47;11863:131;11989:4;11863:131;:::i;:::-;11855:139;;11582:419;;;:::o;12007:224::-;12147:34;12143:1;12135:6;12131:14;12124:58;12216:7;12211:2;12203:6;12199:15;12192:32;12007:224;:::o;12237:366::-;12379:3;12400:67;12464:2;12459:3;12400:67;:::i;:::-;12393:74;;12476:93;12565:3;12476:93;:::i;:::-;12594:2;12589:3;12585:12;12578:19;;12237:366;;;:::o;12609:419::-;12775:4;12813:2;12802:9;12798:18;12790:26;;12862:9;12856:4;12852:20;12848:1;12837:9;12833:17;12826:47;12890:131;13016:4;12890:131;:::i;:::-;12882:139;;12609:419;;;:::o;13034:442::-;13183:4;13221:2;13210:9;13206:18;13198:26;;13234:71;13302:1;13291:9;13287:17;13278:6;13234:71;:::i;:::-;13315:72;13383:2;13372:9;13368:18;13359:6;13315:72;:::i;:::-;13397;13465:2;13454:9;13450:18;13441:6;13397:72;:::i;:::-;13034:442;;;;;;:::o;13482:181::-;13622:33;13618:1;13610:6;13606:14;13599:57;13482:181;:::o;13669:366::-;13811:3;13832:67;13896:2;13891:3;13832:67;:::i;:::-;13825:74;;13908:93;13997:3;13908:93;:::i;:::-;14026:2;14021:3;14017:12;14010:19;;13669:366;;;:::o;14041:419::-;14207:4;14245:2;14234:9;14230:18;14222:26;;14294:9;14288:4;14284:20;14280:1;14269:9;14265:17;14258:47;14322:131;14448:4;14322:131;:::i;:::-;14314:139;;14041:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1390400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"authorizeMinter(address)": "infinite",
								"authorizedMinters(address)": "2944",
								"balanceOf(address)": "2917",
								"burn(address,uint256)": "infinite",
								"decimals()": "383",
								"maxSupply()": "2469",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2538",
								"renounceOwnership()": "infinite",
								"revokeMinter(address)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2522",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"updateMaxSupply(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 476,
									"end": 3656,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 476,
									"end": 3656,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 476,
									"end": 3656,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1273,
									"end": 1619,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 1273,
									"end": 1619,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1273,
									"end": 1619,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1273,
									"end": 1619,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1273,
									"end": 1619,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1273,
									"end": 1619,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1619,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1619,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1273,
									"end": 1619,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1273,
									"end": 1619,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1273,
									"end": 1619,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1273,
									"end": 1619,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1273,
									"end": 1619,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1273,
									"end": 1619,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1273,
									"end": 1619,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 1273,
									"end": 1619,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1273,
									"end": 1619,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1273,
									"end": 1619,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1273,
									"end": 1619,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1273,
									"end": 1619,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 1273,
									"end": 1619,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1273,
									"end": 1619,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1273,
									"end": 1619,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1273,
									"end": 1619,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1273,
									"end": 1619,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1273,
									"end": 1619,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1273,
									"end": 1619,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1273,
									"end": 1619,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1273,
									"end": 1619,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1273,
									"end": 1619,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1273,
									"end": 1619,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1273,
									"end": 1619,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1273,
									"end": 1619,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1273,
									"end": 1619,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1273,
									"end": 1619,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1440,
									"end": 1450,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 1416,
									"end": 1421,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1423,
									"end": 1430,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1484,
									"end": 1497,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1470,
									"end": 1480,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1470,
									"end": 1497,
									"modifierDepth": 2,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1470,
									"end": 1497,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1462,
									"end": 1538,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1462,
									"end": 1538,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1462,
									"end": 1538,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1462,
									"end": 1538,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1462,
									"end": 1538,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1462,
									"end": 1538,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1462,
									"end": 1538,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1462,
									"end": 1538,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1462,
									"end": 1538,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1462,
									"end": 1538,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1462,
									"end": 1538,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1462,
									"end": 1538,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1462,
									"end": 1538,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1462,
									"end": 1538,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1462,
									"end": 1538,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1462,
									"end": 1538,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1462,
									"end": 1538,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1462,
									"end": 1538,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1462,
									"end": 1538,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1462,
									"end": 1538,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1462,
									"end": 1538,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1462,
									"end": 1538,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1462,
									"end": 1538,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1462,
									"end": 1538,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1560,
									"end": 1570,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1548,
									"end": 1557,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1548,
									"end": 1570,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1548,
									"end": 1570,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1548,
									"end": 1570,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1548,
									"end": 1570,
									"modifierDepth": 2,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1580,
									"end": 1612,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1586,
									"end": 1596,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 1598,
									"end": 1611,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1580,
									"end": 1585,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1580,
									"end": 1585,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1580,
									"end": 1585,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1580,
									"end": 1612,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1580,
									"end": 1612,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1580,
									"end": 1612,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1580,
									"end": 1612,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1580,
									"end": 1612,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1273,
									"end": 1619,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1273,
									"end": 1619,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1273,
									"end": 1619,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1273,
									"end": 1619,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 476,
									"end": 3656,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 476,
									"end": 3656,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7547,
									"end": 7548,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7601,
									"end": 7602,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 7572,
									"end": 7604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7644,
									"end": 7651,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7653,
									"end": 7658,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7458,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6113,
									"end": 6114,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6097,
									"end": 6101,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6249,
									"end": 6254,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 6233,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "tag",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6285,
									"end": 6304,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6316,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6317,
									"end": 6321,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6354,
									"end": 6359,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6340,
									"end": 6351,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6411,
									"end": 6415,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6417,
									"end": 6428,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6430,
									"end": 6435,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 6386,
									"end": 6436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "tag",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "tag",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6603,
									"end": 6608,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6589,
									"end": 6600,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6581,
									"end": 6585,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 6633,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6661,
									"end": 6662,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6647,
									"end": 6649,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6826,
									"end": 6831,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7038,
									"end": 7043,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7030,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7031,
									"end": 7033,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7098,
									"end": 7100,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 7083,
									"end": 7108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "tag",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6008,
									"end": 7115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "95"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 8,
									"value": "95"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "102"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 8,
									"value": "103"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 8,
									"value": "102"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "104"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 8,
									"value": "104"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "tag",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1694,
									"end": 1697,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1689,
									"end": 1692,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1683,
									"end": 1706,
									"name": "MCOPY",
									"source": 8
								},
								{
									"begin": 1740,
									"end": 1741,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1731,
									"end": 1737,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1726,
									"end": 1729,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1722,
									"end": 1738,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1715,
									"end": 1742,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1610,
									"end": 1749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "tag",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1844,
									"end": 1849,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "107"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "108"
								},
								{
									"begin": 1927,
									"end": 1933,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 1885,
									"end": 1934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "tag",
									"source": 8,
									"value": "108"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 1869,
									"end": 1935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "tag",
									"source": 8,
									"value": "107"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1958,
									"end": 1964,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1944,
									"end": 1965,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1989,
									"end": 1994,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1985,
									"end": 2001,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2034,
									"end": 2037,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2025,
									"end": 2031,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2020,
									"end": 2023,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2016,
									"end": 2032,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2013,
									"end": 2038,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "109"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "110"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 2041,
									"end": 2120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "tag",
									"source": 8,
									"value": "110"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "tag",
									"source": 8,
									"value": "109"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "111"
								},
								{
									"begin": 2176,
									"end": 2182,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2171,
									"end": 2174,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 2131,
									"end": 2183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "tag",
									"source": 8,
									"value": "111"
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1850,
									"end": 2189,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1755,
									"end": 2189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "tag",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2276,
									"end": 2281,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2325,
									"end": 2328,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 2310,
									"end": 2316,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2306,
									"end": 2323,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "113"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "114"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 2333,
									"end": 2412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "tag",
									"source": 8,
									"value": "114"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "tag",
									"source": 8,
									"value": "113"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2437,
									"end": 2450,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "115"
								},
								{
									"begin": 2554,
									"end": 2557,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2546,
									"end": 2552,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2539,
									"end": 2543,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2531,
									"end": 2537,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 2468,
									"end": 2558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "tag",
									"source": 8,
									"value": "115"
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2282,
									"end": 2564,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2209,
									"end": 2564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "tag",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2607,
									"end": 2614,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2636,
									"end": 2641,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2625,
									"end": 2641,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2625,
									"end": 2641,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2570,
									"end": 2647,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2653,
									"end": 2775,
									"name": "tag",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 2653,
									"end": 2775,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "118"
								},
								{
									"begin": 2744,
									"end": 2749,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 2726,
									"end": 2750,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "tag",
									"source": 8,
									"value": "118"
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2719,
									"end": 2724,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2716,
									"end": 2751,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "119"
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2765,
									"end": 2766,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2762,
									"end": 2763,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2755,
									"end": 2767,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "tag",
									"source": 8,
									"value": "119"
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2653,
									"end": 2775,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2653,
									"end": 2775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "tag",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2838,
									"end": 2843,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2869,
									"end": 2875,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2863,
									"end": 2876,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2854,
									"end": 2876,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2854,
									"end": 2876,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "121"
								},
								{
									"begin": 2912,
									"end": 2917,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 2885,
									"end": 2918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "tag",
									"source": 8,
									"value": "121"
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2781,
									"end": 2924,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2930,
									"end": 4096,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 2930,
									"end": 4096,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3047,
									"end": 3053,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3055,
									"end": 3061,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3063,
									"end": 3069,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3071,
									"end": 3077,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3120,
									"end": 3123,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 3108,
									"end": 3117,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3099,
									"end": 3106,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 3091,
									"end": 3124,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 3088,
									"end": 3208,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3088,
									"end": 3208,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "123"
								},
								{
									"begin": 3088,
									"end": 3208,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3127,
									"end": 3206,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "124"
								},
								{
									"begin": 3127,
									"end": 3206,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 3127,
									"end": 3206,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3127,
									"end": 3206,
									"name": "tag",
									"source": 8,
									"value": "124"
								},
								{
									"begin": 3127,
									"end": 3206,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3088,
									"end": 3208,
									"name": "tag",
									"source": 8,
									"value": "123"
								},
								{
									"begin": 3088,
									"end": 3208,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3268,
									"end": 3269,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3257,
									"end": 3266,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3253,
									"end": 3270,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3247,
									"end": 3271,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3298,
									"end": 3316,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3290,
									"end": 3296,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3287,
									"end": 3317,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3284,
									"end": 3401,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3284,
									"end": 3401,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "125"
								},
								{
									"begin": 3284,
									"end": 3401,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3320,
									"end": 3399,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "126"
								},
								{
									"begin": 3320,
									"end": 3399,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 3320,
									"end": 3399,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3320,
									"end": 3399,
									"name": "tag",
									"source": 8,
									"value": "126"
								},
								{
									"begin": 3320,
									"end": 3399,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3284,
									"end": 3401,
									"name": "tag",
									"source": 8,
									"value": "125"
								},
								{
									"begin": 3284,
									"end": 3401,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3425,
									"end": 3499,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "127"
								},
								{
									"begin": 3491,
									"end": 3498,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 3482,
									"end": 3488,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3471,
									"end": 3480,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 3467,
									"end": 3489,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3425,
									"end": 3499,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 3425,
									"end": 3499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3425,
									"end": 3499,
									"name": "tag",
									"source": 8,
									"value": "127"
								},
								{
									"begin": 3425,
									"end": 3499,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3415,
									"end": 3499,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 3415,
									"end": 3499,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3218,
									"end": 3509,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3569,
									"end": 3571,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3558,
									"end": 3567,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3554,
									"end": 3572,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3548,
									"end": 3573,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3600,
									"end": 3618,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3592,
									"end": 3598,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3589,
									"end": 3619,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3586,
									"end": 3703,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3586,
									"end": 3703,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "128"
								},
								{
									"begin": 3586,
									"end": 3703,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3622,
									"end": 3701,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "129"
								},
								{
									"begin": 3622,
									"end": 3701,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 3622,
									"end": 3701,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3622,
									"end": 3701,
									"name": "tag",
									"source": 8,
									"value": "129"
								},
								{
									"begin": 3622,
									"end": 3701,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3586,
									"end": 3703,
									"name": "tag",
									"source": 8,
									"value": "128"
								},
								{
									"begin": 3586,
									"end": 3703,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3727,
									"end": 3801,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "130"
								},
								{
									"begin": 3793,
									"end": 3800,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 3784,
									"end": 3790,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3773,
									"end": 3782,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 3769,
									"end": 3791,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3727,
									"end": 3801,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 3727,
									"end": 3801,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3727,
									"end": 3801,
									"name": "tag",
									"source": 8,
									"value": "130"
								},
								{
									"begin": 3727,
									"end": 3801,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3717,
									"end": 3801,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 3717,
									"end": 3801,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3519,
									"end": 3811,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3850,
									"end": 3852,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 3876,
									"end": 3940,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "131"
								},
								{
									"begin": 3932,
									"end": 3939,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 3923,
									"end": 3929,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3912,
									"end": 3921,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 3908,
									"end": 3930,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3876,
									"end": 3940,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 3876,
									"end": 3940,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3876,
									"end": 3940,
									"name": "tag",
									"source": 8,
									"value": "131"
								},
								{
									"begin": 3876,
									"end": 3940,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3866,
									"end": 3940,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3866,
									"end": 3940,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3821,
									"end": 3950,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3989,
									"end": 3991,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 4015,
									"end": 4079,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "132"
								},
								{
									"begin": 4071,
									"end": 4078,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 4062,
									"end": 4068,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4051,
									"end": 4060,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 4047,
									"end": 4069,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4015,
									"end": 4079,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 4015,
									"end": 4079,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4015,
									"end": 4079,
									"name": "tag",
									"source": 8,
									"value": "132"
								},
								{
									"begin": 4015,
									"end": 4079,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4005,
									"end": 4079,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4005,
									"end": 4079,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3960,
									"end": 4089,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2930,
									"end": 4096,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2930,
									"end": 4096,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 2930,
									"end": 4096,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2930,
									"end": 4096,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 2930,
									"end": 4096,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2930,
									"end": 4096,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2930,
									"end": 4096,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2930,
									"end": 4096,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4102,
									"end": 4201,
									"name": "tag",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 4102,
									"end": 4201,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4154,
									"end": 4160,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4188,
									"end": 4193,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4182,
									"end": 4194,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 4172,
									"end": 4194,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4172,
									"end": 4194,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4102,
									"end": 4201,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4102,
									"end": 4201,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4102,
									"end": 4201,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4102,
									"end": 4201,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4207,
									"end": 4387,
									"name": "tag",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 4207,
									"end": 4387,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4255,
									"end": 4332,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4252,
									"end": 4253,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4245,
									"end": 4333,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4352,
									"end": 4356,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 4349,
									"end": 4350,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 4342,
									"end": 4357,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4376,
									"end": 4380,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 4373,
									"end": 4374,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4366,
									"end": 4381,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 4393,
									"end": 4713,
									"name": "tag",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 4393,
									"end": 4713,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4437,
									"end": 4443,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4474,
									"end": 4475,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 4468,
									"end": 4472,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4464,
									"end": 4476,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 4454,
									"end": 4476,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4454,
									"end": 4476,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4521,
									"end": 4522,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 4515,
									"end": 4519,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4511,
									"end": 4523,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4542,
									"end": 4560,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4532,
									"end": 4613,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "136"
								},
								{
									"begin": 4532,
									"end": 4613,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4598,
									"end": 4602,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 4590,
									"end": 4596,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4586,
									"end": 4603,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4576,
									"end": 4603,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4576,
									"end": 4603,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4532,
									"end": 4613,
									"name": "tag",
									"source": 8,
									"value": "136"
								},
								{
									"begin": 4532,
									"end": 4613,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4660,
									"end": 4662,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4652,
									"end": 4658,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4649,
									"end": 4663,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4629,
									"end": 4647,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4626,
									"end": 4664,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 4623,
									"end": 4707,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "137"
								},
								{
									"begin": 4623,
									"end": 4707,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4679,
									"end": 4697,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "138"
								},
								{
									"begin": 4679,
									"end": 4697,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 4679,
									"end": 4697,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4679,
									"end": 4697,
									"name": "tag",
									"source": 8,
									"value": "138"
								},
								{
									"begin": 4679,
									"end": 4697,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4623,
									"end": 4707,
									"name": "tag",
									"source": 8,
									"value": "137"
								},
								{
									"begin": 4623,
									"end": 4707,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4444,
									"end": 4713,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4393,
									"end": 4713,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4393,
									"end": 4713,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4393,
									"end": 4713,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4393,
									"end": 4713,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4719,
									"end": 4860,
									"name": "tag",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 4719,
									"end": 4860,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4768,
									"end": 4772,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4791,
									"end": 4794,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4783,
									"end": 4794,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4783,
									"end": 4794,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4814,
									"end": 4817,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4811,
									"end": 4812,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4804,
									"end": 4818,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4848,
									"end": 4852,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4845,
									"end": 4846,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4835,
									"end": 4853,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 4827,
									"end": 4853,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4827,
									"end": 4853,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4719,
									"end": 4860,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4719,
									"end": 4860,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4719,
									"end": 4860,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4719,
									"end": 4860,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4866,
									"end": 4959,
									"name": "tag",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 4866,
									"end": 4959,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4903,
									"end": 4909,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4950,
									"end": 4952,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4945,
									"end": 4947,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 4938,
									"end": 4943,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4934,
									"end": 4948,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4930,
									"end": 4953,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 4920,
									"end": 4953,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4920,
									"end": 4953,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4866,
									"end": 4959,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4866,
									"end": 4959,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4866,
									"end": 4959,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4866,
									"end": 4959,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4965,
									"end": 5072,
									"name": "tag",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 4965,
									"end": 5072,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5009,
									"end": 5017,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5059,
									"end": 5064,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5053,
									"end": 5057,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5049,
									"end": 5065,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 5028,
									"end": 5065,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5028,
									"end": 5065,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4965,
									"end": 5072,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4965,
									"end": 5072,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4965,
									"end": 5072,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4965,
									"end": 5072,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4965,
									"end": 5072,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5078,
									"end": 5471,
									"name": "tag",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 5078,
									"end": 5471,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5147,
									"end": 5153,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5197,
									"end": 5198,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 5185,
									"end": 5195,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5181,
									"end": 5199,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 5220,
									"end": 5317,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "143"
								},
								{
									"begin": 5250,
									"end": 5316,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5239,
									"end": 5248,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5220,
									"end": 5317,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 5220,
									"end": 5317,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5220,
									"end": 5317,
									"name": "tag",
									"source": 8,
									"value": "143"
								},
								{
									"begin": 5220,
									"end": 5317,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5338,
									"end": 5377,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "144"
								},
								{
									"begin": 5368,
									"end": 5376,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 5357,
									"end": 5366,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5338,
									"end": 5377,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 5338,
									"end": 5377,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5338,
									"end": 5377,
									"name": "tag",
									"source": 8,
									"value": "144"
								},
								{
									"begin": 5338,
									"end": 5377,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5326,
									"end": 5377,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 5326,
									"end": 5377,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5410,
									"end": 5414,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 5406,
									"end": 5415,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 5399,
									"end": 5404,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5395,
									"end": 5416,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 5386,
									"end": 5416,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 5386,
									"end": 5416,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5459,
									"end": 5463,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 5449,
									"end": 5457,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 5445,
									"end": 5464,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 5438,
									"end": 5443,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5435,
									"end": 5465,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 5425,
									"end": 5465,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 5425,
									"end": 5465,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5154,
									"end": 5471,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5154,
									"end": 5471,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5078,
									"end": 5471,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 5078,
									"end": 5471,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 5078,
									"end": 5471,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5078,
									"end": 5471,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5078,
									"end": 5471,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5078,
									"end": 5471,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5477,
									"end": 5537,
									"name": "tag",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 5477,
									"end": 5537,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5505,
									"end": 5508,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5526,
									"end": 5531,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5519,
									"end": 5531,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5519,
									"end": 5531,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5477,
									"end": 5537,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5477,
									"end": 5537,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5477,
									"end": 5537,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5477,
									"end": 5537,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5543,
									"end": 5685,
									"name": "tag",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 5543,
									"end": 5685,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5593,
									"end": 5602,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5626,
									"end": 5679,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "147"
								},
								{
									"begin": 5644,
									"end": 5678,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "148"
								},
								{
									"begin": 5653,
									"end": 5677,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "149"
								},
								{
									"begin": 5671,
									"end": 5676,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5653,
									"end": 5677,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 5653,
									"end": 5677,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5653,
									"end": 5677,
									"name": "tag",
									"source": 8,
									"value": "149"
								},
								{
									"begin": 5653,
									"end": 5677,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5644,
									"end": 5678,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 5644,
									"end": 5678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5644,
									"end": 5678,
									"name": "tag",
									"source": 8,
									"value": "148"
								},
								{
									"begin": 5644,
									"end": 5678,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5626,
									"end": 5679,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 5626,
									"end": 5679,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5626,
									"end": 5679,
									"name": "tag",
									"source": 8,
									"value": "147"
								},
								{
									"begin": 5626,
									"end": 5679,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5613,
									"end": 5679,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5613,
									"end": 5679,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5543,
									"end": 5685,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5543,
									"end": 5685,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5543,
									"end": 5685,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5543,
									"end": 5685,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5691,
									"end": 5766,
									"name": "tag",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 5691,
									"end": 5766,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5734,
									"end": 5737,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5755,
									"end": 5760,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5748,
									"end": 5760,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5748,
									"end": 5760,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5691,
									"end": 5766,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5691,
									"end": 5766,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5691,
									"end": 5766,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5691,
									"end": 5766,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5772,
									"end": 6041,
									"name": "tag",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 5772,
									"end": 6041,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5882,
									"end": 5921,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "152"
								},
								{
									"begin": 5913,
									"end": 5920,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5882,
									"end": 5921,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 5882,
									"end": 5921,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5882,
									"end": 5921,
									"name": "tag",
									"source": 8,
									"value": "152"
								},
								{
									"begin": 5882,
									"end": 5921,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5943,
									"end": 6034,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "153"
								},
								{
									"begin": 5992,
									"end": 6033,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "154"
								},
								{
									"begin": 6016,
									"end": 6032,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5992,
									"end": 6033,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 5992,
									"end": 6033,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5992,
									"end": 6033,
									"name": "tag",
									"source": 8,
									"value": "154"
								},
								{
									"begin": 5992,
									"end": 6033,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5984,
									"end": 5990,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5977,
									"end": 5981,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5971,
									"end": 5982,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 5943,
									"end": 6034,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 5943,
									"end": 6034,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5943,
									"end": 6034,
									"name": "tag",
									"source": 8,
									"value": "153"
								},
								{
									"begin": 5943,
									"end": 6034,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5937,
									"end": 5941,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5930,
									"end": 6035,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 5848,
									"end": 6041,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5772,
									"end": 6041,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5772,
									"end": 6041,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5772,
									"end": 6041,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5772,
									"end": 6041,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6047,
									"end": 6120,
									"name": "tag",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 6047,
									"end": 6120,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6092,
									"end": 6095,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6113,
									"end": 6114,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6106,
									"end": 6114,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6106,
									"end": 6114,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6047,
									"end": 6120,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6047,
									"end": 6120,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6126,
									"end": 6315,
									"name": "tag",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 6126,
									"end": 6315,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6203,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "157"
								},
								{
									"begin": 6203,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 6203,
									"end": 6235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6203,
									"end": 6235,
									"name": "tag",
									"source": 8,
									"value": "157"
								},
								{
									"begin": 6203,
									"end": 6235,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6244,
									"end": 6309,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "158"
								},
								{
									"begin": 6302,
									"end": 6308,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6294,
									"end": 6300,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6288,
									"end": 6292,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6244,
									"end": 6309,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 6244,
									"end": 6309,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6244,
									"end": 6309,
									"name": "tag",
									"source": 8,
									"value": "158"
								},
								{
									"begin": 6244,
									"end": 6309,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6179,
									"end": 6315,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6126,
									"end": 6315,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6126,
									"end": 6315,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6126,
									"end": 6315,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6321,
									"end": 6507,
									"name": "tag",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 6321,
									"end": 6507,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6381,
									"end": 6501,
									"name": "tag",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 6381,
									"end": 6501,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6398,
									"end": 6401,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6391,
									"end": 6396,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6388,
									"end": 6402,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 6381,
									"end": 6501,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6381,
									"end": 6501,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "162"
								},
								{
									"begin": 6381,
									"end": 6501,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6452,
									"end": 6491,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "163"
								},
								{
									"begin": 6489,
									"end": 6490,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6482,
									"end": 6487,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6452,
									"end": 6491,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 6452,
									"end": 6491,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6452,
									"end": 6491,
									"name": "tag",
									"source": 8,
									"value": "163"
								},
								{
									"begin": 6452,
									"end": 6491,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6425,
									"end": 6426,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 6418,
									"end": 6423,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6414,
									"end": 6427,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6405,
									"end": 6427,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6405,
									"end": 6427,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6381,
									"end": 6501,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 6381,
									"end": 6501,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6381,
									"end": 6501,
									"name": "tag",
									"source": 8,
									"value": "162"
								},
								{
									"begin": 6381,
									"end": 6501,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6321,
									"end": 6507,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6321,
									"end": 6507,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6321,
									"end": 6507,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6513,
									"end": 7056,
									"name": "tag",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 6513,
									"end": 7056,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6614,
									"end": 6616,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 6609,
									"end": 6612,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6606,
									"end": 6617,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 6603,
									"end": 7049,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6603,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "165"
								},
								{
									"begin": 6603,
									"end": 7049,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6648,
									"end": 6686,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "166"
								},
								{
									"begin": 6680,
									"end": 6685,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6648,
									"end": 6686,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 6648,
									"end": 6686,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6648,
									"end": 6686,
									"name": "tag",
									"source": 8,
									"value": "166"
								},
								{
									"begin": 6648,
									"end": 6686,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6732,
									"end": 6761,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "167"
								},
								{
									"begin": 6750,
									"end": 6760,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6732,
									"end": 6761,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 6732,
									"end": 6761,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6732,
									"end": 6761,
									"name": "tag",
									"source": 8,
									"value": "167"
								},
								{
									"begin": 6732,
									"end": 6761,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6722,
									"end": 6730,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6718,
									"end": 6762,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6915,
									"end": 6917,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6903,
									"end": 6913,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 6900,
									"end": 6918,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 6897,
									"end": 6946,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6897,
									"end": 6946,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "168"
								},
								{
									"begin": 6897,
									"end": 6946,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6936,
									"end": 6944,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6921,
									"end": 6944,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6921,
									"end": 6944,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6897,
									"end": 6946,
									"name": "tag",
									"source": 8,
									"value": "168"
								},
								{
									"begin": 6897,
									"end": 6946,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6959,
									"end": 7039,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "169"
								},
								{
									"begin": 7015,
									"end": 7037,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "170"
								},
								{
									"begin": 7033,
									"end": 7036,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 7015,
									"end": 7037,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 7015,
									"end": 7037,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7015,
									"end": 7037,
									"name": "tag",
									"source": 8,
									"value": "170"
								},
								{
									"begin": 7015,
									"end": 7037,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7005,
									"end": 7013,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7001,
									"end": 7038,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6988,
									"end": 6999,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6959,
									"end": 7039,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 6959,
									"end": 7039,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6959,
									"end": 7039,
									"name": "tag",
									"source": 8,
									"value": "169"
								},
								{
									"begin": 6959,
									"end": 7039,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6618,
									"end": 7049,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6618,
									"end": 7049,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6603,
									"end": 7049,
									"name": "tag",
									"source": 8,
									"value": "165"
								},
								{
									"begin": 6603,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6513,
									"end": 7056,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6513,
									"end": 7056,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6513,
									"end": 7056,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6513,
									"end": 7056,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7062,
									"end": 7179,
									"name": "tag",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 7062,
									"end": 7179,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7116,
									"end": 7124,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7166,
									"end": 7171,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7160,
									"end": 7164,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7156,
									"end": 7172,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 7135,
									"end": 7172,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7135,
									"end": 7172,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7062,
									"end": 7179,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7062,
									"end": 7179,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7062,
									"end": 7179,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7062,
									"end": 7179,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7062,
									"end": 7179,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7185,
									"end": 7354,
									"name": "tag",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 7185,
									"end": 7354,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7229,
									"end": 7235,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7262,
									"end": 7313,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "173"
								},
								{
									"begin": 7310,
									"end": 7311,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7306,
									"end": 7312,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 7298,
									"end": 7303,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 7295,
									"end": 7296,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 7291,
									"end": 7304,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 7262,
									"end": 7313,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 7262,
									"end": 7313,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7262,
									"end": 7313,
									"name": "tag",
									"source": 8,
									"value": "173"
								},
								{
									"begin": 7262,
									"end": 7313,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7258,
									"end": 7314,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 7343,
									"end": 7347,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 7337,
									"end": 7341,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7333,
									"end": 7348,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 7323,
									"end": 7348,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7323,
									"end": 7348,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7236,
									"end": 7354,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7185,
									"end": 7354,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7185,
									"end": 7354,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7185,
									"end": 7354,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7185,
									"end": 7354,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7185,
									"end": 7354,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7359,
									"end": 7654,
									"name": "tag",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 7359,
									"end": 7654,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7435,
									"end": 7439,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7581,
									"end": 7610,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "175"
								},
								{
									"begin": 7606,
									"end": 7609,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7600,
									"end": 7604,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7581,
									"end": 7610,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 7581,
									"end": 7610,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7581,
									"end": 7610,
									"name": "tag",
									"source": 8,
									"value": "175"
								},
								{
									"begin": 7581,
									"end": 7610,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7573,
									"end": 7610,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7573,
									"end": 7610,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7643,
									"end": 7646,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 7636,
									"end": 7647,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 7630,
									"end": 7634,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7627,
									"end": 7648,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 7619,
									"end": 7648,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7619,
									"end": 7648,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7359,
									"end": 7654,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7359,
									"end": 7654,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7359,
									"end": 7654,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7359,
									"end": 7654,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7359,
									"end": 7654,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7659,
									"end": 9054,
									"name": "tag",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 7659,
									"end": 9054,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7776,
									"end": 7813,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "177"
								},
								{
									"begin": 7809,
									"end": 7812,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7776,
									"end": 7813,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 7776,
									"end": 7813,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7776,
									"end": 7813,
									"name": "tag",
									"source": 8,
									"value": "177"
								},
								{
									"begin": 7776,
									"end": 7813,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7878,
									"end": 7896,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7870,
									"end": 7876,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7867,
									"end": 7897,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 7864,
									"end": 7920,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 7864,
									"end": 7920,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "178"
								},
								{
									"begin": 7864,
									"end": 7920,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 7900,
									"end": 7918,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "179"
								},
								{
									"begin": 7900,
									"end": 7918,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 7900,
									"end": 7918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7900,
									"end": 7918,
									"name": "tag",
									"source": 8,
									"value": "179"
								},
								{
									"begin": 7900,
									"end": 7918,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7864,
									"end": 7920,
									"name": "tag",
									"source": 8,
									"value": "178"
								},
								{
									"begin": 7864,
									"end": 7920,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7944,
									"end": 7982,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "180"
								},
								{
									"begin": 7976,
									"end": 7980,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7970,
									"end": 7981,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 7944,
									"end": 7982,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 7944,
									"end": 7982,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7944,
									"end": 7982,
									"name": "tag",
									"source": 8,
									"value": "180"
								},
								{
									"begin": 7944,
									"end": 7982,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8029,
									"end": 8096,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "181"
								},
								{
									"begin": 8089,
									"end": 8095,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8081,
									"end": 8087,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8075,
									"end": 8079,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 8029,
									"end": 8096,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "74"
								},
								{
									"begin": 8029,
									"end": 8096,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8029,
									"end": 8096,
									"name": "tag",
									"source": 8,
									"value": "181"
								},
								{
									"begin": 8029,
									"end": 8096,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8123,
									"end": 8124,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8147,
									"end": 8151,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 8134,
									"end": 8151,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8134,
									"end": 8151,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8179,
									"end": 8181,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 8171,
									"end": 8177,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8168,
									"end": 8182,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 8196,
									"end": 8197,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 8191,
									"end": 8809,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8191,
									"end": 8809,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 8191,
									"end": 8809,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "183"
								},
								{
									"begin": 8191,
									"end": 8809,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 8853,
									"end": 8854,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8870,
									"end": 8876,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 8867,
									"end": 8944,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 8867,
									"end": 8944,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "184"
								},
								{
									"begin": 8867,
									"end": 8944,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 8919,
									"end": 8928,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8914,
									"end": 8917,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 8910,
									"end": 8929,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8904,
									"end": 8930,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 8895,
									"end": 8930,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8895,
									"end": 8930,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8867,
									"end": 8944,
									"name": "tag",
									"source": 8,
									"value": "184"
								},
								{
									"begin": 8867,
									"end": 8944,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8970,
									"end": 9037,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "185"
								},
								{
									"begin": 9030,
									"end": 9036,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 9023,
									"end": 9028,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8970,
									"end": 9037,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 8970,
									"end": 9037,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8970,
									"end": 9037,
									"name": "tag",
									"source": 8,
									"value": "185"
								},
								{
									"begin": 8970,
									"end": 9037,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8964,
									"end": 8968,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 8957,
									"end": 9038,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 8826,
									"end": 9048,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8161,
									"end": 9048,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "182"
								},
								{
									"begin": 8161,
									"end": 9048,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8191,
									"end": 8809,
									"name": "tag",
									"source": 8,
									"value": "183"
								},
								{
									"begin": 8191,
									"end": 8809,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8243,
									"end": 8247,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 8239,
									"end": 8248,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 8231,
									"end": 8237,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 8227,
									"end": 8249,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 8277,
									"end": 8314,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "186"
								},
								{
									"begin": 8309,
									"end": 8313,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 8277,
									"end": 8314,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 8277,
									"end": 8314,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8277,
									"end": 8314,
									"name": "tag",
									"source": 8,
									"value": "186"
								},
								{
									"begin": 8277,
									"end": 8314,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8336,
									"end": 8337,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8350,
									"end": 8558,
									"name": "tag",
									"source": 8,
									"value": "187"
								},
								{
									"begin": 8350,
									"end": 8558,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8364,
									"end": 8371,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8361,
									"end": 8362,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8358,
									"end": 8372,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 8350,
									"end": 8558,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 8350,
									"end": 8558,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "189"
								},
								{
									"begin": 8350,
									"end": 8558,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 8443,
									"end": 8452,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 8438,
									"end": 8441,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 8434,
									"end": 8453,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8428,
									"end": 8454,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 8420,
									"end": 8426,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8413,
									"end": 8455,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 8494,
									"end": 8495,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 8486,
									"end": 8492,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8482,
									"end": 8496,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8472,
									"end": 8496,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8472,
									"end": 8496,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8541,
									"end": 8543,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 8530,
									"end": 8539,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 8526,
									"end": 8544,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8513,
									"end": 8544,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 8513,
									"end": 8544,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8387,
									"end": 8391,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 8384,
									"end": 8385,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 8380,
									"end": 8392,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8375,
									"end": 8392,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8375,
									"end": 8392,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8350,
									"end": 8558,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "187"
								},
								{
									"begin": 8350,
									"end": 8558,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8350,
									"end": 8558,
									"name": "tag",
									"source": 8,
									"value": "189"
								},
								{
									"begin": 8350,
									"end": 8558,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8586,
									"end": 8592,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 8577,
									"end": 8584,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8574,
									"end": 8593,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 8571,
									"end": 8750,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 8571,
									"end": 8750,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "190"
								},
								{
									"begin": 8571,
									"end": 8750,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 8644,
									"end": 8653,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 8639,
									"end": 8642,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 8635,
									"end": 8654,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8629,
									"end": 8655,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 8687,
									"end": 8735,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "191"
								},
								{
									"begin": 8729,
									"end": 8733,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 8721,
									"end": 8727,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 8717,
									"end": 8734,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 8706,
									"end": 8715,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8687,
									"end": 8735,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 8687,
									"end": 8735,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8687,
									"end": 8735,
									"name": "tag",
									"source": 8,
									"value": "191"
								},
								{
									"begin": 8687,
									"end": 8735,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8679,
									"end": 8685,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8672,
									"end": 8736,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 8594,
									"end": 8750,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8571,
									"end": 8750,
									"name": "tag",
									"source": 8,
									"value": "190"
								},
								{
									"begin": 8571,
									"end": 8750,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8796,
									"end": 8797,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 8792,
									"end": 8793,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 8784,
									"end": 8790,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 8780,
									"end": 8794,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 8776,
									"end": 8798,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8770,
									"end": 8774,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 8763,
									"end": 8799,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 8198,
									"end": 8809,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8198,
									"end": 8809,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8198,
									"end": 8809,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8161,
									"end": 9048,
									"name": "tag",
									"source": 8,
									"value": "182"
								},
								{
									"begin": 8161,
									"end": 9048,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8161,
									"end": 9048,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7751,
									"end": 9054,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7751,
									"end": 9054,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7751,
									"end": 9054,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7659,
									"end": 9054,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7659,
									"end": 9054,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7659,
									"end": 9054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9060,
									"end": 9186,
									"name": "tag",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 9060,
									"end": 9186,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9097,
									"end": 9104,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9137,
									"end": 9179,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9130,
									"end": 9135,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9126,
									"end": 9180,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 9115,
									"end": 9180,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9115,
									"end": 9180,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9060,
									"end": 9186,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 9060,
									"end": 9186,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9060,
									"end": 9186,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9060,
									"end": 9186,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9192,
									"end": 9288,
									"name": "tag",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 9192,
									"end": 9288,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9229,
									"end": 9236,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9258,
									"end": 9282,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "194"
								},
								{
									"begin": 9276,
									"end": 9281,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9258,
									"end": 9282,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 9258,
									"end": 9282,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9258,
									"end": 9282,
									"name": "tag",
									"source": 8,
									"value": "194"
								},
								{
									"begin": 9258,
									"end": 9282,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9247,
									"end": 9282,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9247,
									"end": 9282,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9192,
									"end": 9288,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 9192,
									"end": 9288,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9192,
									"end": 9288,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9192,
									"end": 9288,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9294,
									"end": 9412,
									"name": "tag",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 9294,
									"end": 9412,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9381,
									"end": 9405,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "196"
								},
								{
									"begin": 9399,
									"end": 9404,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 9381,
									"end": 9405,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 9381,
									"end": 9405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9381,
									"end": 9405,
									"name": "tag",
									"source": 8,
									"value": "196"
								},
								{
									"begin": 9381,
									"end": 9405,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9376,
									"end": 9379,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9369,
									"end": 9406,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 9294,
									"end": 9412,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9294,
									"end": 9412,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9294,
									"end": 9412,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9418,
									"end": 9640,
									"name": "tag",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 9418,
									"end": 9640,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9511,
									"end": 9515,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9549,
									"end": 9551,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 9538,
									"end": 9547,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9534,
									"end": 9552,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9526,
									"end": 9552,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9526,
									"end": 9552,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9562,
									"end": 9633,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "198"
								},
								{
									"begin": 9630,
									"end": 9631,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9619,
									"end": 9628,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 9615,
									"end": 9632,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9606,
									"end": 9612,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 9562,
									"end": 9633,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 9562,
									"end": 9633,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9562,
									"end": 9633,
									"name": "tag",
									"source": 8,
									"value": "198"
								},
								{
									"begin": 9562,
									"end": 9633,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9418,
									"end": 9640,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 9418,
									"end": 9640,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 9418,
									"end": 9640,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9418,
									"end": 9640,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9418,
									"end": 9640,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9646,
									"end": 9815,
									"name": "tag",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 9646,
									"end": 9815,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9730,
									"end": 9741,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9764,
									"end": 9770,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9759,
									"end": 9762,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9752,
									"end": 9771,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 9804,
									"end": 9808,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 9799,
									"end": 9802,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9795,
									"end": 9809,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9780,
									"end": 9809,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 9780,
									"end": 9809,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9646,
									"end": 9815,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 9646,
									"end": 9815,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 9646,
									"end": 9815,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9646,
									"end": 9815,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9646,
									"end": 9815,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 9821,
									"end": 10044,
									"name": "tag",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 9821,
									"end": 10044,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 9961,
									"end": 9995,
									"name": "PUSH",
									"source": 8,
									"value": "4D617820737570706C79206D757374206265203E3D20696E697469616C207375"
								},
								{
									"begin": 9957,
									"end": 9958,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 9949,
									"end": 9955,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 9945,
									"end": 9959,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 9938,
									"end": 9996,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 10030,
									"end": 10036,
									"name": "PUSH",
									"source": 8,
									"value": "70706C7900000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10025,
									"end": 10027,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 10017,
									"end": 10023,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10013,
									"end": 10028,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10006,
									"end": 10037,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 9821,
									"end": 10044,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 9821,
									"end": 10044,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10050,
									"end": 10416,
									"name": "tag",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 10050,
									"end": 10416,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10192,
									"end": 10195,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10213,
									"end": 10280,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "202"
								},
								{
									"begin": 10277,
									"end": 10279,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 10272,
									"end": 10275,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 10213,
									"end": 10280,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 10213,
									"end": 10280,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10213,
									"end": 10280,
									"name": "tag",
									"source": 8,
									"value": "202"
								},
								{
									"begin": 10213,
									"end": 10280,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10206,
									"end": 10280,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 10206,
									"end": 10280,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10289,
									"end": 10382,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "203"
								},
								{
									"begin": 10378,
									"end": 10381,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10289,
									"end": 10382,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 10289,
									"end": 10382,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10289,
									"end": 10382,
									"name": "tag",
									"source": 8,
									"value": "203"
								},
								{
									"begin": 10289,
									"end": 10382,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10407,
									"end": 10409,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 10402,
									"end": 10405,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10398,
									"end": 10410,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10391,
									"end": 10410,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 10391,
									"end": 10410,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10050,
									"end": 10416,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 10050,
									"end": 10416,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 10050,
									"end": 10416,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10050,
									"end": 10416,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10422,
									"end": 10841,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 10422,
									"end": 10841,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10588,
									"end": 10592,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10626,
									"end": 10628,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 10615,
									"end": 10624,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 10611,
									"end": 10629,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10603,
									"end": 10629,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 10603,
									"end": 10629,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10675,
									"end": 10684,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 10669,
									"end": 10673,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 10665,
									"end": 10685,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 10661,
									"end": 10662,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10650,
									"end": 10659,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 10646,
									"end": 10663,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 10639,
									"end": 10686,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 10703,
									"end": 10834,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "205"
								},
								{
									"begin": 10829,
									"end": 10833,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 10703,
									"end": 10834,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "83"
								},
								{
									"begin": 10703,
									"end": 10834,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10703,
									"end": 10834,
									"name": "tag",
									"source": 8,
									"value": "205"
								},
								{
									"begin": 10703,
									"end": 10834,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10695,
									"end": 10834,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 10695,
									"end": 10834,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10422,
									"end": 10841,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 10422,
									"end": 10841,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 10422,
									"end": 10841,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 10422,
									"end": 10841,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 10847,
									"end": 11027,
									"name": "tag",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 10847,
									"end": 11027,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 10895,
									"end": 10972,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10892,
									"end": 10893,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 10885,
									"end": 10973,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 10992,
									"end": 10996,
									"name": "PUSH",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 10989,
									"end": 10990,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 10982,
									"end": 10997,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 11016,
									"end": 11020,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 11013,
									"end": 11014,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 11006,
									"end": 11021,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 11033,
									"end": 11224,
									"name": "tag",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 11033,
									"end": 11224,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11073,
									"end": 11076,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 11092,
									"end": 11112,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "208"
								},
								{
									"begin": 11110,
									"end": 11111,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 11092,
									"end": 11112,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 11092,
									"end": 11112,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11092,
									"end": 11112,
									"name": "tag",
									"source": 8,
									"value": "208"
								},
								{
									"begin": 11092,
									"end": 11112,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11087,
									"end": 11112,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 11087,
									"end": 11112,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11126,
									"end": 11146,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "209"
								},
								{
									"begin": 11144,
									"end": 11145,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 11126,
									"end": 11146,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 11126,
									"end": 11146,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11126,
									"end": 11146,
									"name": "tag",
									"source": 8,
									"value": "209"
								},
								{
									"begin": 11126,
									"end": 11146,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11121,
									"end": 11146,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 11121,
									"end": 11146,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11169,
									"end": 11170,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 11166,
									"end": 11167,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 11162,
									"end": 11171,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 11155,
									"end": 11171,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 11155,
									"end": 11171,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11190,
									"end": 11193,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 11187,
									"end": 11188,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 11184,
									"end": 11194,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 11181,
									"end": 11217,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 11181,
									"end": 11217,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "210"
								},
								{
									"begin": 11181,
									"end": 11217,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 11197,
									"end": 11215,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "211"
								},
								{
									"begin": 11197,
									"end": 11215,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 11197,
									"end": 11215,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11197,
									"end": 11215,
									"name": "tag",
									"source": 8,
									"value": "211"
								},
								{
									"begin": 11197,
									"end": 11215,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11181,
									"end": 11217,
									"name": "tag",
									"source": 8,
									"value": "210"
								},
								{
									"begin": 11181,
									"end": 11217,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11033,
									"end": 11224,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 11033,
									"end": 11224,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 11033,
									"end": 11224,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11033,
									"end": 11224,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11033,
									"end": 11224,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11230,
									"end": 11348,
									"name": "tag",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 11230,
									"end": 11348,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11317,
									"end": 11341,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "213"
								},
								{
									"begin": 11335,
									"end": 11340,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 11317,
									"end": 11341,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 11317,
									"end": 11341,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11317,
									"end": 11341,
									"name": "tag",
									"source": 8,
									"value": "213"
								},
								{
									"begin": 11317,
									"end": 11341,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11312,
									"end": 11315,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 11305,
									"end": 11342,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 11230,
									"end": 11348,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11230,
									"end": 11348,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11230,
									"end": 11348,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11354,
									"end": 11796,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 11354,
									"end": 11796,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11503,
									"end": 11507,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 11541,
									"end": 11543,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 11530,
									"end": 11539,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 11526,
									"end": 11544,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 11518,
									"end": 11544,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 11518,
									"end": 11544,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11554,
									"end": 11625,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "215"
								},
								{
									"begin": 11622,
									"end": 11623,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 11611,
									"end": 11620,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 11607,
									"end": 11624,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 11598,
									"end": 11604,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 11554,
									"end": 11625,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 11554,
									"end": 11625,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11554,
									"end": 11625,
									"name": "tag",
									"source": 8,
									"value": "215"
								},
								{
									"begin": 11554,
									"end": 11625,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11635,
									"end": 11707,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "216"
								},
								{
									"begin": 11703,
									"end": 11705,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 11692,
									"end": 11701,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 11688,
									"end": 11706,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 11679,
									"end": 11685,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 11635,
									"end": 11707,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 11635,
									"end": 11707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11635,
									"end": 11707,
									"name": "tag",
									"source": 8,
									"value": "216"
								},
								{
									"begin": 11635,
									"end": 11707,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11717,
									"end": 11789,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "217"
								},
								{
									"begin": 11785,
									"end": 11787,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 11774,
									"end": 11783,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 11770,
									"end": 11788,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 11761,
									"end": 11767,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 11717,
									"end": 11789,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 11717,
									"end": 11789,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11717,
									"end": 11789,
									"name": "tag",
									"source": 8,
									"value": "217"
								},
								{
									"begin": 11717,
									"end": 11789,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11354,
									"end": 11796,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 11354,
									"end": 11796,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 11354,
									"end": 11796,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11354,
									"end": 11796,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11354,
									"end": 11796,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11354,
									"end": 11796,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11354,
									"end": 11796,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11802,
									"end": 12024,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 11802,
									"end": 12024,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11895,
									"end": 11899,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 11933,
									"end": 11935,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 11922,
									"end": 11931,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 11918,
									"end": 11936,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 11910,
									"end": 11936,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 11910,
									"end": 11936,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11946,
									"end": 12017,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "219"
								},
								{
									"begin": 12014,
									"end": 12015,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 12003,
									"end": 12012,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 11999,
									"end": 12016,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 11990,
									"end": 11996,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 11946,
									"end": 12017,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 11946,
									"end": 12017,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 11946,
									"end": 12017,
									"name": "tag",
									"source": 8,
									"value": "219"
								},
								{
									"begin": 11946,
									"end": 12017,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 11802,
									"end": 12024,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 11802,
									"end": 12024,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 11802,
									"end": 12024,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11802,
									"end": 12024,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 11802,
									"end": 12024,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 476,
									"end": 3656,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 476,
									"end": 3656,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 476,
									"end": 3656,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 476,
									"end": 3656,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 476,
									"end": 3656,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 476,
									"end": 3656,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 476,
									"end": 3656,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 476,
									"end": 3656,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 476,
									"end": 3656,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220250ac314adaffebd817c3a27012ee3c583e3d759cebef78a53d25f4726c9930a64736f6c634300081d0033",
									".code": [
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH",
											"source": 7,
											"value": "CFBD4885"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH",
											"source": 7,
											"value": "CFBD4885"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH",
											"source": 7,
											"value": "D5ABEB01"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH",
											"source": 7,
											"value": "DD62ED3E"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH",
											"source": 7,
											"value": "F103B433"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH",
											"source": 7,
											"value": "9DC29FAC"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH",
											"source": 7,
											"value": "AA2FE91B"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH",
											"source": 7,
											"value": "40C10F19"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH",
											"source": 7,
											"value": "6FDDE03"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH",
											"source": 7,
											"value": "95EA7B3"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH",
											"source": 7,
											"value": "C984832"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 476,
											"end": 3656,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1737,
											"end": 1947,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1737,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1737,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 1737,
											"end": 1947,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1737,
											"end": 1947,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1737,
											"end": 1947,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1737,
											"end": 1947,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1737,
											"end": 1947,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1737,
											"end": 1947,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1737,
											"end": 1947,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1737,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 1737,
											"end": 1947,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1737,
											"end": 1947,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1737,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 1737,
											"end": 1947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1737,
											"end": 1947,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 1737,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1737,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 1737,
											"end": 1947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1737,
											"end": 1947,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 1737,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1737,
											"end": 1947,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2528,
											"end": 2801,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 2528,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 2528,
											"end": 2801,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2528,
											"end": 2801,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2801,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2801,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2801,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2801,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2801,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 2528,
											"end": 2801,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2801,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 2528,
											"end": 2801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2801,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 2528,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 2528,
											"end": 2801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2801,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 2528,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2801,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3066,
											"end": 3267,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 3066,
											"end": 3267,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3066,
											"end": 3267,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 3066,
											"end": 3267,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3066,
											"end": 3267,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3066,
											"end": 3267,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3066,
											"end": 3267,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3066,
											"end": 3267,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3066,
											"end": 3267,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3066,
											"end": 3267,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3066,
											"end": 3267,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 3066,
											"end": 3267,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3066,
											"end": 3267,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3066,
											"end": 3267,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 3066,
											"end": 3267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3066,
											"end": 3267,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 3066,
											"end": 3267,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3066,
											"end": 3267,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 3066,
											"end": 3267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3066,
											"end": 3267,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 3066,
											"end": 3267,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3066,
											"end": 3267,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 620,
											"end": 669,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 620,
											"end": 669,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 620,
											"end": 669,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 620,
											"end": 669,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 620,
											"end": 669,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 620,
											"end": 669,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 620,
											"end": 669,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 620,
											"end": 669,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 620,
											"end": 669,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 620,
											"end": 669,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 620,
											"end": 669,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 620,
											"end": 669,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 620,
											"end": 669,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 620,
											"end": 669,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 620,
											"end": 669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 620,
											"end": 669,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 620,
											"end": 669,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 620,
											"end": 669,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 620,
											"end": 669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 620,
											"end": 669,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 620,
											"end": 669,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 620,
											"end": 669,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 620,
											"end": 669,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 620,
											"end": 669,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 620,
											"end": 669,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 620,
											"end": 669,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 620,
											"end": 669,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 620,
											"end": 669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 620,
											"end": 669,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 620,
											"end": 669,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 620,
											"end": 669,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 620,
											"end": 669,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 620,
											"end": 669,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 620,
											"end": 669,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 620,
											"end": 669,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 620,
											"end": 669,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 620,
											"end": 669,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2069,
											"end": 2286,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 2069,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2069,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 2069,
											"end": 2286,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2069,
											"end": 2286,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2069,
											"end": 2286,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2069,
											"end": 2286,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2069,
											"end": 2286,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2069,
											"end": 2286,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2069,
											"end": 2286,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2069,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 2069,
											"end": 2286,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2069,
											"end": 2286,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2069,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 2069,
											"end": 2286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2069,
											"end": 2286,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 2069,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2069,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 2069,
											"end": 2286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2069,
											"end": 2286,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 2069,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2069,
											"end": 2286,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 709,
											"end": 733,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 709,
											"end": 733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 709,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 709,
											"end": 733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 709,
											"end": 733,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 709,
											"end": 733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 733,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 709,
											"end": 733,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 709,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 709,
											"end": 733,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 709,
											"end": 733,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 709,
											"end": 733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 709,
											"end": 733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 709,
											"end": 733,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 709,
											"end": 733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 733,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 709,
											"end": 733,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 709,
											"end": 733,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 709,
											"end": 733,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 709,
											"end": 733,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 709,
											"end": 733,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 709,
											"end": 733,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3413,
											"end": 3654,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3413,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 3413,
											"end": 3654,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3413,
											"end": 3654,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3654,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3654,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3654,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3654,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3654,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 3413,
											"end": 3654,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3654,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 3413,
											"end": 3654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3654,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 3413,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 3413,
											"end": 3654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3654,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 3413,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3654,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1737,
											"end": 1947,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 1737,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1835,
											"end": 1836,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1816,
											"end": 1837,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1816,
											"end": 1837,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1816,
											"end": 1823,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1816,
											"end": 1837,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1816,
											"end": 1837,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1816,
											"end": 1837,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1857,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 1808,
											"end": 1857,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1808,
											"end": 1857,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1808,
											"end": 1857,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1857,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1808,
											"end": 1857,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1857,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 1808,
											"end": 1857,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1857,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 1808,
											"end": 1857,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1857,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 1808,
											"end": 1857,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1808,
											"end": 1857,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1857,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1857,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1857,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1857,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1857,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1857,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 1808,
											"end": 1857,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1896,
											"end": 1900,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1867,
											"end": 1884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1867,
											"end": 1893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1885,
											"end": 1892,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1867,
											"end": 1893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1867,
											"end": 1893,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1867,
											"end": 1893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1867,
											"end": 1893,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1867,
											"end": 1893,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1867,
											"end": 1893,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1867,
											"end": 1893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1867,
											"end": 1893,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1867,
											"end": 1893,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1867,
											"end": 1893,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1867,
											"end": 1893,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1867,
											"end": 1893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1867,
											"end": 1893,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1867,
											"end": 1893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1867,
											"end": 1893,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1867,
											"end": 1893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1867,
											"end": 1900,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1867,
											"end": 1900,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1867,
											"end": 1900,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1867,
											"end": 1900,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1867,
											"end": 1900,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1867,
											"end": 1900,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1867,
											"end": 1900,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1867,
											"end": 1900,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1867,
											"end": 1900,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1867,
											"end": 1900,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1867,
											"end": 1900,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1867,
											"end": 1900,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1867,
											"end": 1900,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1867,
											"end": 1900,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1867,
											"end": 1900,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1867,
											"end": 1900,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1867,
											"end": 1900,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1867,
											"end": 1900,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1932,
											"end": 1939,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1940,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1915,
											"end": 1940,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1940,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "83B05B6735ACD4B85E3BDED8E72C851D1A87718F81E3C8E6F0C9D9A2BAA88E46"
										},
										{
											"begin": 1915,
											"end": 1940,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1915,
											"end": 1940,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1940,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1915,
											"end": 1940,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1940,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1940,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1940,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1940,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1940,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 1737,
											"end": 1947,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1737,
											"end": 1947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2528,
											"end": 2801,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 2528,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2610,
											"end": 2627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 2610,
											"end": 2639,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2638,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2610,
											"end": 2639,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2610,
											"end": 2639,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2610,
											"end": 2639,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2610,
											"end": 2639,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2610,
											"end": 2639,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2610,
											"end": 2639,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2610,
											"end": 2639,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2610,
											"end": 2639,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2610,
											"end": 2639,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2610,
											"end": 2639,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2610,
											"end": 2639,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2610,
											"end": 2639,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2610,
											"end": 2639,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2610,
											"end": 2639,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2610,
											"end": 2639,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2610,
											"end": 2639,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2610,
											"end": 2639,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2610,
											"end": 2639,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2610,
											"end": 2639,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2610,
											"end": 2639,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2610,
											"end": 2639,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2610,
											"end": 2639,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2610,
											"end": 2639,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2610,
											"end": 2639,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2610,
											"end": 2639,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2610,
											"end": 2664,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2610,
											"end": 2664,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 2610,
											"end": 2664,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2610,
											"end": 2664,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2664,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 2657,
											"end": 2662,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 2657,
											"end": 2664,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2664,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 2657,
											"end": 2664,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2643,
											"end": 2664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2643,
											"end": 2664,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2643,
											"end": 2653,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2643,
											"end": 2664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2643,
											"end": 2664,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2643,
											"end": 2664,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2610,
											"end": 2664,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 2610,
											"end": 2664,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2602,
											"end": 2691,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 2602,
											"end": 2691,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2602,
											"end": 2691,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2602,
											"end": 2691,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2602,
											"end": 2691,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2602,
											"end": 2691,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2602,
											"end": 2691,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2602,
											"end": 2691,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2602,
											"end": 2691,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2602,
											"end": 2691,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 2602,
											"end": 2691,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2602,
											"end": 2691,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 2602,
											"end": 2691,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2602,
											"end": 2691,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 2602,
											"end": 2691,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2602,
											"end": 2691,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2602,
											"end": 2691,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2602,
											"end": 2691,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2602,
											"end": 2691,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2602,
											"end": 2691,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2602,
											"end": 2691,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2602,
											"end": 2691,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2602,
											"end": 2691,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 2602,
											"end": 2691,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2735,
											"end": 2744,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2735,
											"end": 2744,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2725,
											"end": 2731,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2709,
											"end": 2722,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 2709,
											"end": 2720,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2709,
											"end": 2722,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2709,
											"end": 2722,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 2709,
											"end": 2722,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2709,
											"end": 2731,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 2709,
											"end": 2731,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2709,
											"end": 2731,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2709,
											"end": 2731,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 2709,
											"end": 2731,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2709,
											"end": 2731,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 2709,
											"end": 2731,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2709,
											"end": 2744,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2709,
											"end": 2744,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2767,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 2701,
											"end": 2767,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2767,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2701,
											"end": 2767,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2767,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2701,
											"end": 2767,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2767,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2767,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2701,
											"end": 2767,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2767,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 2701,
											"end": 2767,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2767,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 2701,
											"end": 2767,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2767,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 2701,
											"end": 2767,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2767,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2701,
											"end": 2767,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2767,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2767,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2767,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2767,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2767,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2767,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 2701,
											"end": 2767,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2777,
											"end": 2794,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 2783,
											"end": 2785,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2787,
											"end": 2793,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2777,
											"end": 2782,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2777,
											"end": 2794,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2777,
											"end": 2794,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 2777,
											"end": 2794,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2801,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2801,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3066,
											"end": 3267,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 3066,
											"end": 3267,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3150,
											"end": 3167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3150,
											"end": 3179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3168,
											"end": 3178,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3150,
											"end": 3179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3150,
											"end": 3179,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3150,
											"end": 3179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3150,
											"end": 3179,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3150,
											"end": 3179,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3150,
											"end": 3179,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3150,
											"end": 3179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3150,
											"end": 3179,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3150,
											"end": 3179,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3150,
											"end": 3179,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3150,
											"end": 3179,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3150,
											"end": 3179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3150,
											"end": 3179,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3150,
											"end": 3179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3150,
											"end": 3179,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3150,
											"end": 3179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3150,
											"end": 3179,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3150,
											"end": 3179,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3150,
											"end": 3179,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3150,
											"end": 3179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3150,
											"end": 3179,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 3150,
											"end": 3179,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3150,
											"end": 3179,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3150,
											"end": 3179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3150,
											"end": 3179,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3150,
											"end": 3204,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3150,
											"end": 3204,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 3150,
											"end": 3204,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3150,
											"end": 3204,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3197,
											"end": 3204,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 3197,
											"end": 3202,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 3197,
											"end": 3204,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3197,
											"end": 3204,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 3197,
											"end": 3204,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3183,
											"end": 3204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3183,
											"end": 3204,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3183,
											"end": 3193,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3183,
											"end": 3204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3183,
											"end": 3204,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3183,
											"end": 3204,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3150,
											"end": 3204,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 3150,
											"end": 3204,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3142,
											"end": 3231,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 3142,
											"end": 3231,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3142,
											"end": 3231,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3142,
											"end": 3231,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3142,
											"end": 3231,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3142,
											"end": 3231,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3142,
											"end": 3231,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3142,
											"end": 3231,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3142,
											"end": 3231,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3142,
											"end": 3231,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 3142,
											"end": 3231,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3142,
											"end": 3231,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 3142,
											"end": 3231,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3142,
											"end": 3231,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 3142,
											"end": 3231,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3142,
											"end": 3231,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3142,
											"end": 3231,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3142,
											"end": 3231,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3142,
											"end": 3231,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3142,
											"end": 3231,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3142,
											"end": 3231,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3142,
											"end": 3231,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3142,
											"end": 3231,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 3142,
											"end": 3231,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3241,
											"end": 3260,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 3247,
											"end": 3251,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3253,
											"end": 3259,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3241,
											"end": 3246,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 3241,
											"end": 3260,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3241,
											"end": 3260,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 3241,
											"end": 3260,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3066,
											"end": 3267,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3066,
											"end": 3267,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3066,
											"end": 3267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 620,
											"end": 669,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 620,
											"end": 669,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 620,
											"end": 669,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 620,
											"end": 669,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 620,
											"end": 669,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 620,
											"end": 669,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 620,
											"end": 669,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 620,
											"end": 669,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 620,
											"end": 669,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 620,
											"end": 669,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 620,
											"end": 669,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 620,
											"end": 669,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 620,
											"end": 669,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 620,
											"end": 669,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 620,
											"end": 669,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 620,
											"end": 669,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 620,
											"end": 669,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 620,
											"end": 669,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 620,
											"end": 669,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 620,
											"end": 669,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 620,
											"end": 669,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 620,
											"end": 669,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 620,
											"end": 669,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 620,
											"end": 669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2069,
											"end": 2286,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 2069,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2162,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 2145,
											"end": 2171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2163,
											"end": 2170,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2145,
											"end": 2171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2145,
											"end": 2171,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2145,
											"end": 2171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2145,
											"end": 2171,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2145,
											"end": 2171,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2145,
											"end": 2171,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2145,
											"end": 2171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2145,
											"end": 2171,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2145,
											"end": 2171,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2145,
											"end": 2171,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2145,
											"end": 2171,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2145,
											"end": 2171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2145,
											"end": 2171,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2145,
											"end": 2171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2145,
											"end": 2171,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2145,
											"end": 2171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2145,
											"end": 2171,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2145,
											"end": 2171,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2145,
											"end": 2171,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2145,
											"end": 2171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2145,
											"end": 2171,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2145,
											"end": 2171,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2145,
											"end": 2171,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 2145,
											"end": 2171,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2145,
											"end": 2171,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2137,
											"end": 2198,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 2137,
											"end": 2198,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2137,
											"end": 2198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2137,
											"end": 2198,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2137,
											"end": 2198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2137,
											"end": 2198,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2137,
											"end": 2198,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2137,
											"end": 2198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2137,
											"end": 2198,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2137,
											"end": 2198,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 2137,
											"end": 2198,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2137,
											"end": 2198,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 2137,
											"end": 2198,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2137,
											"end": 2198,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 2137,
											"end": 2198,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2137,
											"end": 2198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2137,
											"end": 2198,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2137,
											"end": 2198,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2137,
											"end": 2198,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2137,
											"end": 2198,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2137,
											"end": 2198,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2137,
											"end": 2198,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2137,
											"end": 2198,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 2137,
											"end": 2198,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2237,
											"end": 2242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2208,
											"end": 2225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 2208,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2226,
											"end": 2233,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2208,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2208,
											"end": 2234,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2208,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2208,
											"end": 2234,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2208,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2208,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2208,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2208,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2208,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2208,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2208,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2208,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2208,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2208,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2208,
											"end": 2234,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2208,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2208,
											"end": 2242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2208,
											"end": 2242,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2208,
											"end": 2242,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2208,
											"end": 2242,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2208,
											"end": 2242,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2208,
											"end": 2242,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2208,
											"end": 2242,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2208,
											"end": 2242,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2208,
											"end": 2242,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2208,
											"end": 2242,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2208,
											"end": 2242,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2208,
											"end": 2242,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2208,
											"end": 2242,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2208,
											"end": 2242,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2208,
											"end": 2242,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2208,
											"end": 2242,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2208,
											"end": 2242,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2208,
											"end": 2242,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2278,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2257,
											"end": 2279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2257,
											"end": 2279,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2257,
											"end": 2279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "44F4322F8DAA225D5F4877AD0F7D3DFBA248A774396F3CA99405ED40A044FE81"
										},
										{
											"begin": 2257,
											"end": 2279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2257,
											"end": 2279,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2257,
											"end": 2279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2257,
											"end": 2279,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2257,
											"end": 2279,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2257,
											"end": 2279,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2257,
											"end": 2279,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2257,
											"end": 2279,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2257,
											"end": 2279,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 2069,
											"end": 2286,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2069,
											"end": 2286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 709,
											"end": 733,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 709,
											"end": 733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 733,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 709,
											"end": 733,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 709,
											"end": 733,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 709,
											"end": 733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3413,
											"end": 3654,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 3413,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3513,
											"end": 3526,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 3513,
											"end": 3524,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3513,
											"end": 3526,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3513,
											"end": 3526,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 3513,
											"end": 3526,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3509,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3526,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3497,
											"end": 3526,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3489,
											"end": 3568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 3489,
											"end": 3568,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3489,
											"end": 3568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3489,
											"end": 3568,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3489,
											"end": 3568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3489,
											"end": 3568,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3489,
											"end": 3568,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3489,
											"end": 3568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3489,
											"end": 3568,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3489,
											"end": 3568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 3489,
											"end": 3568,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3489,
											"end": 3568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 3489,
											"end": 3568,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3489,
											"end": 3568,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 3489,
											"end": 3568,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3489,
											"end": 3568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3489,
											"end": 3568,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3489,
											"end": 3568,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3489,
											"end": 3568,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3489,
											"end": 3568,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3489,
											"end": 3568,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3489,
											"end": 3568,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3489,
											"end": 3568,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 3489,
											"end": 3568,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3590,
											"end": 3602,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3578,
											"end": 3587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3578,
											"end": 3602,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3578,
											"end": 3602,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3578,
											"end": 3602,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3578,
											"end": 3602,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3617,
											"end": 3647,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7810BD47DE260C3E9EE10061CF438099DD12256C79485F12F94DBCCC981E806C"
										},
										{
											"begin": 3634,
											"end": 3646,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3617,
											"end": 3647,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3617,
											"end": 3647,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3617,
											"end": 3647,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 3617,
											"end": 3647,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3617,
											"end": 3647,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3617,
											"end": 3647,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 3617,
											"end": 3647,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3617,
											"end": 3647,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 3617,
											"end": 3647,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3617,
											"end": 3647,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3617,
											"end": 3647,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3617,
											"end": 3647,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3617,
											"end": 3647,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3617,
											"end": 3647,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3617,
											"end": 3647,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3617,
											"end": 3647,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3654,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3413,
											"end": 3654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10599,
											"end": 10616,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10655,
											"end": 10660,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10636,
											"end": 10652,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10636,
											"end": 10660,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10714,
											"end": 10721,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10723,
											"end": 10739,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10741,
											"end": 10746,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 3,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 10687,
											"end": 10747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 10812,
											"end": 10817,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10819,
											"end": 10826,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10847,
											"end": 10852,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10828,
											"end": 10852,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10854,
											"end": 10859,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10803,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 10803,
											"end": 10860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10504,
											"end": 10891,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10415,
											"end": 10891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "tag",
											"source": 3,
											"value": "140"
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7547,
											"end": 7548,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 7572,
											"end": 7604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 7624,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7458,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8073,
											"end": 8074,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8054,
											"end": 8061,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8125,
											"end": 8126,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 8098,
											"end": 8128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 8156,
											"end": 8163,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8173,
											"end": 8174,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8177,
											"end": 8182,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8148,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 8148,
											"end": 8183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7984,
											"end": 8190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 3,
											"value": "241"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 8
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 8,
											"value": "301"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3398,
											"end": 3404,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3447,
											"end": 3449,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3435,
											"end": 3444,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3433,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3422,
											"end": 3445,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3418,
											"end": 3450,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3453,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 3453,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 3453,
											"end": 3532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3453,
											"end": 3532,
											"name": "tag",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 3453,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3573,
											"end": 3574,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3598,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 3643,
											"end": 3650,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3634,
											"end": 3640,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3623,
											"end": 3632,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3619,
											"end": 3641,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3598,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 3598,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3598,
											"end": 3651,
											"name": "tag",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 3598,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3588,
											"end": 3651,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3588,
											"end": 3651,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3544,
											"end": 3661,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3674,
											"end": 3792,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 3674,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3761,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 3779,
											"end": 3784,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3761,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 3761,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3761,
											"end": 3785,
											"name": "tag",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 3761,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3756,
											"end": 3759,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3749,
											"end": 3786,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3674,
											"end": 3792,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3674,
											"end": 3792,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3674,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3891,
											"end": 3895,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3929,
											"end": 3931,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3918,
											"end": 3927,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3914,
											"end": 3932,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3906,
											"end": 3932,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3906,
											"end": 3932,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 4010,
											"end": 4011,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3999,
											"end": 4008,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3995,
											"end": 4012,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3986,
											"end": 3992,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 3942,
											"end": 4013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3942,
											"end": 4013,
											"name": "tag",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 3942,
											"end": 4013,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4020,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3798,
											"end": 4020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4103,
											"end": 4109,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4111,
											"end": 4117,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4119,
											"end": 4125,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4168,
											"end": 4170,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4156,
											"end": 4165,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4147,
											"end": 4154,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4143,
											"end": 4166,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4139,
											"end": 4171,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 4174,
											"end": 4253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "tag",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "tag",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4294,
											"end": 4295,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 4364,
											"end": 4371,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4355,
											"end": 4361,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4344,
											"end": 4353,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4340,
											"end": 4362,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 4319,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4309,
											"end": 4372,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4309,
											"end": 4372,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4265,
											"end": 4382,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4421,
											"end": 4423,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 4492,
											"end": 4499,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4483,
											"end": 4489,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4472,
											"end": 4481,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4468,
											"end": 4490,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 4447,
											"end": 4500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "tag",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4437,
											"end": 4500,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4437,
											"end": 4500,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4392,
											"end": 4510,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4549,
											"end": 4551,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 4620,
											"end": 4627,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4611,
											"end": 4617,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4600,
											"end": 4609,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4618,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 4575,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4520,
											"end": 4638,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4026,
											"end": 4645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "tag",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4686,
											"end": 4693,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4730,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 4719,
											"end": 4724,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4731,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4704,
											"end": 4731,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4704,
											"end": 4731,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4651,
											"end": 4737,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4651,
											"end": 4737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 4842,
											"end": 4847,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 4826,
											"end": 4848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "tag",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 4826,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4824,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4814,
											"end": 4849,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4743,
											"end": 4855,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4743,
											"end": 4855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4950,
											"end": 4954,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4988,
											"end": 4990,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4977,
											"end": 4986,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4973,
											"end": 4991,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4965,
											"end": 4991,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4965,
											"end": 4991,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 5065,
											"end": 5066,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5054,
											"end": 5063,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5050,
											"end": 5067,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 5001,
											"end": 5068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "tag",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4861,
											"end": 5075,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4861,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "tag",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 5186,
											"end": 5191,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 5168,
											"end": 5192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5163,
											"end": 5166,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5156,
											"end": 5193,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "tag",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5298,
											"end": 5302,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5336,
											"end": 5338,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5325,
											"end": 5334,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5321,
											"end": 5339,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5313,
											"end": 5339,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5313,
											"end": 5339,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 5417,
											"end": 5418,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5406,
											"end": 5415,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5402,
											"end": 5419,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5393,
											"end": 5399,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 5349,
											"end": 5420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "tag",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5205,
											"end": 5427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "tag",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5501,
											"end": 5507,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5509,
											"end": 5515,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5558,
											"end": 5560,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5546,
											"end": 5555,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5537,
											"end": 5544,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5533,
											"end": 5556,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5529,
											"end": 5561,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 5564,
											"end": 5643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "tag",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "tag",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5684,
											"end": 5685,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 5754,
											"end": 5761,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5745,
											"end": 5751,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5734,
											"end": 5743,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5730,
											"end": 5752,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 5709,
											"end": 5762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "tag",
											"source": 8,
											"value": "347"
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5699,
											"end": 5762,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5699,
											"end": 5762,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5655,
											"end": 5772,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5811,
											"end": 5813,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 5882,
											"end": 5889,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5873,
											"end": 5879,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5862,
											"end": 5871,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5858,
											"end": 5880,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 5837,
											"end": 5890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "tag",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5827,
											"end": 5890,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5827,
											"end": 5890,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5782,
											"end": 5900,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5433,
											"end": 5907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5913,
											"end": 6242,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 5913,
											"end": 6242,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5972,
											"end": 5978,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6021,
											"end": 6023,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6009,
											"end": 6018,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6000,
											"end": 6007,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5996,
											"end": 6019,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5992,
											"end": 6024,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5989,
											"end": 6108,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5989,
											"end": 6108,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 5989,
											"end": 6108,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6027,
											"end": 6106,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 6027,
											"end": 6106,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 6027,
											"end": 6106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6027,
											"end": 6106,
											"name": "tag",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 6027,
											"end": 6106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5989,
											"end": 6108,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 5989,
											"end": 6108,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6147,
											"end": 6148,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 6217,
											"end": 6224,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6208,
											"end": 6214,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6197,
											"end": 6206,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6193,
											"end": 6215,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 6172,
											"end": 6225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "tag",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6118,
											"end": 6235,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5913,
											"end": 6242,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5913,
											"end": 6242,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5913,
											"end": 6242,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5913,
											"end": 6242,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5913,
											"end": 6242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6248,
											"end": 6428,
											"name": "tag",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 6248,
											"end": 6428,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6296,
											"end": 6373,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6293,
											"end": 6294,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6286,
											"end": 6374,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6393,
											"end": 6397,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 6390,
											"end": 6391,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6383,
											"end": 6398,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6417,
											"end": 6421,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6414,
											"end": 6415,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6407,
											"end": 6422,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6478,
											"end": 6484,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6515,
											"end": 6516,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 6509,
											"end": 6513,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6505,
											"end": 6517,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 6495,
											"end": 6517,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6495,
											"end": 6517,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6562,
											"end": 6563,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6556,
											"end": 6560,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6552,
											"end": 6564,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6583,
											"end": 6601,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6639,
											"end": 6643,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 6631,
											"end": 6637,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6627,
											"end": 6644,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "tag",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6701,
											"end": 6703,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6693,
											"end": 6699,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6690,
											"end": 6704,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6670,
											"end": 6688,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6667,
											"end": 6705,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 6720,
											"end": 6738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "tag",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "tag",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6485,
											"end": 6754,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6434,
											"end": 6754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6760,
											"end": 6925,
											"name": "tag",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 6760,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6900,
											"end": 6917,
											"name": "PUSH",
											"source": 8,
											"value": "496E76616C696420616464726573730000000000000000000000000000000000"
										},
										{
											"begin": 6896,
											"end": 6897,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6888,
											"end": 6894,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6884,
											"end": 6898,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6877,
											"end": 6918,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6760,
											"end": 6925,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6760,
											"end": 6925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6931,
											"end": 7297,
											"name": "tag",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 6931,
											"end": 7297,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7073,
											"end": 7076,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7094,
											"end": 7161,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 7158,
											"end": 7160,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 7153,
											"end": 7156,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7094,
											"end": 7161,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 7094,
											"end": 7161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7094,
											"end": 7161,
											"name": "tag",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 7094,
											"end": 7161,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7087,
											"end": 7161,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7087,
											"end": 7161,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7170,
											"end": 7263,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 7259,
											"end": 7262,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7170,
											"end": 7263,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 7170,
											"end": 7263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7170,
											"end": 7263,
											"name": "tag",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 7170,
											"end": 7263,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7288,
											"end": 7290,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7283,
											"end": 7286,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7279,
											"end": 7291,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7272,
											"end": 7291,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7272,
											"end": 7291,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6931,
											"end": 7297,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6931,
											"end": 7297,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6931,
											"end": 7297,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6931,
											"end": 7297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7303,
											"end": 7722,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 7303,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7469,
											"end": 7473,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7507,
											"end": 7509,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7496,
											"end": 7505,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7492,
											"end": 7510,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7484,
											"end": 7510,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7484,
											"end": 7510,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7556,
											"end": 7565,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7550,
											"end": 7554,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7546,
											"end": 7566,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7542,
											"end": 7543,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7531,
											"end": 7540,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7527,
											"end": 7544,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7520,
											"end": 7567,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7584,
											"end": 7715,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 7710,
											"end": 7714,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7584,
											"end": 7715,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 7584,
											"end": 7715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7584,
											"end": 7715,
											"name": "tag",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 7584,
											"end": 7715,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7576,
											"end": 7715,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7576,
											"end": 7715,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7303,
											"end": 7722,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7303,
											"end": 7722,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7303,
											"end": 7722,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7303,
											"end": 7722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7728,
											"end": 7900,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 7728,
											"end": 7900,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7868,
											"end": 7892,
											"name": "PUSH",
											"source": 8,
											"value": "4E6F7420617574686F72697A656420746F206D696E7400000000000000000000"
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7852,
											"end": 7866,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7845,
											"end": 7893,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7728,
											"end": 7900,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7728,
											"end": 7900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7906,
											"end": 8272,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 7906,
											"end": 8272,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8048,
											"end": 8051,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8069,
											"end": 8136,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 8133,
											"end": 8135,
											"name": "PUSH",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 8128,
											"end": 8131,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8069,
											"end": 8136,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 8069,
											"end": 8136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8069,
											"end": 8136,
											"name": "tag",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 8069,
											"end": 8136,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8062,
											"end": 8136,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8062,
											"end": 8136,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8145,
											"end": 8238,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 8234,
											"end": 8237,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8145,
											"end": 8238,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 8145,
											"end": 8238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8145,
											"end": 8238,
											"name": "tag",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 8145,
											"end": 8238,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8263,
											"end": 8265,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8258,
											"end": 8261,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8254,
											"end": 8266,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8247,
											"end": 8266,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8247,
											"end": 8266,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7906,
											"end": 8272,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7906,
											"end": 8272,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7906,
											"end": 8272,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7906,
											"end": 8272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8278,
											"end": 8697,
											"name": "tag",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 8278,
											"end": 8697,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8444,
											"end": 8448,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8482,
											"end": 8484,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8471,
											"end": 8480,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8467,
											"end": 8485,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8459,
											"end": 8485,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8459,
											"end": 8485,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8531,
											"end": 8540,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8525,
											"end": 8529,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8521,
											"end": 8541,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8517,
											"end": 8518,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8506,
											"end": 8515,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8502,
											"end": 8519,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8495,
											"end": 8542,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8559,
											"end": 8690,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 8685,
											"end": 8689,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8559,
											"end": 8690,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 8559,
											"end": 8690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8559,
											"end": 8690,
											"name": "tag",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 8559,
											"end": 8690,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8551,
											"end": 8690,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8551,
											"end": 8690,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8278,
											"end": 8697,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8278,
											"end": 8697,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8278,
											"end": 8697,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8278,
											"end": 8697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8703,
											"end": 8883,
											"name": "tag",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 8703,
											"end": 8883,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8751,
											"end": 8828,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8748,
											"end": 8749,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8741,
											"end": 8829,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8848,
											"end": 8852,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 8845,
											"end": 8846,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8838,
											"end": 8853,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8872,
											"end": 8876,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8869,
											"end": 8870,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8862,
											"end": 8877,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8889,
											"end": 9080,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 8889,
											"end": 9080,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8929,
											"end": 8932,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8948,
											"end": 8968,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 8966,
											"end": 8967,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8948,
											"end": 8968,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 8948,
											"end": 8968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8948,
											"end": 8968,
											"name": "tag",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 8948,
											"end": 8968,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8943,
											"end": 8968,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8943,
											"end": 8968,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8982,
											"end": 9002,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 9000,
											"end": 9001,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8982,
											"end": 9002,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 8982,
											"end": 9002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8982,
											"end": 9002,
											"name": "tag",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 8982,
											"end": 9002,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8977,
											"end": 9002,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8977,
											"end": 9002,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9025,
											"end": 9026,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9022,
											"end": 9023,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9018,
											"end": 9027,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9011,
											"end": 9027,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9011,
											"end": 9027,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9046,
											"end": 9049,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9043,
											"end": 9044,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9040,
											"end": 9050,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 9037,
											"end": 9073,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9037,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 9037,
											"end": 9073,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9053,
											"end": 9071,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 9053,
											"end": 9071,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 9053,
											"end": 9071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9053,
											"end": 9071,
											"name": "tag",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 9053,
											"end": 9071,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9037,
											"end": 9073,
											"name": "tag",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 9037,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8889,
											"end": 9080,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8889,
											"end": 9080,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8889,
											"end": 9080,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8889,
											"end": 9080,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8889,
											"end": 9080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9086,
											"end": 9254,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 9086,
											"end": 9254,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9226,
											"end": 9246,
											"name": "PUSH",
											"source": 8,
											"value": "45786365656473206D617820737570706C790000000000000000000000000000"
										},
										{
											"begin": 9222,
											"end": 9223,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9214,
											"end": 9220,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9210,
											"end": 9224,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9203,
											"end": 9247,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9086,
											"end": 9254,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9086,
											"end": 9254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9260,
											"end": 9626,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 9260,
											"end": 9626,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9402,
											"end": 9405,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9423,
											"end": 9490,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 9487,
											"end": 9489,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 9482,
											"end": 9485,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9423,
											"end": 9490,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 9423,
											"end": 9490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9423,
											"end": 9490,
											"name": "tag",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 9423,
											"end": 9490,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9416,
											"end": 9490,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9416,
											"end": 9490,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9499,
											"end": 9592,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 9588,
											"end": 9591,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9499,
											"end": 9592,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 9499,
											"end": 9592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9499,
											"end": 9592,
											"name": "tag",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 9499,
											"end": 9592,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9617,
											"end": 9619,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9612,
											"end": 9615,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9608,
											"end": 9620,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9601,
											"end": 9620,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9601,
											"end": 9620,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9260,
											"end": 9626,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9260,
											"end": 9626,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9260,
											"end": 9626,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9260,
											"end": 9626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9632,
											"end": 10051,
											"name": "tag",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 9632,
											"end": 10051,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9798,
											"end": 9802,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9838,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9825,
											"end": 9834,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9821,
											"end": 9839,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9813,
											"end": 9839,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9813,
											"end": 9839,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9885,
											"end": 9894,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9879,
											"end": 9883,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9875,
											"end": 9895,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9871,
											"end": 9872,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9860,
											"end": 9869,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9856,
											"end": 9873,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9849,
											"end": 9896,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9913,
											"end": 10044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 10039,
											"end": 10043,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9913,
											"end": 10044,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 9913,
											"end": 10044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9913,
											"end": 10044,
											"name": "tag",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 9913,
											"end": 10044,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9905,
											"end": 10044,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9905,
											"end": 10044,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9632,
											"end": 10051,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9632,
											"end": 10051,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9632,
											"end": 10051,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9632,
											"end": 10051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10057,
											"end": 10229,
											"name": "tag",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 10057,
											"end": 10229,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10197,
											"end": 10221,
											"name": "PUSH",
											"source": 8,
											"value": "4E6F7420617574686F72697A656420746F206275726E00000000000000000000"
										},
										{
											"begin": 10193,
											"end": 10194,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10185,
											"end": 10191,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10181,
											"end": 10195,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10174,
											"end": 10222,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10057,
											"end": 10229,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10057,
											"end": 10229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10235,
											"end": 10601,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 10235,
											"end": 10601,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10377,
											"end": 10380,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10398,
											"end": 10465,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 10462,
											"end": 10464,
											"name": "PUSH",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 10457,
											"end": 10460,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10398,
											"end": 10465,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 10398,
											"end": 10465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10398,
											"end": 10465,
											"name": "tag",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 10398,
											"end": 10465,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10391,
											"end": 10465,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10391,
											"end": 10465,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10474,
											"end": 10567,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 10563,
											"end": 10566,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10474,
											"end": 10567,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 10474,
											"end": 10567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10474,
											"end": 10567,
											"name": "tag",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 10474,
											"end": 10567,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10592,
											"end": 10594,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10587,
											"end": 10590,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10583,
											"end": 10595,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10576,
											"end": 10595,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10576,
											"end": 10595,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10235,
											"end": 10601,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10235,
											"end": 10601,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10235,
											"end": 10601,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10235,
											"end": 10601,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10607,
											"end": 11026,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 10607,
											"end": 11026,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10773,
											"end": 10777,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10811,
											"end": 10813,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10800,
											"end": 10809,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10796,
											"end": 10814,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10788,
											"end": 10814,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10788,
											"end": 10814,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10860,
											"end": 10869,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10854,
											"end": 10858,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10850,
											"end": 10870,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10846,
											"end": 10847,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10835,
											"end": 10844,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10831,
											"end": 10848,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10824,
											"end": 10871,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10888,
											"end": 11019,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 11014,
											"end": 11018,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10888,
											"end": 11019,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 10888,
											"end": 11019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10888,
											"end": 11019,
											"name": "tag",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 10888,
											"end": 11019,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10880,
											"end": 11019,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10880,
											"end": 11019,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10607,
											"end": 11026,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10607,
											"end": 11026,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10607,
											"end": 11026,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10607,
											"end": 11026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11032,
											"end": 11204,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 11032,
											"end": 11204,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11172,
											"end": 11196,
											"name": "PUSH",
											"source": 8,
											"value": "41646472657373206E6F7420617574686F72697A656400000000000000000000"
										},
										{
											"begin": 11168,
											"end": 11169,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11160,
											"end": 11166,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11156,
											"end": 11170,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11149,
											"end": 11197,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11032,
											"end": 11204,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11032,
											"end": 11204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11210,
											"end": 11576,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 11210,
											"end": 11576,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11352,
											"end": 11355,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11373,
											"end": 11440,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 11437,
											"end": 11439,
											"name": "PUSH",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 11432,
											"end": 11435,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11373,
											"end": 11440,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 11373,
											"end": 11440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11373,
											"end": 11440,
											"name": "tag",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 11373,
											"end": 11440,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11366,
											"end": 11440,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11366,
											"end": 11440,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11449,
											"end": 11542,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 11538,
											"end": 11541,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11449,
											"end": 11542,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 11449,
											"end": 11542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11449,
											"end": 11542,
											"name": "tag",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 11449,
											"end": 11542,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11567,
											"end": 11569,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11562,
											"end": 11565,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11558,
											"end": 11570,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11551,
											"end": 11570,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11551,
											"end": 11570,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11210,
											"end": 11576,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11210,
											"end": 11576,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11210,
											"end": 11576,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11210,
											"end": 11576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11582,
											"end": 12001,
											"name": "tag",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 11582,
											"end": 12001,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11748,
											"end": 11752,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11786,
											"end": 11788,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11775,
											"end": 11784,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11771,
											"end": 11789,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11763,
											"end": 11789,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11763,
											"end": 11789,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11835,
											"end": 11844,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11829,
											"end": 11833,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11825,
											"end": 11845,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11821,
											"end": 11822,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11810,
											"end": 11819,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11806,
											"end": 11823,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11799,
											"end": 11846,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11863,
											"end": 11994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 11989,
											"end": 11993,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11863,
											"end": 11994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 11863,
											"end": 11994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11863,
											"end": 11994,
											"name": "tag",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 11863,
											"end": 11994,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11855,
											"end": 11994,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11855,
											"end": 11994,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11582,
											"end": 12001,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11582,
											"end": 12001,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11582,
											"end": 12001,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11582,
											"end": 12001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12007,
											"end": 12231,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 12007,
											"end": 12231,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12147,
											"end": 12181,
											"name": "PUSH",
											"source": 8,
											"value": "4E6577206D617820737570706C79206C657373207468616E20746F74616C2073"
										},
										{
											"begin": 12143,
											"end": 12144,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12135,
											"end": 12141,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12131,
											"end": 12145,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12124,
											"end": 12182,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12216,
											"end": 12223,
											"name": "PUSH",
											"source": 8,
											"value": "7570706C79000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12211,
											"end": 12213,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12203,
											"end": 12209,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12199,
											"end": 12214,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12192,
											"end": 12224,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12007,
											"end": 12231,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12007,
											"end": 12231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12237,
											"end": 12603,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 12237,
											"end": 12603,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12379,
											"end": 12382,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12400,
											"end": 12467,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 12464,
											"end": 12466,
											"name": "PUSH",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 12459,
											"end": 12462,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12400,
											"end": 12467,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 12400,
											"end": 12467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12400,
											"end": 12467,
											"name": "tag",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 12400,
											"end": 12467,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12393,
											"end": 12467,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12393,
											"end": 12467,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12476,
											"end": 12569,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 12565,
											"end": 12568,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12476,
											"end": 12569,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 12476,
											"end": 12569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12476,
											"end": 12569,
											"name": "tag",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 12476,
											"end": 12569,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12594,
											"end": 12596,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12589,
											"end": 12592,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12585,
											"end": 12597,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12578,
											"end": 12597,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12578,
											"end": 12597,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12237,
											"end": 12603,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12237,
											"end": 12603,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12237,
											"end": 12603,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12237,
											"end": 12603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12609,
											"end": 13028,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 12609,
											"end": 13028,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12775,
											"end": 12779,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12813,
											"end": 12815,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12802,
											"end": 12811,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12798,
											"end": 12816,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12790,
											"end": 12816,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12790,
											"end": 12816,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12862,
											"end": 12871,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12856,
											"end": 12860,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12852,
											"end": 12872,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12848,
											"end": 12849,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12837,
											"end": 12846,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12833,
											"end": 12850,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12826,
											"end": 12873,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12890,
											"end": 13021,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 13016,
											"end": 13020,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12890,
											"end": 13021,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 12890,
											"end": 13021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12890,
											"end": 13021,
											"name": "tag",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 12890,
											"end": 13021,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12882,
											"end": 13021,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12882,
											"end": 13021,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12609,
											"end": 13028,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12609,
											"end": 13028,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12609,
											"end": 13028,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12609,
											"end": 13028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13034,
											"end": 13476,
											"name": "tag",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 13034,
											"end": 13476,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13183,
											"end": 13187,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13221,
											"end": 13223,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 13210,
											"end": 13219,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13206,
											"end": 13224,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13198,
											"end": 13224,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13198,
											"end": 13224,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13234,
											"end": 13305,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 13302,
											"end": 13303,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13291,
											"end": 13300,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13287,
											"end": 13304,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13278,
											"end": 13284,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 13234,
											"end": 13305,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 13234,
											"end": 13305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13234,
											"end": 13305,
											"name": "tag",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 13234,
											"end": 13305,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13315,
											"end": 13387,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 13383,
											"end": 13385,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13372,
											"end": 13381,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13368,
											"end": 13386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13359,
											"end": 13365,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 13315,
											"end": 13387,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 13315,
											"end": 13387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13315,
											"end": 13387,
											"name": "tag",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 13315,
											"end": 13387,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13397,
											"end": 13469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 13465,
											"end": 13467,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13454,
											"end": 13463,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13450,
											"end": 13468,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13441,
											"end": 13447,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 13397,
											"end": 13469,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 13397,
											"end": 13469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13397,
											"end": 13469,
											"name": "tag",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 13397,
											"end": 13469,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13034,
											"end": 13476,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 13034,
											"end": 13476,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 13034,
											"end": 13476,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13034,
											"end": 13476,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13034,
											"end": 13476,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13034,
											"end": 13476,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13034,
											"end": 13476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13482,
											"end": 13663,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 13482,
											"end": 13663,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13622,
											"end": 13655,
											"name": "PUSH",
											"source": 8,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 13618,
											"end": 13619,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13610,
											"end": 13616,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13606,
											"end": 13620,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13599,
											"end": 13656,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13482,
											"end": 13663,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13482,
											"end": 13663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13669,
											"end": 14035,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 13669,
											"end": 14035,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13811,
											"end": 13814,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13832,
											"end": 13899,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 13896,
											"end": 13898,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 13891,
											"end": 13894,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13832,
											"end": 13899,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 13832,
											"end": 13899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13832,
											"end": 13899,
											"name": "tag",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 13832,
											"end": 13899,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13825,
											"end": 13899,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13825,
											"end": 13899,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13908,
											"end": 14001,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 13997,
											"end": 14000,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13908,
											"end": 14001,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 13908,
											"end": 14001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13908,
											"end": 14001,
											"name": "tag",
											"source": 8,
											"value": "407"
										},
										{
											"begin": 13908,
											"end": 14001,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14026,
											"end": 14028,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14021,
											"end": 14024,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14017,
											"end": 14029,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14010,
											"end": 14029,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14010,
											"end": 14029,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13669,
											"end": 14035,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13669,
											"end": 14035,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13669,
											"end": 14035,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13669,
											"end": 14035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14041,
											"end": 14460,
											"name": "tag",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 14041,
											"end": 14460,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14207,
											"end": 14211,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14245,
											"end": 14247,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14234,
											"end": 14243,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14230,
											"end": 14248,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14222,
											"end": 14248,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14222,
											"end": 14248,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14294,
											"end": 14303,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14288,
											"end": 14292,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14284,
											"end": 14304,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14280,
											"end": 14281,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14269,
											"end": 14278,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14265,
											"end": 14282,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14258,
											"end": 14305,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14322,
											"end": 14453,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 14448,
											"end": 14452,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14322,
											"end": 14453,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 14322,
											"end": 14453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14322,
											"end": 14453,
											"name": "tag",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 14322,
											"end": 14453,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14314,
											"end": 14453,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14314,
											"end": 14453,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14041,
											"end": 14460,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14041,
											"end": 14460,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14041,
											"end": 14460,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14041,
											"end": 14460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"D/decentralizedStableCoin.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"authorizeMinter(address)": "0c984832",
							"authorizedMinters(address)": "aa2fe91b",
							"balanceOf(address)": "70a08231",
							"burn(address,uint256)": "9dc29fac",
							"decimals()": "313ce567",
							"maxSupply()": "d5abeb01",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"revokeMinter(address)": "cfbd4885",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"updateMaxSupply(uint256)": "f103b433"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMaxSupply\",\"type\":\"uint256\"}],\"name\":\"MaxSupplyUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAuthorized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"authorizeMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorizedMinters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxSupply\",\"type\":\"uint256\"}],\"name\":\"updateMaxSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"authorizeMinter(address)\":{\"params\":{\"account\":\"The address to authorize.\"}},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(address,uint256)\":{\"params\":{\"amount\":\"The token amount to burn (in smallest units).\",\"from\":\"The address from which tokens will be burned.\"}},\"constructor\":{\"params\":{\"_maxSupply\":\"The maximum token supply (must be at least initialSupply).\",\"initialSupply\":\"The initial token supply (in smallest units).\",\"name_\":\"The name of the token.\",\"symbol_\":\"The symbol of the token.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"mint(address,uint256)\":{\"params\":{\"amount\":\"The token amount to mint (in smallest units).\",\"to\":\"The recipient address.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"revokeMinter(address)\":{\"params\":{\"account\":\"The address to revoke.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateMaxSupply(uint256)\":{\"params\":{\"newMaxSupply\":\"The new maximum supply (must be >= current total supply).\"}}},\"title\":\"DecentralizedStableCoin\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"authorizeMinter(address)\":{\"notice\":\"Authorizes an account to mint and burn tokens.\"},\"burn(address,uint256)\":{\"notice\":\"Burns stable coins from a specified address. Only the owner or an authorized minter can burn tokens.\"},\"constructor\":{\"notice\":\"Constructor initializes the stable coin with a name, symbol, initial supply, and maximum supply.\"},\"mint(address,uint256)\":{\"notice\":\"Mints new stable coins to a specified address. Only the owner or an authorized minter can mint tokens.\"},\"revokeMinter(address)\":{\"notice\":\"Revokes minting/burning authorization for an account.\"},\"updateMaxSupply(uint256)\":{\"notice\":\"Updates the maximum supply of tokens.\"}},\"notice\":\"A dynamic, optimized, and secure ERC20 stable coin contract. Minting and burning are restricted to the owner or authorized minters. The owner can also update the maximum supply dynamically.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"D/decentralizedStableCoin.sol\":\"DecentralizedStableCoin\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"D/decentralizedStableCoin.sol\":{\"keccak256\":\"0x4dc6cce428cf82a884199e8d0a98ab177964976fab50dd1c93fc768e65fa1b83\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f20d3f42b8a854e38eafeb2aa3f926f4f427c3bbf82aff46185e6536216549d9\",\"dweb:/ipfs/QmZZuoZcBdtmzBUASoHWY5LhbyExW5yZLBejwcf1mkZ89Q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 372,
								"contract": "D/decentralizedStableCoin.sol:DecentralizedStableCoin",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 378,
								"contract": "D/decentralizedStableCoin.sol:DecentralizedStableCoin",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 380,
								"contract": "D/decentralizedStableCoin.sol:DecentralizedStableCoin",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 382,
								"contract": "D/decentralizedStableCoin.sol:DecentralizedStableCoin",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 384,
								"contract": "D/decentralizedStableCoin.sol:DecentralizedStableCoin",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "D/decentralizedStableCoin.sol:DecentralizedStableCoin",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 295,
								"contract": "D/decentralizedStableCoin.sol:DecentralizedStableCoin",
								"label": "_status",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1014,
								"contract": "D/decentralizedStableCoin.sol:DecentralizedStableCoin",
								"label": "authorizedMinters",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1016,
								"contract": "D/decentralizedStableCoin.sol:DecentralizedStableCoin",
								"label": "maxSupply",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"authorizeMinter(address)": {
								"notice": "Authorizes an account to mint and burn tokens."
							},
							"burn(address,uint256)": {
								"notice": "Burns stable coins from a specified address. Only the owner or an authorized minter can burn tokens."
							},
							"constructor": {
								"notice": "Constructor initializes the stable coin with a name, symbol, initial supply, and maximum supply."
							},
							"mint(address,uint256)": {
								"notice": "Mints new stable coins to a specified address. Only the owner or an authorized minter can mint tokens."
							},
							"revokeMinter(address)": {
								"notice": "Revokes minting/burning authorization for an account."
							},
							"updateMaxSupply(uint256)": {
								"notice": "Updates the maximum supply of tokens."
							}
						},
						"notice": "A dynamic, optimized, and secure ERC20 stable coin contract. Minting and burning are restricted to the owner or authorized minters. The owner can also update the maximum supply dynamically.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							998
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 999,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 998,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 998,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								998
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 980,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							349
						]
					},
					"id": 350,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 287,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 349,
							"linearizedBaseContracts": [
								349
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 290,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1676:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 288,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 289,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 293,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1723:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 291,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 292,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 295,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 349,
									"src": "1767:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 294,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 302,
										"nodeType": "Block",
										"src": "1811:39:2",
										"statements": [
											{
												"expression": {
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 298,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "1821:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 299,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "1831:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 301,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:2"
											}
										]
									},
									"id": 303,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:2"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:2"
									},
									"scope": 349,
									"src": "1797:53:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "2251:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 306,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "2261:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:2"
											},
											{
												"id": 309,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "2303:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:2"
											}
										]
									},
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 314,
									"name": "nonReentrant",
									"nameLocation": "2236:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:2"
									},
									"src": "2227:103:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "2375:248:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 318,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 295,
																"src": "2468:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 319,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 293,
																"src": "2479:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 317,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:2"
											},
											{
												"expression": {
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 324,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2598:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 325,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "2608:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 327,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:2"
											}
										]
									},
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:2"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:2"
									},
									"scope": 349,
									"src": "2336:287:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "2667:171:2",
										"statements": [
											{
												"expression": {
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 332,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2809:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 333,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2819:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 335,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:2"
											}
										]
									},
									"id": 337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:2"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:2"
									},
									"scope": 349,
									"src": "2629:209:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "3081:43:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 343,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "3098:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 344,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "3109:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 342,
												"id": 346,
												"nodeType": "Return",
												"src": "3091:26:2"
											}
										]
									},
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:2",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:2"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "3075:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 340,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:2"
									},
									"scope": 349,
									"src": "3017:107:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 350,
							"src": "888:2238:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							998
						],
						"ERC20": [
							864
						],
						"IERC20": [
							942
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							968
						]
					},
					"id": 865,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 351,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 353,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 943,
							"src": "131:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 352,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 942,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 355,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 969,
							"src": "168:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 354,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 968,
										"src": "176:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 357,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 999,
							"src": "232:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 356,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 998,
										"src": "240:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 359,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 865,
							"sourceUnit": 285,
							"src": "281:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 358,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 361,
										"name": "Context",
										"nameLocations": [
											"1133:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 998,
										"src": "1133:7:3"
									},
									"id": 362,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:3"
								},
								{
									"baseName": {
										"id": 363,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 942,
										"src": "1142:6:3"
									},
									"id": 364,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:3"
								},
								{
									"baseName": {
										"id": 365,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 968,
										"src": "1150:14:3"
									},
									"id": 366,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:3"
								},
								{
									"baseName": {
										"id": 367,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:3"
									},
									"id": 368,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 360,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 864,
							"linearizedBaseContracts": [
								864,
								189,
								968,
								942,
								998
							],
							"name": "ERC20",
							"nameLocation": "1124:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 372,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1185:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 371,
										"keyName": "account",
										"keyNameLocation": "1201:7:3",
										"keyType": {
											"id": 369,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 370,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 378,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1245:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 377,
										"keyName": "account",
										"keyNameLocation": "1261:7:3",
										"keyType": {
											"id": 373,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 376,
											"keyName": "spender",
											"keyNameLocation": "1288:7:3",
											"keyType": {
												"id": 374,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 375,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 380,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1335:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 379,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 382,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1370:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 381,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 384,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 864,
									"src": "1396:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 383,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 400,
										"nodeType": "Block",
										"src": "1657:57:3",
										"statements": [
											{
												"expression": {
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 392,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 382,
														"src": "1667:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 393,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "1675:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:3"
											},
											{
												"expression": {
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 396,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "1690:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 397,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "1700:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:3"
											}
										]
									},
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 401,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1613:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 386,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1634:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 388,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:3"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:3"
									},
									"scope": 864,
									"src": "1601:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										955
									],
									"body": {
										"id": 409,
										"nodeType": "Block",
										"src": "1839:29:3",
										"statements": [
											{
												"expression": {
													"id": 407,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 382,
													"src": "1856:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 406,
												"id": 408,
												"nodeType": "Return",
												"src": "1849:12:3"
											}
										]
									},
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:3"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 410,
												"src": "1824:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 404,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:3"
									},
									"scope": 864,
									"src": "1779:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										961
									],
									"body": {
										"id": 418,
										"nodeType": "Block",
										"src": "2043:31:3",
										"statements": [
											{
												"expression": {
													"id": 416,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 384,
													"src": "2060:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 415,
												"id": 417,
												"nodeType": "Return",
												"src": "2053:14:3"
											}
										]
									},
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:3"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "2028:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 413,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:3"
									},
									"scope": 864,
									"src": "1981:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										967
									],
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "2763:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 424,
												"id": 426,
												"nodeType": "Return",
												"src": "2773:9:3"
											}
										]
									},
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:3"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "2756:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 422,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:3"
									},
									"scope": 864,
									"src": "2707:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										891
									],
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "2910:36:3",
										"statements": [
											{
												"expression": {
													"id": 434,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 380,
													"src": "2927:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 433,
												"id": 435,
												"nodeType": "Return",
												"src": "2920:19:3"
											}
										]
									},
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:3"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "2901:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:3"
									},
									"scope": 864,
									"src": "2849:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										899
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "3078:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 445,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "3095:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 447,
													"indexExpression": {
														"id": 446,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "3105:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 444,
												"id": 448,
												"nodeType": "Return",
												"src": "3088:25:3"
											}
										]
									},
									"documentation": {
										"id": 438,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3023:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:3"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3069:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:3"
									},
									"scope": 864,
									"src": "3004:116:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										909
									],
									"body": {
										"id": 473,
										"nodeType": "Block",
										"src": "3390:103:3",
										"statements": [
											{
												"assignments": [
													461
												],
												"declarations": [
													{
														"constant": false,
														"id": 461,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 473,
														"src": "3400:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 460,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 464,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 462,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "3416:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 466,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "3448:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 467,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "3455:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 468,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "3459:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 465,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "3438:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 459,
												"id": 472,
												"nodeType": "Return",
												"src": "3475:11:3"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "3333:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "3345:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:3"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "3384:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 457,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:3"
									},
									"scope": 864,
									"src": "3315:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										919
									],
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "3640:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 484,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "3657:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 486,
														"indexExpression": {
															"id": 485,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "3669:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 488,
													"indexExpression": {
														"id": 487,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "3676:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 483,
												"id": 489,
												"nodeType": "Return",
												"src": "3650:34:3"
											}
										]
									},
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3570:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3585:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:3"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3631:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:3"
									},
									"scope": 864,
									"src": "3551:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										929
									],
									"body": {
										"id": 514,
										"nodeType": "Block",
										"src": "4077:107:3",
										"statements": [
											{
												"assignments": [
													502
												],
												"declarations": [
													{
														"constant": false,
														"id": 502,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 514,
														"src": "4087:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 501,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 505,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 503,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "4103:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 507,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "4134:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 508,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "4141:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 509,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "4150:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 506,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															755,
															815
														],
														"referencedDeclaration": 755,
														"src": "4125:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 500,
												"id": 513,
												"nodeType": "Return",
												"src": "4166:11:3"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4015:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4032:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:3"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "4071:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 498,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:3"
									},
									"scope": 864,
									"src": "3998:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										941
									],
									"body": {
										"id": 546,
										"nodeType": "Block",
										"src": "4869:151:3",
										"statements": [
											{
												"assignments": [
													528
												],
												"declarations": [
													{
														"constant": false,
														"id": 528,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 546,
														"src": "4879:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 527,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 531,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 529,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "4897:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 533,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "4935:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 534,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "4941:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 535,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "4950:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 532,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "4919:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 537,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 539,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "4976:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 540,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "4982:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 541,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "4986:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 538,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "4966:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 526,
												"id": 545,
												"nodeType": "Return",
												"src": "5002:11:3"
											}
										]
									},
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:3",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4798:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4812:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4824:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:3"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4863:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 524,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:3"
									},
									"scope": 864,
									"src": "4776:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "5462:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 557,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "5476:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 558,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 571,
												"nodeType": "IfStatement",
												"src": "5472:86:3",
												"trueBody": {
													"id": 570,
													"nodeType": "Block",
													"src": "5496:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 566,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 565,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 564,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 563,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5517:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 569,
															"nodeType": "RevertStatement",
															"src": "5510:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 572,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "5571:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 573,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 576,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 586,
												"nodeType": "IfStatement",
												"src": "5567:86:3",
												"trueBody": {
													"id": 585,
													"nodeType": "Block",
													"src": "5589:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 581,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 580,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 579,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 578,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5610:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 584,
															"nodeType": "RevertStatement",
															"src": "5603:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 588,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "5670:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 589,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "5676:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 590,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "5680:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 587,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "5662:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 592,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:3"
											}
										]
									},
									"documentation": {
										"id": 548,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "5412:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "5426:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "5438:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:3"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:3"
									},
									"scope": 864,
									"src": "5393:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "6083:1032:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 604,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "6097:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 605,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 608,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 641,
													"nodeType": "Block",
													"src": "6271:362:3",
													"statements": [
														{
															"assignments": [
																616
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 616,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 641,
																	"src": "6285:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 615,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 620,
															"initialValue": {
																"baseExpression": {
																	"id": 617,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 372,
																	"src": "6307:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 619,
																"indexExpression": {
																	"id": 618,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 597,
																	"src": "6317:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 621,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 616,
																	"src": "6340:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 622,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "6354:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 631,
															"nodeType": "IfStatement",
															"src": "6336:115:3",
															"trueBody": {
																"id": 630,
																"nodeType": "Block",
																"src": "6361:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 625,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 597,
																					"src": "6411:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 626,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 616,
																					"src": "6417:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 627,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 601,
																					"src": "6430:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 624,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6386:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 629,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:3"
																	}
																]
															}
														},
														{
															"id": 640,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:3",
															"statements": [
																{
																	"expression": {
																		"id": 638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 632,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 372,
																				"src": "6571:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 634,
																			"indexExpression": {
																				"id": 633,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 597,
																				"src": "6581:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 635,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 616,
																				"src": "6589:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 636,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 601,
																				"src": "6603:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 639,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:3"
																}
															]
														}
													]
												},
												"id": 642,
												"nodeType": "IfStatement",
												"src": "6093:540:3",
												"trueBody": {
													"id": 614,
													"nodeType": "Block",
													"src": "6117:148:3",
													"statements": [
														{
															"expression": {
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 610,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 380,
																	"src": "6233:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 611,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "6249:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 613,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 643,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "6647:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 644,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 647,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 662,
													"nodeType": "Block",
													"src": "6862:206:3",
													"statements": [
														{
															"id": 661,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:3",
															"statements": [
																{
																	"expression": {
																		"id": 659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 655,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 372,
																				"src": "7021:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 657,
																			"indexExpression": {
																				"id": 656,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 599,
																				"src": "7031:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 658,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 601,
																			"src": "7038:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 660,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:3"
																}
															]
														}
													]
												},
												"id": 663,
												"nodeType": "IfStatement",
												"src": "6643:425:3",
												"trueBody": {
													"id": 654,
													"nodeType": "Block",
													"src": "6665:191:3",
													"statements": [
														{
															"id": 653,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:3",
															"statements": [
																{
																	"expression": {
																		"id": 651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 649,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 380,
																			"src": "6810:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 650,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 601,
																			"src": "6826:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 652,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 665,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "7092:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "7098:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 667,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "7102:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 664,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "7083:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 669,
												"nodeType": "EmitStatement",
												"src": "7078:30:3"
											}
										]
									},
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6025:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6039:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "6051:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:3"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:3"
									},
									"scope": 864,
									"src": "6008:1107:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 703,
										"nodeType": "Block",
										"src": "7514:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 679,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "7528:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 682,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 680,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 683,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 693,
												"nodeType": "IfStatement",
												"src": "7524:91:3",
												"trueBody": {
													"id": 692,
													"nodeType": "Block",
													"src": "7551:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 688,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 686,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 689,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 685,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7572:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 691,
															"nodeType": "RevertStatement",
															"src": "7565:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 695,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 699,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "7644:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 700,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "7653:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 694,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "7624:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 702,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:3"
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "7473:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "7490:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:3"
									},
									"returnParameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:3"
									},
									"scope": 864,
									"src": "7458:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "8040:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 712,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "8054:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 715,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 713,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 716,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 726,
												"nodeType": "IfStatement",
												"src": "8050:89:3",
												"trueBody": {
													"id": 725,
													"nodeType": "Block",
													"src": "8077:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 721,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 720,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 719,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 722,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 718,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8098:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 724,
															"nodeType": "RevertStatement",
															"src": "8091:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 728,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "8156:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 730,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 729,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 733,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "8177:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 727,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "8148:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 735,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:3"
											}
										]
									},
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "7999:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "8016:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:3"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:3"
									},
									"scope": 864,
									"src": "7984:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 754,
										"nodeType": "Block",
										"src": "8800:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 748,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "8819:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 749,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "8826:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 750,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "8835:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 747,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															755,
															815
														],
														"referencedDeclaration": 815,
														"src": "8810:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 753,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:3"
											}
										]
									},
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "8744:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "8759:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "8776:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:3"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:3"
									},
									"scope": 864,
									"src": "8726:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "9799:334:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "9813:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 768,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 771,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 781,
												"nodeType": "IfStatement",
												"src": "9809:89:3",
												"trueBody": {
													"id": 780,
													"nodeType": "Block",
													"src": "9834:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 776,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 775,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 774,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 773,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9855:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 779,
															"nodeType": "RevertStatement",
															"src": "9848:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 782,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "9911:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 783,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 786,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "9907:90:3",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "9934:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 790,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 789,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 788,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9955:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 794,
															"nodeType": "RevertStatement",
															"src": "9948:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 797,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 378,
																"src": "10006:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 800,
															"indexExpression": {
																"id": 798,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 758,
																"src": "10018:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 801,
														"indexExpression": {
															"id": 799,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "10025:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 802,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "10036:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 804,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:3"
											},
											{
												"condition": {
													"id": 805,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 764,
													"src": "10055:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 813,
												"nodeType": "IfStatement",
												"src": "10051:76:3",
												"trueBody": {
													"id": 812,
													"nodeType": "Block",
													"src": "10066:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 807,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 758,
																		"src": "10094:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 808,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 760,
																		"src": "10101:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 809,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 762,
																		"src": "10110:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 806,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 885,
																	"src": "10085:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 811,
															"nodeType": "EmitStatement",
															"src": "10080:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 756,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9719:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9734:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9751:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "9766:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 763,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:3"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:3"
									},
									"scope": 864,
									"src": "9701:432:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 862,
										"nodeType": "Block",
										"src": "10504:387:3",
										"statements": [
											{
												"assignments": [
													826
												],
												"declarations": [
													{
														"constant": false,
														"id": 826,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 862,
														"src": "10514:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 825,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 831,
												"initialValue": {
													"arguments": [
														{
															"id": 828,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "10551:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 829,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "10558:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 827,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "10541:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 832,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "10580:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 834,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 833,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 837,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 861,
												"nodeType": "IfStatement",
												"src": "10576:309:3",
												"trueBody": {
													"id": 860,
													"nodeType": "Block",
													"src": "10618:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 839,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 826,
																	"src": "10636:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 840,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 822,
																	"src": "10655:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 849,
															"nodeType": "IfStatement",
															"src": "10632:130:3",
															"trueBody": {
																"id": 848,
																"nodeType": "Block",
																"src": "10662:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 843,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 820,
																					"src": "10714:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 844,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 826,
																					"src": "10723:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 845,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 822,
																					"src": "10741:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 842,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10687:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 846,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 847,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:3"
																	}
																]
															}
														},
														{
															"id": 859,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 851,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 818,
																				"src": "10812:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 852,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 820,
																				"src": "10819:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 855,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 853,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 826,
																					"src": "10828:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 854,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 822,
																					"src": "10847:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 856,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 850,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				755,
																				815
																			],
																			"referencedDeclaration": 815,
																			"src": "10803:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 858,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 816,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:3",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "10440:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "10455:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "10472:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:3"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:3"
									},
									"scope": 864,
									"src": "10415:476:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 865,
							"src": "1106:9787:3",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "105:10789:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							942
						]
					},
					"id": 943,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 866,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 867,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 942,
							"linearizedBaseContracts": [
								942
							],
							"name": "IERC20",
							"nameLocation": "214:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 868,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 876,
									"name": "Transfer",
									"nameLocation": "396:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "405:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "427:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "447:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:4"
									},
									"src": "390:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 885,
									"name": "Approval",
									"nameLocation": "627:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "636:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "659:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:4"
									},
									"src": "621:78:4"
								},
								{
									"documentation": {
										"id": 886,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 891,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:4"
									},
									"returnParameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "821:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:4"
									},
									"scope": 942,
									"src": "775:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 892,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 899,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 942,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 900,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 909,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1222:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:4"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "1267:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 906,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:4"
									},
									"scope": 942,
									"src": "1204:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 910,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 919,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1567:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1582:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:4"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1622:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:4"
									},
									"scope": 942,
									"src": "1548:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 920,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 929,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "2326:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "2343:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:4"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "2376:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 926,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:4"
									},
									"scope": 942,
									"src": "2309:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 930,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 941,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2712:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 931,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2726:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2738:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:4"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "2771:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 938,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:4"
									},
									"scope": 942,
									"src": "2690:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 943,
							"src": "204:2575:4",
							"usedErrors": [],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "106:2674:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							942
						],
						"IERC20Metadata": [
							968
						]
					},
					"id": 969,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 944,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 946,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 969,
							"sourceUnit": 943,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 945,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 942,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 948,
										"name": "IERC20",
										"nameLocations": [
											"306:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 942,
										"src": "306:6:5"
									},
									"id": 949,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 947,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:5",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 968,
							"linearizedBaseContracts": [
								968,
								942
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 950,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 955,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:5"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "417:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 952,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:5"
									},
									"scope": 968,
									"src": "378:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 961,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:5"
									},
									"returnParameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "540:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 958,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:5"
									},
									"scope": 968,
									"src": "499:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 962,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 967,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:5"
									},
									"returnParameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 967,
												"src": "674:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 964,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:5"
									},
									"scope": 968,
									"src": "631:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 969,
							"src": "278:405:5",
							"usedErrors": [],
							"usedEvents": [
								876,
								885
							]
						}
					],
					"src": "125:559:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							998
						]
					},
					"id": 999,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 970,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 971,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 998,
							"linearizedBaseContracts": [
								998
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 979,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 976,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 975,
												"id": 978,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 998,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 988,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 985,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 984,
												"id": 987,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 989,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 982,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 998,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 996,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 993,
												"id": 995,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 998,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 999,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"D/decentralizedStableCoin.sol": {
				"ast": {
					"absolutePath": "D/decentralizedStableCoin.sol",
					"exportedSymbols": {
						"Context": [
							998
						],
						"DecentralizedStableCoin": [
							1217
						],
						"ERC20": [
							864
						],
						"IERC20": [
							942
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							968
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							349
						]
					},
					"id": 1218,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1000,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1001,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1218,
							"sourceUnit": 865,
							"src": "58:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1002,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1218,
							"sourceUnit": 148,
							"src": "114:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1003,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1218,
							"sourceUnit": 350,
							"src": "167:62:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1005,
										"name": "ERC20",
										"nameLocations": [
											"512:5:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 864,
										"src": "512:5:7"
									},
									"id": 1006,
									"nodeType": "InheritanceSpecifier",
									"src": "512:5:7"
								},
								{
									"baseName": {
										"id": 1007,
										"name": "Ownable",
										"nameLocations": [
											"519:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "519:7:7"
									},
									"id": 1008,
									"nodeType": "InheritanceSpecifier",
									"src": "519:7:7"
								},
								{
									"baseName": {
										"id": 1009,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"528:15:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 349,
										"src": "528:15:7"
									},
									"id": 1010,
									"nodeType": "InheritanceSpecifier",
									"src": "528:15:7"
								}
							],
							"canonicalName": "DecentralizedStableCoin",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1004,
								"nodeType": "StructuredDocumentation",
								"src": "231:245:7",
								"text": "@title DecentralizedStableCoin\n @notice A dynamic, optimized, and secure ERC20 stable coin contract.\n Minting and burning are restricted to the owner or authorized minters.\n The owner can also update the maximum supply dynamically."
							},
							"fullyImplemented": true,
							"id": 1217,
							"linearizedBaseContracts": [
								1217,
								349,
								147,
								864,
								189,
								968,
								942,
								998
							],
							"name": "DecentralizedStableCoin",
							"nameLocation": "485:23:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "aa2fe91b",
									"id": 1014,
									"mutability": "mutable",
									"name": "authorizedMinters",
									"nameLocation": "652:17:7",
									"nodeType": "VariableDeclaration",
									"scope": 1217,
									"src": "620:49:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1013,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1011,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "628:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "620:24:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1012,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "639:4:7",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d5abeb01",
									"id": 1016,
									"mutability": "mutable",
									"name": "maxSupply",
									"nameLocation": "724:9:7",
									"nodeType": "VariableDeclaration",
									"scope": 1217,
									"src": "709:24:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1015,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "709:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "83b05b6735acd4b85e3bded8e72c851d1a87718f81e3c8e6f0c9d9a2baa88e46",
									"id": 1020,
									"name": "MinterAuthorized",
									"nameLocation": "760:16:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "793:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "777:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1017,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:25:7"
									},
									"src": "754:48:7"
								},
								{
									"anonymous": false,
									"eventSelector": "44f4322f8daa225d5f4877ad0f7d3dfba248a774396f3ca99405ed40a044fe81",
									"id": 1024,
									"name": "MinterRevoked",
									"nameLocation": "813:13:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "843:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "827:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "827:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "826:25:7"
									},
									"src": "807:45:7"
								},
								{
									"anonymous": false,
									"eventSelector": "7810bd47de260c3e9ee10061cf438099dd12256c79485f12f94dbccc981e806c",
									"id": 1028,
									"name": "MaxSupplyUpdated",
									"nameLocation": "863:16:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"indexed": false,
												"mutability": "mutable",
												"name": "newMaxSupply",
												"nameLocation": "888:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "880:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "880:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "879:22:7"
									},
									"src": "857:45:7"
								},
								{
									"body": {
										"id": 1065,
										"nodeType": "Block",
										"src": "1452:167:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1049,
																"name": "_maxSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1037,
																"src": "1470:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1050,
																"name": "initialSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1035,
																"src": "1484:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1470:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d617820737570706c79206d757374206265203e3d20696e697469616c20737570706c79",
															"id": 1052,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1499:38:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dd2cc46d89b7e80556543904a4da36625fe95b49f98b73acbd5ea91d7a0f099b",
																"typeString": "literal_string \"Max supply must be >= initial supply\""
															},
															"value": "Max supply must be >= initial supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dd2cc46d89b7e80556543904a4da36625fe95b49f98b73acbd5ea91d7a0f099b",
																"typeString": "literal_string \"Max supply must be >= initial supply\""
															}
														],
														"id": 1048,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1462:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1462:76:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1054,
												"nodeType": "ExpressionStatement",
												"src": "1462:76:7"
											},
											{
												"expression": {
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1055,
														"name": "maxSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1016,
														"src": "1548:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1056,
														"name": "_maxSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1037,
														"src": "1560:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1548:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1058,
												"nodeType": "ExpressionStatement",
												"src": "1548:22:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1060,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1586:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1061,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1590:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1586:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1062,
															"name": "initialSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "1598:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1059,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "1580:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1580:32:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1064,
												"nodeType": "ExpressionStatement",
												"src": "1580:32:7"
											}
										]
									},
									"documentation": {
										"id": 1029,
										"nodeType": "StructuredDocumentation",
										"src": "908:360:7",
										"text": "@notice Constructor initializes the stable coin with a name, symbol, initial supply, and maximum supply.\n @param name_ The name of the token.\n @param symbol_ The symbol of the token.\n @param initialSupply The initial token supply (in smallest units).\n @param _maxSupply The maximum token supply (must be at least initialSupply)."
									},
									"id": 1066,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1040,
													"name": "name_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1031,
													"src": "1416:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 1041,
													"name": "symbol_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1033,
													"src": "1423:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 1042,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1039,
												"name": "ERC20",
												"nameLocations": [
													"1410:5:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 864,
												"src": "1410:5:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1410:21:7"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1044,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1440:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1444:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1440:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1046,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1043,
												"name": "Ownable",
												"nameLocations": [
													"1432:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1432:7:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1432:19:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1308:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "1294:19:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1030,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1294:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1337:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "1323:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1032,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1323:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "1362:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "1354:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1354:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "_maxSupply",
												"nameLocation": "1393:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "1385:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1385:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1284:125:7"
									},
									"returnParameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1452:0:7"
									},
									"scope": 1217,
									"src": "1273:346:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1094,
										"nodeType": "Block",
										"src": "1798:149:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1075,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1069,
																"src": "1816:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1078,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1835:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1077,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1827:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1076,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1827:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1079,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1827:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1816:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642061646472657373",
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1839:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															},
															"value": "Invalid address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															}
														],
														"id": 1074,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1808:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1808:49:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1083,
												"nodeType": "ExpressionStatement",
												"src": "1808:49:7"
											},
											{
												"expression": {
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1084,
															"name": "authorizedMinters",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "1867:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1086,
														"indexExpression": {
															"id": 1085,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "1885:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1867:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1087,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1896:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1867:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1089,
												"nodeType": "ExpressionStatement",
												"src": "1867:33:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1091,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "1932:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1090,
														"name": "MinterAuthorized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1020,
														"src": "1915:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1915:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1093,
												"nodeType": "EmitStatement",
												"src": "1910:30:7"
											}
										]
									},
									"documentation": {
										"id": 1067,
										"nodeType": "StructuredDocumentation",
										"src": "1625:107:7",
										"text": "@notice Authorizes an account to mint and burn tokens.\n @param account The address to authorize."
									},
									"functionSelector": "0c984832",
									"id": 1095,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1072,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1071,
												"name": "onlyOwner",
												"nameLocations": [
													"1788:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1788:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1788:9:7"
										}
									],
									"name": "authorizeMinter",
									"nameLocation": "1746:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1770:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "1762:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1762:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1761:17:7"
									},
									"returnParameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1798:0:7"
									},
									"scope": 1217,
									"src": "1737:210:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1120,
										"nodeType": "Block",
										"src": "2127:159:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1104,
																"name": "authorizedMinters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1014,
																"src": "2145:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1106,
															"indexExpression": {
																"id": 1105,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1098,
																"src": "2163:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2145:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41646472657373206e6f7420617574686f72697a6564",
															"id": 1107,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2173:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ad374ded824b798cdc9deee0988a6fca0aedb782bc5a3214c075a7763e678f0d",
																"typeString": "literal_string \"Address not authorized\""
															},
															"value": "Address not authorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ad374ded824b798cdc9deee0988a6fca0aedb782bc5a3214c075a7763e678f0d",
																"typeString": "literal_string \"Address not authorized\""
															}
														],
														"id": 1103,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2137:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2137:61:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1109,
												"nodeType": "ExpressionStatement",
												"src": "2137:61:7"
											},
											{
												"expression": {
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1110,
															"name": "authorizedMinters",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "2208:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1112,
														"indexExpression": {
															"id": 1111,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1098,
															"src": "2226:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2208:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1113,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2237:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2208:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1115,
												"nodeType": "ExpressionStatement",
												"src": "2208:34:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1117,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1098,
															"src": "2271:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1116,
														"name": "MinterRevoked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1024,
														"src": "2257:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2257:22:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1119,
												"nodeType": "EmitStatement",
												"src": "2252:27:7"
											}
										]
									},
									"documentation": {
										"id": 1096,
										"nodeType": "StructuredDocumentation",
										"src": "1953:111:7",
										"text": "@notice Revokes minting/burning authorization for an account.\n @param account The address to revoke."
									},
									"functionSelector": "cfbd4885",
									"id": 1121,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1101,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1100,
												"name": "onlyOwner",
												"nameLocations": [
													"2117:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2117:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2117:9:7"
										}
									],
									"name": "revokeMinter",
									"nameLocation": "2078:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2099:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "2091:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2091:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2090:17:7"
									},
									"returnParameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2127:0:7"
									},
									"scope": 1217,
									"src": "2069:217:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1160,
										"nodeType": "Block",
										"src": "2592:209:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1132,
																	"name": "authorizedMinters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1014,
																	"src": "2610:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1135,
																"indexExpression": {
																	"expression": {
																		"id": 1133,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2628:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1134,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2632:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2628:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2610:29:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1140,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1136,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2643:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2647:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2643:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1138,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 67,
																		"src": "2657:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2657:7:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2643:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2610:54:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420617574686f72697a656420746f206d696e74",
															"id": 1142,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2666:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b",
																"typeString": "literal_string \"Not authorized to mint\""
															},
															"value": "Not authorized to mint"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b",
																"typeString": "literal_string \"Not authorized to mint\""
															}
														],
														"id": 1131,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2602:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2602:89:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1144,
												"nodeType": "ExpressionStatement",
												"src": "2602:89:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1146,
																		"name": "totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "2709:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 1147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2709:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1148,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1126,
																	"src": "2725:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2709:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1150,
																"name": "maxSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1016,
																"src": "2735:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2709:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45786365656473206d617820737570706c79",
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2746:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611",
																"typeString": "literal_string \"Exceeds max supply\""
															},
															"value": "Exceeds max supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_833ac5256bd749e59e09b3d79e65697a9a895b45768ee0e3858ea9958c2aa611",
																"typeString": "literal_string \"Exceeds max supply\""
															}
														],
														"id": 1145,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2701:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2701:66:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1154,
												"nodeType": "ExpressionStatement",
												"src": "2701:66:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1156,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1124,
															"src": "2783:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1157,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1126,
															"src": "2787:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1155,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "2777:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2777:17:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1159,
												"nodeType": "ExpressionStatement",
												"src": "2777:17:7"
											}
										]
									},
									"documentation": {
										"id": 1122,
										"nodeType": "StructuredDocumentation",
										"src": "2292:231:7",
										"text": "@notice Mints new stable coins to a specified address.\n Only the owner or an authorized minter can mint tokens.\n @param to The recipient address.\n @param amount The token amount to mint (in smallest units)."
									},
									"functionSelector": "40c10f19",
									"id": 1161,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1129,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1128,
												"name": "nonReentrant",
												"nameLocations": [
													"2579:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 314,
												"src": "2579:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2579:12:7"
										}
									],
									"name": "mint",
									"nameLocation": "2537:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2550:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "2542:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2542:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2562:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "2554:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2541:28:7"
									},
									"returnParameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2592:0:7"
									},
									"scope": 1217,
									"src": "2528:273:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1190,
										"nodeType": "Block",
										"src": "3132:135:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1172,
																	"name": "authorizedMinters",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1014,
																	"src": "3150:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1175,
																"indexExpression": {
																	"expression": {
																		"id": 1173,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3168:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3172:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3168:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3150:29:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1176,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3183:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3187:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3183:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1178,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 67,
																		"src": "3197:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3197:7:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3183:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3150:54:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420617574686f72697a656420746f206275726e",
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3206:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1c55c28d6e77df84f6ee9e97d5866859c436c1f0b9dd5c76a092ffa91ca40816",
																"typeString": "literal_string \"Not authorized to burn\""
															},
															"value": "Not authorized to burn"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1c55c28d6e77df84f6ee9e97d5866859c436c1f0b9dd5c76a092ffa91ca40816",
																"typeString": "literal_string \"Not authorized to burn\""
															}
														],
														"id": 1171,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3142:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3142:89:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1184,
												"nodeType": "ExpressionStatement",
												"src": "3142:89:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1186,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1164,
															"src": "3247:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1187,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "3253:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1185,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "3241:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3241:19:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1189,
												"nodeType": "ExpressionStatement",
												"src": "3241:19:7"
											}
										]
									},
									"documentation": {
										"id": 1162,
										"nodeType": "StructuredDocumentation",
										"src": "2807:254:7",
										"text": "@notice Burns stable coins from a specified address.\n Only the owner or an authorized minter can burn tokens.\n @param from The address from which tokens will be burned.\n @param amount The token amount to burn (in smallest units)."
									},
									"functionSelector": "9dc29fac",
									"id": 1191,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1169,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1168,
												"name": "nonReentrant",
												"nameLocations": [
													"3119:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 314,
												"src": "3119:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3119:12:7"
										}
									],
									"name": "burn",
									"nameLocation": "3075:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3088:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "3080:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3080:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3102:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "3094:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3094:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3079:30:7"
									},
									"returnParameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3132:0:7"
									},
									"scope": 1217,
									"src": "3066:201:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1215,
										"nodeType": "Block",
										"src": "3479:175:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1200,
																"name": "newMaxSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1194,
																"src": "3497:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1201,
																	"name": "totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "3513:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3513:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3497:29:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6577206d617820737570706c79206c657373207468616e20746f74616c20737570706c79",
															"id": 1204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3528:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9e506c47a9bc4b9f15c3c811bfc88c16276f1a6c914414d94276ae51ced75ede",
																"typeString": "literal_string \"New max supply less than total supply\""
															},
															"value": "New max supply less than total supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9e506c47a9bc4b9f15c3c811bfc88c16276f1a6c914414d94276ae51ced75ede",
																"typeString": "literal_string \"New max supply less than total supply\""
															}
														],
														"id": 1199,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3489:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3489:79:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1206,
												"nodeType": "ExpressionStatement",
												"src": "3489:79:7"
											},
											{
												"expression": {
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1207,
														"name": "maxSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1016,
														"src": "3578:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1208,
														"name": "newMaxSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1194,
														"src": "3590:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3578:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1210,
												"nodeType": "ExpressionStatement",
												"src": "3578:24:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1212,
															"name": "newMaxSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1194,
															"src": "3634:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1211,
														"name": "MaxSupplyUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "3617:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3617:30:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1214,
												"nodeType": "EmitStatement",
												"src": "3612:35:7"
											}
										]
									},
									"documentation": {
										"id": 1192,
										"nodeType": "StructuredDocumentation",
										"src": "3273:135:7",
										"text": "@notice Updates the maximum supply of tokens.\n @param newMaxSupply The new maximum supply (must be >= current total supply)."
									},
									"functionSelector": "f103b433",
									"id": 1216,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1197,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1196,
												"name": "onlyOwner",
												"nameLocations": [
													"3469:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3469:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3469:9:7"
										}
									],
									"name": "updateMaxSupply",
									"nameLocation": "3422:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "newMaxSupply",
												"nameLocation": "3446:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "3438:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3438:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3437:22:7"
									},
									"returnParameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3479:0:7"
									},
									"scope": 1217,
									"src": "3413:241:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1218,
							"src": "476:3180:7",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								876,
								885,
								1020,
								1024,
								1028
							]
						}
					],
					"src": "32:3625:7"
				},
				"id": 7
			}
		}
	}
}