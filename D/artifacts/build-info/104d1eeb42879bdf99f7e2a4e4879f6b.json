{
	"id": "104d1eeb42879bdf99f7e2a4e4879f6b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"D/difficulty.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\n/// @title DifficultyManager\n/// @notice A dynamic and optimized contract that maintains a difficulty parameter\n/// and allows users to submit solutions (like a simplified puzzle or proof-of-work).\n/// The owner can update the difficulty threshold on-the-fly.\ncontract DifficultyManager is Ownable, ReentrancyGuard {\n    /// @notice The difficulty threshold (e.g., a target below which the solution hash must fall).\n    uint256 public difficulty;\n\n    /// @notice Mapping from user address to last solution hash submitted, for demonstration.\n    mapping(address => bytes32) public userSolutions;\n\n    // --- Events ---\n    event DifficultyUpdated(uint256 newDifficulty);\n    event SolutionSubmitted(address indexed user, bytes32 solutionHash, bool success);\n\n    /// @notice Constructor sets the deployer as the initial owner and a starting difficulty.\n    /// @param initialDifficulty The initial difficulty threshold.\n    constructor(uint256 initialDifficulty) Ownable(msg.sender) {\n        require(initialDifficulty > 0, \"Difficulty must be > 0\");\n        difficulty = initialDifficulty;\n    }\n\n    /// @notice Owner can update the difficulty threshold dynamically.\n    /// @param newDifficulty The new difficulty threshold.\n    function updateDifficulty(uint256 newDifficulty) external onlyOwner {\n        require(newDifficulty > 0, \"Difficulty must be > 0\");\n        difficulty = newDifficulty;\n        emit DifficultyUpdated(newDifficulty);\n    }\n\n    /// @notice Submits a “solution” by providing a nonce. A simple hash check demonstrates\n    /// how difficulty might be applied (e.g. if uint256(hash) < difficulty).\n    /// @param nonce Arbitrary user-chosen number or data to “solve” the puzzle.\n    function submitSolution(uint256 nonce) external nonReentrant {\n        // Compute the solution hash from difficulty + user address + nonce, for demonstration.\n        bytes32 solutionHash = keccak256(abi.encodePacked(difficulty, msg.sender, nonce));\n\n        // For demonstration: consider the user “successful” if the solutionHash is below the numeric difficulty.\n        // e.g. if we treat difficulty as a target, then require( uint256(solutionHash) < difficulty).\n        // Here we just do a check to illustrate success/fail.\n        bool success = (uint256(solutionHash) < difficulty);\n\n        userSolutions[msg.sender] = solutionHash;\n\n        emit SolutionSubmitted(msg.sender, solutionHash, success);\n\n        if (!success) {\n            revert(\"Solution fails the difficulty threshold\");\n        }\n        // If success, you could further reward the user here or track successes, etc.\n    }\n\n    /// @notice Returns the last solution hash submitted by a user.\n    /// @param user The address of the user.\n    /// @return The solutionHash last recorded for that user.\n    function getUserSolution(address user) external view returns (bytes32) {\n        return userSolutions[user];\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 158,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"D/difficulty.sol": {
				"DifficultyManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "initialDifficulty",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newDifficulty",
									"type": "uint256"
								}
							],
							"name": "DifficultyUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "solutionHash",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"name": "SolutionSubmitted",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "difficulty",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserSolution",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								}
							],
							"name": "submitSolution",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newDifficulty",
									"type": "uint256"
								}
							],
							"name": "updateDifficulty",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userSolutions",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"params": {
									"initialDifficulty": "The initial difficulty threshold."
								}
							},
							"getUserSolution(address)": {
								"params": {
									"user": "The address of the user."
								},
								"returns": {
									"_0": "The solutionHash last recorded for that user."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"submitSolution(uint256)": {
								"params": {
									"nonce": "Arbitrary user-chosen number or data to “solve” the puzzle."
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"updateDifficulty(uint256)": {
								"params": {
									"newDifficulty": "The new difficulty threshold."
								}
							}
						},
						"title": "DifficultyManager",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"D/difficulty.sol\":435:3094  contract DifficultyManager is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"D/difficulty.sol\":1099:1271  constructor(uint256 initialDifficulty) Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"D/difficulty.sol\":1146:1156  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_8\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_12)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"D/difficulty.sol\":1196:1197  0 */\n  0x00\n    /* \"D/difficulty.sol\":1176:1193  initialDifficulty */\n  dup2\n    /* \"D/difficulty.sol\":1176:1197  initialDifficulty > 0 */\n  gt\n    /* \"D/difficulty.sol\":1168:1224  require(initialDifficulty > 0, \"Difficulty must be > 0\") */\n  tag_15\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_16\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_15:\n    /* \"D/difficulty.sol\":1247:1264  initialDifficulty */\n  dup1\n    /* \"D/difficulty.sol\":1234:1244  difficulty */\n  0x02\n    /* \"D/difficulty.sol\":1234:1264  difficulty = initialDifficulty */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"D/difficulty.sol\":1099:1271  constructor(uint256 initialDifficulty) Ownable(msg.sender) {... */\n  pop\n    /* \"D/difficulty.sol\":435:3094  contract DifficultyManager is Ownable, ReentrancyGuard {... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_21:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_23:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_24:\n    /* \"#utility.yul\":490:514   */\n  tag_38\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_23\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_39\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  dup1\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_39:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_25:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_41\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_24\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:1045   */\ntag_3:\n    /* \"#utility.yul\":764:770   */\n  0x00\n    /* \"#utility.yul\":813:815   */\n  0x20\n    /* \"#utility.yul\":801:810   */\n  dup3\n    /* \"#utility.yul\":792:799   */\n  dup5\n    /* \"#utility.yul\":788:811   */\n  sub\n    /* \"#utility.yul\":784:816   */\n  slt\n    /* \"#utility.yul\":781:900   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":819:898   */\n  tag_44\n  tag_21\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":781:900   */\ntag_43:\n    /* \"#utility.yul\":939:940   */\n  0x00\n    /* \"#utility.yul\":964:1028   */\n  tag_45\n    /* \"#utility.yul\":1020:1027   */\n  dup5\n    /* \"#utility.yul\":1011:1017   */\n  dup3\n    /* \"#utility.yul\":1000:1009   */\n  dup6\n    /* \"#utility.yul\":996:1018   */\n  add\n    /* \"#utility.yul\":964:1028   */\n  tag_25\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":954:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":910:1038   */\n  pop\n    /* \"#utility.yul\":694:1045   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1051:1177   */\ntag_26:\n    /* \"#utility.yul\":1088:1095   */\n  0x00\n    /* \"#utility.yul\":1128:1170   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1121:1126   */\n  dup3\n    /* \"#utility.yul\":1117:1171   */\n  and\n    /* \"#utility.yul\":1106:1171   */\n  swap1\n  pop\n    /* \"#utility.yul\":1051:1177   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1183:1279   */\ntag_27:\n    /* \"#utility.yul\":1220:1227   */\n  0x00\n    /* \"#utility.yul\":1249:1273   */\n  tag_48\n    /* \"#utility.yul\":1267:1272   */\n  dup3\n    /* \"#utility.yul\":1249:1273   */\n  tag_26\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1238:1273   */\n  swap1\n  pop\n    /* \"#utility.yul\":1183:1279   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1285:1403   */\ntag_28:\n    /* \"#utility.yul\":1372:1396   */\n  tag_50\n    /* \"#utility.yul\":1390:1395   */\n  dup2\n    /* \"#utility.yul\":1372:1396   */\n  tag_27\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1367:1370   */\n  dup3\n    /* \"#utility.yul\":1360:1397   */\n  mstore\n    /* \"#utility.yul\":1285:1403   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1409:1631   */\ntag_10:\n    /* \"#utility.yul\":1502:1506   */\n  0x00\n    /* \"#utility.yul\":1540:1542   */\n  0x20\n    /* \"#utility.yul\":1529:1538   */\n  dup3\n    /* \"#utility.yul\":1525:1543   */\n  add\n    /* \"#utility.yul\":1517:1543   */\n  swap1\n  pop\n    /* \"#utility.yul\":1553:1624   */\n  tag_52\n    /* \"#utility.yul\":1621:1622   */\n  0x00\n    /* \"#utility.yul\":1610:1619   */\n  dup4\n    /* \"#utility.yul\":1606:1623   */\n  add\n    /* \"#utility.yul\":1597:1603   */\n  dup5\n    /* \"#utility.yul\":1553:1624   */\n  tag_28\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1409:1631   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1637:1806   */\ntag_29:\n    /* \"#utility.yul\":1721:1732   */\n  0x00\n    /* \"#utility.yul\":1755:1761   */\n  dup3\n    /* \"#utility.yul\":1750:1753   */\n  dup3\n    /* \"#utility.yul\":1743:1762   */\n  mstore\n    /* \"#utility.yul\":1795:1799   */\n  0x20\n    /* \"#utility.yul\":1790:1793   */\n  dup3\n    /* \"#utility.yul\":1786:1800   */\n  add\n    /* \"#utility.yul\":1771:1800   */\n  swap1\n  pop\n    /* \"#utility.yul\":1637:1806   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1812:1984   */\ntag_30:\n    /* \"#utility.yul\":1952:1976   */\n  0x446966666963756c7479206d757374206265203e203000000000000000000000\n    /* \"#utility.yul\":1948:1949   */\n  0x00\n    /* \"#utility.yul\":1940:1946   */\n  dup3\n    /* \"#utility.yul\":1936:1950   */\n  add\n    /* \"#utility.yul\":1929:1977   */\n  mstore\n    /* \"#utility.yul\":1812:1984   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1990:2356   */\ntag_31:\n    /* \"#utility.yul\":2132:2135   */\n  0x00\n    /* \"#utility.yul\":2153:2220   */\n  tag_56\n    /* \"#utility.yul\":2217:2219   */\n  0x16\n    /* \"#utility.yul\":2212:2215   */\n  dup4\n    /* \"#utility.yul\":2153:2220   */\n  tag_29\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":2146:2220   */\n  swap2\n  pop\n    /* \"#utility.yul\":2229:2322   */\n  tag_57\n    /* \"#utility.yul\":2318:2321   */\n  dup3\n    /* \"#utility.yul\":2229:2322   */\n  tag_30\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":2347:2349   */\n  0x20\n    /* \"#utility.yul\":2342:2345   */\n  dup3\n    /* \"#utility.yul\":2338:2350   */\n  add\n    /* \"#utility.yul\":2331:2350   */\n  swap1\n  pop\n    /* \"#utility.yul\":1990:2356   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2362:2781   */\ntag_17:\n    /* \"#utility.yul\":2528:2532   */\n  0x00\n    /* \"#utility.yul\":2566:2568   */\n  0x20\n    /* \"#utility.yul\":2555:2564   */\n  dup3\n    /* \"#utility.yul\":2551:2569   */\n  add\n    /* \"#utility.yul\":2543:2569   */\n  swap1\n  pop\n    /* \"#utility.yul\":2615:2624   */\n  dup2\n    /* \"#utility.yul\":2609:2613   */\n  dup2\n    /* \"#utility.yul\":2605:2625   */\n  sub\n    /* \"#utility.yul\":2601:2602   */\n  0x00\n    /* \"#utility.yul\":2590:2599   */\n  dup4\n    /* \"#utility.yul\":2586:2603   */\n  add\n    /* \"#utility.yul\":2579:2626   */\n  mstore\n    /* \"#utility.yul\":2643:2774   */\n  tag_59\n    /* \"#utility.yul\":2769:2773   */\n  dup2\n    /* \"#utility.yul\":2643:2774   */\n  tag_31\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":2635:2774   */\n  swap1\n  pop\n    /* \"#utility.yul\":2362:2781   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"D/difficulty.sol\":435:3094  contract DifficultyManager is Ownable, ReentrancyGuard {... */\ntag_18:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"D/difficulty.sol\":435:3094  contract DifficultyManager is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x23cd56e4\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x23cd56e4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x0bf94512\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x185d1075\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x19cae462\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1ae19f11\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"D/difficulty.sol\":1892:2797  function submitSolution(uint256 nonce) external nonReentrant {... */\n    tag_3:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"D/difficulty.sol\":721:769  mapping(address => bytes32) public userSolutions */\n    tag_4:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"D/difficulty.sol\":595:620  uint256 public difficulty */\n    tag_5:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"D/difficulty.sol\":1407:1627  function updateDifficulty(uint256 newDifficulty) external onlyOwner {... */\n    tag_6:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_27:\n      tag_28\n      jump\t// in\n    tag_26:\n      stop\n        /* \"D/difficulty.sol\":2978:3092  function getUserSolution(address user) external view returns (bytes32) {... */\n    tag_7:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_30:\n      tag_31\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_8:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_9:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_10:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_40:\n      tag_41\n      jump\t// in\n    tag_39:\n      stop\n        /* \"D/difficulty.sol\":1892:2797  function submitSolution(uint256 nonce) external nonReentrant {... */\n    tag_15:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_43\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_44\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_43:\n        /* \"D/difficulty.sol\":2059:2079  bytes32 solutionHash */\n      0x00\n        /* \"D/difficulty.sol\":2109:2119  difficulty */\n      sload(0x02)\n        /* \"D/difficulty.sol\":2121:2131  msg.sender */\n      caller\n        /* \"D/difficulty.sol\":2133:2138  nonce */\n      dup4\n        /* \"D/difficulty.sol\":2092:2139  abi.encodePacked(difficulty, msg.sender, nonce) */\n      add(0x20, mload(0x40))\n      tag_46\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"D/difficulty.sol\":2082:2140  keccak256(abi.encodePacked(difficulty, msg.sender, nonce)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"D/difficulty.sol\":2059:2140  bytes32 solutionHash = keccak256(abi.encodePacked(difficulty, msg.sender, nonce)) */\n      swap1\n      pop\n        /* \"D/difficulty.sol\":2435:2447  bool success */\n      0x00\n        /* \"D/difficulty.sol\":2475:2485  difficulty */\n      sload(0x02)\n        /* \"D/difficulty.sol\":2459:2471  solutionHash */\n      dup3\n        /* \"D/difficulty.sol\":2451:2472  uint256(solutionHash) */\n      0x00\n      shr\n        /* \"D/difficulty.sol\":2451:2485  uint256(solutionHash) < difficulty */\n      lt\n        /* \"D/difficulty.sol\":2435:2486  bool success = (uint256(solutionHash) < difficulty) */\n      swap1\n      pop\n        /* \"D/difficulty.sol\":2525:2537  solutionHash */\n      dup2\n        /* \"D/difficulty.sol\":2497:2510  userSolutions */\n      0x03\n        /* \"D/difficulty.sol\":2497:2522  userSolutions[msg.sender] */\n      0x00\n        /* \"D/difficulty.sol\":2511:2521  msg.sender */\n      caller\n        /* \"D/difficulty.sol\":2497:2522  userSolutions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"D/difficulty.sol\":2497:2537  userSolutions[msg.sender] = solutionHash */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"D/difficulty.sol\":2571:2581  msg.sender */\n      caller\n        /* \"D/difficulty.sol\":2553:2605  SolutionSubmitted(msg.sender, solutionHash, success) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x787a4c7d099cff43c33055e1e6221e716930c7fdf0d56e90faab71e8a7dd762f\n        /* \"D/difficulty.sol\":2583:2595  solutionHash */\n      dup4\n        /* \"D/difficulty.sol\":2597:2604  success */\n      dup4\n        /* \"D/difficulty.sol\":2553:2605  SolutionSubmitted(msg.sender, solutionHash, success) */\n      mload(0x40)\n      tag_48\n      swap3\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"D/difficulty.sol\":2621:2628  success */\n      dup1\n        /* \"D/difficulty.sol\":2616:2704  if (!success) {... */\n      tag_50\n      jumpi\n        /* \"D/difficulty.sol\":2644:2693  revert(\"Solution fails the difficulty threshold\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_51\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"D/difficulty.sol\":2616:2704  if (!success) {... */\n    tag_50:\n        /* \"D/difficulty.sol\":1953:2797  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_53\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_54\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_53:\n        /* \"D/difficulty.sol\":1892:2797  function submitSolution(uint256 nonce) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"D/difficulty.sol\":721:769  mapping(address => bytes32) public userSolutions */\n    tag_19:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"D/difficulty.sol\":595:620  uint256 public difficulty */\n    tag_23:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"D/difficulty.sol\":1407:1627  function updateDifficulty(uint256 newDifficulty) external onlyOwner {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_56\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_57\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_56:\n        /* \"D/difficulty.sol\":1509:1510  0 */\n      0x00\n        /* \"D/difficulty.sol\":1493:1506  newDifficulty */\n      dup2\n        /* \"D/difficulty.sol\":1493:1510  newDifficulty > 0 */\n      gt\n        /* \"D/difficulty.sol\":1485:1537  require(newDifficulty > 0, \"Difficulty must be > 0\") */\n      tag_59\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_60\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_59:\n        /* \"D/difficulty.sol\":1560:1573  newDifficulty */\n      dup1\n        /* \"D/difficulty.sol\":1547:1557  difficulty */\n      0x02\n        /* \"D/difficulty.sol\":1547:1573  difficulty = newDifficulty */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"D/difficulty.sol\":1588:1620  DifficultyUpdated(newDifficulty) */\n      0x5a790c48cbebdceff3f1fcd445afd12d57302b7196738d61c60dcd491bf3efba\n        /* \"D/difficulty.sol\":1606:1619  newDifficulty */\n      dup2\n        /* \"D/difficulty.sol\":1588:1620  DifficultyUpdated(newDifficulty) */\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"D/difficulty.sol\":1407:1627  function updateDifficulty(uint256 newDifficulty) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"D/difficulty.sol\":2978:3092  function getUserSolution(address user) external view returns (bytes32) {... */\n    tag_31:\n        /* \"D/difficulty.sol\":3040:3047  bytes32 */\n      0x00\n        /* \"D/difficulty.sol\":3066:3079  userSolutions */\n      0x03\n        /* \"D/difficulty.sol\":3066:3085  userSolutions[user] */\n      0x00\n        /* \"D/difficulty.sol\":3080:3084  user */\n      dup4\n        /* \"D/difficulty.sol\":3066:3085  userSolutions[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"D/difficulty.sol\":3059:3085  return userSolutions[user] */\n      swap1\n      pop\n        /* \"D/difficulty.sol\":2978:3092  function getUserSolution(address user) external view returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_65\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_57\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_65:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_67\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_68\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_67:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_71\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_57\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_71:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_73\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_74\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_75\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_68\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_77\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_77:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_83\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_84\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_36\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_85\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_86\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_83\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_87\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_91:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_93:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_94:\n        /* \"#utility.yul\":490:514   */\n      tag_125\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_93\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_126\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_126:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_95:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_128\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_94\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_14:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_130\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_131\n      tag_91\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":766:885   */\n    tag_130:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_132\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_95\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1151   */\n    tag_96:\n        /* \"#utility.yul\":1062:1069   */\n      0x00\n        /* \"#utility.yul\":1102:1144   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1095:1100   */\n      dup3\n        /* \"#utility.yul\":1091:1145   */\n      and\n        /* \"#utility.yul\":1080:1145   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1157:1253   */\n    tag_97:\n        /* \"#utility.yul\":1194:1201   */\n      0x00\n        /* \"#utility.yul\":1223:1247   */\n      tag_135\n        /* \"#utility.yul\":1241:1246   */\n      dup3\n        /* \"#utility.yul\":1223:1247   */\n      tag_96\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":1212:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1157:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1381   */\n    tag_98:\n        /* \"#utility.yul\":1332:1356   */\n      tag_137\n        /* \"#utility.yul\":1350:1355   */\n      dup2\n        /* \"#utility.yul\":1332:1356   */\n      tag_97\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":1325:1330   */\n      dup2\n        /* \"#utility.yul\":1322:1357   */\n      eq\n        /* \"#utility.yul\":1312:1375   */\n      tag_138\n      jumpi\n        /* \"#utility.yul\":1371:1372   */\n      0x00\n        /* \"#utility.yul\":1368:1369   */\n      dup1\n        /* \"#utility.yul\":1361:1373   */\n      revert\n        /* \"#utility.yul\":1312:1375   */\n    tag_138:\n        /* \"#utility.yul\":1259:1381   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1387:1526   */\n    tag_99:\n        /* \"#utility.yul\":1433:1438   */\n      0x00\n        /* \"#utility.yul\":1471:1477   */\n      dup2\n        /* \"#utility.yul\":1458:1478   */\n      calldataload\n        /* \"#utility.yul\":1449:1478   */\n      swap1\n      pop\n        /* \"#utility.yul\":1487:1520   */\n      tag_140\n        /* \"#utility.yul\":1514:1519   */\n      dup2\n        /* \"#utility.yul\":1487:1520   */\n      tag_98\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":1387:1526   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1532:1861   */\n    tag_18:\n        /* \"#utility.yul\":1591:1597   */\n      0x00\n        /* \"#utility.yul\":1640:1642   */\n      0x20\n        /* \"#utility.yul\":1628:1637   */\n      dup3\n        /* \"#utility.yul\":1619:1626   */\n      dup5\n        /* \"#utility.yul\":1615:1638   */\n      sub\n        /* \"#utility.yul\":1611:1643   */\n      slt\n        /* \"#utility.yul\":1608:1727   */\n      iszero\n      tag_142\n      jumpi\n        /* \"#utility.yul\":1646:1725   */\n      tag_143\n      tag_91\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":1608:1727   */\n    tag_142:\n        /* \"#utility.yul\":1766:1767   */\n      0x00\n        /* \"#utility.yul\":1791:1844   */\n      tag_144\n        /* \"#utility.yul\":1836:1843   */\n      dup5\n        /* \"#utility.yul\":1827:1833   */\n      dup3\n        /* \"#utility.yul\":1816:1825   */\n      dup6\n        /* \"#utility.yul\":1812:1834   */\n      add\n        /* \"#utility.yul\":1791:1844   */\n      tag_99\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":1781:1844   */\n      swap2\n      pop\n        /* \"#utility.yul\":1737:1854   */\n      pop\n        /* \"#utility.yul\":1532:1861   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1867:1944   */\n    tag_100:\n        /* \"#utility.yul\":1904:1911   */\n      0x00\n        /* \"#utility.yul\":1933:1938   */\n      dup2\n        /* \"#utility.yul\":1922:1938   */\n      swap1\n      pop\n        /* \"#utility.yul\":1867:1944   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1950:2068   */\n    tag_101:\n        /* \"#utility.yul\":2037:2061   */\n      tag_147\n        /* \"#utility.yul\":2055:2060   */\n      dup2\n        /* \"#utility.yul\":2037:2061   */\n      tag_100\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":2032:2035   */\n      dup3\n        /* \"#utility.yul\":2025:2062   */\n      mstore\n        /* \"#utility.yul\":1950:2068   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2074:2296   */\n    tag_21:\n        /* \"#utility.yul\":2167:2171   */\n      0x00\n        /* \"#utility.yul\":2205:2207   */\n      0x20\n        /* \"#utility.yul\":2194:2203   */\n      dup3\n        /* \"#utility.yul\":2190:2208   */\n      add\n        /* \"#utility.yul\":2182:2208   */\n      swap1\n      pop\n        /* \"#utility.yul\":2218:2289   */\n      tag_149\n        /* \"#utility.yul\":2286:2287   */\n      0x00\n        /* \"#utility.yul\":2275:2284   */\n      dup4\n        /* \"#utility.yul\":2271:2288   */\n      add\n        /* \"#utility.yul\":2262:2268   */\n      dup5\n        /* \"#utility.yul\":2218:2289   */\n      tag_101\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":2074:2296   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2302:2420   */\n    tag_102:\n        /* \"#utility.yul\":2389:2413   */\n      tag_151\n        /* \"#utility.yul\":2407:2412   */\n      dup2\n        /* \"#utility.yul\":2389:2413   */\n      tag_93\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":2384:2387   */\n      dup3\n        /* \"#utility.yul\":2377:2414   */\n      mstore\n        /* \"#utility.yul\":2302:2420   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2426:2648   */\n    tag_25:\n        /* \"#utility.yul\":2519:2523   */\n      0x00\n        /* \"#utility.yul\":2557:2559   */\n      0x20\n        /* \"#utility.yul\":2546:2555   */\n      dup3\n        /* \"#utility.yul\":2542:2560   */\n      add\n        /* \"#utility.yul\":2534:2560   */\n      swap1\n      pop\n        /* \"#utility.yul\":2570:2641   */\n      tag_153\n        /* \"#utility.yul\":2638:2639   */\n      0x00\n        /* \"#utility.yul\":2627:2636   */\n      dup4\n        /* \"#utility.yul\":2623:2640   */\n      add\n        /* \"#utility.yul\":2614:2620   */\n      dup5\n        /* \"#utility.yul\":2570:2641   */\n      tag_102\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":2426:2648   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2654:2772   */\n    tag_103:\n        /* \"#utility.yul\":2741:2765   */\n      tag_155\n        /* \"#utility.yul\":2759:2764   */\n      dup2\n        /* \"#utility.yul\":2741:2765   */\n      tag_97\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":2736:2739   */\n      dup3\n        /* \"#utility.yul\":2729:2766   */\n      mstore\n        /* \"#utility.yul\":2654:2772   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2778:3000   */\n    tag_38:\n        /* \"#utility.yul\":2871:2875   */\n      0x00\n        /* \"#utility.yul\":2909:2911   */\n      0x20\n        /* \"#utility.yul\":2898:2907   */\n      dup3\n        /* \"#utility.yul\":2894:2912   */\n      add\n        /* \"#utility.yul\":2886:2912   */\n      swap1\n      pop\n        /* \"#utility.yul\":2922:2993   */\n      tag_157\n        /* \"#utility.yul\":2990:2991   */\n      0x00\n        /* \"#utility.yul\":2979:2988   */\n      dup4\n        /* \"#utility.yul\":2975:2992   */\n      add\n        /* \"#utility.yul\":2966:2972   */\n      dup5\n        /* \"#utility.yul\":2922:2993   */\n      tag_103\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":2778:3000   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3006:3085   */\n    tag_104:\n        /* \"#utility.yul\":3045:3052   */\n      0x00\n        /* \"#utility.yul\":3074:3079   */\n      dup2\n        /* \"#utility.yul\":3063:3079   */\n      swap1\n      pop\n        /* \"#utility.yul\":3006:3085   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3091:3248   */\n    tag_105:\n        /* \"#utility.yul\":3196:3241   */\n      tag_160\n        /* \"#utility.yul\":3216:3240   */\n      tag_161\n        /* \"#utility.yul\":3234:3239   */\n      dup3\n        /* \"#utility.yul\":3216:3240   */\n      tag_93\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":3196:3241   */\n      tag_104\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3242   */\n      mstore\n        /* \"#utility.yul\":3091:3248   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3254:3348   */\n    tag_106:\n        /* \"#utility.yul\":3287:3295   */\n      0x00\n        /* \"#utility.yul\":3335:3340   */\n      dup2\n        /* \"#utility.yul\":3331:3333   */\n      0x60\n        /* \"#utility.yul\":3327:3341   */\n      shl\n        /* \"#utility.yul\":3306:3341   */\n      swap1\n      pop\n        /* \"#utility.yul\":3254:3348   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3354:3448   */\n    tag_107:\n        /* \"#utility.yul\":3393:3400   */\n      0x00\n        /* \"#utility.yul\":3422:3442   */\n      tag_164\n        /* \"#utility.yul\":3436:3441   */\n      dup3\n        /* \"#utility.yul\":3422:3442   */\n      tag_106\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":3411:3442   */\n      swap1\n      pop\n        /* \"#utility.yul\":3354:3448   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3454:3554   */\n    tag_108:\n        /* \"#utility.yul\":3493:3500   */\n      0x00\n        /* \"#utility.yul\":3522:3548   */\n      tag_166\n        /* \"#utility.yul\":3542:3547   */\n      dup3\n        /* \"#utility.yul\":3522:3548   */\n      tag_107\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":3511:3548   */\n      swap1\n      pop\n        /* \"#utility.yul\":3454:3554   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3560:3717   */\n    tag_109:\n        /* \"#utility.yul\":3665:3710   */\n      tag_168\n        /* \"#utility.yul\":3685:3709   */\n      tag_169\n        /* \"#utility.yul\":3703:3708   */\n      dup3\n        /* \"#utility.yul\":3685:3709   */\n      tag_97\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":3665:3710   */\n      tag_108\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":3660:3663   */\n      dup3\n        /* \"#utility.yul\":3653:3711   */\n      mstore\n        /* \"#utility.yul\":3560:3717   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3723:4261   */\n    tag_47:\n        /* \"#utility.yul\":3891:3894   */\n      0x00\n        /* \"#utility.yul\":3906:3981   */\n      tag_171\n        /* \"#utility.yul\":3977:3980   */\n      dup3\n        /* \"#utility.yul\":3968:3974   */\n      dup7\n        /* \"#utility.yul\":3906:3981   */\n      tag_105\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":4006:4008   */\n      0x20\n        /* \"#utility.yul\":4001:4004   */\n      dup3\n        /* \"#utility.yul\":3997:4009   */\n      add\n        /* \"#utility.yul\":3990:4009   */\n      swap2\n      pop\n        /* \"#utility.yul\":4019:4094   */\n      tag_172\n        /* \"#utility.yul\":4090:4093   */\n      dup3\n        /* \"#utility.yul\":4081:4087   */\n      dup6\n        /* \"#utility.yul\":4019:4094   */\n      tag_109\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":4119:4121   */\n      0x14\n        /* \"#utility.yul\":4114:4117   */\n      dup3\n        /* \"#utility.yul\":4110:4122   */\n      add\n        /* \"#utility.yul\":4103:4122   */\n      swap2\n      pop\n        /* \"#utility.yul\":4132:4207   */\n      tag_173\n        /* \"#utility.yul\":4203:4206   */\n      dup3\n        /* \"#utility.yul\":4194:4200   */\n      dup5\n        /* \"#utility.yul\":4132:4207   */\n      tag_105\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":4232:4234   */\n      0x20\n        /* \"#utility.yul\":4227:4230   */\n      dup3\n        /* \"#utility.yul\":4223:4235   */\n      add\n        /* \"#utility.yul\":4216:4235   */\n      swap2\n      pop\n        /* \"#utility.yul\":4252:4255   */\n      dup2\n        /* \"#utility.yul\":4245:4255   */\n      swap1\n      pop\n        /* \"#utility.yul\":3723:4261   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4267:4357   */\n    tag_110:\n        /* \"#utility.yul\":4301:4308   */\n      0x00\n        /* \"#utility.yul\":4344:4349   */\n      dup2\n        /* \"#utility.yul\":4337:4350   */\n      iszero\n        /* \"#utility.yul\":4330:4351   */\n      iszero\n        /* \"#utility.yul\":4319:4351   */\n      swap1\n      pop\n        /* \"#utility.yul\":4267:4357   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4363:4472   */\n    tag_111:\n        /* \"#utility.yul\":4444:4465   */\n      tag_176\n        /* \"#utility.yul\":4459:4464   */\n      dup2\n        /* \"#utility.yul\":4444:4465   */\n      tag_110\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":4439:4442   */\n      dup3\n        /* \"#utility.yul\":4432:4466   */\n      mstore\n        /* \"#utility.yul\":4363:4472   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4478:4798   */\n    tag_49:\n        /* \"#utility.yul\":4593:4597   */\n      0x00\n        /* \"#utility.yul\":4631:4633   */\n      0x40\n        /* \"#utility.yul\":4620:4629   */\n      dup3\n        /* \"#utility.yul\":4616:4634   */\n      add\n        /* \"#utility.yul\":4608:4634   */\n      swap1\n      pop\n        /* \"#utility.yul\":4644:4715   */\n      tag_178\n        /* \"#utility.yul\":4712:4713   */\n      0x00\n        /* \"#utility.yul\":4701:4710   */\n      dup4\n        /* \"#utility.yul\":4697:4714   */\n      add\n        /* \"#utility.yul\":4688:4694   */\n      dup6\n        /* \"#utility.yul\":4644:4715   */\n      tag_101\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":4725:4791   */\n      tag_179\n        /* \"#utility.yul\":4787:4789   */\n      0x20\n        /* \"#utility.yul\":4776:4785   */\n      dup4\n        /* \"#utility.yul\":4772:4790   */\n      add\n        /* \"#utility.yul\":4763:4769   */\n      dup5\n        /* \"#utility.yul\":4725:4791   */\n      tag_111\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":4478:4798   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4804:4973   */\n    tag_112:\n        /* \"#utility.yul\":4888:4899   */\n      0x00\n        /* \"#utility.yul\":4922:4928   */\n      dup3\n        /* \"#utility.yul\":4917:4920   */\n      dup3\n        /* \"#utility.yul\":4910:4929   */\n      mstore\n        /* \"#utility.yul\":4962:4966   */\n      0x20\n        /* \"#utility.yul\":4957:4960   */\n      dup3\n        /* \"#utility.yul\":4953:4967   */\n      add\n        /* \"#utility.yul\":4938:4967   */\n      swap1\n      pop\n        /* \"#utility.yul\":4804:4973   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4979:5205   */\n    tag_113:\n        /* \"#utility.yul\":5119:5153   */\n      0x536f6c7574696f6e206661696c732074686520646966666963756c7479207468\n        /* \"#utility.yul\":5115:5116   */\n      0x00\n        /* \"#utility.yul\":5107:5113   */\n      dup3\n        /* \"#utility.yul\":5103:5117   */\n      add\n        /* \"#utility.yul\":5096:5154   */\n      mstore\n        /* \"#utility.yul\":5188:5197   */\n      0x726573686f6c6400000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5183:5185   */\n      0x20\n        /* \"#utility.yul\":5175:5181   */\n      dup3\n        /* \"#utility.yul\":5171:5186   */\n      add\n        /* \"#utility.yul\":5164:5198   */\n      mstore\n        /* \"#utility.yul\":4979:5205   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5211:5577   */\n    tag_114:\n        /* \"#utility.yul\":5353:5356   */\n      0x00\n        /* \"#utility.yul\":5374:5441   */\n      tag_183\n        /* \"#utility.yul\":5438:5440   */\n      0x27\n        /* \"#utility.yul\":5433:5436   */\n      dup4\n        /* \"#utility.yul\":5374:5441   */\n      tag_112\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":5367:5441   */\n      swap2\n      pop\n        /* \"#utility.yul\":5450:5543   */\n      tag_184\n        /* \"#utility.yul\":5539:5542   */\n      dup3\n        /* \"#utility.yul\":5450:5543   */\n      tag_113\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":5568:5570   */\n      0x40\n        /* \"#utility.yul\":5563:5566   */\n      dup3\n        /* \"#utility.yul\":5559:5571   */\n      add\n        /* \"#utility.yul\":5552:5571   */\n      swap1\n      pop\n        /* \"#utility.yul\":5211:5577   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5583:6002   */\n    tag_52:\n        /* \"#utility.yul\":5749:5753   */\n      0x00\n        /* \"#utility.yul\":5787:5789   */\n      0x20\n        /* \"#utility.yul\":5776:5785   */\n      dup3\n        /* \"#utility.yul\":5772:5790   */\n      add\n        /* \"#utility.yul\":5764:5790   */\n      swap1\n      pop\n        /* \"#utility.yul\":5836:5845   */\n      dup2\n        /* \"#utility.yul\":5830:5834   */\n      dup2\n        /* \"#utility.yul\":5826:5846   */\n      sub\n        /* \"#utility.yul\":5822:5823   */\n      0x00\n        /* \"#utility.yul\":5811:5820   */\n      dup4\n        /* \"#utility.yul\":5807:5824   */\n      add\n        /* \"#utility.yul\":5800:5847   */\n      mstore\n        /* \"#utility.yul\":5864:5995   */\n      tag_186\n        /* \"#utility.yul\":5990:5994   */\n      dup2\n        /* \"#utility.yul\":5864:5995   */\n      tag_114\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":5856:5995   */\n      swap1\n      pop\n        /* \"#utility.yul\":5583:6002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6008:6180   */\n    tag_115:\n        /* \"#utility.yul\":6148:6172   */\n      0x446966666963756c7479206d757374206265203e203000000000000000000000\n        /* \"#utility.yul\":6144:6145   */\n      0x00\n        /* \"#utility.yul\":6136:6142   */\n      dup3\n        /* \"#utility.yul\":6132:6146   */\n      add\n        /* \"#utility.yul\":6125:6173   */\n      mstore\n        /* \"#utility.yul\":6008:6180   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6186:6552   */\n    tag_116:\n        /* \"#utility.yul\":6328:6331   */\n      0x00\n        /* \"#utility.yul\":6349:6416   */\n      tag_189\n        /* \"#utility.yul\":6413:6415   */\n      0x16\n        /* \"#utility.yul\":6408:6411   */\n      dup4\n        /* \"#utility.yul\":6349:6416   */\n      tag_112\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":6342:6416   */\n      swap2\n      pop\n        /* \"#utility.yul\":6425:6518   */\n      tag_190\n        /* \"#utility.yul\":6514:6517   */\n      dup3\n        /* \"#utility.yul\":6425:6518   */\n      tag_115\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":6543:6545   */\n      0x20\n        /* \"#utility.yul\":6538:6541   */\n      dup3\n        /* \"#utility.yul\":6534:6546   */\n      add\n        /* \"#utility.yul\":6527:6546   */\n      swap1\n      pop\n        /* \"#utility.yul\":6186:6552   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6558:6977   */\n    tag_61:\n        /* \"#utility.yul\":6724:6728   */\n      0x00\n        /* \"#utility.yul\":6762:6764   */\n      0x20\n        /* \"#utility.yul\":6751:6760   */\n      dup3\n        /* \"#utility.yul\":6747:6765   */\n      add\n        /* \"#utility.yul\":6739:6765   */\n      swap1\n      pop\n        /* \"#utility.yul\":6811:6820   */\n      dup2\n        /* \"#utility.yul\":6805:6809   */\n      dup2\n        /* \"#utility.yul\":6801:6821   */\n      sub\n        /* \"#utility.yul\":6797:6798   */\n      0x00\n        /* \"#utility.yul\":6786:6795   */\n      dup4\n        /* \"#utility.yul\":6782:6799   */\n      add\n        /* \"#utility.yul\":6775:6822   */\n      mstore\n        /* \"#utility.yul\":6839:6970   */\n      tag_192\n        /* \"#utility.yul\":6965:6969   */\n      dup2\n        /* \"#utility.yul\":6839:6970   */\n      tag_116\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":6831:6970   */\n      swap1\n      pop\n        /* \"#utility.yul\":6558:6977   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6983:7164   */\n    tag_117:\n        /* \"#utility.yul\":7123:7156   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":7119:7120   */\n      0x00\n        /* \"#utility.yul\":7111:7117   */\n      dup3\n        /* \"#utility.yul\":7107:7121   */\n      add\n        /* \"#utility.yul\":7100:7157   */\n      mstore\n        /* \"#utility.yul\":6983:7164   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7170:7536   */\n    tag_118:\n        /* \"#utility.yul\":7312:7315   */\n      0x00\n        /* \"#utility.yul\":7333:7400   */\n      tag_195\n        /* \"#utility.yul\":7397:7399   */\n      0x1f\n        /* \"#utility.yul\":7392:7395   */\n      dup4\n        /* \"#utility.yul\":7333:7400   */\n      tag_112\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":7326:7400   */\n      swap2\n      pop\n        /* \"#utility.yul\":7409:7502   */\n      tag_196\n        /* \"#utility.yul\":7498:7501   */\n      dup3\n        /* \"#utility.yul\":7409:7502   */\n      tag_117\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":7527:7529   */\n      0x20\n        /* \"#utility.yul\":7522:7525   */\n      dup3\n        /* \"#utility.yul\":7518:7530   */\n      add\n        /* \"#utility.yul\":7511:7530   */\n      swap1\n      pop\n        /* \"#utility.yul\":7170:7536   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7542:7961   */\n    tag_79:\n        /* \"#utility.yul\":7708:7712   */\n      0x00\n        /* \"#utility.yul\":7746:7748   */\n      0x20\n        /* \"#utility.yul\":7735:7744   */\n      dup3\n        /* \"#utility.yul\":7731:7749   */\n      add\n        /* \"#utility.yul\":7723:7749   */\n      swap1\n      pop\n        /* \"#utility.yul\":7795:7804   */\n      dup2\n        /* \"#utility.yul\":7789:7793   */\n      dup2\n        /* \"#utility.yul\":7785:7805   */\n      sub\n        /* \"#utility.yul\":7781:7782   */\n      0x00\n        /* \"#utility.yul\":7770:7779   */\n      dup4\n        /* \"#utility.yul\":7766:7783   */\n      add\n        /* \"#utility.yul\":7759:7806   */\n      mstore\n        /* \"#utility.yul\":7823:7954   */\n      tag_198\n        /* \"#utility.yul\":7949:7953   */\n      dup2\n        /* \"#utility.yul\":7823:7954   */\n      tag_118\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":7815:7954   */\n      swap1\n      pop\n        /* \"#utility.yul\":7542:7961   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220adc1a4121c272c1b2c31ee4a0498697ab5c55baa3c81ccee0c149dd3d71d6a8364736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_166": {
									"entryPoint": null,
									"id": 166,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_293": {
									"entryPoint": null,
									"id": 293,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 264,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 492,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 603,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_39ec3ce3e91ece4ed172b6f3a1cce21957f23bd760febd7260c9a995b058241f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 699,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 618,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_39ec3ce3e91ece4ed172b6f3a1cce21957f23bd760febd7260c9a995b058241f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 733,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 643,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 586,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 555,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 461,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 457,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_39ec3ce3e91ece4ed172b6f3a1cce21957f23bd760febd7260c9a995b058241f": {
									"entryPoint": 659,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2784:4",
										"nodeType": "YulBlock",
										"src": "0:2784:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:4",
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nativeSrc": "57:19:4",
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:4",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nativeSrc": "67:9:4",
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:4",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nativeSrc": "177:28:4",
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:4",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:4",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nativeSrc": "187:12:4",
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nativeSrc": "187:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nativeSrc": "300:28:4",
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:4",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:4",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nativeSrc": "310:12:4",
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nativeSrc": "310:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nativeSrc": "379:32:4",
													"nodeType": "YulBlock",
													"src": "379:32:4",
													"statements": [
														{
															"nativeSrc": "389:16:4",
															"nodeType": "YulAssignment",
															"src": "389:16:4",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:4",
																"nodeType": "YulIdentifier",
																"src": "400:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:4",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:4",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:77:4"
											},
											{
												"body": {
													"nativeSrc": "460:79:4",
													"nodeType": "YulBlock",
													"src": "460:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:4",
																"nodeType": "YulBlock",
																"src": "517:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:4",
																					"nodeType": "YulLiteral",
																					"src": "526:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:4",
																					"nodeType": "YulLiteral",
																					"src": "529:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:4"
																			},
																			"nativeSrc": "519:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:4"
																		},
																		"nativeSrc": "519:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:4"
																				},
																				"nativeSrc": "490:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:4"
																		},
																		"nativeSrc": "480:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:4"
																},
																"nativeSrc": "473:43:4",
																"nodeType": "YulFunctionCall",
																"src": "473:43:4"
															},
															"nativeSrc": "470:63:4",
															"nodeType": "YulIf",
															"src": "470:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:4",
														"nodeType": "YulTypedName",
														"src": "453:5:4",
														"type": ""
													}
												],
												"src": "417:122:4"
											},
											{
												"body": {
													"nativeSrc": "608:80:4",
													"nodeType": "YulBlock",
													"src": "608:80:4",
													"statements": [
														{
															"nativeSrc": "618:22:4",
															"nodeType": "YulAssignment",
															"src": "618:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "633:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "627:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:4"
																},
																"nativeSrc": "627:13:4",
																"nodeType": "YulFunctionCall",
																"src": "627:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "618:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "676:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "649:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:4"
																},
																"nativeSrc": "649:33:4",
																"nodeType": "YulFunctionCall",
																"src": "649:33:4"
															},
															"nativeSrc": "649:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "649:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "545:143:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "586:6:4",
														"nodeType": "YulTypedName",
														"src": "586:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "594:3:4",
														"nodeType": "YulTypedName",
														"src": "594:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "602:5:4",
														"nodeType": "YulTypedName",
														"src": "602:5:4",
														"type": ""
													}
												],
												"src": "545:143:4"
											},
											{
												"body": {
													"nativeSrc": "771:274:4",
													"nodeType": "YulBlock",
													"src": "771:274:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "817:83:4",
																"nodeType": "YulBlock",
																"src": "817:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "819:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "819:77:4"
																			},
																			"nativeSrc": "819:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "819:79:4"
																		},
																		"nativeSrc": "819:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "819:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "792:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "792:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "801:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "801:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "788:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "788:3:4"
																		},
																		"nativeSrc": "788:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "788:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "813:2:4",
																		"nodeType": "YulLiteral",
																		"src": "813:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "784:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "784:3:4"
																},
																"nativeSrc": "784:32:4",
																"nodeType": "YulFunctionCall",
																"src": "784:32:4"
															},
															"nativeSrc": "781:119:4",
															"nodeType": "YulIf",
															"src": "781:119:4"
														},
														{
															"nativeSrc": "910:128:4",
															"nodeType": "YulBlock",
															"src": "910:128:4",
															"statements": [
																{
																	"nativeSrc": "925:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "925:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "939:1:4",
																		"nodeType": "YulLiteral",
																		"src": "939:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "929:6:4",
																			"nodeType": "YulTypedName",
																			"src": "929:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "954:74:4",
																	"nodeType": "YulAssignment",
																	"src": "954:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1000:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1000:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1011:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1011:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "996:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "996:3:4"
																				},
																				"nativeSrc": "996:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "996:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1020:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1020:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "964:31:4",
																			"nodeType": "YulIdentifier",
																			"src": "964:31:4"
																		},
																		"nativeSrc": "964:64:4",
																		"nodeType": "YulFunctionCall",
																		"src": "964:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "954:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "954:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "694:351:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "741:9:4",
														"nodeType": "YulTypedName",
														"src": "741:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "752:7:4",
														"nodeType": "YulTypedName",
														"src": "752:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "764:6:4",
														"nodeType": "YulTypedName",
														"src": "764:6:4",
														"type": ""
													}
												],
												"src": "694:351:4"
											},
											{
												"body": {
													"nativeSrc": "1096:81:4",
													"nodeType": "YulBlock",
													"src": "1096:81:4",
													"statements": [
														{
															"nativeSrc": "1106:65:4",
															"nodeType": "YulAssignment",
															"src": "1106:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1121:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1121:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1128:42:4",
																		"nodeType": "YulLiteral",
																		"src": "1128:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1117:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:4"
																},
																"nativeSrc": "1117:54:4",
																"nodeType": "YulFunctionCall",
																"src": "1117:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1106:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "1106:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1051:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1078:5:4",
														"nodeType": "YulTypedName",
														"src": "1078:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1088:7:4",
														"nodeType": "YulTypedName",
														"src": "1088:7:4",
														"type": ""
													}
												],
												"src": "1051:126:4"
											},
											{
												"body": {
													"nativeSrc": "1228:51:4",
													"nodeType": "YulBlock",
													"src": "1228:51:4",
													"statements": [
														{
															"nativeSrc": "1238:35:4",
															"nodeType": "YulAssignment",
															"src": "1238:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1267:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1267:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1249:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "1249:17:4"
																},
																"nativeSrc": "1249:24:4",
																"nodeType": "YulFunctionCall",
																"src": "1249:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1238:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "1238:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1183:96:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1210:5:4",
														"nodeType": "YulTypedName",
														"src": "1210:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1220:7:4",
														"nodeType": "YulTypedName",
														"src": "1220:7:4",
														"type": ""
													}
												],
												"src": "1183:96:4"
											},
											{
												"body": {
													"nativeSrc": "1350:53:4",
													"nodeType": "YulBlock",
													"src": "1350:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1367:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1367:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1390:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1390:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1372:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "1372:17:4"
																		},
																		"nativeSrc": "1372:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1372:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1360:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1360:6:4"
																},
																"nativeSrc": "1360:37:4",
																"nodeType": "YulFunctionCall",
																"src": "1360:37:4"
															},
															"nativeSrc": "1360:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "1360:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1285:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1338:5:4",
														"nodeType": "YulTypedName",
														"src": "1338:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1345:3:4",
														"nodeType": "YulTypedName",
														"src": "1345:3:4",
														"type": ""
													}
												],
												"src": "1285:118:4"
											},
											{
												"body": {
													"nativeSrc": "1507:124:4",
													"nodeType": "YulBlock",
													"src": "1507:124:4",
													"statements": [
														{
															"nativeSrc": "1517:26:4",
															"nodeType": "YulAssignment",
															"src": "1517:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1529:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1529:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1540:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1540:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1525:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1525:3:4"
																},
																"nativeSrc": "1525:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1525:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1517:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1517:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1597:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1597:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1610:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1610:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1621:1:4",
																				"nodeType": "YulLiteral",
																				"src": "1621:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1606:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1606:3:4"
																		},
																		"nativeSrc": "1606:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1606:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1553:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "1553:43:4"
																},
																"nativeSrc": "1553:71:4",
																"nodeType": "YulFunctionCall",
																"src": "1553:71:4"
															},
															"nativeSrc": "1553:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "1553:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1409:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1479:9:4",
														"nodeType": "YulTypedName",
														"src": "1479:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1491:6:4",
														"nodeType": "YulTypedName",
														"src": "1491:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1502:4:4",
														"nodeType": "YulTypedName",
														"src": "1502:4:4",
														"type": ""
													}
												],
												"src": "1409:222:4"
											},
											{
												"body": {
													"nativeSrc": "1733:73:4",
													"nodeType": "YulBlock",
													"src": "1733:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1750:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1750:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1755:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1755:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1743:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1743:6:4"
																},
																"nativeSrc": "1743:19:4",
																"nodeType": "YulFunctionCall",
																"src": "1743:19:4"
															},
															"nativeSrc": "1743:19:4",
															"nodeType": "YulExpressionStatement",
															"src": "1743:19:4"
														},
														{
															"nativeSrc": "1771:29:4",
															"nodeType": "YulAssignment",
															"src": "1771:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1790:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1790:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1795:4:4",
																		"nodeType": "YulLiteral",
																		"src": "1795:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1786:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1786:3:4"
																},
																"nativeSrc": "1786:14:4",
																"nodeType": "YulFunctionCall",
																"src": "1786:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1771:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "1771:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1637:169:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1705:3:4",
														"nodeType": "YulTypedName",
														"src": "1705:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1710:6:4",
														"nodeType": "YulTypedName",
														"src": "1710:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1721:11:4",
														"nodeType": "YulTypedName",
														"src": "1721:11:4",
														"type": ""
													}
												],
												"src": "1637:169:4"
											},
											{
												"body": {
													"nativeSrc": "1918:66:4",
													"nodeType": "YulBlock",
													"src": "1918:66:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1940:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1940:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1948:1:4",
																				"nodeType": "YulLiteral",
																				"src": "1948:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1936:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1936:3:4"
																		},
																		"nativeSrc": "1936:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1936:14:4"
																	},
																	{
																		"hexValue": "446966666963756c7479206d757374206265203e2030",
																		"kind": "string",
																		"nativeSrc": "1952:24:4",
																		"nodeType": "YulLiteral",
																		"src": "1952:24:4",
																		"type": "",
																		"value": "Difficulty must be > 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1929:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1929:6:4"
																},
																"nativeSrc": "1929:48:4",
																"nodeType": "YulFunctionCall",
																"src": "1929:48:4"
															},
															"nativeSrc": "1929:48:4",
															"nodeType": "YulExpressionStatement",
															"src": "1929:48:4"
														}
													]
												},
												"name": "store_literal_in_memory_39ec3ce3e91ece4ed172b6f3a1cce21957f23bd760febd7260c9a995b058241f",
												"nativeSrc": "1812:172:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1910:6:4",
														"nodeType": "YulTypedName",
														"src": "1910:6:4",
														"type": ""
													}
												],
												"src": "1812:172:4"
											},
											{
												"body": {
													"nativeSrc": "2136:220:4",
													"nodeType": "YulBlock",
													"src": "2136:220:4",
													"statements": [
														{
															"nativeSrc": "2146:74:4",
															"nodeType": "YulAssignment",
															"src": "2146:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2212:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2212:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2217:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2217:2:4",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2153:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "2153:58:4"
																},
																"nativeSrc": "2153:67:4",
																"nodeType": "YulFunctionCall",
																"src": "2153:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2146:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2146:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2318:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2318:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_39ec3ce3e91ece4ed172b6f3a1cce21957f23bd760febd7260c9a995b058241f",
																	"nativeSrc": "2229:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "2229:88:4"
																},
																"nativeSrc": "2229:93:4",
																"nodeType": "YulFunctionCall",
																"src": "2229:93:4"
															},
															"nativeSrc": "2229:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "2229:93:4"
														},
														{
															"nativeSrc": "2331:19:4",
															"nodeType": "YulAssignment",
															"src": "2331:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2342:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2342:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2347:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2347:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2338:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2338:3:4"
																},
																"nativeSrc": "2338:12:4",
																"nodeType": "YulFunctionCall",
																"src": "2338:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2331:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2331:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_39ec3ce3e91ece4ed172b6f3a1cce21957f23bd760febd7260c9a995b058241f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1990:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2124:3:4",
														"nodeType": "YulTypedName",
														"src": "2124:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2132:3:4",
														"nodeType": "YulTypedName",
														"src": "2132:3:4",
														"type": ""
													}
												],
												"src": "1990:366:4"
											},
											{
												"body": {
													"nativeSrc": "2533:248:4",
													"nodeType": "YulBlock",
													"src": "2533:248:4",
													"statements": [
														{
															"nativeSrc": "2543:26:4",
															"nodeType": "YulAssignment",
															"src": "2543:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2555:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2555:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2566:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2566:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2551:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2551:3:4"
																},
																"nativeSrc": "2551:18:4",
																"nodeType": "YulFunctionCall",
																"src": "2551:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2543:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2543:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2590:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2590:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2601:1:4",
																				"nodeType": "YulLiteral",
																				"src": "2601:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2586:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2586:3:4"
																		},
																		"nativeSrc": "2586:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2586:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2609:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "2609:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2615:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2615:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2605:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:4"
																		},
																		"nativeSrc": "2605:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2605:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2579:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2579:6:4"
																},
																"nativeSrc": "2579:47:4",
																"nodeType": "YulFunctionCall",
																"src": "2579:47:4"
															},
															"nativeSrc": "2579:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "2579:47:4"
														},
														{
															"nativeSrc": "2635:139:4",
															"nodeType": "YulAssignment",
															"src": "2635:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2769:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "2769:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_39ec3ce3e91ece4ed172b6f3a1cce21957f23bd760febd7260c9a995b058241f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2643:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "2643:124:4"
																},
																"nativeSrc": "2643:131:4",
																"nodeType": "YulFunctionCall",
																"src": "2643:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2635:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2635:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_39ec3ce3e91ece4ed172b6f3a1cce21957f23bd760febd7260c9a995b058241f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2362:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2513:9:4",
														"nodeType": "YulTypedName",
														"src": "2513:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2528:4:4",
														"nodeType": "YulTypedName",
														"src": "2528:4:4",
														"type": ""
													}
												],
												"src": "2362:419:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_39ec3ce3e91ece4ed172b6f3a1cce21957f23bd760febd7260c9a995b058241f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Difficulty must be > 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_39ec3ce3e91ece4ed172b6f3a1cce21957f23bd760febd7260c9a995b058241f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_39ec3ce3e91ece4ed172b6f3a1cce21957f23bd760febd7260c9a995b058241f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_39ec3ce3e91ece4ed172b6f3a1cce21957f23bd760febd7260c9a995b058241f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_39ec3ce3e91ece4ed172b6f3a1cce21957f23bd760febd7260c9a995b058241f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051610cec380380610cec83398181016040528101906100319190610200565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a2575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610099919061026a565b60405180910390fd5b6100b18161010860201b60201c565b50600180819055505f81116100fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100f2906102dd565b60405180910390fd5b80600281905550506102fb565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f819050919050565b6101df816101cd565b81146101e9575f80fd5b50565b5f815190506101fa816101d6565b92915050565b5f60208284031215610215576102146101c9565b5b5f610222848285016101ec565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102548261022b565b9050919050565b6102648161024a565b82525050565b5f60208201905061027d5f83018461025b565b92915050565b5f82825260208201905092915050565b7f446966666963756c7479206d757374206265203e2030000000000000000000005f82015250565b5f6102c7601683610283565b91506102d282610293565b602082019050919050565b5f6020820190508181035f8301526102f4816102bb565b9050919050565b6109e4806103085f395ff3fe608060405234801561000f575f80fd5b5060043610610086575f3560e01c806323cd56e41161005957806323cd56e414610110578063715018a6146101405780638da5cb5b1461014a578063f2fde38b1461016857610086565b80630bf945121461008a578063185d1075146100a657806319cae462146100d65780631ae19f11146100f4575b5f80fd5b6100a4600480360381019061009f919061062d565b610184565b005b6100c060048036038101906100bb91906106b2565b6102a5565b6040516100cd91906106f5565b60405180910390f35b6100de6102ba565b6040516100eb919061071d565b60405180910390f35b61010e6004803603810190610109919061062d565b6102c0565b005b61012a600480360381019061012591906106b2565b61034b565b60405161013791906106f5565b60405180910390f35b610148610391565b005b6101526103a4565b60405161015f9190610745565b60405180910390f35b610182600480360381019061017d91906106b2565b6103cb565b005b61018c61044f565b5f60025433836040516020016101a4939291906107c3565b6040516020818303038152906040528051906020012090505f600254825f1c1090508160035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055503373ffffffffffffffffffffffffffffffffffffffff167f787a4c7d099cff43c33055e1e6221e716930c7fdf0d56e90faab71e8a7dd762f8383604051610250929190610819565b60405180910390a280610298576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028f906108c0565b60405180910390fd5b50506102a261049e565b50565b6003602052805f5260405f205f915090505481565b60025481565b6102c86104a7565b5f811161030a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030190610928565b60405180910390fd5b806002819055507f5a790c48cbebdceff3f1fcd445afd12d57302b7196738d61c60dcd491bf3efba81604051610340919061071d565b60405180910390a150565b5f60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6103996104a7565b6103a25f61052e565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6103d36104a7565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610443575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161043a9190610745565b60405180910390fd5b61044c8161052e565b50565b600260015403610494576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048b90610990565b60405180910390fd5b6002600181905550565b60018081905550565b6104af6105ef565b73ffffffffffffffffffffffffffffffffffffffff166104cd6103a4565b73ffffffffffffffffffffffffffffffffffffffff161461052c576104f06105ef565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016105239190610745565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f80fd5b5f819050919050565b61060c816105fa565b8114610616575f80fd5b50565b5f8135905061062781610603565b92915050565b5f60208284031215610642576106416105f6565b5b5f61064f84828501610619565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61068182610658565b9050919050565b61069181610677565b811461069b575f80fd5b50565b5f813590506106ac81610688565b92915050565b5f602082840312156106c7576106c66105f6565b5b5f6106d48482850161069e565b91505092915050565b5f819050919050565b6106ef816106dd565b82525050565b5f6020820190506107085f8301846106e6565b92915050565b610717816105fa565b82525050565b5f6020820190506107305f83018461070e565b92915050565b61073f81610677565b82525050565b5f6020820190506107585f830184610736565b92915050565b5f819050919050565b610778610773826105fa565b61075e565b82525050565b5f8160601b9050919050565b5f6107948261077e565b9050919050565b5f6107a58261078a565b9050919050565b6107bd6107b882610677565b61079b565b82525050565b5f6107ce8286610767565b6020820191506107de82856107ac565b6014820191506107ee8284610767565b602082019150819050949350505050565b5f8115159050919050565b610813816107ff565b82525050565b5f60408201905061082c5f8301856106e6565b610839602083018461080a565b9392505050565b5f82825260208201905092915050565b7f536f6c7574696f6e206661696c732074686520646966666963756c74792074685f8201527f726573686f6c6400000000000000000000000000000000000000000000000000602082015250565b5f6108aa602783610840565b91506108b582610850565b604082019050919050565b5f6020820190508181035f8301526108d78161089e565b9050919050565b7f446966666963756c7479206d757374206265203e2030000000000000000000005f82015250565b5f610912601683610840565b915061091d826108de565b602082019050919050565b5f6020820190508181035f83015261093f81610906565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f61097a601f83610840565b915061098582610946565b602082019050919050565b5f6020820190508181035f8301526109a78161096e565b905091905056fea2646970667358221220adc1a4121c272c1b2c31ee4a0498697ab5c55baa3c81ccee0c149dd3d71d6a8364736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xCEC CODESIZE SUB DUP1 PUSH2 0xCEC DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x200 JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x26A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1 DUP2 PUSH2 0x108 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH0 DUP2 GT PUSH2 0xFB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2 SWAP1 PUSH2 0x2DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP PUSH2 0x2FB JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DF DUP2 PUSH2 0x1CD JUMP JUMPDEST DUP2 EQ PUSH2 0x1E9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1FA DUP2 PUSH2 0x1D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x215 JUMPI PUSH2 0x214 PUSH2 0x1C9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x222 DUP5 DUP3 DUP6 ADD PUSH2 0x1EC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x254 DUP3 PUSH2 0x22B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x264 DUP2 PUSH2 0x24A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27D PUSH0 DUP4 ADD DUP5 PUSH2 0x25B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x446966666963756C7479206D757374206265203E203000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2C7 PUSH1 0x16 DUP4 PUSH2 0x283 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D2 DUP3 PUSH2 0x293 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F4 DUP2 PUSH2 0x2BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9E4 DUP1 PUSH2 0x308 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x86 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x23CD56E4 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x23CD56E4 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x168 JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0xBF94512 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0x185D1075 EQ PUSH2 0xA6 JUMPI DUP1 PUSH4 0x19CAE462 EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0x1AE19F11 EQ PUSH2 0xF4 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9F SWAP2 SWAP1 PUSH2 0x62D JUMP JUMPDEST PUSH2 0x184 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x6B2 JUMP JUMPDEST PUSH2 0x2A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x6F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDE PUSH2 0x2BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEB SWAP2 SWAP1 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x109 SWAP2 SWAP1 PUSH2 0x62D JUMP JUMPDEST PUSH2 0x2C0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x6B2 JUMP JUMPDEST PUSH2 0x34B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x6F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x148 PUSH2 0x391 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x152 PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x745 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x6B2 JUMP JUMPDEST PUSH2 0x3CB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18C PUSH2 0x44F JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD CALLER DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1A4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 PUSH1 0x2 SLOAD DUP3 PUSH0 SHR LT SWAP1 POP DUP2 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x787A4C7D099CFF43C33055E1E6221E716930C7FDF0D56E90FAAB71E8A7DD762F DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x250 SWAP3 SWAP2 SWAP1 PUSH2 0x819 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 PUSH2 0x298 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0x8C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH2 0x2A2 PUSH2 0x49E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x4A7 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x30A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x301 SWAP1 PUSH2 0x928 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0x5A790C48CBEBDCEFF3F1FCD445AFD12D57302B7196738D61C60DCD491BF3EFBA DUP2 PUSH1 0x40 MLOAD PUSH2 0x340 SWAP2 SWAP1 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x399 PUSH2 0x4A7 JUMP JUMPDEST PUSH2 0x3A2 PUSH0 PUSH2 0x52E JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3D3 PUSH2 0x4A7 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x443 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43A SWAP2 SWAP1 PUSH2 0x745 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x44C DUP2 PUSH2 0x52E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x494 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48B SWAP1 PUSH2 0x990 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x4AF PUSH2 0x5EF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4CD PUSH2 0x3A4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x52C JUMPI PUSH2 0x4F0 PUSH2 0x5EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP2 SWAP1 PUSH2 0x745 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x60C DUP2 PUSH2 0x5FA JUMP JUMPDEST DUP2 EQ PUSH2 0x616 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x627 DUP2 PUSH2 0x603 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x642 JUMPI PUSH2 0x641 PUSH2 0x5F6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x64F DUP5 DUP3 DUP6 ADD PUSH2 0x619 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x681 DUP3 PUSH2 0x658 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x691 DUP2 PUSH2 0x677 JUMP JUMPDEST DUP2 EQ PUSH2 0x69B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6AC DUP2 PUSH2 0x688 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6C7 JUMPI PUSH2 0x6C6 PUSH2 0x5F6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6D4 DUP5 DUP3 DUP6 ADD PUSH2 0x69E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6EF DUP2 PUSH2 0x6DD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x708 PUSH0 DUP4 ADD DUP5 PUSH2 0x6E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x717 DUP2 PUSH2 0x5FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x730 PUSH0 DUP4 ADD DUP5 PUSH2 0x70E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x73F DUP2 PUSH2 0x677 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x758 PUSH0 DUP4 ADD DUP5 PUSH2 0x736 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x778 PUSH2 0x773 DUP3 PUSH2 0x5FA JUMP JUMPDEST PUSH2 0x75E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x794 DUP3 PUSH2 0x77E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7A5 DUP3 PUSH2 0x78A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7BD PUSH2 0x7B8 DUP3 PUSH2 0x677 JUMP JUMPDEST PUSH2 0x79B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7CE DUP3 DUP7 PUSH2 0x767 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x7DE DUP3 DUP6 PUSH2 0x7AC JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x7EE DUP3 DUP5 PUSH2 0x767 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x813 DUP2 PUSH2 0x7FF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x82C PUSH0 DUP4 ADD DUP6 PUSH2 0x6E6 JUMP JUMPDEST PUSH2 0x839 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x80A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536F6C7574696F6E206661696C732074686520646966666963756C7479207468 PUSH0 DUP3 ADD MSTORE PUSH32 0x726573686F6C6400000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x8AA PUSH1 0x27 DUP4 PUSH2 0x840 JUMP JUMPDEST SWAP2 POP PUSH2 0x8B5 DUP3 PUSH2 0x850 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x8D7 DUP2 PUSH2 0x89E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x446966666963756C7479206D757374206265203E203000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x912 PUSH1 0x16 DUP4 PUSH2 0x840 JUMP JUMPDEST SWAP2 POP PUSH2 0x91D DUP3 PUSH2 0x8DE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x93F DUP2 PUSH2 0x906 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x97A PUSH1 0x1F DUP4 PUSH2 0x840 JUMP JUMPDEST SWAP2 POP PUSH2 0x985 DUP3 PUSH2 0x946 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x9A7 DUP2 PUSH2 0x96E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD 0xC1 LOG4 SLT SHR 0x27 0x2C SHL 0x2C BALANCE 0xEE BLOBBASEFEE DIV SWAP9 PUSH10 0x7AB5C55BAA3C81CCEE0C EQ SWAP14 0xD3 0xD7 SAR PUSH11 0x8364736F6C634300081900 CALLER ",
							"sourceMap": "435:2659:3:-:0;;;1099:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1146:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:1;1821:7;:22;;;;1196:1:3::1;1176:17;:21;1168:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1247:17;1234:10;:30;;;;1099:172:::0;435:2659;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:4:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:351::-;764:6;813:2;801:9;792:7;788:23;784:32;781:119;;;819:79;;:::i;:::-;781:119;939:1;964:64;1020:7;1011:6;1000:9;996:22;964:64;:::i;:::-;954:74;;910:128;694:351;;;;:::o;1051:126::-;1088:7;1128:42;1121:5;1117:54;1106:65;;1051:126;;;:::o;1183:96::-;1220:7;1249:24;1267:5;1249:24;:::i;:::-;1238:35;;1183:96;;;:::o;1285:118::-;1372:24;1390:5;1372:24;:::i;:::-;1367:3;1360:37;1285:118;;:::o;1409:222::-;1502:4;1540:2;1529:9;1525:18;1517:26;;1553:71;1621:1;1610:9;1606:17;1597:6;1553:71;:::i;:::-;1409:222;;;;:::o;1637:169::-;1721:11;1755:6;1750:3;1743:19;1795:4;1790:3;1786:14;1771:29;;1637:169;;;;:::o;1812:172::-;1952:24;1948:1;1940:6;1936:14;1929:48;1812:172;:::o;1990:366::-;2132:3;2153:67;2217:2;2212:3;2153:67;:::i;:::-;2146:74;;2229:93;2318:3;2229:93;:::i;:::-;2347:2;2342:3;2338:12;2331:19;;1990:366;;;:::o;2362:419::-;2528:4;2566:2;2555:9;2551:18;2543:26;;2615:9;2609:4;2605:20;2601:1;2590:9;2586:17;2579:47;2643:131;2769:4;2643:131;:::i;:::-;2635:139;;2362:419;;;:::o;435:2659:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 1191,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_224": {
									"entryPoint": 1519,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_200": {
									"entryPoint": 1182,
									"id": 200,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_192": {
									"entryPoint": 1103,
									"id": 192,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 1326,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@difficulty_254": {
									"entryPoint": 698,
									"id": 254,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getUserSolution_383": {
									"entryPoint": 843,
									"id": 383,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 932,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 913,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@submitSolution_370": {
									"entryPoint": 388,
									"id": 370,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 971,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateDifficulty_317": {
									"entryPoint": 704,
									"id": 317,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userSolutions_259": {
									"entryPoint": 677,
									"id": 259,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1694,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1714,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1846,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack": {
									"entryPoint": 1964,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2058,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 1766,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_39ec3ce3e91ece4ed172b6f3a1cce21957f23bd760febd7260c9a995b058241f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2310,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b41857f38731ca3d79fa018f9670a60be63a6e7d53c8e24073c72835f3a2791f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2206,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2414,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1806,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack": {
									"entryPoint": 1895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1987,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1861,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 1781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bool__to_t_bytes32_t_bool__fromStack_reversed": {
									"entryPoint": 2073,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_39ec3ce3e91ece4ed172b6f3a1cce21957f23bd760febd7260c9a995b058241f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2344,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b41857f38731ca3d79fa018f9670a60be63a6e7d53c8e24073c72835f3a2791f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2448,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1655,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2047,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 1757,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1624,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1530,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_address": {
									"entryPoint": 1947,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint160": {
									"entryPoint": 1930,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint256": {
									"entryPoint": 1886,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1526,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_96": {
									"entryPoint": 1918,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_39ec3ce3e91ece4ed172b6f3a1cce21957f23bd760febd7260c9a995b058241f": {
									"entryPoint": 2270,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b41857f38731ca3d79fa018f9670a60be63a6e7d53c8e24073c72835f3a2791f": {
									"entryPoint": 2128,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 2374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1672,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1539,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7964:4",
										"nodeType": "YulBlock",
										"src": "0:7964:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:4",
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nativeSrc": "57:19:4",
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:4",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nativeSrc": "67:9:4",
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:4",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nativeSrc": "177:28:4",
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:4",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:4",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nativeSrc": "187:12:4",
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nativeSrc": "187:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nativeSrc": "300:28:4",
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:4",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:4",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nativeSrc": "310:12:4",
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nativeSrc": "310:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nativeSrc": "379:32:4",
													"nodeType": "YulBlock",
													"src": "379:32:4",
													"statements": [
														{
															"nativeSrc": "389:16:4",
															"nodeType": "YulAssignment",
															"src": "389:16:4",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:4",
																"nodeType": "YulIdentifier",
																"src": "400:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:4",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:4",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:77:4"
											},
											{
												"body": {
													"nativeSrc": "460:79:4",
													"nodeType": "YulBlock",
													"src": "460:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:4",
																"nodeType": "YulBlock",
																"src": "517:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:4",
																					"nodeType": "YulLiteral",
																					"src": "526:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:4",
																					"nodeType": "YulLiteral",
																					"src": "529:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:4"
																			},
																			"nativeSrc": "519:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:4"
																		},
																		"nativeSrc": "519:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:4"
																				},
																				"nativeSrc": "490:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:4"
																		},
																		"nativeSrc": "480:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:4"
																},
																"nativeSrc": "473:43:4",
																"nodeType": "YulFunctionCall",
																"src": "473:43:4"
															},
															"nativeSrc": "470:63:4",
															"nodeType": "YulIf",
															"src": "470:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:4",
														"nodeType": "YulTypedName",
														"src": "453:5:4",
														"type": ""
													}
												],
												"src": "417:122:4"
											},
											{
												"body": {
													"nativeSrc": "597:87:4",
													"nodeType": "YulBlock",
													"src": "597:87:4",
													"statements": [
														{
															"nativeSrc": "607:29:4",
															"nodeType": "YulAssignment",
															"src": "607:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:4"
																},
																"nativeSrc": "616:20:4",
																"nodeType": "YulFunctionCall",
																"src": "616:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:4"
																},
																"nativeSrc": "645:33:4",
																"nodeType": "YulFunctionCall",
																"src": "645:33:4"
															},
															"nativeSrc": "645:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:4",
														"nodeType": "YulTypedName",
														"src": "575:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:4",
														"nodeType": "YulTypedName",
														"src": "583:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:4",
														"nodeType": "YulTypedName",
														"src": "591:5:4",
														"type": ""
													}
												],
												"src": "545:139:4"
											},
											{
												"body": {
													"nativeSrc": "756:263:4",
													"nodeType": "YulBlock",
													"src": "756:263:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:4",
																"nodeType": "YulBlock",
																"src": "802:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:4"
																			},
																			"nativeSrc": "804:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:4"
																		},
																		"nativeSrc": "804:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:4"
																		},
																		"nativeSrc": "773:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:4",
																		"nodeType": "YulLiteral",
																		"src": "798:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:4"
																},
																"nativeSrc": "769:32:4",
																"nodeType": "YulFunctionCall",
																"src": "769:32:4"
															},
															"nativeSrc": "766:119:4",
															"nodeType": "YulIf",
															"src": "766:119:4"
														},
														{
															"nativeSrc": "895:117:4",
															"nodeType": "YulBlock",
															"src": "895:117:4",
															"statements": [
																{
																	"nativeSrc": "910:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:4",
																		"nodeType": "YulLiteral",
																		"src": "924:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:4",
																			"nodeType": "YulTypedName",
																			"src": "914:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:4",
																	"nodeType": "YulAssignment",
																	"src": "939:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:4"
																				},
																				"nativeSrc": "970:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:4"
																		},
																		"nativeSrc": "949:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:4",
														"nodeType": "YulTypedName",
														"src": "726:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:4",
														"nodeType": "YulTypedName",
														"src": "737:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:4",
														"nodeType": "YulTypedName",
														"src": "749:6:4",
														"type": ""
													}
												],
												"src": "690:329:4"
											},
											{
												"body": {
													"nativeSrc": "1070:81:4",
													"nodeType": "YulBlock",
													"src": "1070:81:4",
													"statements": [
														{
															"nativeSrc": "1080:65:4",
															"nodeType": "YulAssignment",
															"src": "1080:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1095:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1095:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1102:42:4",
																		"nodeType": "YulLiteral",
																		"src": "1102:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1091:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1091:3:4"
																},
																"nativeSrc": "1091:54:4",
																"nodeType": "YulFunctionCall",
																"src": "1091:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1080:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "1080:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1025:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1052:5:4",
														"nodeType": "YulTypedName",
														"src": "1052:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1062:7:4",
														"nodeType": "YulTypedName",
														"src": "1062:7:4",
														"type": ""
													}
												],
												"src": "1025:126:4"
											},
											{
												"body": {
													"nativeSrc": "1202:51:4",
													"nodeType": "YulBlock",
													"src": "1202:51:4",
													"statements": [
														{
															"nativeSrc": "1212:35:4",
															"nodeType": "YulAssignment",
															"src": "1212:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1241:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1241:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1223:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "1223:17:4"
																},
																"nativeSrc": "1223:24:4",
																"nodeType": "YulFunctionCall",
																"src": "1223:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1212:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "1212:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1157:96:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1184:5:4",
														"nodeType": "YulTypedName",
														"src": "1184:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1194:7:4",
														"nodeType": "YulTypedName",
														"src": "1194:7:4",
														"type": ""
													}
												],
												"src": "1157:96:4"
											},
											{
												"body": {
													"nativeSrc": "1302:79:4",
													"nodeType": "YulBlock",
													"src": "1302:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1359:16:4",
																"nodeType": "YulBlock",
																"src": "1359:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1368:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1368:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1371:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1371:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1361:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1361:6:4"
																			},
																			"nativeSrc": "1361:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1361:12:4"
																		},
																		"nativeSrc": "1361:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1361:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1325:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1325:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1350:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "1350:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1332:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "1332:17:4"
																				},
																				"nativeSrc": "1332:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1332:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1322:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "1322:2:4"
																		},
																		"nativeSrc": "1322:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1322:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1315:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1315:6:4"
																},
																"nativeSrc": "1315:43:4",
																"nodeType": "YulFunctionCall",
																"src": "1315:43:4"
															},
															"nativeSrc": "1312:63:4",
															"nodeType": "YulIf",
															"src": "1312:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1259:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1295:5:4",
														"nodeType": "YulTypedName",
														"src": "1295:5:4",
														"type": ""
													}
												],
												"src": "1259:122:4"
											},
											{
												"body": {
													"nativeSrc": "1439:87:4",
													"nodeType": "YulBlock",
													"src": "1439:87:4",
													"statements": [
														{
															"nativeSrc": "1449:29:4",
															"nodeType": "YulAssignment",
															"src": "1449:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1471:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1471:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1458:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "1458:12:4"
																},
																"nativeSrc": "1458:20:4",
																"nodeType": "YulFunctionCall",
																"src": "1458:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1449:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "1449:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1514:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1514:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1487:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "1487:26:4"
																},
																"nativeSrc": "1487:33:4",
																"nodeType": "YulFunctionCall",
																"src": "1487:33:4"
															},
															"nativeSrc": "1487:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "1487:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1387:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1417:6:4",
														"nodeType": "YulTypedName",
														"src": "1417:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1425:3:4",
														"nodeType": "YulTypedName",
														"src": "1425:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1433:5:4",
														"nodeType": "YulTypedName",
														"src": "1433:5:4",
														"type": ""
													}
												],
												"src": "1387:139:4"
											},
											{
												"body": {
													"nativeSrc": "1598:263:4",
													"nodeType": "YulBlock",
													"src": "1598:263:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1644:83:4",
																"nodeType": "YulBlock",
																"src": "1644:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1646:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "1646:77:4"
																			},
																			"nativeSrc": "1646:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1646:79:4"
																		},
																		"nativeSrc": "1646:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1646:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1619:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1619:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1628:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1628:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1615:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1615:3:4"
																		},
																		"nativeSrc": "1615:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1615:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1640:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1640:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1611:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1611:3:4"
																},
																"nativeSrc": "1611:32:4",
																"nodeType": "YulFunctionCall",
																"src": "1611:32:4"
															},
															"nativeSrc": "1608:119:4",
															"nodeType": "YulIf",
															"src": "1608:119:4"
														},
														{
															"nativeSrc": "1737:117:4",
															"nodeType": "YulBlock",
															"src": "1737:117:4",
															"statements": [
																{
																	"nativeSrc": "1752:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1752:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1766:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1766:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1756:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1756:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1781:63:4",
																	"nodeType": "YulAssignment",
																	"src": "1781:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1816:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1816:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1827:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1827:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1812:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1812:3:4"
																				},
																				"nativeSrc": "1812:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1812:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1836:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1836:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1791:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "1791:20:4"
																		},
																		"nativeSrc": "1791:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1791:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1781:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1781:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1532:329:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1568:9:4",
														"nodeType": "YulTypedName",
														"src": "1568:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1579:7:4",
														"nodeType": "YulTypedName",
														"src": "1579:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1591:6:4",
														"nodeType": "YulTypedName",
														"src": "1591:6:4",
														"type": ""
													}
												],
												"src": "1532:329:4"
											},
											{
												"body": {
													"nativeSrc": "1912:32:4",
													"nodeType": "YulBlock",
													"src": "1912:32:4",
													"statements": [
														{
															"nativeSrc": "1922:16:4",
															"nodeType": "YulAssignment",
															"src": "1922:16:4",
															"value": {
																"name": "value",
																"nativeSrc": "1933:5:4",
																"nodeType": "YulIdentifier",
																"src": "1933:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1922:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "1922:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "1867:77:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1894:5:4",
														"nodeType": "YulTypedName",
														"src": "1894:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1904:7:4",
														"nodeType": "YulTypedName",
														"src": "1904:7:4",
														"type": ""
													}
												],
												"src": "1867:77:4"
											},
											{
												"body": {
													"nativeSrc": "2015:53:4",
													"nodeType": "YulBlock",
													"src": "2015:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2032:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2032:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2055:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "2055:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "2037:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "2037:17:4"
																		},
																		"nativeSrc": "2037:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2037:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2025:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2025:6:4"
																},
																"nativeSrc": "2025:37:4",
																"nodeType": "YulFunctionCall",
																"src": "2025:37:4"
															},
															"nativeSrc": "2025:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "2025:37:4"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "1950:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2003:5:4",
														"nodeType": "YulTypedName",
														"src": "2003:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2010:3:4",
														"nodeType": "YulTypedName",
														"src": "2010:3:4",
														"type": ""
													}
												],
												"src": "1950:118:4"
											},
											{
												"body": {
													"nativeSrc": "2172:124:4",
													"nodeType": "YulBlock",
													"src": "2172:124:4",
													"statements": [
														{
															"nativeSrc": "2182:26:4",
															"nodeType": "YulAssignment",
															"src": "2182:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2194:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2194:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2205:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2205:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2190:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2190:3:4"
																},
																"nativeSrc": "2190:18:4",
																"nodeType": "YulFunctionCall",
																"src": "2190:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2182:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2182:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2262:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2262:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2275:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2275:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2286:1:4",
																				"nodeType": "YulLiteral",
																				"src": "2286:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2271:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2271:3:4"
																		},
																		"nativeSrc": "2271:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2271:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "2218:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "2218:43:4"
																},
																"nativeSrc": "2218:71:4",
																"nodeType": "YulFunctionCall",
																"src": "2218:71:4"
															},
															"nativeSrc": "2218:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "2218:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "2074:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2144:9:4",
														"nodeType": "YulTypedName",
														"src": "2144:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2156:6:4",
														"nodeType": "YulTypedName",
														"src": "2156:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2167:4:4",
														"nodeType": "YulTypedName",
														"src": "2167:4:4",
														"type": ""
													}
												],
												"src": "2074:222:4"
											},
											{
												"body": {
													"nativeSrc": "2367:53:4",
													"nodeType": "YulBlock",
													"src": "2367:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2384:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2384:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2407:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "2407:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2389:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "2389:17:4"
																		},
																		"nativeSrc": "2389:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2389:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2377:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2377:6:4"
																},
																"nativeSrc": "2377:37:4",
																"nodeType": "YulFunctionCall",
																"src": "2377:37:4"
															},
															"nativeSrc": "2377:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "2377:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2302:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2355:5:4",
														"nodeType": "YulTypedName",
														"src": "2355:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2362:3:4",
														"nodeType": "YulTypedName",
														"src": "2362:3:4",
														"type": ""
													}
												],
												"src": "2302:118:4"
											},
											{
												"body": {
													"nativeSrc": "2524:124:4",
													"nodeType": "YulBlock",
													"src": "2524:124:4",
													"statements": [
														{
															"nativeSrc": "2534:26:4",
															"nodeType": "YulAssignment",
															"src": "2534:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2546:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2546:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2542:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2542:3:4"
																},
																"nativeSrc": "2542:18:4",
																"nodeType": "YulFunctionCall",
																"src": "2542:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2534:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2534:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2614:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2614:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2627:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2627:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2638:1:4",
																				"nodeType": "YulLiteral",
																				"src": "2638:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2623:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2623:3:4"
																		},
																		"nativeSrc": "2623:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2623:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2570:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "2570:43:4"
																},
																"nativeSrc": "2570:71:4",
																"nodeType": "YulFunctionCall",
																"src": "2570:71:4"
															},
															"nativeSrc": "2570:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "2570:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2426:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2496:9:4",
														"nodeType": "YulTypedName",
														"src": "2496:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2508:6:4",
														"nodeType": "YulTypedName",
														"src": "2508:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2519:4:4",
														"nodeType": "YulTypedName",
														"src": "2519:4:4",
														"type": ""
													}
												],
												"src": "2426:222:4"
											},
											{
												"body": {
													"nativeSrc": "2719:53:4",
													"nodeType": "YulBlock",
													"src": "2719:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2736:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2736:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2759:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "2759:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2741:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "2741:17:4"
																		},
																		"nativeSrc": "2741:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2741:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2729:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2729:6:4"
																},
																"nativeSrc": "2729:37:4",
																"nodeType": "YulFunctionCall",
																"src": "2729:37:4"
															},
															"nativeSrc": "2729:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "2729:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2654:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2707:5:4",
														"nodeType": "YulTypedName",
														"src": "2707:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2714:3:4",
														"nodeType": "YulTypedName",
														"src": "2714:3:4",
														"type": ""
													}
												],
												"src": "2654:118:4"
											},
											{
												"body": {
													"nativeSrc": "2876:124:4",
													"nodeType": "YulBlock",
													"src": "2876:124:4",
													"statements": [
														{
															"nativeSrc": "2886:26:4",
															"nodeType": "YulAssignment",
															"src": "2886:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2898:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2898:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2909:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2909:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2894:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2894:3:4"
																},
																"nativeSrc": "2894:18:4",
																"nodeType": "YulFunctionCall",
																"src": "2894:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2886:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2886:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2966:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2966:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2979:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2979:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2990:1:4",
																				"nodeType": "YulLiteral",
																				"src": "2990:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2975:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2975:3:4"
																		},
																		"nativeSrc": "2975:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2975:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2922:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "2922:43:4"
																},
																"nativeSrc": "2922:71:4",
																"nodeType": "YulFunctionCall",
																"src": "2922:71:4"
															},
															"nativeSrc": "2922:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "2922:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2778:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2848:9:4",
														"nodeType": "YulTypedName",
														"src": "2848:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2860:6:4",
														"nodeType": "YulTypedName",
														"src": "2860:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2871:4:4",
														"nodeType": "YulTypedName",
														"src": "2871:4:4",
														"type": ""
													}
												],
												"src": "2778:222:4"
											},
											{
												"body": {
													"nativeSrc": "3053:32:4",
													"nodeType": "YulBlock",
													"src": "3053:32:4",
													"statements": [
														{
															"nativeSrc": "3063:16:4",
															"nodeType": "YulAssignment",
															"src": "3063:16:4",
															"value": {
																"name": "value",
																"nativeSrc": "3074:5:4",
																"nodeType": "YulIdentifier",
																"src": "3074:5:4"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "3063:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "3063:7:4"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint256",
												"nativeSrc": "3006:79:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3035:5:4",
														"nodeType": "YulTypedName",
														"src": "3035:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "3045:7:4",
														"nodeType": "YulTypedName",
														"src": "3045:7:4",
														"type": ""
													}
												],
												"src": "3006:79:4"
											},
											{
												"body": {
													"nativeSrc": "3174:74:4",
													"nodeType": "YulBlock",
													"src": "3174:74:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3191:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3234:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "3234:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3216:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "3216:17:4"
																				},
																				"nativeSrc": "3216:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3216:24:4"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_uint256",
																			"nativeSrc": "3196:19:4",
																			"nodeType": "YulIdentifier",
																			"src": "3196:19:4"
																		},
																		"nativeSrc": "3196:45:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3196:45:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3184:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:4"
																},
																"nativeSrc": "3184:58:4",
																"nodeType": "YulFunctionCall",
																"src": "3184:58:4"
															},
															"nativeSrc": "3184:58:4",
															"nodeType": "YulExpressionStatement",
															"src": "3184:58:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
												"nativeSrc": "3091:157:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3162:5:4",
														"nodeType": "YulTypedName",
														"src": "3162:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3169:3:4",
														"nodeType": "YulTypedName",
														"src": "3169:3:4",
														"type": ""
													}
												],
												"src": "3091:157:4"
											},
											{
												"body": {
													"nativeSrc": "3296:52:4",
													"nodeType": "YulBlock",
													"src": "3296:52:4",
													"statements": [
														{
															"nativeSrc": "3306:35:4",
															"nodeType": "YulAssignment",
															"src": "3306:35:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3331:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3331:2:4",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3335:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "3335:5:4"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "3327:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3327:3:4"
																},
																"nativeSrc": "3327:14:4",
																"nodeType": "YulFunctionCall",
																"src": "3327:14:4"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3306:8:4",
																	"nodeType": "YulIdentifier",
																	"src": "3306:8:4"
																}
															]
														}
													]
												},
												"name": "shift_left_96",
												"nativeSrc": "3254:94:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3277:5:4",
														"nodeType": "YulTypedName",
														"src": "3277:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3287:8:4",
														"nodeType": "YulTypedName",
														"src": "3287:8:4",
														"type": ""
													}
												],
												"src": "3254:94:4"
											},
											{
												"body": {
													"nativeSrc": "3401:47:4",
													"nodeType": "YulBlock",
													"src": "3401:47:4",
													"statements": [
														{
															"nativeSrc": "3411:31:4",
															"nodeType": "YulAssignment",
															"src": "3411:31:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3436:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "3436:5:4"
																	}
																],
																"functionName": {
																	"name": "shift_left_96",
																	"nativeSrc": "3422:13:4",
																	"nodeType": "YulIdentifier",
																	"src": "3422:13:4"
																},
																"nativeSrc": "3422:20:4",
																"nodeType": "YulFunctionCall",
																"src": "3422:20:4"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "3411:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "3411:7:4"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint160",
												"nativeSrc": "3354:94:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3383:5:4",
														"nodeType": "YulTypedName",
														"src": "3383:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "3393:7:4",
														"nodeType": "YulTypedName",
														"src": "3393:7:4",
														"type": ""
													}
												],
												"src": "3354:94:4"
											},
											{
												"body": {
													"nativeSrc": "3501:53:4",
													"nodeType": "YulBlock",
													"src": "3501:53:4",
													"statements": [
														{
															"nativeSrc": "3511:37:4",
															"nodeType": "YulAssignment",
															"src": "3511:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3542:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "3542:5:4"
																	}
																],
																"functionName": {
																	"name": "leftAlign_t_uint160",
																	"nativeSrc": "3522:19:4",
																	"nodeType": "YulIdentifier",
																	"src": "3522:19:4"
																},
																"nativeSrc": "3522:26:4",
																"nodeType": "YulFunctionCall",
																"src": "3522:26:4"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "3511:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "3511:7:4"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_address",
												"nativeSrc": "3454:100:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3483:5:4",
														"nodeType": "YulTypedName",
														"src": "3483:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "3493:7:4",
														"nodeType": "YulTypedName",
														"src": "3493:7:4",
														"type": ""
													}
												],
												"src": "3454:100:4"
											},
											{
												"body": {
													"nativeSrc": "3643:74:4",
													"nodeType": "YulBlock",
													"src": "3643:74:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3660:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "3660:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3703:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "3703:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3685:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "3685:17:4"
																				},
																				"nativeSrc": "3685:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3685:24:4"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_address",
																			"nativeSrc": "3665:19:4",
																			"nodeType": "YulIdentifier",
																			"src": "3665:19:4"
																		},
																		"nativeSrc": "3665:45:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3665:45:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3653:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3653:6:4"
																},
																"nativeSrc": "3653:58:4",
																"nodeType": "YulFunctionCall",
																"src": "3653:58:4"
															},
															"nativeSrc": "3653:58:4",
															"nodeType": "YulExpressionStatement",
															"src": "3653:58:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
												"nativeSrc": "3560:157:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3631:5:4",
														"nodeType": "YulTypedName",
														"src": "3631:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3638:3:4",
														"nodeType": "YulTypedName",
														"src": "3638:3:4",
														"type": ""
													}
												],
												"src": "3560:157:4"
											},
											{
												"body": {
													"nativeSrc": "3895:366:4",
													"nodeType": "YulBlock",
													"src": "3895:366:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3968:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3968:6:4"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3977:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "3977:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nativeSrc": "3906:61:4",
																	"nodeType": "YulIdentifier",
																	"src": "3906:61:4"
																},
																"nativeSrc": "3906:75:4",
																"nodeType": "YulFunctionCall",
																"src": "3906:75:4"
															},
															"nativeSrc": "3906:75:4",
															"nodeType": "YulExpressionStatement",
															"src": "3906:75:4"
														},
														{
															"nativeSrc": "3990:19:4",
															"nodeType": "YulAssignment",
															"src": "3990:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4001:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4001:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4006:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4006:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3997:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3997:3:4"
																},
																"nativeSrc": "3997:12:4",
																"nodeType": "YulFunctionCall",
																"src": "3997:12:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3990:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3990:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4081:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "4081:6:4"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "4090:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4090:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nativeSrc": "4019:61:4",
																	"nodeType": "YulIdentifier",
																	"src": "4019:61:4"
																},
																"nativeSrc": "4019:75:4",
																"nodeType": "YulFunctionCall",
																"src": "4019:75:4"
															},
															"nativeSrc": "4019:75:4",
															"nodeType": "YulExpressionStatement",
															"src": "4019:75:4"
														},
														{
															"nativeSrc": "4103:19:4",
															"nodeType": "YulAssignment",
															"src": "4103:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4114:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4114:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4119:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4119:2:4",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4110:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4110:3:4"
																},
																"nativeSrc": "4110:12:4",
																"nodeType": "YulFunctionCall",
																"src": "4110:12:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4103:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4103:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "4194:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "4194:6:4"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "4203:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4203:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nativeSrc": "4132:61:4",
																	"nodeType": "YulIdentifier",
																	"src": "4132:61:4"
																},
																"nativeSrc": "4132:75:4",
																"nodeType": "YulFunctionCall",
																"src": "4132:75:4"
															},
															"nativeSrc": "4132:75:4",
															"nodeType": "YulExpressionStatement",
															"src": "4132:75:4"
														},
														{
															"nativeSrc": "4216:19:4",
															"nodeType": "YulAssignment",
															"src": "4216:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4227:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4227:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4232:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4232:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4223:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4223:3:4"
																},
																"nativeSrc": "4223:12:4",
																"nodeType": "YulFunctionCall",
																"src": "4223:12:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4216:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4216:3:4"
																}
															]
														},
														{
															"nativeSrc": "4245:10:4",
															"nodeType": "YulAssignment",
															"src": "4245:10:4",
															"value": {
																"name": "pos",
																"nativeSrc": "4252:3:4",
																"nodeType": "YulIdentifier",
																"src": "4252:3:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4245:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4245:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "3723:538:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3858:3:4",
														"nodeType": "YulTypedName",
														"src": "3858:3:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3864:6:4",
														"nodeType": "YulTypedName",
														"src": "3864:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3872:6:4",
														"nodeType": "YulTypedName",
														"src": "3872:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3880:6:4",
														"nodeType": "YulTypedName",
														"src": "3880:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3891:3:4",
														"nodeType": "YulTypedName",
														"src": "3891:3:4",
														"type": ""
													}
												],
												"src": "3723:538:4"
											},
											{
												"body": {
													"nativeSrc": "4309:48:4",
													"nodeType": "YulBlock",
													"src": "4309:48:4",
													"statements": [
														{
															"nativeSrc": "4319:32:4",
															"nodeType": "YulAssignment",
															"src": "4319:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4344:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "4344:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "4337:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:4"
																		},
																		"nativeSrc": "4337:13:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4337:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4330:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4330:6:4"
																},
																"nativeSrc": "4330:21:4",
																"nodeType": "YulFunctionCall",
																"src": "4330:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4319:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "4319:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "4267:90:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4291:5:4",
														"nodeType": "YulTypedName",
														"src": "4291:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4301:7:4",
														"nodeType": "YulTypedName",
														"src": "4301:7:4",
														"type": ""
													}
												],
												"src": "4267:90:4"
											},
											{
												"body": {
													"nativeSrc": "4422:50:4",
													"nodeType": "YulBlock",
													"src": "4422:50:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4439:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4439:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4459:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "4459:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "4444:14:4",
																			"nodeType": "YulIdentifier",
																			"src": "4444:14:4"
																		},
																		"nativeSrc": "4444:21:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4444:21:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4432:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4432:6:4"
																},
																"nativeSrc": "4432:34:4",
																"nodeType": "YulFunctionCall",
																"src": "4432:34:4"
															},
															"nativeSrc": "4432:34:4",
															"nodeType": "YulExpressionStatement",
															"src": "4432:34:4"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "4363:109:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4410:5:4",
														"nodeType": "YulTypedName",
														"src": "4410:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4417:3:4",
														"nodeType": "YulTypedName",
														"src": "4417:3:4",
														"type": ""
													}
												],
												"src": "4363:109:4"
											},
											{
												"body": {
													"nativeSrc": "4598:200:4",
													"nodeType": "YulBlock",
													"src": "4598:200:4",
													"statements": [
														{
															"nativeSrc": "4608:26:4",
															"nodeType": "YulAssignment",
															"src": "4608:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4620:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "4620:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4631:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4631:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4616:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4616:3:4"
																},
																"nativeSrc": "4616:18:4",
																"nodeType": "YulFunctionCall",
																"src": "4616:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4608:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "4608:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4688:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "4688:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4701:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4701:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4712:1:4",
																				"nodeType": "YulLiteral",
																				"src": "4712:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4697:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4697:3:4"
																		},
																		"nativeSrc": "4697:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4697:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "4644:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "4644:43:4"
																},
																"nativeSrc": "4644:71:4",
																"nodeType": "YulFunctionCall",
																"src": "4644:71:4"
															},
															"nativeSrc": "4644:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "4644:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4763:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "4763:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4776:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4776:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4787:2:4",
																				"nodeType": "YulLiteral",
																				"src": "4787:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4772:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4772:3:4"
																		},
																		"nativeSrc": "4772:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4772:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "4725:37:4",
																	"nodeType": "YulIdentifier",
																	"src": "4725:37:4"
																},
																"nativeSrc": "4725:66:4",
																"nodeType": "YulFunctionCall",
																"src": "4725:66:4"
															},
															"nativeSrc": "4725:66:4",
															"nodeType": "YulExpressionStatement",
															"src": "4725:66:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bool__to_t_bytes32_t_bool__fromStack_reversed",
												"nativeSrc": "4478:320:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4562:9:4",
														"nodeType": "YulTypedName",
														"src": "4562:9:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4574:6:4",
														"nodeType": "YulTypedName",
														"src": "4574:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4582:6:4",
														"nodeType": "YulTypedName",
														"src": "4582:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4593:4:4",
														"nodeType": "YulTypedName",
														"src": "4593:4:4",
														"type": ""
													}
												],
												"src": "4478:320:4"
											},
											{
												"body": {
													"nativeSrc": "4900:73:4",
													"nodeType": "YulBlock",
													"src": "4900:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4917:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4917:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4922:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "4922:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4910:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4910:6:4"
																},
																"nativeSrc": "4910:19:4",
																"nodeType": "YulFunctionCall",
																"src": "4910:19:4"
															},
															"nativeSrc": "4910:19:4",
															"nodeType": "YulExpressionStatement",
															"src": "4910:19:4"
														},
														{
															"nativeSrc": "4938:29:4",
															"nodeType": "YulAssignment",
															"src": "4938:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4957:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4957:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4962:4:4",
																		"nodeType": "YulLiteral",
																		"src": "4962:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4953:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4953:3:4"
																},
																"nativeSrc": "4953:14:4",
																"nodeType": "YulFunctionCall",
																"src": "4953:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4938:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "4938:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "4804:169:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4872:3:4",
														"nodeType": "YulTypedName",
														"src": "4872:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4877:6:4",
														"nodeType": "YulTypedName",
														"src": "4877:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4888:11:4",
														"nodeType": "YulTypedName",
														"src": "4888:11:4",
														"type": ""
													}
												],
												"src": "4804:169:4"
											},
											{
												"body": {
													"nativeSrc": "5085:120:4",
													"nodeType": "YulBlock",
													"src": "5085:120:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5107:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "5107:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5115:1:4",
																				"nodeType": "YulLiteral",
																				"src": "5115:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5103:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5103:3:4"
																		},
																		"nativeSrc": "5103:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5103:14:4"
																	},
																	{
																		"hexValue": "536f6c7574696f6e206661696c732074686520646966666963756c7479207468",
																		"kind": "string",
																		"nativeSrc": "5119:34:4",
																		"nodeType": "YulLiteral",
																		"src": "5119:34:4",
																		"type": "",
																		"value": "Solution fails the difficulty th"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5096:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5096:6:4"
																},
																"nativeSrc": "5096:58:4",
																"nodeType": "YulFunctionCall",
																"src": "5096:58:4"
															},
															"nativeSrc": "5096:58:4",
															"nodeType": "YulExpressionStatement",
															"src": "5096:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5175:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "5175:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5183:2:4",
																				"nodeType": "YulLiteral",
																				"src": "5183:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5171:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5171:3:4"
																		},
																		"nativeSrc": "5171:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5171:15:4"
																	},
																	{
																		"hexValue": "726573686f6c64",
																		"kind": "string",
																		"nativeSrc": "5188:9:4",
																		"nodeType": "YulLiteral",
																		"src": "5188:9:4",
																		"type": "",
																		"value": "reshold"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5164:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5164:6:4"
																},
																"nativeSrc": "5164:34:4",
																"nodeType": "YulFunctionCall",
																"src": "5164:34:4"
															},
															"nativeSrc": "5164:34:4",
															"nodeType": "YulExpressionStatement",
															"src": "5164:34:4"
														}
													]
												},
												"name": "store_literal_in_memory_b41857f38731ca3d79fa018f9670a60be63a6e7d53c8e24073c72835f3a2791f",
												"nativeSrc": "4979:226:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5077:6:4",
														"nodeType": "YulTypedName",
														"src": "5077:6:4",
														"type": ""
													}
												],
												"src": "4979:226:4"
											},
											{
												"body": {
													"nativeSrc": "5357:220:4",
													"nodeType": "YulBlock",
													"src": "5357:220:4",
													"statements": [
														{
															"nativeSrc": "5367:74:4",
															"nodeType": "YulAssignment",
															"src": "5367:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5433:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "5433:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5438:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5438:2:4",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5374:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "5374:58:4"
																},
																"nativeSrc": "5374:67:4",
																"nodeType": "YulFunctionCall",
																"src": "5374:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5367:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5367:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5539:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "5539:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b41857f38731ca3d79fa018f9670a60be63a6e7d53c8e24073c72835f3a2791f",
																	"nativeSrc": "5450:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "5450:88:4"
																},
																"nativeSrc": "5450:93:4",
																"nodeType": "YulFunctionCall",
																"src": "5450:93:4"
															},
															"nativeSrc": "5450:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "5450:93:4"
														},
														{
															"nativeSrc": "5552:19:4",
															"nodeType": "YulAssignment",
															"src": "5552:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5563:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "5563:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5568:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5568:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5559:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5559:3:4"
																},
																"nativeSrc": "5559:12:4",
																"nodeType": "YulFunctionCall",
																"src": "5559:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5552:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5552:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b41857f38731ca3d79fa018f9670a60be63a6e7d53c8e24073c72835f3a2791f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5211:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5345:3:4",
														"nodeType": "YulTypedName",
														"src": "5345:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5353:3:4",
														"nodeType": "YulTypedName",
														"src": "5353:3:4",
														"type": ""
													}
												],
												"src": "5211:366:4"
											},
											{
												"body": {
													"nativeSrc": "5754:248:4",
													"nodeType": "YulBlock",
													"src": "5754:248:4",
													"statements": [
														{
															"nativeSrc": "5764:26:4",
															"nodeType": "YulAssignment",
															"src": "5764:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5776:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "5776:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5787:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5787:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5772:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5772:3:4"
																},
																"nativeSrc": "5772:18:4",
																"nodeType": "YulFunctionCall",
																"src": "5772:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5764:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "5764:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5811:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5811:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5822:1:4",
																				"nodeType": "YulLiteral",
																				"src": "5822:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5807:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5807:3:4"
																		},
																		"nativeSrc": "5807:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5807:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5830:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "5830:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5836:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5836:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5826:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5826:3:4"
																		},
																		"nativeSrc": "5826:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5826:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5800:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5800:6:4"
																},
																"nativeSrc": "5800:47:4",
																"nodeType": "YulFunctionCall",
																"src": "5800:47:4"
															},
															"nativeSrc": "5800:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "5800:47:4"
														},
														{
															"nativeSrc": "5856:139:4",
															"nodeType": "YulAssignment",
															"src": "5856:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5990:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "5990:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b41857f38731ca3d79fa018f9670a60be63a6e7d53c8e24073c72835f3a2791f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5864:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "5864:124:4"
																},
																"nativeSrc": "5864:131:4",
																"nodeType": "YulFunctionCall",
																"src": "5864:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5856:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "5856:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b41857f38731ca3d79fa018f9670a60be63a6e7d53c8e24073c72835f3a2791f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5583:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5734:9:4",
														"nodeType": "YulTypedName",
														"src": "5734:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5749:4:4",
														"nodeType": "YulTypedName",
														"src": "5749:4:4",
														"type": ""
													}
												],
												"src": "5583:419:4"
											},
											{
												"body": {
													"nativeSrc": "6114:66:4",
													"nodeType": "YulBlock",
													"src": "6114:66:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6136:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "6136:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6144:1:4",
																				"nodeType": "YulLiteral",
																				"src": "6144:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6132:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6132:3:4"
																		},
																		"nativeSrc": "6132:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6132:14:4"
																	},
																	{
																		"hexValue": "446966666963756c7479206d757374206265203e2030",
																		"kind": "string",
																		"nativeSrc": "6148:24:4",
																		"nodeType": "YulLiteral",
																		"src": "6148:24:4",
																		"type": "",
																		"value": "Difficulty must be > 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6125:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6125:6:4"
																},
																"nativeSrc": "6125:48:4",
																"nodeType": "YulFunctionCall",
																"src": "6125:48:4"
															},
															"nativeSrc": "6125:48:4",
															"nodeType": "YulExpressionStatement",
															"src": "6125:48:4"
														}
													]
												},
												"name": "store_literal_in_memory_39ec3ce3e91ece4ed172b6f3a1cce21957f23bd760febd7260c9a995b058241f",
												"nativeSrc": "6008:172:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6106:6:4",
														"nodeType": "YulTypedName",
														"src": "6106:6:4",
														"type": ""
													}
												],
												"src": "6008:172:4"
											},
											{
												"body": {
													"nativeSrc": "6332:220:4",
													"nodeType": "YulBlock",
													"src": "6332:220:4",
													"statements": [
														{
															"nativeSrc": "6342:74:4",
															"nodeType": "YulAssignment",
															"src": "6342:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6408:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "6408:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6413:2:4",
																		"nodeType": "YulLiteral",
																		"src": "6413:2:4",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6349:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "6349:58:4"
																},
																"nativeSrc": "6349:67:4",
																"nodeType": "YulFunctionCall",
																"src": "6349:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6342:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6342:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6514:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "6514:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_39ec3ce3e91ece4ed172b6f3a1cce21957f23bd760febd7260c9a995b058241f",
																	"nativeSrc": "6425:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "6425:88:4"
																},
																"nativeSrc": "6425:93:4",
																"nodeType": "YulFunctionCall",
																"src": "6425:93:4"
															},
															"nativeSrc": "6425:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "6425:93:4"
														},
														{
															"nativeSrc": "6527:19:4",
															"nodeType": "YulAssignment",
															"src": "6527:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6538:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "6538:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6543:2:4",
																		"nodeType": "YulLiteral",
																		"src": "6543:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6534:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6534:3:4"
																},
																"nativeSrc": "6534:12:4",
																"nodeType": "YulFunctionCall",
																"src": "6534:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6527:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6527:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_39ec3ce3e91ece4ed172b6f3a1cce21957f23bd760febd7260c9a995b058241f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6186:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6320:3:4",
														"nodeType": "YulTypedName",
														"src": "6320:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6328:3:4",
														"nodeType": "YulTypedName",
														"src": "6328:3:4",
														"type": ""
													}
												],
												"src": "6186:366:4"
											},
											{
												"body": {
													"nativeSrc": "6729:248:4",
													"nodeType": "YulBlock",
													"src": "6729:248:4",
													"statements": [
														{
															"nativeSrc": "6739:26:4",
															"nodeType": "YulAssignment",
															"src": "6739:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6751:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "6751:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6762:2:4",
																		"nodeType": "YulLiteral",
																		"src": "6762:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6747:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6747:3:4"
																},
																"nativeSrc": "6747:18:4",
																"nodeType": "YulFunctionCall",
																"src": "6747:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6739:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "6739:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6786:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "6786:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6797:1:4",
																				"nodeType": "YulLiteral",
																				"src": "6797:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6782:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6782:3:4"
																		},
																		"nativeSrc": "6782:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6782:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6805:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "6805:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6811:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "6811:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6801:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6801:3:4"
																		},
																		"nativeSrc": "6801:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6801:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6775:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6775:6:4"
																},
																"nativeSrc": "6775:47:4",
																"nodeType": "YulFunctionCall",
																"src": "6775:47:4"
															},
															"nativeSrc": "6775:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "6775:47:4"
														},
														{
															"nativeSrc": "6831:139:4",
															"nodeType": "YulAssignment",
															"src": "6831:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6965:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "6965:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_39ec3ce3e91ece4ed172b6f3a1cce21957f23bd760febd7260c9a995b058241f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6839:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "6839:124:4"
																},
																"nativeSrc": "6839:131:4",
																"nodeType": "YulFunctionCall",
																"src": "6839:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6831:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "6831:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_39ec3ce3e91ece4ed172b6f3a1cce21957f23bd760febd7260c9a995b058241f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6558:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6709:9:4",
														"nodeType": "YulTypedName",
														"src": "6709:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6724:4:4",
														"nodeType": "YulTypedName",
														"src": "6724:4:4",
														"type": ""
													}
												],
												"src": "6558:419:4"
											},
											{
												"body": {
													"nativeSrc": "7089:75:4",
													"nodeType": "YulBlock",
													"src": "7089:75:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7111:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "7111:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7119:1:4",
																				"nodeType": "YulLiteral",
																				"src": "7119:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7107:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7107:3:4"
																		},
																		"nativeSrc": "7107:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7107:14:4"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "7123:33:4",
																		"nodeType": "YulLiteral",
																		"src": "7123:33:4",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7100:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7100:6:4"
																},
																"nativeSrc": "7100:57:4",
																"nodeType": "YulFunctionCall",
																"src": "7100:57:4"
															},
															"nativeSrc": "7100:57:4",
															"nodeType": "YulExpressionStatement",
															"src": "7100:57:4"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "6983:181:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7081:6:4",
														"nodeType": "YulTypedName",
														"src": "7081:6:4",
														"type": ""
													}
												],
												"src": "6983:181:4"
											},
											{
												"body": {
													"nativeSrc": "7316:220:4",
													"nodeType": "YulBlock",
													"src": "7316:220:4",
													"statements": [
														{
															"nativeSrc": "7326:74:4",
															"nodeType": "YulAssignment",
															"src": "7326:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7392:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "7392:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7397:2:4",
																		"nodeType": "YulLiteral",
																		"src": "7397:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7333:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "7333:58:4"
																},
																"nativeSrc": "7333:67:4",
																"nodeType": "YulFunctionCall",
																"src": "7333:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7326:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7326:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7498:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "7498:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "7409:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "7409:88:4"
																},
																"nativeSrc": "7409:93:4",
																"nodeType": "YulFunctionCall",
																"src": "7409:93:4"
															},
															"nativeSrc": "7409:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "7409:93:4"
														},
														{
															"nativeSrc": "7511:19:4",
															"nodeType": "YulAssignment",
															"src": "7511:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7522:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "7522:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7527:2:4",
																		"nodeType": "YulLiteral",
																		"src": "7527:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7518:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7518:3:4"
																},
																"nativeSrc": "7518:12:4",
																"nodeType": "YulFunctionCall",
																"src": "7518:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7511:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7511:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7170:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7304:3:4",
														"nodeType": "YulTypedName",
														"src": "7304:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7312:3:4",
														"nodeType": "YulTypedName",
														"src": "7312:3:4",
														"type": ""
													}
												],
												"src": "7170:366:4"
											},
											{
												"body": {
													"nativeSrc": "7713:248:4",
													"nodeType": "YulBlock",
													"src": "7713:248:4",
													"statements": [
														{
															"nativeSrc": "7723:26:4",
															"nodeType": "YulAssignment",
															"src": "7723:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7735:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "7735:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7746:2:4",
																		"nodeType": "YulLiteral",
																		"src": "7746:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7731:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7731:3:4"
																},
																"nativeSrc": "7731:18:4",
																"nodeType": "YulFunctionCall",
																"src": "7731:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7723:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "7723:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7770:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "7770:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7781:1:4",
																				"nodeType": "YulLiteral",
																				"src": "7781:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7766:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7766:3:4"
																		},
																		"nativeSrc": "7766:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7766:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7789:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "7789:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7795:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "7795:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7785:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7785:3:4"
																		},
																		"nativeSrc": "7785:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7785:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7759:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7759:6:4"
																},
																"nativeSrc": "7759:47:4",
																"nodeType": "YulFunctionCall",
																"src": "7759:47:4"
															},
															"nativeSrc": "7759:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "7759:47:4"
														},
														{
															"nativeSrc": "7815:139:4",
															"nodeType": "YulAssignment",
															"src": "7815:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7949:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "7949:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7823:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "7823:124:4"
																},
																"nativeSrc": "7823:131:4",
																"nodeType": "YulFunctionCall",
																"src": "7823:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7815:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "7815:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7542:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7693:9:4",
														"nodeType": "YulTypedName",
														"src": "7693:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7708:4:4",
														"nodeType": "YulTypedName",
														"src": "7708:4:4",
														"type": ""
													}
												],
												"src": "7542:419:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function abi_encode_tuple_packed_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value2, value1, value0) -> end {\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bool__to_t_bytes32_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_b41857f38731ca3d79fa018f9670a60be63a6e7d53c8e24073c72835f3a2791f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Solution fails the difficulty th\")\n\n        mstore(add(memPtr, 32), \"reshold\")\n\n    }\n\n    function abi_encode_t_stringliteral_b41857f38731ca3d79fa018f9670a60be63a6e7d53c8e24073c72835f3a2791f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_b41857f38731ca3d79fa018f9670a60be63a6e7d53c8e24073c72835f3a2791f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b41857f38731ca3d79fa018f9670a60be63a6e7d53c8e24073c72835f3a2791f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b41857f38731ca3d79fa018f9670a60be63a6e7d53c8e24073c72835f3a2791f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_39ec3ce3e91ece4ed172b6f3a1cce21957f23bd760febd7260c9a995b058241f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Difficulty must be > 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_39ec3ce3e91ece4ed172b6f3a1cce21957f23bd760febd7260c9a995b058241f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_39ec3ce3e91ece4ed172b6f3a1cce21957f23bd760febd7260c9a995b058241f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_39ec3ce3e91ece4ed172b6f3a1cce21957f23bd760febd7260c9a995b058241f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_39ec3ce3e91ece4ed172b6f3a1cce21957f23bd760febd7260c9a995b058241f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610086575f3560e01c806323cd56e41161005957806323cd56e414610110578063715018a6146101405780638da5cb5b1461014a578063f2fde38b1461016857610086565b80630bf945121461008a578063185d1075146100a657806319cae462146100d65780631ae19f11146100f4575b5f80fd5b6100a4600480360381019061009f919061062d565b610184565b005b6100c060048036038101906100bb91906106b2565b6102a5565b6040516100cd91906106f5565b60405180910390f35b6100de6102ba565b6040516100eb919061071d565b60405180910390f35b61010e6004803603810190610109919061062d565b6102c0565b005b61012a600480360381019061012591906106b2565b61034b565b60405161013791906106f5565b60405180910390f35b610148610391565b005b6101526103a4565b60405161015f9190610745565b60405180910390f35b610182600480360381019061017d91906106b2565b6103cb565b005b61018c61044f565b5f60025433836040516020016101a4939291906107c3565b6040516020818303038152906040528051906020012090505f600254825f1c1090508160035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055503373ffffffffffffffffffffffffffffffffffffffff167f787a4c7d099cff43c33055e1e6221e716930c7fdf0d56e90faab71e8a7dd762f8383604051610250929190610819565b60405180910390a280610298576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028f906108c0565b60405180910390fd5b50506102a261049e565b50565b6003602052805f5260405f205f915090505481565b60025481565b6102c86104a7565b5f811161030a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030190610928565b60405180910390fd5b806002819055507f5a790c48cbebdceff3f1fcd445afd12d57302b7196738d61c60dcd491bf3efba81604051610340919061071d565b60405180910390a150565b5f60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6103996104a7565b6103a25f61052e565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6103d36104a7565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610443575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161043a9190610745565b60405180910390fd5b61044c8161052e565b50565b600260015403610494576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048b90610990565b60405180910390fd5b6002600181905550565b60018081905550565b6104af6105ef565b73ffffffffffffffffffffffffffffffffffffffff166104cd6103a4565b73ffffffffffffffffffffffffffffffffffffffff161461052c576104f06105ef565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016105239190610745565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f80fd5b5f819050919050565b61060c816105fa565b8114610616575f80fd5b50565b5f8135905061062781610603565b92915050565b5f60208284031215610642576106416105f6565b5b5f61064f84828501610619565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61068182610658565b9050919050565b61069181610677565b811461069b575f80fd5b50565b5f813590506106ac81610688565b92915050565b5f602082840312156106c7576106c66105f6565b5b5f6106d48482850161069e565b91505092915050565b5f819050919050565b6106ef816106dd565b82525050565b5f6020820190506107085f8301846106e6565b92915050565b610717816105fa565b82525050565b5f6020820190506107305f83018461070e565b92915050565b61073f81610677565b82525050565b5f6020820190506107585f830184610736565b92915050565b5f819050919050565b610778610773826105fa565b61075e565b82525050565b5f8160601b9050919050565b5f6107948261077e565b9050919050565b5f6107a58261078a565b9050919050565b6107bd6107b882610677565b61079b565b82525050565b5f6107ce8286610767565b6020820191506107de82856107ac565b6014820191506107ee8284610767565b602082019150819050949350505050565b5f8115159050919050565b610813816107ff565b82525050565b5f60408201905061082c5f8301856106e6565b610839602083018461080a565b9392505050565b5f82825260208201905092915050565b7f536f6c7574696f6e206661696c732074686520646966666963756c74792074685f8201527f726573686f6c6400000000000000000000000000000000000000000000000000602082015250565b5f6108aa602783610840565b91506108b582610850565b604082019050919050565b5f6020820190508181035f8301526108d78161089e565b9050919050565b7f446966666963756c7479206d757374206265203e2030000000000000000000005f82015250565b5f610912601683610840565b915061091d826108de565b602082019050919050565b5f6020820190508181035f83015261093f81610906565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f61097a601f83610840565b915061098582610946565b602082019050919050565b5f6020820190508181035f8301526109a78161096e565b905091905056fea2646970667358221220adc1a4121c272c1b2c31ee4a0498697ab5c55baa3c81ccee0c149dd3d71d6a8364736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x86 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x23CD56E4 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x23CD56E4 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x168 JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0xBF94512 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0x185D1075 EQ PUSH2 0xA6 JUMPI DUP1 PUSH4 0x19CAE462 EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0x1AE19F11 EQ PUSH2 0xF4 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9F SWAP2 SWAP1 PUSH2 0x62D JUMP JUMPDEST PUSH2 0x184 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x6B2 JUMP JUMPDEST PUSH2 0x2A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x6F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDE PUSH2 0x2BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEB SWAP2 SWAP1 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x109 SWAP2 SWAP1 PUSH2 0x62D JUMP JUMPDEST PUSH2 0x2C0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x6B2 JUMP JUMPDEST PUSH2 0x34B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x6F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x148 PUSH2 0x391 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x152 PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x745 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x6B2 JUMP JUMPDEST PUSH2 0x3CB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18C PUSH2 0x44F JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD CALLER DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1A4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 PUSH1 0x2 SLOAD DUP3 PUSH0 SHR LT SWAP1 POP DUP2 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x787A4C7D099CFF43C33055E1E6221E716930C7FDF0D56E90FAAB71E8A7DD762F DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x250 SWAP3 SWAP2 SWAP1 PUSH2 0x819 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 PUSH2 0x298 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28F SWAP1 PUSH2 0x8C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH2 0x2A2 PUSH2 0x49E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2C8 PUSH2 0x4A7 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x30A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x301 SWAP1 PUSH2 0x928 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH32 0x5A790C48CBEBDCEFF3F1FCD445AFD12D57302B7196738D61C60DCD491BF3EFBA DUP2 PUSH1 0x40 MLOAD PUSH2 0x340 SWAP2 SWAP1 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x399 PUSH2 0x4A7 JUMP JUMPDEST PUSH2 0x3A2 PUSH0 PUSH2 0x52E JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3D3 PUSH2 0x4A7 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x443 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43A SWAP2 SWAP1 PUSH2 0x745 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x44C DUP2 PUSH2 0x52E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x494 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48B SWAP1 PUSH2 0x990 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x4AF PUSH2 0x5EF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4CD PUSH2 0x3A4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x52C JUMPI PUSH2 0x4F0 PUSH2 0x5EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP2 SWAP1 PUSH2 0x745 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x60C DUP2 PUSH2 0x5FA JUMP JUMPDEST DUP2 EQ PUSH2 0x616 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x627 DUP2 PUSH2 0x603 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x642 JUMPI PUSH2 0x641 PUSH2 0x5F6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x64F DUP5 DUP3 DUP6 ADD PUSH2 0x619 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x681 DUP3 PUSH2 0x658 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x691 DUP2 PUSH2 0x677 JUMP JUMPDEST DUP2 EQ PUSH2 0x69B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6AC DUP2 PUSH2 0x688 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6C7 JUMPI PUSH2 0x6C6 PUSH2 0x5F6 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6D4 DUP5 DUP3 DUP6 ADD PUSH2 0x69E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6EF DUP2 PUSH2 0x6DD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x708 PUSH0 DUP4 ADD DUP5 PUSH2 0x6E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x717 DUP2 PUSH2 0x5FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x730 PUSH0 DUP4 ADD DUP5 PUSH2 0x70E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x73F DUP2 PUSH2 0x677 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x758 PUSH0 DUP4 ADD DUP5 PUSH2 0x736 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x778 PUSH2 0x773 DUP3 PUSH2 0x5FA JUMP JUMPDEST PUSH2 0x75E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x794 DUP3 PUSH2 0x77E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7A5 DUP3 PUSH2 0x78A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7BD PUSH2 0x7B8 DUP3 PUSH2 0x677 JUMP JUMPDEST PUSH2 0x79B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7CE DUP3 DUP7 PUSH2 0x767 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x7DE DUP3 DUP6 PUSH2 0x7AC JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x7EE DUP3 DUP5 PUSH2 0x767 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x813 DUP2 PUSH2 0x7FF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x82C PUSH0 DUP4 ADD DUP6 PUSH2 0x6E6 JUMP JUMPDEST PUSH2 0x839 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x80A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x536F6C7574696F6E206661696C732074686520646966666963756C7479207468 PUSH0 DUP3 ADD MSTORE PUSH32 0x726573686F6C6400000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x8AA PUSH1 0x27 DUP4 PUSH2 0x840 JUMP JUMPDEST SWAP2 POP PUSH2 0x8B5 DUP3 PUSH2 0x850 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x8D7 DUP2 PUSH2 0x89E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x446966666963756C7479206D757374206265203E203000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x912 PUSH1 0x16 DUP4 PUSH2 0x840 JUMP JUMPDEST SWAP2 POP PUSH2 0x91D DUP3 PUSH2 0x8DE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x93F DUP2 PUSH2 0x906 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x97A PUSH1 0x1F DUP4 PUSH2 0x840 JUMP JUMPDEST SWAP2 POP PUSH2 0x985 DUP3 PUSH2 0x946 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x9A7 DUP2 PUSH2 0x96E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD 0xC1 LOG4 SLT SHR 0x27 0x2C SHL 0x2C BALANCE 0xEE BLOBBASEFEE DIV SWAP9 PUSH10 0x7AB5C55BAA3C81CCEE0C EQ SWAP14 0xD3 0xD7 SAR PUSH11 0x8364736F6C634300081900 CALLER ",
							"sourceMap": "435:2659:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1892:905;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;721:48;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;595:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1407:220;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2978:114;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1892:905:3;2261:21:1;:19;:21::i;:::-;2059:20:3::1;2109:10;;2121;2133:5;2092:47;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2082:58;;;;;;2059:81;;2435:12;2475:10;;2459:12;2451:21;;:34;2435:51;;2525:12;2497:13;:25;2511:10;2497:25;;;;;;;;;;;;;;;:40;;;;2571:10;2553:52;;;2583:12;2597:7;2553:52;;;;;;;:::i;:::-;;;;;;;;2621:7;2616:88;;2644:49;;;;;;;;;;:::i;:::-;;;;;;;;2616:88;1953:844;;2303:20:1::0;:18;:20::i;:::-;1892:905:3;:::o;721:48::-;;;;;;;;;;;;;;;;;:::o;595:25::-;;;;:::o;1407:220::-;1531:13:0;:11;:13::i;:::-;1509:1:3::1;1493:13;:17;1485:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1560:13;1547:10;:26;;;;1588:32;1606:13;1588:32;;;;;;:::i;:::-;;;;;;;;1407:220:::0;:::o;2978:114::-;3040:7;3066:13;:19;3080:4;3066:19;;;;;;;;;;;;;;;;3059:26;;2978:114;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2543:215::-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;2336:287:1:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2629:209::-;1716:1;2809:7;:22;;;;2629:209::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:2:-;709:7;735:10;728:17;;656:96;:::o;88:117:4:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:126::-;1062:7;1102:42;1095:5;1091:54;1080:65;;1025:126;;;:::o;1157:96::-;1194:7;1223:24;1241:5;1223:24;:::i;:::-;1212:35;;1157:96;;;:::o;1259:122::-;1332:24;1350:5;1332:24;:::i;:::-;1325:5;1322:35;1312:63;;1371:1;1368;1361:12;1312:63;1259:122;:::o;1387:139::-;1433:5;1471:6;1458:20;1449:29;;1487:33;1514:5;1487:33;:::i;:::-;1387:139;;;;:::o;1532:329::-;1591:6;1640:2;1628:9;1619:7;1615:23;1611:32;1608:119;;;1646:79;;:::i;:::-;1608:119;1766:1;1791:53;1836:7;1827:6;1816:9;1812:22;1791:53;:::i;:::-;1781:63;;1737:117;1532:329;;;;:::o;1867:77::-;1904:7;1933:5;1922:16;;1867:77;;;:::o;1950:118::-;2037:24;2055:5;2037:24;:::i;:::-;2032:3;2025:37;1950:118;;:::o;2074:222::-;2167:4;2205:2;2194:9;2190:18;2182:26;;2218:71;2286:1;2275:9;2271:17;2262:6;2218:71;:::i;:::-;2074:222;;;;:::o;2302:118::-;2389:24;2407:5;2389:24;:::i;:::-;2384:3;2377:37;2302:118;;:::o;2426:222::-;2519:4;2557:2;2546:9;2542:18;2534:26;;2570:71;2638:1;2627:9;2623:17;2614:6;2570:71;:::i;:::-;2426:222;;;;:::o;2654:118::-;2741:24;2759:5;2741:24;:::i;:::-;2736:3;2729:37;2654:118;;:::o;2778:222::-;2871:4;2909:2;2898:9;2894:18;2886:26;;2922:71;2990:1;2979:9;2975:17;2966:6;2922:71;:::i;:::-;2778:222;;;;:::o;3006:79::-;3045:7;3074:5;3063:16;;3006:79;;;:::o;3091:157::-;3196:45;3216:24;3234:5;3216:24;:::i;:::-;3196:45;:::i;:::-;3191:3;3184:58;3091:157;;:::o;3254:94::-;3287:8;3335:5;3331:2;3327:14;3306:35;;3254:94;;;:::o;3354:::-;3393:7;3422:20;3436:5;3422:20;:::i;:::-;3411:31;;3354:94;;;:::o;3454:100::-;3493:7;3522:26;3542:5;3522:26;:::i;:::-;3511:37;;3454:100;;;:::o;3560:157::-;3665:45;3685:24;3703:5;3685:24;:::i;:::-;3665:45;:::i;:::-;3660:3;3653:58;3560:157;;:::o;3723:538::-;3891:3;3906:75;3977:3;3968:6;3906:75;:::i;:::-;4006:2;4001:3;3997:12;3990:19;;4019:75;4090:3;4081:6;4019:75;:::i;:::-;4119:2;4114:3;4110:12;4103:19;;4132:75;4203:3;4194:6;4132:75;:::i;:::-;4232:2;4227:3;4223:12;4216:19;;4252:3;4245:10;;3723:538;;;;;;:::o;4267:90::-;4301:7;4344:5;4337:13;4330:21;4319:32;;4267:90;;;:::o;4363:109::-;4444:21;4459:5;4444:21;:::i;:::-;4439:3;4432:34;4363:109;;:::o;4478:320::-;4593:4;4631:2;4620:9;4616:18;4608:26;;4644:71;4712:1;4701:9;4697:17;4688:6;4644:71;:::i;:::-;4725:66;4787:2;4776:9;4772:18;4763:6;4725:66;:::i;:::-;4478:320;;;;;:::o;4804:169::-;4888:11;4922:6;4917:3;4910:19;4962:4;4957:3;4953:14;4938:29;;4804:169;;;;:::o;4979:226::-;5119:34;5115:1;5107:6;5103:14;5096:58;5188:9;5183:2;5175:6;5171:15;5164:34;4979:226;:::o;5211:366::-;5353:3;5374:67;5438:2;5433:3;5374:67;:::i;:::-;5367:74;;5450:93;5539:3;5450:93;:::i;:::-;5568:2;5563:3;5559:12;5552:19;;5211:366;;;:::o;5583:419::-;5749:4;5787:2;5776:9;5772:18;5764:26;;5836:9;5830:4;5826:20;5822:1;5811:9;5807:17;5800:47;5864:131;5990:4;5864:131;:::i;:::-;5856:139;;5583:419;;;:::o;6008:172::-;6148:24;6144:1;6136:6;6132:14;6125:48;6008:172;:::o;6186:366::-;6328:3;6349:67;6413:2;6408:3;6349:67;:::i;:::-;6342:74;;6425:93;6514:3;6425:93;:::i;:::-;6543:2;6538:3;6534:12;6527:19;;6186:366;;;:::o;6558:419::-;6724:4;6762:2;6751:9;6747:18;6739:26;;6811:9;6805:4;6801:20;6797:1;6786:9;6782:17;6775:47;6839:131;6965:4;6839:131;:::i;:::-;6831:139;;6558:419;;;:::o;6983:181::-;7123:33;7119:1;7111:6;7107:14;7100:57;6983:181;:::o;7170:366::-;7312:3;7333:67;7397:2;7392:3;7333:67;:::i;:::-;7326:74;;7409:93;7498:3;7409:93;:::i;:::-;7527:2;7522:3;7518:12;7511:19;;7170:366;;;:::o;7542:419::-;7708:4;7746:2;7735:9;7731:18;7723:26;;7795:9;7789:4;7785:20;7781:1;7770:9;7766:17;7759:47;7823:131;7949:4;7823:131;:::i;:::-;7815:139;;7542:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "506400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"difficulty()": "2470",
								"getUserSolution(address)": "2829",
								"owner()": "2559",
								"renounceOwnership()": "infinite",
								"submitSolution(uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"updateDifficulty(uint256)": "infinite",
								"userSolutions(address)": "2825"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 435,
									"end": 3094,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 435,
									"end": 3094,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 435,
									"end": 3094,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1099,
									"end": 1271,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 1099,
									"end": 1271,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1099,
									"end": 1271,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1099,
									"end": 1271,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1099,
									"end": 1271,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1099,
									"end": 1271,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1099,
									"end": 1271,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1099,
									"end": 1271,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1099,
									"end": 1271,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1099,
									"end": 1271,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1099,
									"end": 1271,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1099,
									"end": 1271,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1099,
									"end": 1271,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1099,
									"end": 1271,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 1099,
									"end": 1271,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 1099,
									"end": 1271,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1099,
									"end": 1271,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1099,
									"end": 1271,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 1099,
									"end": 1271,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1099,
									"end": 1271,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 1099,
									"end": 1271,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1099,
									"end": 1271,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1099,
									"end": 1271,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1099,
									"end": 1271,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1099,
									"end": 1271,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1099,
									"end": 1271,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1099,
									"end": 1271,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1099,
									"end": 1271,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1099,
									"end": 1271,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1099,
									"end": 1271,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1099,
									"end": 1271,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1099,
									"end": 1271,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1099,
									"end": 1271,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1099,
									"end": 1271,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1099,
									"end": 1271,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1146,
									"end": 1156,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1196,
									"end": 1197,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1176,
									"end": 1193,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1176,
									"end": 1197,
									"modifierDepth": 1,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1168,
									"end": 1224,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1168,
									"end": 1224,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1168,
									"end": 1224,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1168,
									"end": 1224,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1168,
									"end": 1224,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1168,
									"end": 1224,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1168,
									"end": 1224,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1168,
									"end": 1224,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1168,
									"end": 1224,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1168,
									"end": 1224,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1168,
									"end": 1224,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1168,
									"end": 1224,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 1168,
									"end": 1224,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1168,
									"end": 1224,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1168,
									"end": 1224,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1168,
									"end": 1224,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1168,
									"end": 1224,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1168,
									"end": 1224,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1168,
									"end": 1224,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1168,
									"end": 1224,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1168,
									"end": 1224,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1168,
									"end": 1224,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1168,
									"end": 1224,
									"modifierDepth": 1,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1168,
									"end": 1224,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1247,
									"end": 1264,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1234,
									"end": 1244,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1234,
									"end": 1264,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1234,
									"end": 1264,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1234,
									"end": 1264,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1234,
									"end": 1264,
									"modifierDepth": 1,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1099,
									"end": 1271,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 435,
									"end": 3094,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 435,
									"end": 3094,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 764,
									"end": 770,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 813,
									"end": 815,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 801,
									"end": 810,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 792,
									"end": 799,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 788,
									"end": 811,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 784,
									"end": 816,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 781,
									"end": 900,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 781,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 819,
									"end": 898,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 819,
									"end": 898,
									"name": "tag",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 781,
									"end": 900,
									"name": "tag",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 939,
									"end": 940,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 1020,
									"end": 1027,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1000,
									"end": 1009,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 996,
									"end": 1018,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 964,
									"end": 1028,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "tag",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 910,
									"end": 1038,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 694,
									"end": 1045,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1051,
									"end": 1177,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 1051,
									"end": 1177,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1088,
									"end": 1095,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1128,
									"end": 1170,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1121,
									"end": 1126,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1117,
									"end": 1171,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1106,
									"end": 1171,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1106,
									"end": 1171,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1051,
									"end": 1177,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1051,
									"end": 1177,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1051,
									"end": 1177,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1051,
									"end": 1177,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1183,
									"end": 1279,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 1183,
									"end": 1279,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1220,
									"end": 1227,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1249,
									"end": 1273,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 1267,
									"end": 1272,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1249,
									"end": 1273,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 1249,
									"end": 1273,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1249,
									"end": 1273,
									"name": "tag",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 1249,
									"end": 1273,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1238,
									"end": 1273,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1238,
									"end": 1273,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1183,
									"end": 1279,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1183,
									"end": 1279,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1183,
									"end": 1279,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1183,
									"end": 1279,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1285,
									"end": 1403,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 1285,
									"end": 1403,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1372,
									"end": 1396,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 1390,
									"end": 1395,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1372,
									"end": 1396,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 1372,
									"end": 1396,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1372,
									"end": 1396,
									"name": "tag",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 1372,
									"end": 1396,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1367,
									"end": 1370,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1360,
									"end": 1397,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1285,
									"end": 1403,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1285,
									"end": 1403,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1285,
									"end": 1403,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1409,
									"end": 1631,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1409,
									"end": 1631,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1502,
									"end": 1506,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1540,
									"end": 1542,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1529,
									"end": 1538,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1525,
									"end": 1543,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1517,
									"end": 1543,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1517,
									"end": 1543,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1553,
									"end": 1624,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 1621,
									"end": 1622,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1610,
									"end": 1619,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1606,
									"end": 1623,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1597,
									"end": 1603,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1553,
									"end": 1624,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 1553,
									"end": 1624,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1553,
									"end": 1624,
									"name": "tag",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 1553,
									"end": 1624,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1409,
									"end": 1631,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1409,
									"end": 1631,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1409,
									"end": 1631,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1409,
									"end": 1631,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1409,
									"end": 1631,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1637,
									"end": 1806,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 1637,
									"end": 1806,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1721,
									"end": 1732,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1755,
									"end": 1761,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1750,
									"end": 1753,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1743,
									"end": 1762,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1795,
									"end": 1799,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1790,
									"end": 1793,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1786,
									"end": 1800,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1771,
									"end": 1800,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1771,
									"end": 1800,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1637,
									"end": 1806,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1637,
									"end": 1806,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1637,
									"end": 1806,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1637,
									"end": 1806,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1637,
									"end": 1806,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1812,
									"end": 1984,
									"name": "tag",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 1812,
									"end": 1984,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1952,
									"end": 1976,
									"name": "PUSH",
									"source": 4,
									"value": "446966666963756C7479206D757374206265203E203000000000000000000000"
								},
								{
									"begin": 1948,
									"end": 1949,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1940,
									"end": 1946,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1936,
									"end": 1950,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1929,
									"end": 1977,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1812,
									"end": 1984,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1812,
									"end": 1984,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1990,
									"end": 2356,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 1990,
									"end": 2356,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2132,
									"end": 2135,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2153,
									"end": 2220,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "56"
								},
								{
									"begin": 2217,
									"end": 2219,
									"name": "PUSH",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 2212,
									"end": 2215,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2153,
									"end": 2220,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 2153,
									"end": 2220,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2153,
									"end": 2220,
									"name": "tag",
									"source": 4,
									"value": "56"
								},
								{
									"begin": 2153,
									"end": 2220,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2146,
									"end": 2220,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2146,
									"end": 2220,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2229,
									"end": 2322,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "57"
								},
								{
									"begin": 2318,
									"end": 2321,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2229,
									"end": 2322,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 2229,
									"end": 2322,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2229,
									"end": 2322,
									"name": "tag",
									"source": 4,
									"value": "57"
								},
								{
									"begin": 2229,
									"end": 2322,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2347,
									"end": 2349,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2342,
									"end": 2345,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2338,
									"end": 2350,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2331,
									"end": 2350,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2331,
									"end": 2350,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1990,
									"end": 2356,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1990,
									"end": 2356,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1990,
									"end": 2356,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1990,
									"end": 2356,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2362,
									"end": 2781,
									"name": "tag",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 2362,
									"end": 2781,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2528,
									"end": 2532,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2566,
									"end": 2568,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2555,
									"end": 2564,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2551,
									"end": 2569,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2543,
									"end": 2569,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2543,
									"end": 2569,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2615,
									"end": 2624,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2609,
									"end": 2613,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2605,
									"end": 2625,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 2601,
									"end": 2602,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2590,
									"end": 2599,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2586,
									"end": 2603,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2579,
									"end": 2626,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2643,
									"end": 2774,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 2769,
									"end": 2773,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2643,
									"end": 2774,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 2643,
									"end": 2774,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2643,
									"end": 2774,
									"name": "tag",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 2643,
									"end": 2774,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2635,
									"end": 2774,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2635,
									"end": 2774,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2362,
									"end": 2781,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2362,
									"end": 2781,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2362,
									"end": 2781,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2362,
									"end": 2781,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 435,
									"end": 3094,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 435,
									"end": 3094,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 435,
									"end": 3094,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 435,
									"end": 3094,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 435,
									"end": 3094,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 435,
									"end": 3094,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 435,
									"end": 3094,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 435,
									"end": 3094,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 435,
									"end": 3094,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220adc1a4121c272c1b2c31ee4a0498697ab5c55baa3c81ccee0c149dd3d71d6a8364736f6c63430008190033",
									".code": [
										{
											"begin": 435,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "23CD56E4"
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "23CD56E4"
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "BF94512"
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "185D1075"
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "19CAE462"
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "1AE19F11"
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 435,
											"end": 3094,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1892,
											"end": 2797,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1892,
											"end": 2797,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1892,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1892,
											"end": 2797,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1892,
											"end": 2797,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1892,
											"end": 2797,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1892,
											"end": 2797,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1892,
											"end": 2797,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1892,
											"end": 2797,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1892,
											"end": 2797,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1892,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1892,
											"end": 2797,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1892,
											"end": 2797,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1892,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1892,
											"end": 2797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1892,
											"end": 2797,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 1892,
											"end": 2797,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1892,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1892,
											"end": 2797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1892,
											"end": 2797,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1892,
											"end": 2797,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1892,
											"end": 2797,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 721,
											"end": 769,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 721,
											"end": 769,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 721,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 721,
											"end": 769,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 721,
											"end": 769,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 721,
											"end": 769,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 721,
											"end": 769,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 721,
											"end": 769,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 721,
											"end": 769,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 721,
											"end": 769,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 721,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 721,
											"end": 769,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 721,
											"end": 769,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 721,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 721,
											"end": 769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 721,
											"end": 769,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 721,
											"end": 769,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 721,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 721,
											"end": 769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 721,
											"end": 769,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 721,
											"end": 769,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 721,
											"end": 769,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 721,
											"end": 769,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 721,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 721,
											"end": 769,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 721,
											"end": 769,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 721,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 721,
											"end": 769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 721,
											"end": 769,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 721,
											"end": 769,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 721,
											"end": 769,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 721,
											"end": 769,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 721,
											"end": 769,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 721,
											"end": 769,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 721,
											"end": 769,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 721,
											"end": 769,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 721,
											"end": 769,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 595,
											"end": 620,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 595,
											"end": 620,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 595,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 595,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 595,
											"end": 620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 595,
											"end": 620,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 595,
											"end": 620,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 595,
											"end": 620,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 595,
											"end": 620,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 595,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 595,
											"end": 620,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 595,
											"end": 620,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 595,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 595,
											"end": 620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 595,
											"end": 620,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 595,
											"end": 620,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 595,
											"end": 620,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 595,
											"end": 620,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 595,
											"end": 620,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 595,
											"end": 620,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 595,
											"end": 620,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 595,
											"end": 620,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 595,
											"end": 620,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1407,
											"end": 1627,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1407,
											"end": 1627,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1407,
											"end": 1627,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1407,
											"end": 1627,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1407,
											"end": 1627,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1407,
											"end": 1627,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1407,
											"end": 1627,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1407,
											"end": 1627,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1407,
											"end": 1627,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1407,
											"end": 1627,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1407,
											"end": 1627,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1407,
											"end": 1627,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1407,
											"end": 1627,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1407,
											"end": 1627,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1407,
											"end": 1627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1407,
											"end": 1627,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1407,
											"end": 1627,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1407,
											"end": 1627,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1407,
											"end": 1627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1407,
											"end": 1627,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1407,
											"end": 1627,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1407,
											"end": 1627,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2978,
											"end": 3092,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 2978,
											"end": 3092,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2978,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 2978,
											"end": 3092,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2978,
											"end": 3092,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2978,
											"end": 3092,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2978,
											"end": 3092,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2978,
											"end": 3092,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2978,
											"end": 3092,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2978,
											"end": 3092,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2978,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 2978,
											"end": 3092,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2978,
											"end": 3092,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2978,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 2978,
											"end": 3092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2978,
											"end": 3092,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 2978,
											"end": 3092,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2978,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 2978,
											"end": 3092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2978,
											"end": 3092,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 2978,
											"end": 3092,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2978,
											"end": 3092,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2978,
											"end": 3092,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2978,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 2978,
											"end": 3092,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2978,
											"end": 3092,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2978,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 2978,
											"end": 3092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2978,
											"end": 3092,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 2978,
											"end": 3092,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2978,
											"end": 3092,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2978,
											"end": 3092,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2978,
											"end": 3092,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2978,
											"end": 3092,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2978,
											"end": 3092,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2978,
											"end": 3092,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2978,
											"end": 3092,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1892,
											"end": 2797,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1892,
											"end": 2797,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2109,
											"end": 2119,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2109,
											"end": 2119,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2131,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2133,
											"end": 2138,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2139,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2092,
											"end": 2139,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2139,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2092,
											"end": 2139,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2139,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2092,
											"end": 2139,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2139,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2139,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2139,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2139,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2092,
											"end": 2139,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2139,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2092,
											"end": 2139,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2139,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2092,
											"end": 2139,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2139,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2092,
											"end": 2139,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2139,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2139,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2139,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2139,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2139,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2139,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2139,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2092,
											"end": 2139,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2140,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2140,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2140,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2140,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2082,
											"end": 2140,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2082,
											"end": 2140,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2059,
											"end": 2140,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2059,
											"end": 2140,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2475,
											"end": 2485,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2475,
											"end": 2485,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2459,
											"end": 2471,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2451,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2451,
											"end": 2472,
											"modifierDepth": 1,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 2451,
											"end": 2485,
											"modifierDepth": 1,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2486,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2486,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2525,
											"end": 2537,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2497,
											"end": 2510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2497,
											"end": 2522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2511,
											"end": 2521,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2497,
											"end": 2522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2497,
											"end": 2522,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2497,
											"end": 2522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2497,
											"end": 2522,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2497,
											"end": 2522,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2497,
											"end": 2522,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2497,
											"end": 2522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2497,
											"end": 2522,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2497,
											"end": 2522,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2497,
											"end": 2522,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2497,
											"end": 2522,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2497,
											"end": 2522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2497,
											"end": 2522,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2497,
											"end": 2522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2497,
											"end": 2522,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2497,
											"end": 2537,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2497,
											"end": 2537,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2497,
											"end": 2537,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2497,
											"end": 2537,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2571,
											"end": 2581,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2605,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2553,
											"end": 2605,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2605,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "787A4C7D099CFF43C33055E1E6221E716930C7FDF0D56E90FAAB71E8A7DD762F"
										},
										{
											"begin": 2583,
											"end": 2595,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2604,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2605,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2553,
											"end": 2605,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2605,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2553,
											"end": 2605,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2605,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2605,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2605,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 2553,
											"end": 2605,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2605,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 2553,
											"end": 2605,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2605,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2553,
											"end": 2605,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2605,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2605,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2605,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2605,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2553,
											"end": 2605,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 2621,
											"end": 2628,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2616,
											"end": 2704,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2616,
											"end": 2704,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2644,
											"end": 2693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2644,
											"end": 2693,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2644,
											"end": 2693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2644,
											"end": 2693,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2644,
											"end": 2693,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2644,
											"end": 2693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2644,
											"end": 2693,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2644,
											"end": 2693,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2644,
											"end": 2693,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2644,
											"end": 2693,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 2644,
											"end": 2693,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2644,
											"end": 2693,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 2644,
											"end": 2693,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2644,
											"end": 2693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2644,
											"end": 2693,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2644,
											"end": 2693,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2644,
											"end": 2693,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2644,
											"end": 2693,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2644,
											"end": 2693,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2644,
											"end": 2693,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2616,
											"end": 2704,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2616,
											"end": 2704,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1953,
											"end": 2797,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1953,
											"end": 2797,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1892,
											"end": 2797,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1892,
											"end": 2797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 721,
											"end": 769,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 721,
											"end": 769,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 721,
											"end": 769,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 721,
											"end": 769,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 721,
											"end": 769,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 721,
											"end": 769,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 721,
											"end": 769,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 721,
											"end": 769,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 721,
											"end": 769,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 721,
											"end": 769,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 721,
											"end": 769,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 721,
											"end": 769,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 721,
											"end": 769,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 721,
											"end": 769,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 721,
											"end": 769,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 721,
											"end": 769,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 721,
											"end": 769,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 721,
											"end": 769,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 721,
											"end": 769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 595,
											"end": 620,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 595,
											"end": 620,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 595,
											"end": 620,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 595,
											"end": 620,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 595,
											"end": 620,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 595,
											"end": 620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1407,
											"end": 1627,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1407,
											"end": 1627,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1493,
											"end": 1506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1493,
											"end": 1510,
											"modifierDepth": 1,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1537,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1485,
											"end": 1537,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1485,
											"end": 1537,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1485,
											"end": 1537,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1537,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1485,
											"end": 1537,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1537,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1485,
											"end": 1537,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1537,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1485,
											"end": 1537,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1537,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1485,
											"end": 1537,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1485,
											"end": 1537,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1537,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1537,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1537,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1537,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1537,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1537,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1485,
											"end": 1537,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1560,
											"end": 1573,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1547,
											"end": 1557,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1547,
											"end": 1573,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1547,
											"end": 1573,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1547,
											"end": 1573,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1547,
											"end": 1573,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1588,
											"end": 1620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5A790C48CBEBDCEFF3F1FCD445AFD12D57302B7196738D61C60DCD491BF3EFBA"
										},
										{
											"begin": 1606,
											"end": 1619,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1588,
											"end": 1620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1588,
											"end": 1620,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1588,
											"end": 1620,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1588,
											"end": 1620,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1588,
											"end": 1620,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1588,
											"end": 1620,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1588,
											"end": 1620,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1588,
											"end": 1620,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1588,
											"end": 1620,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1588,
											"end": 1620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1588,
											"end": 1620,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1588,
											"end": 1620,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1588,
											"end": 1620,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1588,
											"end": 1620,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1588,
											"end": 1620,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1588,
											"end": 1620,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 1407,
											"end": 1627,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1407,
											"end": 1627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2978,
											"end": 3092,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 2978,
											"end": 3092,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3040,
											"end": 3047,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3066,
											"end": 3079,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3066,
											"end": 3085,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3080,
											"end": 3084,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3066,
											"end": 3085,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3066,
											"end": 3085,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3066,
											"end": 3085,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3066,
											"end": 3085,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3066,
											"end": 3085,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3066,
											"end": 3085,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3066,
											"end": 3085,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3066,
											"end": 3085,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3066,
											"end": 3085,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3066,
											"end": 3085,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3066,
											"end": 3085,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3066,
											"end": 3085,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3066,
											"end": 3085,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3066,
											"end": 3085,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3066,
											"end": 3085,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3066,
											"end": 3085,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3059,
											"end": 3085,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3059,
											"end": 3085,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2978,
											"end": 3092,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2978,
											"end": 3092,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2978,
											"end": 3092,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2978,
											"end": 3092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1062,
											"end": 1069,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1144,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1095,
											"end": 1100,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1025,
											"end": 1151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1194,
											"end": 1201,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 1241,
											"end": 1246,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 1223,
											"end": 1247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1157,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 1350,
											"end": 1355,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 1332,
											"end": 1356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 1332,
											"end": 1356,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 1330,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1322,
											"end": 1357,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1371,
											"end": 1372,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1368,
											"end": 1369,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1361,
											"end": 1373,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 1312,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1433,
											"end": 1438,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1458,
											"end": 1478,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1449,
											"end": 1478,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1449,
											"end": 1478,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 1487,
											"end": 1520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 1487,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1387,
											"end": 1526,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1387,
											"end": 1526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1591,
											"end": 1597,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1640,
											"end": 1642,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1628,
											"end": 1637,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1619,
											"end": 1626,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1638,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1643,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1646,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 1646,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 1646,
											"end": 1725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1646,
											"end": 1725,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 1646,
											"end": 1725,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 1608,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1766,
											"end": 1767,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 1836,
											"end": 1843,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1827,
											"end": 1833,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1816,
											"end": 1825,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1812,
											"end": 1834,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1791,
											"end": 1844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1781,
											"end": 1844,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1781,
											"end": 1844,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 1854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1532,
											"end": 1861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1867,
											"end": 1944,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1867,
											"end": 1944,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1904,
											"end": 1911,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1933,
											"end": 1938,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1922,
											"end": 1938,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1922,
											"end": 1938,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1867,
											"end": 1944,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1867,
											"end": 1944,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1867,
											"end": 1944,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1867,
											"end": 1944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1950,
											"end": 2068,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1950,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2037,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2055,
											"end": 2060,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2037,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2037,
											"end": 2061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2037,
											"end": 2061,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2037,
											"end": 2061,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2032,
											"end": 2035,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2025,
											"end": 2062,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1950,
											"end": 2068,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1950,
											"end": 2068,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1950,
											"end": 2068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2296,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 2074,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2167,
											"end": 2171,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2205,
											"end": 2207,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2194,
											"end": 2203,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2190,
											"end": 2208,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2182,
											"end": 2208,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2182,
											"end": 2208,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2218,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2286,
											"end": 2287,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2275,
											"end": 2284,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2271,
											"end": 2288,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2262,
											"end": 2268,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2218,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2218,
											"end": 2289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2218,
											"end": 2289,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2218,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2296,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2296,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2296,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2296,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2302,
											"end": 2420,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 2302,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2389,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 2407,
											"end": 2412,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2389,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 2389,
											"end": 2413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2389,
											"end": 2413,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 2389,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2384,
											"end": 2387,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2377,
											"end": 2414,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2302,
											"end": 2420,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2302,
											"end": 2420,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2302,
											"end": 2420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2426,
											"end": 2648,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 2426,
											"end": 2648,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2519,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2546,
											"end": 2555,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2542,
											"end": 2560,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2534,
											"end": 2560,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2534,
											"end": 2560,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2570,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 2638,
											"end": 2639,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2636,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2640,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2614,
											"end": 2620,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2570,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 2570,
											"end": 2641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2570,
											"end": 2641,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 2570,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2426,
											"end": 2648,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2426,
											"end": 2648,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2426,
											"end": 2648,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2426,
											"end": 2648,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2426,
											"end": 2648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2654,
											"end": 2772,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2654,
											"end": 2772,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 2759,
											"end": 2764,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 2741,
											"end": 2765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2741,
											"end": 2765,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 2741,
											"end": 2765,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2736,
											"end": 2739,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2729,
											"end": 2766,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2654,
											"end": 2772,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2654,
											"end": 2772,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2654,
											"end": 2772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2778,
											"end": 3000,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 2778,
											"end": 3000,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2871,
											"end": 2875,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2909,
											"end": 2911,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2898,
											"end": 2907,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2894,
											"end": 2912,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2886,
											"end": 2912,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2886,
											"end": 2912,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2993,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 2990,
											"end": 2991,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2979,
											"end": 2988,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2975,
											"end": 2992,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2966,
											"end": 2972,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2993,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2922,
											"end": 2993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2922,
											"end": 2993,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 2922,
											"end": 2993,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2778,
											"end": 3000,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2778,
											"end": 3000,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2778,
											"end": 3000,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2778,
											"end": 3000,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2778,
											"end": 3000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3006,
											"end": 3085,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3006,
											"end": 3085,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3045,
											"end": 3052,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3074,
											"end": 3079,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3063,
											"end": 3079,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3063,
											"end": 3079,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3006,
											"end": 3085,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3006,
											"end": 3085,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3006,
											"end": 3085,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3006,
											"end": 3085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3091,
											"end": 3248,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 3091,
											"end": 3248,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3196,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 3216,
											"end": 3240,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 3234,
											"end": 3239,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 3240,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 3216,
											"end": 3240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 3240,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 3216,
											"end": 3240,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3196,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3196,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3196,
											"end": 3241,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 3196,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3184,
											"end": 3242,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3091,
											"end": 3248,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3091,
											"end": 3248,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3091,
											"end": 3248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3254,
											"end": 3348,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 3254,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3287,
											"end": 3295,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3335,
											"end": 3340,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3331,
											"end": 3333,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3327,
											"end": 3341,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3306,
											"end": 3341,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3306,
											"end": 3341,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3254,
											"end": 3348,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3254,
											"end": 3348,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3254,
											"end": 3348,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3254,
											"end": 3348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3354,
											"end": 3448,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 3354,
											"end": 3448,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3400,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3422,
											"end": 3442,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 3436,
											"end": 3441,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3422,
											"end": 3442,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 3422,
											"end": 3442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3422,
											"end": 3442,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 3422,
											"end": 3442,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3442,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3442,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3354,
											"end": 3448,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3354,
											"end": 3448,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3354,
											"end": 3448,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3354,
											"end": 3448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3454,
											"end": 3554,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 3454,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3493,
											"end": 3500,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3522,
											"end": 3548,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 3542,
											"end": 3547,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3522,
											"end": 3548,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 3522,
											"end": 3548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3522,
											"end": 3548,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 3522,
											"end": 3548,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3548,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3511,
											"end": 3548,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3454,
											"end": 3554,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3454,
											"end": 3554,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3454,
											"end": 3554,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3454,
											"end": 3554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3560,
											"end": 3717,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 3560,
											"end": 3717,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3665,
											"end": 3710,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 3685,
											"end": 3709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 3703,
											"end": 3708,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3685,
											"end": 3709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 3685,
											"end": 3709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3685,
											"end": 3709,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 3685,
											"end": 3709,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3665,
											"end": 3710,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 3665,
											"end": 3710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3665,
											"end": 3710,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 3665,
											"end": 3710,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3660,
											"end": 3663,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3653,
											"end": 3711,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3560,
											"end": 3717,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3560,
											"end": 3717,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3560,
											"end": 3717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3723,
											"end": 4261,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 3723,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3891,
											"end": 3894,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3906,
											"end": 3981,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 3977,
											"end": 3980,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3968,
											"end": 3974,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3906,
											"end": 3981,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 3906,
											"end": 3981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3906,
											"end": 3981,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 3906,
											"end": 3981,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4006,
											"end": 4008,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4001,
											"end": 4004,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3997,
											"end": 4009,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3990,
											"end": 4009,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3990,
											"end": 4009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4019,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 4090,
											"end": 4093,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4081,
											"end": 4087,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4019,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 4019,
											"end": 4094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4019,
											"end": 4094,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 4019,
											"end": 4094,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4119,
											"end": 4121,
											"name": "PUSH",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 4114,
											"end": 4117,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4110,
											"end": 4122,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4103,
											"end": 4122,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4103,
											"end": 4122,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 4203,
											"end": 4206,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4194,
											"end": 4200,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 4132,
											"end": 4207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4207,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 4132,
											"end": 4207,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4232,
											"end": 4234,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4227,
											"end": 4230,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4223,
											"end": 4235,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4216,
											"end": 4235,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4216,
											"end": 4235,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4252,
											"end": 4255,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4245,
											"end": 4255,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4245,
											"end": 4255,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3723,
											"end": 4261,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 3723,
											"end": 4261,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3723,
											"end": 4261,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3723,
											"end": 4261,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3723,
											"end": 4261,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3723,
											"end": 4261,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3723,
											"end": 4261,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4267,
											"end": 4357,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 4267,
											"end": 4357,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4301,
											"end": 4308,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4344,
											"end": 4349,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4337,
											"end": 4350,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4330,
											"end": 4351,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4319,
											"end": 4351,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4319,
											"end": 4351,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4267,
											"end": 4357,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4267,
											"end": 4357,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4267,
											"end": 4357,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4267,
											"end": 4357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4363,
											"end": 4472,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 4363,
											"end": 4472,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4444,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 4459,
											"end": 4464,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4444,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 4444,
											"end": 4465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4444,
											"end": 4465,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 4444,
											"end": 4465,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4439,
											"end": 4442,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4432,
											"end": 4466,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4363,
											"end": 4472,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4363,
											"end": 4472,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4363,
											"end": 4472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4478,
											"end": 4798,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 4478,
											"end": 4798,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4593,
											"end": 4597,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4631,
											"end": 4633,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4620,
											"end": 4629,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4616,
											"end": 4634,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4608,
											"end": 4634,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4608,
											"end": 4634,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4644,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 4712,
											"end": 4713,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4701,
											"end": 4710,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4697,
											"end": 4714,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4688,
											"end": 4694,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4644,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 4644,
											"end": 4715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4644,
											"end": 4715,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 4644,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4725,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 4787,
											"end": 4789,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4776,
											"end": 4785,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4772,
											"end": 4790,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4763,
											"end": 4769,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4725,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 4725,
											"end": 4791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4725,
											"end": 4791,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 4725,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4478,
											"end": 4798,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4478,
											"end": 4798,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4478,
											"end": 4798,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4478,
											"end": 4798,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4478,
											"end": 4798,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4478,
											"end": 4798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4804,
											"end": 4973,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 4804,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4888,
											"end": 4899,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4922,
											"end": 4928,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4917,
											"end": 4920,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4910,
											"end": 4929,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4962,
											"end": 4966,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4957,
											"end": 4960,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4953,
											"end": 4967,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 4967,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 4967,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4804,
											"end": 4973,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4804,
											"end": 4973,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4804,
											"end": 4973,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4804,
											"end": 4973,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4804,
											"end": 4973,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5205,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 4979,
											"end": 5205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5119,
											"end": 5153,
											"name": "PUSH",
											"source": 4,
											"value": "536F6C7574696F6E206661696C732074686520646966666963756C7479207468"
										},
										{
											"begin": 5115,
											"end": 5116,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5107,
											"end": 5113,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5103,
											"end": 5117,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5096,
											"end": 5154,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5188,
											"end": 5197,
											"name": "PUSH",
											"source": 4,
											"value": "726573686F6C6400000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5183,
											"end": 5185,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5175,
											"end": 5181,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5171,
											"end": 5186,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5164,
											"end": 5198,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5205,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5205,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5211,
											"end": 5577,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 5211,
											"end": 5577,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5353,
											"end": 5356,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5374,
											"end": 5441,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 5438,
											"end": 5440,
											"name": "PUSH",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 5433,
											"end": 5436,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5374,
											"end": 5441,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 5374,
											"end": 5441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5374,
											"end": 5441,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 5374,
											"end": 5441,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5367,
											"end": 5441,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5367,
											"end": 5441,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5450,
											"end": 5543,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 5539,
											"end": 5542,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5450,
											"end": 5543,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 5450,
											"end": 5543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5450,
											"end": 5543,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 5450,
											"end": 5543,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5568,
											"end": 5570,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5563,
											"end": 5566,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5559,
											"end": 5571,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5552,
											"end": 5571,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5552,
											"end": 5571,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5211,
											"end": 5577,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5211,
											"end": 5577,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5211,
											"end": 5577,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5211,
											"end": 5577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5583,
											"end": 6002,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 5583,
											"end": 6002,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5749,
											"end": 5753,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5787,
											"end": 5789,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5776,
											"end": 5785,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5772,
											"end": 5790,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5764,
											"end": 5790,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5764,
											"end": 5790,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5836,
											"end": 5845,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5830,
											"end": 5834,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5826,
											"end": 5846,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5822,
											"end": 5823,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5811,
											"end": 5820,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5807,
											"end": 5824,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5800,
											"end": 5847,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5864,
											"end": 5995,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 5990,
											"end": 5994,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5864,
											"end": 5995,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 5864,
											"end": 5995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5864,
											"end": 5995,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 5864,
											"end": 5995,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5856,
											"end": 5995,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5856,
											"end": 5995,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5583,
											"end": 6002,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5583,
											"end": 6002,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5583,
											"end": 6002,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5583,
											"end": 6002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 6180,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 6008,
											"end": 6180,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6148,
											"end": 6172,
											"name": "PUSH",
											"source": 4,
											"value": "446966666963756C7479206D757374206265203E203000000000000000000000"
										},
										{
											"begin": 6144,
											"end": 6145,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6136,
											"end": 6142,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6132,
											"end": 6146,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6125,
											"end": 6173,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 6180,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 6180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6186,
											"end": 6552,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 6186,
											"end": 6552,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6328,
											"end": 6331,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6349,
											"end": 6416,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 6413,
											"end": 6415,
											"name": "PUSH",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 6408,
											"end": 6411,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6349,
											"end": 6416,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 6349,
											"end": 6416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6349,
											"end": 6416,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 6349,
											"end": 6416,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6342,
											"end": 6416,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6342,
											"end": 6416,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6425,
											"end": 6518,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 6514,
											"end": 6517,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6425,
											"end": 6518,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 6425,
											"end": 6518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6425,
											"end": 6518,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 6425,
											"end": 6518,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6543,
											"end": 6545,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6538,
											"end": 6541,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6534,
											"end": 6546,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6527,
											"end": 6546,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6527,
											"end": 6546,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6186,
											"end": 6552,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6186,
											"end": 6552,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6186,
											"end": 6552,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6186,
											"end": 6552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6558,
											"end": 6977,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 6558,
											"end": 6977,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6724,
											"end": 6728,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6762,
											"end": 6764,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6751,
											"end": 6760,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6747,
											"end": 6765,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6739,
											"end": 6765,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6739,
											"end": 6765,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6811,
											"end": 6820,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6805,
											"end": 6809,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6801,
											"end": 6821,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6797,
											"end": 6798,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6786,
											"end": 6795,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6782,
											"end": 6799,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6775,
											"end": 6822,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6839,
											"end": 6970,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 6965,
											"end": 6969,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6839,
											"end": 6970,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 6839,
											"end": 6970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6839,
											"end": 6970,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 6839,
											"end": 6970,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6831,
											"end": 6970,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6831,
											"end": 6970,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6558,
											"end": 6977,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6558,
											"end": 6977,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6558,
											"end": 6977,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6558,
											"end": 6977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6983,
											"end": 7164,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 6983,
											"end": 7164,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7123,
											"end": 7156,
											"name": "PUSH",
											"source": 4,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 7119,
											"end": 7120,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7111,
											"end": 7117,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7107,
											"end": 7121,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7100,
											"end": 7157,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6983,
											"end": 7164,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6983,
											"end": 7164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7170,
											"end": 7536,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 7170,
											"end": 7536,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7312,
											"end": 7315,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7333,
											"end": 7400,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 7397,
											"end": 7399,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 7392,
											"end": 7395,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7333,
											"end": 7400,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 7333,
											"end": 7400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7333,
											"end": 7400,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 7333,
											"end": 7400,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7326,
											"end": 7400,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7326,
											"end": 7400,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7409,
											"end": 7502,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 7498,
											"end": 7501,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7409,
											"end": 7502,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 7409,
											"end": 7502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7409,
											"end": 7502,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 7409,
											"end": 7502,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7527,
											"end": 7529,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7522,
											"end": 7525,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7518,
											"end": 7530,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7511,
											"end": 7530,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7511,
											"end": 7530,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7170,
											"end": 7536,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7170,
											"end": 7536,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7170,
											"end": 7536,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7170,
											"end": 7536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7542,
											"end": 7961,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 7542,
											"end": 7961,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7708,
											"end": 7712,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7746,
											"end": 7748,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7735,
											"end": 7744,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7731,
											"end": 7749,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7723,
											"end": 7749,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7723,
											"end": 7749,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7795,
											"end": 7804,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7789,
											"end": 7793,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7785,
											"end": 7805,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7781,
											"end": 7782,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7770,
											"end": 7779,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7766,
											"end": 7783,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7759,
											"end": 7806,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7823,
											"end": 7954,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 7949,
											"end": 7953,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7823,
											"end": 7954,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 7823,
											"end": 7954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7823,
											"end": 7954,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 7823,
											"end": 7954,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7954,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7815,
											"end": 7954,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7542,
											"end": 7961,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7542,
											"end": 7961,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7542,
											"end": 7961,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7542,
											"end": 7961,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"D/difficulty.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"difficulty()": "19cae462",
							"getUserSolution(address)": "23cd56e4",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"submitSolution(uint256)": "0bf94512",
							"transferOwnership(address)": "f2fde38b",
							"updateDifficulty(uint256)": "1ae19f11",
							"userSolutions(address)": "185d1075"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialDifficulty\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newDifficulty\",\"type\":\"uint256\"}],\"name\":\"DifficultyUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"solutionHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"name\":\"SolutionSubmitted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"difficulty\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserSolution\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"submitSolution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newDifficulty\",\"type\":\"uint256\"}],\"name\":\"updateDifficulty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userSolutions\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"initialDifficulty\":\"The initial difficulty threshold.\"}},\"getUserSolution(address)\":{\"params\":{\"user\":\"The address of the user.\"},\"returns\":{\"_0\":\"The solutionHash last recorded for that user.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"submitSolution(uint256)\":{\"params\":{\"nonce\":\"Arbitrary user-chosen number or data to \\u201csolve\\u201d the puzzle.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateDifficulty(uint256)\":{\"params\":{\"newDifficulty\":\"The new difficulty threshold.\"}}},\"title\":\"DifficultyManager\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor sets the deployer as the initial owner and a starting difficulty.\"},\"difficulty()\":{\"notice\":\"The difficulty threshold (e.g., a target below which the solution hash must fall).\"},\"getUserSolution(address)\":{\"notice\":\"Returns the last solution hash submitted by a user.\"},\"submitSolution(uint256)\":{\"notice\":\"Submits a \\u201csolution\\u201d by providing a nonce. A simple hash check demonstrates how difficulty might be applied (e.g. if uint256(hash) < difficulty).\"},\"updateDifficulty(uint256)\":{\"notice\":\"Owner can update the difficulty threshold dynamically.\"},\"userSolutions(address)\":{\"notice\":\"Mapping from user address to last solution hash submitted, for demonstration.\"}},\"notice\":\"A dynamic and optimized contract that maintains a difficulty parameter and allows users to submit solutions (like a simplified puzzle or proof-of-work). The owner can update the difficulty threshold on-the-fly.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"D/difficulty.sol\":\"DifficultyManager\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"D/difficulty.sol\":{\"keccak256\":\"0xccdbe5da9ba37473eaa2425492ed97a6edda21f80dc1033bdd51c51fcfabfe2f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c055a8b59177aed6b9369c5c6db2f02cc410d6937339abe9e4fa43716bc7e0fb\",\"dweb:/ipfs/QmayULV3dqwGT4JYZqQwKoEZmVzF3hNFyhBYZGnwwang17\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "D/difficulty.sol:DifficultyManager",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 158,
								"contract": "D/difficulty.sol:DifficultyManager",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 254,
								"contract": "D/difficulty.sol:DifficultyManager",
								"label": "difficulty",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 259,
								"contract": "D/difficulty.sol:DifficultyManager",
								"label": "userSolutions",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_bytes32)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bytes32)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bytes32)",
								"numberOfBytes": "32",
								"value": "t_bytes32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"constructor": {
								"notice": "Constructor sets the deployer as the initial owner and a starting difficulty."
							},
							"difficulty()": {
								"notice": "The difficulty threshold (e.g., a target below which the solution hash must fall)."
							},
							"getUserSolution(address)": {
								"notice": "Returns the last solution hash submitted by a user."
							},
							"submitSolution(uint256)": {
								"notice": "Submits a “solution” by providing a nonce. A simple hash check demonstrates how difficulty might be applied (e.g. if uint256(hash) < difficulty)."
							},
							"updateDifficulty(uint256)": {
								"notice": "Owner can update the difficulty threshold dynamically."
							},
							"userSolutions(address)": {
								"notice": "Mapping from user address to last solution hash submitted, for demonstration."
							}
						},
						"notice": "A dynamic and optimized contract that maintains a difficulty parameter and allows users to submit solutions (like a simplified puzzle or proof-of-work). The owner can update the difficulty threshold on-the-fly.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							242
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 243,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 242,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 242,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								242
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 224,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							212
						]
					},
					"id": 213,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 212,
							"linearizedBaseContracts": [
								212
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 153,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1676:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 151,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 152,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 156,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1723:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 154,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 155,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 158,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 212,
									"src": "1767:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 157,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "1811:39:1",
										"statements": [
											{
												"expression": {
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 161,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "1821:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 162,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "1831:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:1"
											}
										]
									},
									"id": 166,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:1"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:1"
									},
									"scope": 212,
									"src": "1797:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "2251:79:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 169,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2261:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:1"
											},
											{
												"id": 172,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 200,
														"src": "2303:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:1"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 177,
									"name": "nonReentrant",
									"nameLocation": "2236:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:1"
									},
									"src": "2227:103:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "2375:248:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 181,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "2468:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 182,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "2479:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:1"
											},
											{
												"expression": {
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 187,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2598:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 188,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "2608:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:1"
											}
										]
									},
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:1"
									},
									"scope": 212,
									"src": "2336:287:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "2667:171:1",
										"statements": [
											{
												"expression": {
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 195,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "2809:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 196,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "2819:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 198,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:1"
											}
										]
									},
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:1"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:1"
									},
									"scope": 212,
									"src": "2629:209:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "3081:43:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 206,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "3098:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 207,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "3109:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 205,
												"id": 209,
												"nodeType": "Return",
												"src": "3091:26:1"
											}
										]
									},
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:1",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "3075:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:1"
									},
									"scope": 212,
									"src": "3017:107:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 213,
							"src": "888:2238:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							242
						]
					},
					"id": 243,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 214,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 215,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 242,
							"linearizedBaseContracts": [
								242
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 220,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 219,
												"id": 222,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 242,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 232,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 229,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 228,
												"id": 231,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 226,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 242,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 240,
										"nodeType": "Block",
										"src": "935:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 237,
												"id": 239,
												"nodeType": "Return",
												"src": "945:8:2"
											}
										]
									},
									"id": 241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:2"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:2"
									},
									"scope": 242,
									"src": "863:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 243,
							"src": "624:338:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:2"
				},
				"id": 2
			},
			"D/difficulty.sol": {
				"ast": {
					"absolutePath": "D/difficulty.sol",
					"exportedSymbols": {
						"Context": [
							242
						],
						"DifficultyManager": [
							384
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							212
						]
					},
					"id": 385,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 244,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 245,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 385,
							"sourceUnit": 148,
							"src": "58:52:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 246,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 385,
							"sourceUnit": 213,
							"src": "111:62:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 248,
										"name": "Ownable",
										"nameLocations": [
											"465:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "465:7:3"
									},
									"id": 249,
									"nodeType": "InheritanceSpecifier",
									"src": "465:7:3"
								},
								{
									"baseName": {
										"id": 250,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"474:15:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 212,
										"src": "474:15:3"
									},
									"id": 251,
									"nodeType": "InheritanceSpecifier",
									"src": "474:15:3"
								}
							],
							"canonicalName": "DifficultyManager",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 247,
								"nodeType": "StructuredDocumentation",
								"src": "175:260:3",
								"text": "@title DifficultyManager\n @notice A dynamic and optimized contract that maintains a difficulty parameter\n and allows users to submit solutions (like a simplified puzzle or proof-of-work).\n The owner can update the difficulty threshold on-the-fly."
							},
							"fullyImplemented": true,
							"id": 384,
							"linearizedBaseContracts": [
								384,
								212,
								147,
								242
							],
							"name": "DifficultyManager",
							"nameLocation": "444:17:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "496:94:3",
										"text": "@notice The difficulty threshold (e.g., a target below which the solution hash must fall)."
									},
									"functionSelector": "19cae462",
									"id": 254,
									"mutability": "mutable",
									"name": "difficulty",
									"nameLocation": "610:10:3",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "595:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 253,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "595:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "627:89:3",
										"text": "@notice Mapping from user address to last solution hash submitted, for demonstration."
									},
									"functionSelector": "185d1075",
									"id": 259,
									"mutability": "mutable",
									"name": "userSolutions",
									"nameLocation": "756:13:3",
									"nodeType": "VariableDeclaration",
									"scope": 384,
									"src": "721:48:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
										"typeString": "mapping(address => bytes32)"
									},
									"typeName": {
										"id": 258,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 256,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "729:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "721:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
											"typeString": "mapping(address => bytes32)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 257,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "740:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "5a790c48cbebdceff3f1fcd445afd12d57302b7196738d61c60dcd491bf3efba",
									"id": 263,
									"name": "DifficultyUpdated",
									"nameLocation": "804:17:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"indexed": false,
												"mutability": "mutable",
												"name": "newDifficulty",
												"nameLocation": "830:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "822:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:23:3"
									},
									"src": "798:47:3"
								},
								{
									"anonymous": false,
									"eventSelector": "787a4c7d099cff43c33055e1e6221e716930c7fdf0d56e90faab71e8a7dd762f",
									"id": 271,
									"name": "SolutionSubmitted",
									"nameLocation": "856:17:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "890:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "874:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "874:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"indexed": false,
												"mutability": "mutable",
												"name": "solutionHash",
												"nameLocation": "904:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "896:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 266,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "896:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"indexed": false,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "923:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "918:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 268,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "918:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "873:58:3"
									},
									"src": "850:82:3"
								},
								{
									"body": {
										"id": 292,
										"nodeType": "Block",
										"src": "1158:113:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 282,
																"name": "initialDifficulty",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "1176:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1196:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1176:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "446966666963756c7479206d757374206265203e2030",
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1199:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_39ec3ce3e91ece4ed172b6f3a1cce21957f23bd760febd7260c9a995b058241f",
																"typeString": "literal_string \"Difficulty must be > 0\""
															},
															"value": "Difficulty must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_39ec3ce3e91ece4ed172b6f3a1cce21957f23bd760febd7260c9a995b058241f",
																"typeString": "literal_string \"Difficulty must be > 0\""
															}
														],
														"id": 281,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1168:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1168:56:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 287,
												"nodeType": "ExpressionStatement",
												"src": "1168:56:3"
											},
											{
												"expression": {
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 288,
														"name": "difficulty",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "1234:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 289,
														"name": "initialDifficulty",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 274,
														"src": "1247:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1234:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "1234:30:3"
											}
										]
									},
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "938:156:3",
										"text": "@notice Constructor sets the deployer as the initial owner and a starting difficulty.\n @param initialDifficulty The initial difficulty threshold."
									},
									"id": 293,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 277,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1146:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1150:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1146:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 279,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 276,
												"name": "Ownable",
												"nameLocations": [
													"1138:7:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1138:7:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1138:19:3"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "initialDifficulty",
												"nameLocation": "1119:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "1111:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1111:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1110:27:3"
									},
									"returnParameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1158:0:3"
									},
									"scope": 384,
									"src": "1099:172:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "1475:152:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 302,
																"name": "newDifficulty",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 296,
																"src": "1493:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 303,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1509:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1493:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "446966666963756c7479206d757374206265203e2030",
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1512:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_39ec3ce3e91ece4ed172b6f3a1cce21957f23bd760febd7260c9a995b058241f",
																"typeString": "literal_string \"Difficulty must be > 0\""
															},
															"value": "Difficulty must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_39ec3ce3e91ece4ed172b6f3a1cce21957f23bd760febd7260c9a995b058241f",
																"typeString": "literal_string \"Difficulty must be > 0\""
															}
														],
														"id": 301,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1485:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1485:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 307,
												"nodeType": "ExpressionStatement",
												"src": "1485:52:3"
											},
											{
												"expression": {
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 308,
														"name": "difficulty",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "1547:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 309,
														"name": "newDifficulty",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "1560:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1547:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 311,
												"nodeType": "ExpressionStatement",
												"src": "1547:26:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 313,
															"name": "newDifficulty",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "1606:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 312,
														"name": "DifficultyUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 263,
														"src": "1588:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1588:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 315,
												"nodeType": "EmitStatement",
												"src": "1583:37:3"
											}
										]
									},
									"documentation": {
										"id": 294,
										"nodeType": "StructuredDocumentation",
										"src": "1277:125:3",
										"text": "@notice Owner can update the difficulty threshold dynamically.\n @param newDifficulty The new difficulty threshold."
									},
									"functionSelector": "1ae19f11",
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 299,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 298,
												"name": "onlyOwner",
												"nameLocations": [
													"1465:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1465:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1465:9:3"
										}
									],
									"name": "updateDifficulty",
									"nameLocation": "1416:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "newDifficulty",
												"nameLocation": "1441:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "1433:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1433:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1432:23:3"
									},
									"returnParameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1475:0:3"
									},
									"scope": 384,
									"src": "1407:220:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "1953:844:3",
										"statements": [
											{
												"assignments": [
													326
												],
												"declarations": [
													{
														"constant": false,
														"id": 326,
														"mutability": "mutable",
														"name": "solutionHash",
														"nameLocation": "2067:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 369,
														"src": "2059:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 325,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2059:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 336,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 330,
																	"name": "difficulty",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "2109:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 331,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2121:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2125:6:3",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2121:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 333,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 320,
																	"src": "2133:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 328,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2092:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 329,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2096:12:3",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "2092:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2092:47:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 327,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2082:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2082:58:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2059:81:3"
											},
											{
												"assignments": [
													338
												],
												"declarations": [
													{
														"constant": false,
														"id": 338,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2440:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 369,
														"src": "2435:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 337,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2435:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 346,
												"initialValue": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 341,
																		"name": "solutionHash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 326,
																		"src": "2459:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 340,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2451:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 339,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2451:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2451:21:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 343,
																"name": "difficulty",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 254,
																"src": "2475:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2451:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 345,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2450:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2435:51:3"
											},
											{
												"expression": {
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 347,
															"name": "userSolutions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "2497:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
																"typeString": "mapping(address => bytes32)"
															}
														},
														"id": 350,
														"indexExpression": {
															"expression": {
																"id": 348,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2511:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2515:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2511:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2497:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 351,
														"name": "solutionHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 326,
														"src": "2525:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2497:40:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 353,
												"nodeType": "ExpressionStatement",
												"src": "2497:40:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 355,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2571:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2575:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2571:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 357,
															"name": "solutionHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "2583:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 358,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "2597:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 354,
														"name": "SolutionSubmitted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "2553:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_bool_$returns$__$",
															"typeString": "function (address,bytes32,bool)"
														}
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2553:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 360,
												"nodeType": "EmitStatement",
												"src": "2548:57:3"
											},
											{
												"condition": {
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2620:8:3",
													"subExpression": {
														"id": 361,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "2621:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "2616:88:3",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "2630:74:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "536f6c7574696f6e206661696c732074686520646966666963756c7479207468726573686f6c64",
																		"id": 364,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2651:41:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_b41857f38731ca3d79fa018f9670a60be63a6e7d53c8e24073c72835f3a2791f",
																			"typeString": "literal_string \"Solution fails the difficulty threshold\""
																		},
																		"value": "Solution fails the difficulty threshold"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_b41857f38731ca3d79fa018f9670a60be63a6e7d53c8e24073c72835f3a2791f",
																			"typeString": "literal_string \"Solution fails the difficulty threshold\""
																		}
																	],
																	"id": 363,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "2644:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2644:49:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 366,
															"nodeType": "ExpressionStatement",
															"src": "2644:49:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "1633:254:3",
										"text": "@notice Submits a “solution” by providing a nonce. A simple hash check demonstrates\n how difficulty might be applied (e.g. if uint256(hash) < difficulty).\n @param nonce Arbitrary user-chosen number or data to “solve” the puzzle."
									},
									"functionSelector": "0bf94512",
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 323,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 322,
												"name": "nonReentrant",
												"nameLocations": [
													"1940:12:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 177,
												"src": "1940:12:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1940:12:3"
										}
									],
									"name": "submitSolution",
									"nameLocation": "1901:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1924:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "1916:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1916:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1915:15:3"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1953:0:3"
									},
									"scope": 384,
									"src": "1892:905:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 382,
										"nodeType": "Block",
										"src": "3049:43:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 378,
														"name": "userSolutions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "3066:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
															"typeString": "mapping(address => bytes32)"
														}
													},
													"id": 380,
													"indexExpression": {
														"id": 379,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 373,
														"src": "3080:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3066:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 377,
												"id": 381,
												"nodeType": "Return",
												"src": "3059:26:3"
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "2803:170:3",
										"text": "@notice Returns the last solution hash submitted by a user.\n @param user The address of the user.\n @return The solutionHash last recorded for that user."
									},
									"functionSelector": "23cd56e4",
									"id": 383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserSolution",
									"nameLocation": "2987:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3011:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "3003:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3003:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3002:14:3"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "3040:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 375,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3040:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3039:9:3"
									},
									"scope": 384,
									"src": "2978:114:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 385,
							"src": "435:2659:3",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								263,
								271
							]
						}
					],
					"src": "32:3063:3"
				},
				"id": 3
			}
		}
	}
}